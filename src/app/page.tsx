'use client';

import { useState, useEffect } from 'react';
import { GameMenu } from '@/components/GameMenu/GameMenu';
import { IntroScreen } from '@/components/IntroScreen/IntroScreen';
import AgeVerificationModal from '@/components/AgeVerificationModal/AgeVerificationModal';
import styles from '@/components/GameMenu/components/MenuAnimation.module.css';
import { useUser } from '@/contexts/UserContext';
import { useRouter } from 'next/navigation';
import { useLaunchParams } from '@telegram-apps/sdk-react';

export default function Home() {
  const { user } = useUser();
  const router = useRouter();
  
  // –ü–æ–ª—É—á–∞–µ–º —Ç–æ–ª—å–∫–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∏–∑ launch, startParam –±—É–¥–µ—Ç –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å—Å—è –≤ /api/telegram-user
  const launch = useLaunchParams();

  // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –ø–æ–∫–∞–∑–∞ –∏–Ω—Ç—Ä–æ
  const [showIntro, setShowIntro] = useState(false);
  const [menuVisible, setMenuVisible] = useState(false);
  const [isAgeVerified, setIsAgeVerified] = useState(false);
  const [isWebAppReady, setIsWebAppReady] = useState(false);

  useEffect(() => {
    const checkWebAppReady = () => {
      const isReady = window?.Telegram?.WebApp?.isInitialized;
      if (isReady && !isWebAppReady) {
        setIsWebAppReady(true);
        console.log('[page] üöÄ Telegram WebApp –≥–æ—Ç–æ–≤');
      }
      return isReady;
    };

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ä–∞–∑—É
    checkWebAppReady();

    // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏—è ready
    const handleWebAppReady = () => {
      console.log('[page] üöÄ Telegram WebApp –≥–æ—Ç–æ–≤');
      setIsWebAppReady(true);
    };

    window.Telegram?.WebApp?.onEvent('ready', handleWebAppReady);

    return () => {
      window.Telegram?.WebApp?.offEvent('ready', handleWebAppReady);
    };
  }, [isWebAppReady]);

  useEffect(() => {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –ª–∏ –º—ã –∏–∑ –∏–≥—Ä–æ–≤–æ–π –∫–æ–º–Ω–∞—Ç—ã
    const isReturningFromGame = localStorage.getItem('returningFromGame');
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–ª–∞–≥, –∫–æ—Ç–æ—Ä—ã–π —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç—Å—è –ø—Ä–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏ –∞–Ω–∏–º–∞—Ü–∏–∏
    const usingTransitionAnimation = localStorage.getItem('usingTransitionAnimation');
    
    // –ï—Å–ª–∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∏–∑ –∏–≥—Ä—ã, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –≤–æ–∑—Ä–∞—Å—Ç–∞
    if (isReturningFromGame) {
      setIsAgeVerified(true); // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ–º –≤–æ–∑—Ä–∞—Å—Ç
      setMenuVisible(true);
      // –û—á–∏—â–∞–µ–º —Ñ–ª–∞–≥–∏ –≤–æ–∑–≤—Ä–∞—Ç–∞ –∏–∑ –∏–≥—Ä—ã
      localStorage.removeItem('returningFromGame');
      if (usingTransitionAnimation) {
        localStorage.removeItem('usingTransitionAnimation');
      }
      return;
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —ç—Ç–æ –Ω–∞–≤–∏–≥–∞—Ü–∏–µ–π –Ω–∞–∑–∞–¥
    const isNavigatingBack = performance?.navigation?.type === 2 || 
      (window.performance && 
       (window.performance.getEntriesByType('navigation')[0] as any)?.type === 'back_forward');
    
    if (isNavigatingBack) {
      setIsAgeVerified(true); // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –≤–æ–∑—Ä–∞—Å—Ç–∞ –ø—Ä–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –Ω–∞–∑–∞–¥
      setMenuVisible(true);
    } else {
      setShowIntro(true);
    }
  }, [isWebAppReady]);
  
  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –ø–æ–∫–∞–∑–∞ –∏–Ω—Ç—Ä–æ
  const handleIntroComplete = () => {
    setShowIntro(false);
    setTimeout(() => {
      setMenuVisible(true);
    }, 100);
  };

  const handleAgeConfirm = () => {
    setIsAgeVerified(true);
    console.log('[page] –í–æ–∑—Ä–∞—Å—Ç –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ç—Ä–æ');
  };

  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –≤–æ–∑—Ä–∞—Å—Ç–∞ —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –≤—Ö–æ–¥–µ
  if (!isAgeVerified) {
    return (
      <AgeVerificationModal
        onConfirm={handleAgeConfirm}
      />
    );
  }

  // –ü–æ—Å–ª–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –≤–æ–∑—Ä–∞—Å—Ç–∞ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –æ–±—ã—á–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç
  return (
    <>
      {showIntro ? (
        <IntroScreen onComplete={handleIntroComplete} />
      ) : (
        <div className={`${styles.container} ${menuVisible ? styles.visible : ''}`}>
          <GameMenu />
        </div>
      )}
    </>
  );
}