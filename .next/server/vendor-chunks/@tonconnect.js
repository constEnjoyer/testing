"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@tonconnect";
exports.ids = ["vendor-chunks/@tonconnect"];
exports.modules = {

/***/ "(ssr)/./node_modules/@tonconnect/isomorphic-eventsource/index.mjs":
/*!*******************************************************************!*\
  !*** ./node_modules/@tonconnect/isomorphic-eventsource/index.mjs ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var eventsource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! eventsource */ \"(ssr)/./node_modules/eventsource/lib/eventsource.js\");\n\n\nif (!global.EventSource) {\n    global.EventSource = eventsource__WEBPACK_IMPORTED_MODULE_0__;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHRvbmNvbm5lY3QvaXNvbW9ycGhpYy1ldmVudHNvdXJjZS9pbmRleC5tanMiLCJtYXBwaW5ncyI6Ijs7QUFBc0M7O0FBRXRDO0FBQ0EseUJBQXlCLHdDQUFXO0FBQ3BDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbmV4dGpzLXRlbXBsYXRlLy4vbm9kZV9tb2R1bGVzL0B0b25jb25uZWN0L2lzb21vcnBoaWMtZXZlbnRzb3VyY2UvaW5kZXgubWpzPzRmNWIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IEV2ZW50U291cmNlIGZyb20gJ2V2ZW50c291cmNlJztcblxuaWYgKCFnbG9iYWwuRXZlbnRTb3VyY2UpIHtcbiAgICBnbG9iYWwuRXZlbnRTb3VyY2UgPSBFdmVudFNvdXJjZTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@tonconnect/isomorphic-eventsource/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@tonconnect/isomorphic-fetch/index.mjs":
/*!*************************************************************!*\
  !*** ./node_modules/@tonconnect/isomorphic-fetch/index.mjs ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var node_fetch__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! node-fetch */ \"(ssr)/./node_modules/node-fetch/lib/index.mjs\");\n\nfunction fetch(url, options) {\n    if (/^\\/\\//.test(url)) {\n        url = 'https:' + url;\n    }\n    return node_fetch__WEBPACK_IMPORTED_MODULE_0__[\"default\"].call(this, url, options);\n}\n\nif (!global.fetch) {\n    global.fetch = fetch;\n    global.Response = node_fetch__WEBPACK_IMPORTED_MODULE_0__[\"default\"].Response;\n    global.Headers = node_fetch__WEBPACK_IMPORTED_MODULE_0__[\"default\"].Headers;\n    global.Request = node_fetch__WEBPACK_IMPORTED_MODULE_0__[\"default\"].Request;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHRvbmNvbm5lY3QvaXNvbW9ycGhpYy1mZXRjaC9pbmRleC5tanMiLCJtYXBwaW5ncyI6Ijs7QUFBbUM7QUFDbkM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLGtEQUFTO0FBQ3BCOztBQUVBO0FBQ0E7QUFDQSxzQkFBc0IsMkRBQWtCO0FBQ3hDLHFCQUFxQiwwREFBaUI7QUFDdEMscUJBQXFCLDBEQUFpQjtBQUN0QyIsInNvdXJjZXMiOlsid2VicGFjazovL25leHRqcy10ZW1wbGF0ZS8uL25vZGVfbW9kdWxlcy9AdG9uY29ubmVjdC9pc29tb3JwaGljLWZldGNoL2luZGV4Lm1qcz81Mjg1Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCByZWFsRmV0Y2ggZnJvbSAnbm9kZS1mZXRjaCc7XG5mdW5jdGlvbiBmZXRjaCh1cmwsIG9wdGlvbnMpIHtcbiAgICBpZiAoL15cXC9cXC8vLnRlc3QodXJsKSkge1xuICAgICAgICB1cmwgPSAnaHR0cHM6JyArIHVybDtcbiAgICB9XG4gICAgcmV0dXJuIHJlYWxGZXRjaC5jYWxsKHRoaXMsIHVybCwgb3B0aW9ucyk7XG59XG5cbmlmICghZ2xvYmFsLmZldGNoKSB7XG4gICAgZ2xvYmFsLmZldGNoID0gZmV0Y2g7XG4gICAgZ2xvYmFsLlJlc3BvbnNlID0gcmVhbEZldGNoLlJlc3BvbnNlO1xuICAgIGdsb2JhbC5IZWFkZXJzID0gcmVhbEZldGNoLkhlYWRlcnM7XG4gICAgZ2xvYmFsLlJlcXVlc3QgPSByZWFsRmV0Y2guUmVxdWVzdDtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@tonconnect/isomorphic-fetch/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@tonconnect/protocol/lib/esm/index.mjs":
/*!*************************************************************!*\
  !*** ./node_modules/@tonconnect/protocol/lib/esm/index.mjs ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Base64: () => (/* binding */ Base64),\n/* harmony export */   CHAIN: () => (/* binding */ CHAIN),\n/* harmony export */   CONNECT_EVENT_ERROR_CODES: () => (/* binding */ CONNECT_EVENT_ERROR_CODES),\n/* harmony export */   CONNECT_ITEM_ERROR_CODES: () => (/* binding */ CONNECT_ITEM_ERROR_CODES),\n/* harmony export */   DISCONNECT_ERROR_CODES: () => (/* binding */ DISCONNECT_ERROR_CODES),\n/* harmony export */   SEND_TRANSACTION_ERROR_CODES: () => (/* binding */ SEND_TRANSACTION_ERROR_CODES),\n/* harmony export */   SIGN_DATA_ERROR_CODES: () => (/* binding */ SIGN_DATA_ERROR_CODES),\n/* harmony export */   SessionCrypto: () => (/* binding */ SessionCrypto),\n/* harmony export */   concatUint8Arrays: () => (/* binding */ concatUint8Arrays),\n/* harmony export */   hexToByteArray: () => (/* binding */ hexToByteArray),\n/* harmony export */   isNode: () => (/* binding */ isNode),\n/* harmony export */   splitToUint8Arrays: () => (/* binding */ splitToUint8Arrays),\n/* harmony export */   toHexString: () => (/* binding */ toHexString)\n/* harmony export */ });\n/* harmony import */ var tweetnacl_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tweetnacl-util */ \"(ssr)/./node_modules/tweetnacl-util/nacl-util.js\");\n/* harmony import */ var tweetnacl__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tweetnacl */ \"(ssr)/./node_modules/tweetnacl/nacl-fast.js\");\n\n\n\nvar CONNECT_EVENT_ERROR_CODES;\n(function (CONNECT_EVENT_ERROR_CODES) {\n    CONNECT_EVENT_ERROR_CODES[CONNECT_EVENT_ERROR_CODES[\"UNKNOWN_ERROR\"] = 0] = \"UNKNOWN_ERROR\";\n    CONNECT_EVENT_ERROR_CODES[CONNECT_EVENT_ERROR_CODES[\"BAD_REQUEST_ERROR\"] = 1] = \"BAD_REQUEST_ERROR\";\n    CONNECT_EVENT_ERROR_CODES[CONNECT_EVENT_ERROR_CODES[\"MANIFEST_NOT_FOUND_ERROR\"] = 2] = \"MANIFEST_NOT_FOUND_ERROR\";\n    CONNECT_EVENT_ERROR_CODES[CONNECT_EVENT_ERROR_CODES[\"MANIFEST_CONTENT_ERROR\"] = 3] = \"MANIFEST_CONTENT_ERROR\";\n    CONNECT_EVENT_ERROR_CODES[CONNECT_EVENT_ERROR_CODES[\"UNKNOWN_APP_ERROR\"] = 100] = \"UNKNOWN_APP_ERROR\";\n    CONNECT_EVENT_ERROR_CODES[CONNECT_EVENT_ERROR_CODES[\"USER_REJECTS_ERROR\"] = 300] = \"USER_REJECTS_ERROR\";\n    CONNECT_EVENT_ERROR_CODES[CONNECT_EVENT_ERROR_CODES[\"METHOD_NOT_SUPPORTED\"] = 400] = \"METHOD_NOT_SUPPORTED\";\n})(CONNECT_EVENT_ERROR_CODES || (CONNECT_EVENT_ERROR_CODES = {}));\nvar CONNECT_ITEM_ERROR_CODES;\n(function (CONNECT_ITEM_ERROR_CODES) {\n    CONNECT_ITEM_ERROR_CODES[CONNECT_ITEM_ERROR_CODES[\"UNKNOWN_ERROR\"] = 0] = \"UNKNOWN_ERROR\";\n    CONNECT_ITEM_ERROR_CODES[CONNECT_ITEM_ERROR_CODES[\"METHOD_NOT_SUPPORTED\"] = 400] = \"METHOD_NOT_SUPPORTED\";\n})(CONNECT_ITEM_ERROR_CODES || (CONNECT_ITEM_ERROR_CODES = {}));\n\nvar SEND_TRANSACTION_ERROR_CODES;\n(function (SEND_TRANSACTION_ERROR_CODES) {\n    SEND_TRANSACTION_ERROR_CODES[SEND_TRANSACTION_ERROR_CODES[\"UNKNOWN_ERROR\"] = 0] = \"UNKNOWN_ERROR\";\n    SEND_TRANSACTION_ERROR_CODES[SEND_TRANSACTION_ERROR_CODES[\"BAD_REQUEST_ERROR\"] = 1] = \"BAD_REQUEST_ERROR\";\n    SEND_TRANSACTION_ERROR_CODES[SEND_TRANSACTION_ERROR_CODES[\"UNKNOWN_APP_ERROR\"] = 100] = \"UNKNOWN_APP_ERROR\";\n    SEND_TRANSACTION_ERROR_CODES[SEND_TRANSACTION_ERROR_CODES[\"USER_REJECTS_ERROR\"] = 300] = \"USER_REJECTS_ERROR\";\n    SEND_TRANSACTION_ERROR_CODES[SEND_TRANSACTION_ERROR_CODES[\"METHOD_NOT_SUPPORTED\"] = 400] = \"METHOD_NOT_SUPPORTED\";\n})(SEND_TRANSACTION_ERROR_CODES || (SEND_TRANSACTION_ERROR_CODES = {}));\n\nvar SIGN_DATA_ERROR_CODES;\n(function (SIGN_DATA_ERROR_CODES) {\n    SIGN_DATA_ERROR_CODES[SIGN_DATA_ERROR_CODES[\"UNKNOWN_ERROR\"] = 0] = \"UNKNOWN_ERROR\";\n    SIGN_DATA_ERROR_CODES[SIGN_DATA_ERROR_CODES[\"BAD_REQUEST_ERROR\"] = 1] = \"BAD_REQUEST_ERROR\";\n    SIGN_DATA_ERROR_CODES[SIGN_DATA_ERROR_CODES[\"UNKNOWN_APP_ERROR\"] = 100] = \"UNKNOWN_APP_ERROR\";\n    SIGN_DATA_ERROR_CODES[SIGN_DATA_ERROR_CODES[\"USER_REJECTS_ERROR\"] = 300] = \"USER_REJECTS_ERROR\";\n    SIGN_DATA_ERROR_CODES[SIGN_DATA_ERROR_CODES[\"METHOD_NOT_SUPPORTED\"] = 400] = \"METHOD_NOT_SUPPORTED\";\n})(SIGN_DATA_ERROR_CODES || (SIGN_DATA_ERROR_CODES = {}));\n\nvar DISCONNECT_ERROR_CODES;\n(function (DISCONNECT_ERROR_CODES) {\n    DISCONNECT_ERROR_CODES[DISCONNECT_ERROR_CODES[\"UNKNOWN_ERROR\"] = 0] = \"UNKNOWN_ERROR\";\n    DISCONNECT_ERROR_CODES[DISCONNECT_ERROR_CODES[\"BAD_REQUEST_ERROR\"] = 1] = \"BAD_REQUEST_ERROR\";\n    DISCONNECT_ERROR_CODES[DISCONNECT_ERROR_CODES[\"UNKNOWN_APP_ERROR\"] = 100] = \"UNKNOWN_APP_ERROR\";\n    DISCONNECT_ERROR_CODES[DISCONNECT_ERROR_CODES[\"METHOD_NOT_SUPPORTED\"] = 400] = \"METHOD_NOT_SUPPORTED\";\n})(DISCONNECT_ERROR_CODES || (DISCONNECT_ERROR_CODES = {}));\n\nvar CHAIN;\n(function (CHAIN) {\n    CHAIN[\"MAINNET\"] = \"-239\";\n    CHAIN[\"TESTNET\"] = \"-3\";\n})(CHAIN || (CHAIN = {}));\n\nfunction encodeUint8Array(value, urlSafe) {\n    const encoded = tweetnacl_util__WEBPACK_IMPORTED_MODULE_0__.encodeBase64(value);\n    if (!urlSafe) {\n        return encoded;\n    }\n    return encodeURIComponent(encoded);\n}\nfunction decodeToUint8Array(value, urlSafe) {\n    if (urlSafe) {\n        value = decodeURIComponent(value);\n    }\n    return tweetnacl_util__WEBPACK_IMPORTED_MODULE_0__.decodeBase64(value);\n}\nfunction encode(value, urlSafe = false) {\n    let uint8Array;\n    if (value instanceof Uint8Array) {\n        uint8Array = value;\n    }\n    else {\n        if (typeof value !== 'string') {\n            value = JSON.stringify(value);\n        }\n        uint8Array = tweetnacl_util__WEBPACK_IMPORTED_MODULE_0__.decodeUTF8(value);\n    }\n    return encodeUint8Array(uint8Array, urlSafe);\n}\nfunction decode(value, urlSafe = false) {\n    const decodedUint8Array = decodeToUint8Array(value, urlSafe);\n    return {\n        toString() {\n            return tweetnacl_util__WEBPACK_IMPORTED_MODULE_0__.encodeUTF8(decodedUint8Array);\n        },\n        toObject() {\n            try {\n                return JSON.parse(tweetnacl_util__WEBPACK_IMPORTED_MODULE_0__.encodeUTF8(decodedUint8Array));\n            }\n            catch (e) {\n                return null;\n            }\n        },\n        toUint8Array() {\n            return decodedUint8Array;\n        }\n    };\n}\nconst Base64 = {\n    encode,\n    decode\n};\n\nfunction concatUint8Arrays(buffer1, buffer2) {\n    const mergedArray = new Uint8Array(buffer1.length + buffer2.length);\n    mergedArray.set(buffer1);\n    mergedArray.set(buffer2, buffer1.length);\n    return mergedArray;\n}\nfunction splitToUint8Arrays(array, index) {\n    if (index >= array.length) {\n        throw new Error('Index is out of buffer');\n    }\n    const subArray1 = array.slice(0, index);\n    const subArray2 = array.slice(index);\n    return [subArray1, subArray2];\n}\nfunction toHexString(byteArray) {\n    let hexString = '';\n    byteArray.forEach(byte => {\n        hexString += ('0' + (byte & 0xff).toString(16)).slice(-2);\n    });\n    return hexString;\n}\nfunction hexToByteArray(hexString) {\n    if (hexString.length % 2 !== 0) {\n        throw new Error(`Cannot convert ${hexString} to bytesArray`);\n    }\n    const result = new Uint8Array(hexString.length / 2);\n    for (let i = 0; i < hexString.length; i += 2) {\n        result[i / 2] = parseInt(hexString.slice(i, i + 2), 16);\n    }\n    return result;\n}\n\nfunction isNode() {\n    return (typeof process !== 'undefined' && process.versions != null && process.versions.node != null);\n}\n\nclass SessionCrypto {\n    constructor(keyPair) {\n        this.nonceLength = 24;\n        this.keyPair = keyPair ? this.createKeypairFromString(keyPair) : this.createKeypair();\n        this.sessionId = toHexString(this.keyPair.publicKey);\n    }\n    createKeypair() {\n        return tweetnacl__WEBPACK_IMPORTED_MODULE_1__.box.keyPair();\n    }\n    createKeypairFromString(keyPair) {\n        return {\n            publicKey: hexToByteArray(keyPair.publicKey),\n            secretKey: hexToByteArray(keyPair.secretKey)\n        };\n    }\n    createNonce() {\n        return tweetnacl__WEBPACK_IMPORTED_MODULE_1__.randomBytes(this.nonceLength);\n    }\n    encrypt(message, receiverPublicKey) {\n        const encodedMessage = new TextEncoder().encode(message);\n        const nonce = this.createNonce();\n        const encrypted = tweetnacl__WEBPACK_IMPORTED_MODULE_1__.box(encodedMessage, nonce, receiverPublicKey, this.keyPair.secretKey);\n        return concatUint8Arrays(nonce, encrypted);\n    }\n    decrypt(message, senderPublicKey) {\n        const [nonce, internalMessage] = splitToUint8Arrays(message, this.nonceLength);\n        const decrypted = tweetnacl__WEBPACK_IMPORTED_MODULE_1__.box.open(internalMessage, nonce, senderPublicKey, this.keyPair.secretKey);\n        if (!decrypted) {\n            throw new Error(`Decryption error: \\n message: ${message.toString()} \\n sender pubkey: ${senderPublicKey.toString()} \\n keypair pubkey: ${this.keyPair.publicKey.toString()} \\n keypair secretkey: ${this.keyPair.secretKey.toString()}`);\n        }\n        return new TextDecoder().decode(decrypted);\n    }\n    stringifyKeypair() {\n        return {\n            publicKey: toHexString(this.keyPair.publicKey),\n            secretKey: toHexString(this.keyPair.secretKey)\n        };\n    }\n}\n\n\n//# sourceMappingURL=index.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@tonconnect/protocol/lib/esm/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@tonconnect/sdk/lib/esm/index.mjs":
/*!********************************************************!*\
  !*** ./node_modules/@tonconnect/sdk/lib/esm/index.mjs ***!
  \********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BadRequestError: () => (/* binding */ BadRequestError),\n/* harmony export */   BrowserEventDispatcher: () => (/* binding */ BrowserEventDispatcher),\n/* harmony export */   CHAIN: () => (/* reexport safe */ _tonconnect_protocol__WEBPACK_IMPORTED_MODULE_0__.CHAIN),\n/* harmony export */   CONNECT_EVENT_ERROR_CODES: () => (/* reexport safe */ _tonconnect_protocol__WEBPACK_IMPORTED_MODULE_0__.CONNECT_EVENT_ERROR_CODES),\n/* harmony export */   CONNECT_ITEM_ERROR_CODES: () => (/* reexport safe */ _tonconnect_protocol__WEBPACK_IMPORTED_MODULE_0__.CONNECT_ITEM_ERROR_CODES),\n/* harmony export */   FetchWalletsError: () => (/* binding */ FetchWalletsError),\n/* harmony export */   LocalstorageNotFoundError: () => (/* binding */ LocalstorageNotFoundError),\n/* harmony export */   ParseHexError: () => (/* binding */ ParseHexError),\n/* harmony export */   SEND_TRANSACTION_ERROR_CODES: () => (/* reexport safe */ _tonconnect_protocol__WEBPACK_IMPORTED_MODULE_0__.SEND_TRANSACTION_ERROR_CODES),\n/* harmony export */   TonConnect: () => (/* binding */ TonConnect),\n/* harmony export */   TonConnectError: () => (/* binding */ TonConnectError),\n/* harmony export */   UnknownAppError: () => (/* binding */ UnknownAppError),\n/* harmony export */   UnknownError: () => (/* binding */ UnknownError),\n/* harmony export */   UserRejectsError: () => (/* binding */ UserRejectsError),\n/* harmony export */   WalletAlreadyConnectedError: () => (/* binding */ WalletAlreadyConnectedError),\n/* harmony export */   WalletMissingRequiredFeaturesError: () => (/* binding */ WalletMissingRequiredFeaturesError),\n/* harmony export */   WalletNotConnectedError: () => (/* binding */ WalletNotConnectedError),\n/* harmony export */   WalletNotInjectedError: () => (/* binding */ WalletNotInjectedError),\n/* harmony export */   WalletNotSupportFeatureError: () => (/* binding */ WalletNotSupportFeatureError),\n/* harmony export */   WalletsListManager: () => (/* binding */ WalletsListManager),\n/* harmony export */   WrongAddressError: () => (/* binding */ WrongAddressError),\n/* harmony export */   checkRequiredWalletFeatures: () => (/* binding */ checkRequiredWalletFeatures),\n/* harmony export */   createConnectionCompletedEvent: () => (/* binding */ createConnectionCompletedEvent),\n/* harmony export */   createConnectionErrorEvent: () => (/* binding */ createConnectionErrorEvent),\n/* harmony export */   createConnectionRestoringCompletedEvent: () => (/* binding */ createConnectionRestoringCompletedEvent),\n/* harmony export */   createConnectionRestoringErrorEvent: () => (/* binding */ createConnectionRestoringErrorEvent),\n/* harmony export */   createConnectionRestoringStartedEvent: () => (/* binding */ createConnectionRestoringStartedEvent),\n/* harmony export */   createConnectionStartedEvent: () => (/* binding */ createConnectionStartedEvent),\n/* harmony export */   createDisconnectionEvent: () => (/* binding */ createDisconnectionEvent),\n/* harmony export */   createRequestVersionEvent: () => (/* binding */ createRequestVersionEvent),\n/* harmony export */   createResponseVersionEvent: () => (/* binding */ createResponseVersionEvent),\n/* harmony export */   createTransactionSentForSignatureEvent: () => (/* binding */ createTransactionSentForSignatureEvent),\n/* harmony export */   createTransactionSignedEvent: () => (/* binding */ createTransactionSignedEvent),\n/* harmony export */   createTransactionSigningFailedEvent: () => (/* binding */ createTransactionSigningFailedEvent),\n/* harmony export */   createVersionInfo: () => (/* binding */ createVersionInfo),\n/* harmony export */   \"default\": () => (/* binding */ TonConnect),\n/* harmony export */   encodeTelegramUrlParameters: () => (/* binding */ encodeTelegramUrlParameters),\n/* harmony export */   isTelegramUrl: () => (/* binding */ isTelegramUrl),\n/* harmony export */   isWalletInfoCurrentlyEmbedded: () => (/* binding */ isWalletInfoCurrentlyEmbedded),\n/* harmony export */   isWalletInfoCurrentlyInjected: () => (/* binding */ isWalletInfoCurrentlyInjected),\n/* harmony export */   isWalletInfoInjectable: () => (/* binding */ isWalletInfoInjectable),\n/* harmony export */   isWalletInfoInjected: () => (/* binding */ isWalletInfoInjected),\n/* harmony export */   isWalletInfoRemote: () => (/* binding */ isWalletInfoRemote),\n/* harmony export */   toUserFriendlyAddress: () => (/* binding */ toUserFriendlyAddress)\n/* harmony export */ });\n/* harmony import */ var _tonconnect_protocol__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tonconnect/protocol */ \"(ssr)/./node_modules/@tonconnect/protocol/lib/esm/index.mjs\");\n/* harmony import */ var _tonconnect_isomorphic_eventsource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @tonconnect/isomorphic-eventsource */ \"(ssr)/./node_modules/@tonconnect/isomorphic-eventsource/index.mjs\");\n/* harmony import */ var _tonconnect_isomorphic_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @tonconnect/isomorphic-fetch */ \"(ssr)/./node_modules/@tonconnect/isomorphic-fetch/index.mjs\");\n\n\n\n\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n\r\nfunction __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nfunction __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\n\n/**\n * Base class for TonConnect errors. You can check if the error was triggered by the @tonconnect/sdk using `err instanceof TonConnectError`.\n */\nclass TonConnectError extends Error {\n    constructor(message, options) {\n        super(message, options);\n        this.message = `${TonConnectError.prefix} ${this.constructor.name}${this.info ? ': ' + this.info : ''}${message ? '\\n' + message : ''}`;\n        Object.setPrototypeOf(this, TonConnectError.prototype);\n    }\n    get info() {\n        return '';\n    }\n}\nTonConnectError.prefix = '[TON_CONNECT_SDK_ERROR]';\n\n/**\n * Thrown when passed DappMetadata is in incorrect format.\n */\nclass DappMetadataError extends TonConnectError {\n    get info() {\n        return 'Passed DappMetadata is in incorrect format.';\n    }\n    constructor(...args) {\n        super(...args);\n        Object.setPrototypeOf(this, DappMetadataError.prototype);\n    }\n}\n\n/**\n * Thrown when passed manifest contains errors.\n */\nclass ManifestContentErrorError extends TonConnectError {\n    get info() {\n        return 'Passed `tonconnect-manifest.json` contains errors. Check format of your manifest. See more https://github.com/ton-connect/docs/blob/main/requests-responses.md#app-manifest';\n    }\n    constructor(...args) {\n        super(...args);\n        Object.setPrototypeOf(this, ManifestContentErrorError.prototype);\n    }\n}\n\n/**\n * Thrown when wallet can't get manifest by passed manifestUrl.\n */\nclass ManifestNotFoundError extends TonConnectError {\n    get info() {\n        return 'Manifest not found. Make sure you added `tonconnect-manifest.json` to the root of your app or passed correct manifestUrl. See more https://github.com/ton-connect/docs/blob/main/requests-responses.md#app-manifest';\n    }\n    constructor(...args) {\n        super(...args);\n        Object.setPrototypeOf(this, ManifestNotFoundError.prototype);\n    }\n}\n\n/**\n * Thrown when wallet connection called but wallet already connected. To avoid the error, disconnect the wallet before doing a new connection.\n */\nclass WalletAlreadyConnectedError extends TonConnectError {\n    get info() {\n        return 'Wallet connection called but wallet already connected. To avoid the error, disconnect the wallet before doing a new connection.';\n    }\n    constructor(...args) {\n        super(...args);\n        Object.setPrototypeOf(this, WalletAlreadyConnectedError.prototype);\n    }\n}\n\n/**\n * Thrown when send transaction or other protocol methods called while wallet is not connected.\n */\nclass WalletNotConnectedError extends TonConnectError {\n    get info() {\n        return 'Send transaction or other protocol methods called while wallet is not connected.';\n    }\n    constructor(...args) {\n        super(...args);\n        Object.setPrototypeOf(this, WalletNotConnectedError.prototype);\n    }\n}\n\n/**\n * Thrown when there is an attempt to connect to the injected wallet while it is not exists in the webpage.\n */\nclass WalletNotInjectedError extends TonConnectError {\n    get info() {\n        return 'There is an attempt to connect to the injected wallet while it is not exists in the webpage.';\n    }\n    constructor(...args) {\n        super(...args);\n        Object.setPrototypeOf(this, WalletNotInjectedError.prototype);\n    }\n}\n\n/**\n * Thrown when wallet doesn't support requested feature method.\n */\nclass WalletNotSupportFeatureError extends TonConnectError {\n    get info() {\n        return \"Wallet doesn't support requested feature method.\";\n    }\n    constructor(...args) {\n        super(...args);\n        Object.setPrototypeOf(this, WalletNotSupportFeatureError.prototype);\n    }\n}\n\n/**\n * Thrown when wallet can't get manifest by passed manifestUrl.\n */\nclass WalletMissingRequiredFeaturesError extends TonConnectError {\n    get info() {\n        return 'Missing required features. You need to update your wallet.';\n    }\n    constructor(message, options) {\n        super(message, options);\n        Object.setPrototypeOf(this, WalletMissingRequiredFeaturesError.prototype);\n    }\n}\n\nfunction isWalletConnectionSourceJS(value) {\n    return 'jsBridgeKey' in value;\n}\n\n/**\n * Thrown when user rejects the action in the wallet.\n */\nclass UserRejectsError extends TonConnectError {\n    get info() {\n        return 'User rejects the action in the wallet.';\n    }\n    constructor(...args) {\n        super(...args);\n        Object.setPrototypeOf(this, UserRejectsError.prototype);\n    }\n}\n\n/**\n * Thrown when request to the wallet contains errors.\n */\nclass BadRequestError extends TonConnectError {\n    get info() {\n        return 'Request to the wallet contains errors.';\n    }\n    constructor(...args) {\n        super(...args);\n        Object.setPrototypeOf(this, BadRequestError.prototype);\n    }\n}\n\n/**\n * Thrown when app tries to send rpc request to the injected wallet while not connected.\n */\nclass UnknownAppError extends TonConnectError {\n    get info() {\n        return 'App tries to send rpc request to the injected wallet while not connected.';\n    }\n    constructor(...args) {\n        super(...args);\n        Object.setPrototypeOf(this, UnknownAppError.prototype);\n    }\n}\n\n/**\n * Thrown when `Storage` was not specified in the `DappMetadata` and default `localStorage` was not detected in the Node.js environment.\n */\nclass LocalstorageNotFoundError extends TonConnectError {\n    get info() {\n        return 'Storage was not specified in the `DappMetadata` and default `localStorage` was not detected in the environment.';\n    }\n    constructor(...args) {\n        super(...args);\n        Object.setPrototypeOf(this, LocalstorageNotFoundError.prototype);\n    }\n}\n\n/**\n * Thrown when an error occurred while fetching the wallets list.\n */\nclass FetchWalletsError extends TonConnectError {\n    get info() {\n        return 'An error occurred while fetching the wallets list.';\n    }\n    constructor(...args) {\n        super(...args);\n        Object.setPrototypeOf(this, FetchWalletsError.prototype);\n    }\n}\n\n/**\n * Thrown when passed address is in incorrect format.\n */\nclass WrongAddressError extends TonConnectError {\n    get info() {\n        return 'Passed address is in incorrect format.';\n    }\n    constructor(...args) {\n        super(...args);\n        Object.setPrototypeOf(this, WrongAddressError.prototype);\n    }\n}\n\n/**\n * Thrown when passed hex is in incorrect format.\n */\nclass ParseHexError extends TonConnectError {\n    get info() {\n        return 'Passed hex is in incorrect format.';\n    }\n    constructor(...args) {\n        super(...args);\n        Object.setPrototypeOf(this, ParseHexError.prototype);\n    }\n}\n\n/**\n * Unhanded unknown error.\n */\nclass UnknownError extends TonConnectError {\n    constructor(...args) {\n        super(...args);\n        Object.setPrototypeOf(this, UnknownError.prototype);\n    }\n}\n\nconst connectEventErrorsCodes = {\n    [_tonconnect_protocol__WEBPACK_IMPORTED_MODULE_0__.CONNECT_EVENT_ERROR_CODES.UNKNOWN_ERROR]: UnknownError,\n    [_tonconnect_protocol__WEBPACK_IMPORTED_MODULE_0__.CONNECT_EVENT_ERROR_CODES.USER_REJECTS_ERROR]: UserRejectsError,\n    [_tonconnect_protocol__WEBPACK_IMPORTED_MODULE_0__.CONNECT_EVENT_ERROR_CODES.BAD_REQUEST_ERROR]: BadRequestError,\n    [_tonconnect_protocol__WEBPACK_IMPORTED_MODULE_0__.CONNECT_EVENT_ERROR_CODES.UNKNOWN_APP_ERROR]: UnknownAppError,\n    [_tonconnect_protocol__WEBPACK_IMPORTED_MODULE_0__.CONNECT_EVENT_ERROR_CODES.MANIFEST_NOT_FOUND_ERROR]: ManifestNotFoundError,\n    [_tonconnect_protocol__WEBPACK_IMPORTED_MODULE_0__.CONNECT_EVENT_ERROR_CODES.MANIFEST_CONTENT_ERROR]: ManifestContentErrorError\n};\nclass ConnectErrorsParser {\n    parseError(error) {\n        let ErrorConstructor = UnknownError;\n        if (error.code in connectEventErrorsCodes) {\n            ErrorConstructor = connectEventErrorsCodes[error.code] || UnknownError;\n        }\n        return new ErrorConstructor(error.message);\n    }\n}\nconst connectErrorsParser = new ConnectErrorsParser();\n\nclass RpcParser {\n    isError(response) {\n        return 'error' in response;\n    }\n}\n\nconst sendTransactionErrors = {\n    [_tonconnect_protocol__WEBPACK_IMPORTED_MODULE_0__.SEND_TRANSACTION_ERROR_CODES.UNKNOWN_ERROR]: UnknownError,\n    [_tonconnect_protocol__WEBPACK_IMPORTED_MODULE_0__.SEND_TRANSACTION_ERROR_CODES.USER_REJECTS_ERROR]: UserRejectsError,\n    [_tonconnect_protocol__WEBPACK_IMPORTED_MODULE_0__.SEND_TRANSACTION_ERROR_CODES.BAD_REQUEST_ERROR]: BadRequestError,\n    [_tonconnect_protocol__WEBPACK_IMPORTED_MODULE_0__.SEND_TRANSACTION_ERROR_CODES.UNKNOWN_APP_ERROR]: UnknownAppError\n};\nclass SendTransactionParser extends RpcParser {\n    convertToRpcRequest(request) {\n        return {\n            method: 'sendTransaction',\n            params: [JSON.stringify(request)]\n        };\n    }\n    parseAndThrowError(response) {\n        let ErrorConstructor = UnknownError;\n        if (response.error.code in sendTransactionErrors) {\n            ErrorConstructor = sendTransactionErrors[response.error.code] || UnknownError;\n        }\n        throw new ErrorConstructor(response.error.message);\n    }\n    convertFromRpcResponse(rpcResponse) {\n        return {\n            boc: rpcResponse.result\n        };\n    }\n}\nconst sendTransactionParser = new SendTransactionParser();\n\nclass HttpBridgeGatewayStorage {\n    constructor(storage, bridgeUrl) {\n        this.storage = storage;\n        this.storeKey = 'ton-connect-storage_http-bridge-gateway::' + bridgeUrl;\n    }\n    storeLastEventId(lastEventId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.storage.setItem(this.storeKey, lastEventId);\n        });\n    }\n    removeLastEventId() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.storage.removeItem(this.storeKey);\n        });\n    }\n    getLastEventId() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const stored = yield this.storage.getItem(this.storeKey);\n            if (!stored) {\n                return null;\n            }\n            return stored;\n        });\n    }\n}\n\nfunction removeUrlLastSlash(url) {\n    if (url.slice(-1) === '/') {\n        return url.slice(0, -1);\n    }\n    return url;\n}\nfunction addPathToUrl(url, path) {\n    return removeUrlLastSlash(url) + '/' + path;\n}\nfunction isTelegramUrl(link) {\n    if (!link) {\n        return false;\n    }\n    const url = new URL(link);\n    return url.protocol === 'tg:' || url.hostname === 't.me';\n}\nfunction encodeTelegramUrlParameters(parameters) {\n    return parameters\n        .replaceAll('.', '%2E')\n        .replaceAll('-', '%2D')\n        .replaceAll('_', '%5F')\n        .replaceAll('&', '-')\n        .replaceAll('=', '__')\n        .replaceAll('%', '--');\n}\n\n/**\n * Delays the execution of code for a specified number of milliseconds.\n * @param {number} timeout - The number of milliseconds to delay the execution.\n * @param {DelayOptions} [options] - Optional configuration options for the delay.\n * @return {Promise<void>} - A promise that resolves after the specified delay, or rejects if the delay is aborted.\n */\nfunction delay(timeout, options) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return new Promise((resolve, reject) => {\n            var _a, _b;\n            if ((_a = options === null || options === void 0 ? void 0 : options.signal) === null || _a === void 0 ? void 0 : _a.aborted) {\n                reject(new TonConnectError('Delay aborted'));\n                return;\n            }\n            const timeoutId = setTimeout(() => resolve(), timeout);\n            (_b = options === null || options === void 0 ? void 0 : options.signal) === null || _b === void 0 ? void 0 : _b.addEventListener('abort', () => {\n                clearTimeout(timeoutId);\n                reject(new TonConnectError('Delay aborted'));\n            });\n        });\n    });\n}\n\n/**\n * Creates an AbortController instance with an optional AbortSignal.\n *\n * @param {AbortSignal} [signal] - An optional AbortSignal to use for aborting the controller.\n * @returns {AbortController} - An instance of AbortController.\n */\nfunction createAbortController(signal) {\n    const abortController = new AbortController();\n    if (signal === null || signal === void 0 ? void 0 : signal.aborted) {\n        abortController.abort();\n    }\n    else {\n        signal === null || signal === void 0 ? void 0 : signal.addEventListener('abort', () => abortController.abort(), { once: true });\n    }\n    return abortController;\n}\n\n/**\n * Function to call ton api until we get response.\n * Because ton network is pretty unstable we need to make sure response is final.\n * @param {T} fn - function to call\n * @param {CallForSuccessOptions} [options] - optional configuration options\n */\nfunction callForSuccess(fn, options) {\n    var _a, _b;\n    return __awaiter(this, void 0, void 0, function* () {\n        const attempts = (_a = options === null || options === void 0 ? void 0 : options.attempts) !== null && _a !== void 0 ? _a : 10;\n        const delayMs = (_b = options === null || options === void 0 ? void 0 : options.delayMs) !== null && _b !== void 0 ? _b : 200;\n        const abortController = createAbortController(options === null || options === void 0 ? void 0 : options.signal);\n        if (typeof fn !== 'function') {\n            throw new TonConnectError(`Expected a function, got ${typeof fn}`);\n        }\n        let i = 0;\n        let lastError;\n        while (i < attempts) {\n            if (abortController.signal.aborted) {\n                throw new TonConnectError(`Aborted after attempts ${i}`);\n            }\n            try {\n                return yield fn({ signal: abortController.signal });\n            }\n            catch (err) {\n                lastError = err;\n                i++;\n                if (i < attempts) {\n                    yield delay(delayMs);\n                }\n            }\n        }\n        throw lastError;\n    });\n}\n\nfunction logDebug(...args) {\n    {\n        try {\n            console.debug('[TON_CONNECT_SDK]', ...args);\n        }\n        catch (_a) { }\n    }\n}\nfunction logError(...args) {\n    {\n        try {\n            console.error('[TON_CONNECT_SDK]', ...args);\n        }\n        catch (_a) { }\n    }\n}\nfunction logWarning(...args) {\n    {\n        try {\n            console.warn('[TON_CONNECT_SDK]', ...args);\n        }\n        catch (_a) { }\n    }\n}\n\n/**\n * Create a resource.\n *\n * @template T - The type of the resource.\n * @template Args - The type of the arguments for creating the resource.\n *\n * @param {(...args: Args) => Promise<T>} createFn - A function that creates the resource.\n * @param {(resource: T) => Promise<void>} [disposeFn] - An optional function that disposes the resource.\n */\nfunction createResource(createFn, disposeFn) {\n    let currentResource = null;\n    let currentArgs = null;\n    let currentPromise = null;\n    let currentSignal = null;\n    let abortController = null;\n    // create a new resource\n    const create = (signal, ...args) => __awaiter(this, void 0, void 0, function* () {\n        currentSignal = signal !== null && signal !== void 0 ? signal : null;\n        abortController === null || abortController === void 0 ? void 0 : abortController.abort();\n        abortController = createAbortController(signal);\n        if (abortController.signal.aborted) {\n            throw new TonConnectError('Resource creation was aborted');\n        }\n        currentArgs = args !== null && args !== void 0 ? args : null;\n        const promise = createFn(abortController.signal, ...args);\n        currentPromise = promise;\n        const resource = yield promise;\n        if (currentPromise !== promise && resource !== currentResource) {\n            yield disposeFn(resource);\n            throw new TonConnectError('Resource creation was aborted by a new resource creation');\n        }\n        currentResource = resource;\n        return currentResource;\n    });\n    // get the current resource\n    const current = () => {\n        return currentResource !== null && currentResource !== void 0 ? currentResource : null;\n    };\n    // dispose the current resource\n    const dispose = () => __awaiter(this, void 0, void 0, function* () {\n        try {\n            const resource = currentResource;\n            currentResource = null;\n            const promise = currentPromise;\n            currentPromise = null;\n            try {\n                abortController === null || abortController === void 0 ? void 0 : abortController.abort();\n            }\n            catch (e) { }\n            yield Promise.allSettled([\n                resource ? disposeFn(resource) : Promise.resolve(),\n                promise ? disposeFn(yield promise) : Promise.resolve()\n            ]);\n        }\n        catch (e) { }\n    });\n    // recreate the current resource\n    const recreate = (delayMs) => __awaiter(this, void 0, void 0, function* () {\n        const resource = currentResource;\n        const promise = currentPromise;\n        const args = currentArgs;\n        const signal = currentSignal;\n        yield delay(delayMs);\n        if (resource === currentResource &&\n            promise === currentPromise &&\n            args === currentArgs &&\n            signal === currentSignal) {\n            return yield create(currentSignal, ...(args !== null && args !== void 0 ? args : []));\n        }\n        throw new TonConnectError('Resource recreation was aborted by a new resource creation');\n    });\n    return {\n        create,\n        current,\n        dispose,\n        recreate\n    };\n}\n\n/**\n * Executes a function and provides deferred behavior, allowing for a timeout and abort functionality.\n *\n * @param {Deferrable<T>} fn - The function to execute. It should return a promise that resolves with the desired result.\n * @param {DeferOptions} options - Optional configuration options for the defer behavior.\n * @returns {Promise<T>} - A promise that resolves with the result of the executed function, or rejects with an error if it times out or is aborted.\n */\nfunction timeout(fn, options) {\n    const timeout = options === null || options === void 0 ? void 0 : options.timeout;\n    const signal = options === null || options === void 0 ? void 0 : options.signal;\n    const abortController = createAbortController(signal);\n    return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n        if (abortController.signal.aborted) {\n            reject(new TonConnectError('Operation aborted'));\n            return;\n        }\n        let timeoutId;\n        if (typeof timeout !== 'undefined') {\n            timeoutId = setTimeout(() => {\n                abortController.abort();\n                reject(new TonConnectError(`Timeout after ${timeout}ms`));\n            }, timeout);\n        }\n        abortController.signal.addEventListener('abort', () => {\n            clearTimeout(timeoutId);\n            reject(new TonConnectError('Operation aborted'));\n        }, { once: true });\n        const deferOptions = { timeout, abort: abortController.signal };\n        yield fn((...args) => {\n            clearTimeout(timeoutId);\n            resolve(...args);\n        }, () => {\n            clearTimeout(timeoutId);\n            reject();\n        }, deferOptions);\n    }));\n}\n\nclass BridgeGateway {\n    constructor(storage, bridgeUrl, sessionId, listener, errorsListener) {\n        this.bridgeUrl = bridgeUrl;\n        this.sessionId = sessionId;\n        this.listener = listener;\n        this.errorsListener = errorsListener;\n        this.ssePath = 'events';\n        this.postPath = 'message';\n        this.heartbeatMessage = 'heartbeat';\n        this.defaultTtl = 300;\n        this.defaultReconnectDelay = 2000;\n        this.defaultResendDelay = 5000;\n        this.eventSource = createResource((signal, openingDeadlineMS) => __awaiter(this, void 0, void 0, function* () {\n            const eventSourceConfig = {\n                bridgeUrl: this.bridgeUrl,\n                ssePath: this.ssePath,\n                sessionId: this.sessionId,\n                bridgeGatewayStorage: this.bridgeGatewayStorage,\n                errorHandler: this.errorsHandler.bind(this),\n                messageHandler: this.messagesHandler.bind(this),\n                signal: signal,\n                openingDeadlineMS: openingDeadlineMS\n            };\n            return yield createEventSource(eventSourceConfig);\n        }), (resource) => __awaiter(this, void 0, void 0, function* () {\n            resource.close();\n        }));\n        this.bridgeGatewayStorage = new HttpBridgeGatewayStorage(storage, bridgeUrl);\n    }\n    get isReady() {\n        const eventSource = this.eventSource.current();\n        return (eventSource === null || eventSource === void 0 ? void 0 : eventSource.readyState) === EventSource.OPEN;\n    }\n    get isClosed() {\n        const eventSource = this.eventSource.current();\n        return (eventSource === null || eventSource === void 0 ? void 0 : eventSource.readyState) !== EventSource.OPEN;\n    }\n    get isConnecting() {\n        const eventSource = this.eventSource.current();\n        return (eventSource === null || eventSource === void 0 ? void 0 : eventSource.readyState) === EventSource.CONNECTING;\n    }\n    registerSession(options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.eventSource.create(options === null || options === void 0 ? void 0 : options.signal, options === null || options === void 0 ? void 0 : options.openingDeadlineMS);\n        });\n    }\n    send(message, receiver, topic, ttlOrOptions) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            // TODO: remove deprecated method\n            const options = {};\n            if (typeof ttlOrOptions === 'number') {\n                options.ttl = ttlOrOptions;\n            }\n            else {\n                options.ttl = ttlOrOptions === null || ttlOrOptions === void 0 ? void 0 : ttlOrOptions.ttl;\n                options.signal = ttlOrOptions === null || ttlOrOptions === void 0 ? void 0 : ttlOrOptions.signal;\n                options.attempts = ttlOrOptions === null || ttlOrOptions === void 0 ? void 0 : ttlOrOptions.attempts;\n            }\n            const url = new URL(addPathToUrl(this.bridgeUrl, this.postPath));\n            url.searchParams.append('client_id', this.sessionId);\n            url.searchParams.append('to', receiver);\n            url.searchParams.append('ttl', ((options === null || options === void 0 ? void 0 : options.ttl) || this.defaultTtl).toString());\n            url.searchParams.append('topic', topic);\n            const body = _tonconnect_protocol__WEBPACK_IMPORTED_MODULE_0__.Base64.encode(message);\n            yield callForSuccess((options) => __awaiter(this, void 0, void 0, function* () {\n                const response = yield this.post(url, body, options.signal);\n                if (!response.ok) {\n                    throw new TonConnectError(`Bridge send failed, status ${response.status}`);\n                }\n            }), {\n                attempts: (_a = options === null || options === void 0 ? void 0 : options.attempts) !== null && _a !== void 0 ? _a : Number.MAX_SAFE_INTEGER,\n                delayMs: this.defaultResendDelay,\n                signal: options === null || options === void 0 ? void 0 : options.signal\n            });\n        });\n    }\n    pause() {\n        this.eventSource.dispose().catch(e => logError(`Bridge pause failed, ${e}`));\n    }\n    unPause() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const RECREATE_WITHOUT_DELAY = 0;\n            yield this.eventSource.recreate(RECREATE_WITHOUT_DELAY);\n        });\n    }\n    close() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.eventSource.dispose().catch(e => logError(`Bridge close failed, ${e}`));\n        });\n    }\n    setListener(listener) {\n        this.listener = listener;\n    }\n    setErrorsListener(errorsListener) {\n        this.errorsListener = errorsListener;\n    }\n    post(url, body, signal) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const response = yield fetch(url, {\n                method: 'post',\n                body: body,\n                signal: signal\n            });\n            if (!response.ok) {\n                throw new TonConnectError(`Bridge send failed, status ${response.status}`);\n            }\n            return response;\n        });\n    }\n    errorsHandler(eventSource, e) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.isConnecting) {\n                eventSource.close();\n                throw new TonConnectError('Bridge error, failed to connect');\n            }\n            if (this.isReady) {\n                try {\n                    this.errorsListener(e);\n                }\n                catch (e) { }\n                return;\n            }\n            if (this.isClosed) {\n                eventSource.close();\n                logDebug(`Bridge reconnecting, ${this.defaultReconnectDelay}ms delay`);\n                return yield this.eventSource.recreate(this.defaultReconnectDelay);\n            }\n            throw new TonConnectError('Bridge error, unknown state');\n        });\n    }\n    messagesHandler(e) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (e.data === this.heartbeatMessage) {\n                return;\n            }\n            yield this.bridgeGatewayStorage.storeLastEventId(e.lastEventId);\n            if (this.isClosed) {\n                return;\n            }\n            let bridgeIncomingMessage;\n            try {\n                bridgeIncomingMessage = JSON.parse(e.data);\n            }\n            catch (e) {\n                throw new TonConnectError(`Bridge message parse failed, message ${e.data}`);\n            }\n            this.listener(bridgeIncomingMessage);\n        });\n    }\n}\n/**\n * Creates an event source.\n * @param {CreateEventSourceConfig} config - Configuration for creating an event source.\n */\nfunction createEventSource(config) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return yield timeout((resolve, reject, deferOptions) => __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            const abortController = createAbortController(deferOptions.signal);\n            const signal = abortController.signal;\n            if (signal.aborted) {\n                reject(new TonConnectError('Bridge connection aborted'));\n                return;\n            }\n            const url = new URL(addPathToUrl(config.bridgeUrl, config.ssePath));\n            url.searchParams.append('client_id', config.sessionId);\n            const lastEventId = yield config.bridgeGatewayStorage.getLastEventId();\n            if (lastEventId) {\n                url.searchParams.append('last_event_id', lastEventId);\n            }\n            if (signal.aborted) {\n                reject(new TonConnectError('Bridge connection aborted'));\n                return;\n            }\n            const eventSource = new EventSource(url.toString());\n            eventSource.onerror = (reason) => __awaiter(this, void 0, void 0, function* () {\n                if (signal.aborted) {\n                    eventSource.close();\n                    reject(new TonConnectError('Bridge connection aborted'));\n                    return;\n                }\n                try {\n                    const newInstance = yield config.errorHandler(eventSource, reason);\n                    if (newInstance !== eventSource) {\n                        eventSource.close();\n                    }\n                    if (newInstance && newInstance !== eventSource) {\n                        resolve(newInstance);\n                    }\n                }\n                catch (e) {\n                    eventSource.close();\n                    reject(e);\n                }\n            });\n            eventSource.onopen = () => {\n                if (signal.aborted) {\n                    eventSource.close();\n                    reject(new TonConnectError('Bridge connection aborted'));\n                    return;\n                }\n                resolve(eventSource);\n            };\n            eventSource.onmessage = (event) => {\n                if (signal.aborted) {\n                    eventSource.close();\n                    reject(new TonConnectError('Bridge connection aborted'));\n                    return;\n                }\n                config.messageHandler(event);\n            };\n            (_a = config.signal) === null || _a === void 0 ? void 0 : _a.addEventListener('abort', () => {\n                eventSource.close();\n                reject(new TonConnectError('Bridge connection aborted'));\n            });\n        }), { timeout: config.openingDeadlineMS, signal: config.signal });\n    });\n}\n\nfunction isPendingConnectionHttp(connection) {\n    return !('connectEvent' in connection);\n}\n\nclass BridgeConnectionStorage {\n    constructor(storage) {\n        this.storage = storage;\n        this.storeKey = 'ton-connect-storage_bridge-connection';\n    }\n    storeConnection(connection) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (connection.type === 'injected') {\n                return this.storage.setItem(this.storeKey, JSON.stringify(connection));\n            }\n            if (!isPendingConnectionHttp(connection)) {\n                const rawSession = {\n                    sessionKeyPair: connection.session.sessionCrypto.stringifyKeypair(),\n                    walletPublicKey: connection.session.walletPublicKey,\n                    bridgeUrl: connection.session.bridgeUrl\n                };\n                const rawConnection = {\n                    type: 'http',\n                    connectEvent: connection.connectEvent,\n                    session: rawSession,\n                    lastWalletEventId: connection.lastWalletEventId,\n                    nextRpcRequestId: connection.nextRpcRequestId\n                };\n                return this.storage.setItem(this.storeKey, JSON.stringify(rawConnection));\n            }\n            const rawConnection = {\n                type: 'http',\n                connectionSource: connection.connectionSource,\n                sessionCrypto: connection.sessionCrypto.stringifyKeypair()\n            };\n            return this.storage.setItem(this.storeKey, JSON.stringify(rawConnection));\n        });\n    }\n    removeConnection() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.storage.removeItem(this.storeKey);\n        });\n    }\n    getConnection() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const stored = yield this.storage.getItem(this.storeKey);\n            if (!stored) {\n                return null;\n            }\n            const connection = JSON.parse(stored);\n            if (connection.type === 'injected') {\n                return connection;\n            }\n            if ('connectEvent' in connection) {\n                const sessionCrypto = new _tonconnect_protocol__WEBPACK_IMPORTED_MODULE_0__.SessionCrypto(connection.session.sessionKeyPair);\n                return {\n                    type: 'http',\n                    connectEvent: connection.connectEvent,\n                    lastWalletEventId: connection.lastWalletEventId,\n                    nextRpcRequestId: connection.nextRpcRequestId,\n                    session: {\n                        sessionCrypto,\n                        bridgeUrl: connection.session.bridgeUrl,\n                        walletPublicKey: connection.session.walletPublicKey\n                    }\n                };\n            }\n            return {\n                type: 'http',\n                sessionCrypto: new _tonconnect_protocol__WEBPACK_IMPORTED_MODULE_0__.SessionCrypto(connection.sessionCrypto),\n                connectionSource: connection.connectionSource\n            };\n        });\n    }\n    getHttpConnection() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const connection = yield this.getConnection();\n            if (!connection) {\n                throw new TonConnectError('Trying to read HTTP connection source while nothing is stored');\n            }\n            if (connection.type === 'injected') {\n                throw new TonConnectError('Trying to read HTTP connection source while injected connection is stored');\n            }\n            return connection;\n        });\n    }\n    getHttpPendingConnection() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const connection = yield this.getConnection();\n            if (!connection) {\n                throw new TonConnectError('Trying to read HTTP connection source while nothing is stored');\n            }\n            if (connection.type === 'injected') {\n                throw new TonConnectError('Trying to read HTTP connection source while injected connection is stored');\n            }\n            if (!isPendingConnectionHttp(connection)) {\n                throw new TonConnectError('Trying to read HTTP-pending connection while http connection is stored');\n            }\n            return connection;\n        });\n    }\n    getInjectedConnection() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const connection = yield this.getConnection();\n            if (!connection) {\n                throw new TonConnectError('Trying to read Injected bridge connection source while nothing is stored');\n            }\n            if ((connection === null || connection === void 0 ? void 0 : connection.type) === 'http') {\n                throw new TonConnectError('Trying to read Injected bridge connection source while HTTP connection is stored');\n            }\n            return connection;\n        });\n    }\n    storedConnectionType() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const stored = yield this.storage.getItem(this.storeKey);\n            if (!stored) {\n                return null;\n            }\n            const connection = JSON.parse(stored);\n            return connection.type;\n        });\n    }\n    storeLastWalletEventId(id) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const connection = yield this.getConnection();\n            if (connection && connection.type === 'http' && !isPendingConnectionHttp(connection)) {\n                connection.lastWalletEventId = id;\n                return this.storeConnection(connection);\n            }\n        });\n    }\n    getLastWalletEventId() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const connection = yield this.getConnection();\n            if (connection && 'lastWalletEventId' in connection) {\n                return connection.lastWalletEventId;\n            }\n            return undefined;\n        });\n    }\n    increaseNextRpcRequestId() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const connection = yield this.getConnection();\n            if (connection && 'nextRpcRequestId' in connection) {\n                const lastId = connection.nextRpcRequestId || 0;\n                connection.nextRpcRequestId = lastId + 1;\n                return this.storeConnection(connection);\n            }\n        });\n    }\n    getNextRpcRequestId() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const connection = yield this.getConnection();\n            if (connection && 'nextRpcRequestId' in connection) {\n                return connection.nextRpcRequestId || 0;\n            }\n            return 0;\n        });\n    }\n}\n\nconst PROTOCOL_VERSION = 2;\n\nclass BridgeProvider {\n    constructor(storage, walletConnectionSource) {\n        this.storage = storage;\n        this.walletConnectionSource = walletConnectionSource;\n        this.type = 'http';\n        this.standardUniversalLink = 'tc://';\n        this.pendingRequests = new Map();\n        this.session = null;\n        this.gateway = null;\n        this.pendingGateways = [];\n        this.listeners = [];\n        this.defaultOpeningDeadlineMS = 12000;\n        this.defaultRetryTimeoutMS = 2000;\n        this.connectionStorage = new BridgeConnectionStorage(storage);\n    }\n    static fromStorage(storage) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const bridgeConnectionStorage = new BridgeConnectionStorage(storage);\n            const connection = yield bridgeConnectionStorage.getHttpConnection();\n            if (isPendingConnectionHttp(connection)) {\n                return new BridgeProvider(storage, connection.connectionSource);\n            }\n            return new BridgeProvider(storage, { bridgeUrl: connection.session.bridgeUrl });\n        });\n    }\n    connect(message, options) {\n        var _a;\n        const abortController = createAbortController(options === null || options === void 0 ? void 0 : options.signal);\n        (_a = this.abortController) === null || _a === void 0 ? void 0 : _a.abort();\n        this.abortController = abortController;\n        this.closeGateways();\n        const sessionCrypto = new _tonconnect_protocol__WEBPACK_IMPORTED_MODULE_0__.SessionCrypto();\n        this.session = {\n            sessionCrypto,\n            bridgeUrl: 'bridgeUrl' in this.walletConnectionSource\n                ? this.walletConnectionSource.bridgeUrl\n                : ''\n        };\n        this.connectionStorage\n            .storeConnection({\n            type: 'http',\n            connectionSource: this.walletConnectionSource,\n            sessionCrypto\n        })\n            .then(() => __awaiter(this, void 0, void 0, function* () {\n            if (abortController.signal.aborted) {\n                return;\n            }\n            yield callForSuccess(_options => {\n                var _a;\n                return this.openGateways(sessionCrypto, {\n                    openingDeadlineMS: (_a = options === null || options === void 0 ? void 0 : options.openingDeadlineMS) !== null && _a !== void 0 ? _a : this.defaultOpeningDeadlineMS,\n                    signal: _options === null || _options === void 0 ? void 0 : _options.signal\n                });\n            }, {\n                attempts: Number.MAX_SAFE_INTEGER,\n                delayMs: this.defaultRetryTimeoutMS,\n                signal: abortController.signal\n            });\n        }));\n        const universalLink = 'universalLink' in this.walletConnectionSource &&\n            this.walletConnectionSource.universalLink\n            ? this.walletConnectionSource.universalLink\n            : this.standardUniversalLink;\n        return this.generateUniversalLink(universalLink, message);\n    }\n    restoreConnection(options) {\n        var _a, _b;\n        return __awaiter(this, void 0, void 0, function* () {\n            const abortController = createAbortController(options === null || options === void 0 ? void 0 : options.signal);\n            (_a = this.abortController) === null || _a === void 0 ? void 0 : _a.abort();\n            this.abortController = abortController;\n            if (abortController.signal.aborted) {\n                return;\n            }\n            this.closeGateways();\n            const storedConnection = yield this.connectionStorage.getHttpConnection();\n            if (!storedConnection) {\n                return;\n            }\n            if (abortController.signal.aborted) {\n                return;\n            }\n            const openingDeadlineMS = (_b = options === null || options === void 0 ? void 0 : options.openingDeadlineMS) !== null && _b !== void 0 ? _b : this.defaultOpeningDeadlineMS;\n            if (isPendingConnectionHttp(storedConnection)) {\n                this.session = {\n                    sessionCrypto: storedConnection.sessionCrypto,\n                    bridgeUrl: 'bridgeUrl' in this.walletConnectionSource\n                        ? this.walletConnectionSource.bridgeUrl\n                        : ''\n                };\n                return yield this.openGateways(storedConnection.sessionCrypto, {\n                    openingDeadlineMS: openingDeadlineMS,\n                    signal: abortController === null || abortController === void 0 ? void 0 : abortController.signal\n                });\n            }\n            if (Array.isArray(this.walletConnectionSource)) {\n                throw new TonConnectError('Internal error. Connection source is array while WalletConnectionSourceHTTP was expected.');\n            }\n            this.session = storedConnection.session;\n            if (this.gateway) {\n                logDebug('Gateway is already opened, closing previous gateway');\n                yield this.gateway.close();\n            }\n            this.gateway = new BridgeGateway(this.storage, this.walletConnectionSource.bridgeUrl, storedConnection.session.sessionCrypto.sessionId, this.gatewayListener.bind(this), this.gatewayErrorsListener.bind(this));\n            if (abortController.signal.aborted) {\n                return;\n            }\n            // notify listeners about stored connection\n            this.listeners.forEach(listener => listener(storedConnection.connectEvent));\n            // wait for the connection to be opened\n            try {\n                yield callForSuccess(options => this.gateway.registerSession({\n                    openingDeadlineMS: openingDeadlineMS,\n                    signal: options.signal\n                }), {\n                    attempts: Number.MAX_SAFE_INTEGER,\n                    delayMs: this.defaultRetryTimeoutMS,\n                    signal: abortController.signal\n                });\n            }\n            catch (e) {\n                yield this.disconnect({ signal: abortController.signal });\n                return;\n            }\n        });\n    }\n    sendRequest(request, optionsOrOnRequestSent) {\n        // TODO: remove deprecated method\n        const options = {};\n        if (typeof optionsOrOnRequestSent === 'function') {\n            options.onRequestSent = optionsOrOnRequestSent;\n        }\n        else {\n            options.onRequestSent = optionsOrOnRequestSent === null || optionsOrOnRequestSent === void 0 ? void 0 : optionsOrOnRequestSent.onRequestSent;\n            options.signal = optionsOrOnRequestSent === null || optionsOrOnRequestSent === void 0 ? void 0 : optionsOrOnRequestSent.signal;\n            options.attempts = optionsOrOnRequestSent === null || optionsOrOnRequestSent === void 0 ? void 0 : optionsOrOnRequestSent.attempts;\n        }\n        return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            if (!this.gateway || !this.session || !('walletPublicKey' in this.session)) {\n                throw new TonConnectError('Trying to send bridge request without session');\n            }\n            const id = (yield this.connectionStorage.getNextRpcRequestId()).toString();\n            yield this.connectionStorage.increaseNextRpcRequestId();\n            logDebug('Send http-bridge request:', Object.assign(Object.assign({}, request), { id }));\n            const encodedRequest = this.session.sessionCrypto.encrypt(JSON.stringify(Object.assign(Object.assign({}, request), { id })), (0,_tonconnect_protocol__WEBPACK_IMPORTED_MODULE_0__.hexToByteArray)(this.session.walletPublicKey));\n            try {\n                yield this.gateway.send(encodedRequest, this.session.walletPublicKey, request.method, { attempts: options === null || options === void 0 ? void 0 : options.attempts, signal: options === null || options === void 0 ? void 0 : options.signal });\n                (_a = options === null || options === void 0 ? void 0 : options.onRequestSent) === null || _a === void 0 ? void 0 : _a.call(options);\n                this.pendingRequests.set(id.toString(), resolve);\n            }\n            catch (e) {\n                reject(e);\n            }\n        }));\n    }\n    closeConnection() {\n        this.closeGateways();\n        this.listeners = [];\n        this.session = null;\n        this.gateway = null;\n    }\n    disconnect(options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve) => __awaiter(this, void 0, void 0, function* () {\n                let called = false;\n                let timeoutId = null;\n                const onRequestSent = () => {\n                    if (!called) {\n                        called = true;\n                        this.removeBridgeAndSession().then(resolve);\n                    }\n                };\n                try {\n                    this.closeGateways();\n                    const abortController = createAbortController(options === null || options === void 0 ? void 0 : options.signal);\n                    timeoutId = setTimeout(() => {\n                        abortController.abort();\n                    }, this.defaultOpeningDeadlineMS);\n                    yield this.sendRequest({ method: 'disconnect', params: [] }, {\n                        onRequestSent: onRequestSent,\n                        signal: abortController.signal,\n                        attempts: 1\n                    });\n                }\n                catch (e) {\n                    logDebug('Disconnect error:', e);\n                    if (!called) {\n                        this.removeBridgeAndSession().then(resolve);\n                    }\n                }\n                finally {\n                    if (timeoutId) {\n                        clearTimeout(timeoutId);\n                    }\n                    onRequestSent();\n                }\n            }));\n        });\n    }\n    listen(callback) {\n        this.listeners.push(callback);\n        return () => (this.listeners = this.listeners.filter(listener => listener !== callback));\n    }\n    pause() {\n        var _a;\n        (_a = this.gateway) === null || _a === void 0 ? void 0 : _a.pause();\n        this.pendingGateways.forEach(bridge => bridge.pause());\n    }\n    unPause() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const promises = this.pendingGateways.map(bridge => bridge.unPause());\n            if (this.gateway) {\n                promises.push(this.gateway.unPause());\n            }\n            yield Promise.all(promises);\n        });\n    }\n    pendingGatewaysListener(gateway, bridgeUrl, bridgeIncomingMessage) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.pendingGateways.includes(gateway)) {\n                yield gateway.close();\n                return;\n            }\n            this.closeGateways({ except: gateway });\n            if (this.gateway) {\n                logDebug('Gateway is already opened, closing previous gateway');\n                yield this.gateway.close();\n            }\n            this.session.bridgeUrl = bridgeUrl;\n            this.gateway = gateway;\n            this.gateway.setErrorsListener(this.gatewayErrorsListener.bind(this));\n            this.gateway.setListener(this.gatewayListener.bind(this));\n            return this.gatewayListener(bridgeIncomingMessage);\n        });\n    }\n    gatewayListener(bridgeIncomingMessage) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const walletMessage = JSON.parse(this.session.sessionCrypto.decrypt(_tonconnect_protocol__WEBPACK_IMPORTED_MODULE_0__.Base64.decode(bridgeIncomingMessage.message).toUint8Array(), (0,_tonconnect_protocol__WEBPACK_IMPORTED_MODULE_0__.hexToByteArray)(bridgeIncomingMessage.from)));\n            logDebug('Wallet message received:', walletMessage);\n            if (!('event' in walletMessage)) {\n                const id = walletMessage.id.toString();\n                const resolve = this.pendingRequests.get(id);\n                if (!resolve) {\n                    logDebug(`Response id ${id} doesn't match any request's id`);\n                    return;\n                }\n                resolve(walletMessage);\n                this.pendingRequests.delete(id);\n                return;\n            }\n            if (walletMessage.id !== undefined) {\n                const lastId = yield this.connectionStorage.getLastWalletEventId();\n                if (lastId !== undefined && walletMessage.id <= lastId) {\n                    logError(`Received event id (=${walletMessage.id}) must be greater than stored last wallet event id (=${lastId}) `);\n                    return;\n                }\n                if (walletMessage.event !== 'connect') {\n                    yield this.connectionStorage.storeLastWalletEventId(walletMessage.id);\n                }\n            }\n            // `this.listeners` might be modified in the event handler\n            const listeners = this.listeners;\n            if (walletMessage.event === 'connect') {\n                yield this.updateSession(walletMessage, bridgeIncomingMessage.from);\n            }\n            if (walletMessage.event === 'disconnect') {\n                logDebug(`Removing bridge and session: received disconnect event`);\n                yield this.removeBridgeAndSession();\n            }\n            listeners.forEach(listener => listener(walletMessage));\n        });\n    }\n    gatewayErrorsListener(e) {\n        return __awaiter(this, void 0, void 0, function* () {\n            throw new TonConnectError(`Bridge error ${JSON.stringify(e)}`);\n        });\n    }\n    updateSession(connectEvent, walletPublicKey) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.session = Object.assign(Object.assign({}, this.session), { walletPublicKey });\n            const tonAddrItem = connectEvent.payload.items.find(item => item.name === 'ton_addr');\n            const connectEventToSave = Object.assign(Object.assign({}, connectEvent), { payload: Object.assign(Object.assign({}, connectEvent.payload), { items: [tonAddrItem] }) });\n            yield this.connectionStorage.storeConnection({\n                type: 'http',\n                session: this.session,\n                lastWalletEventId: connectEvent.id,\n                connectEvent: connectEventToSave,\n                nextRpcRequestId: 0\n            });\n        });\n    }\n    removeBridgeAndSession() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.closeConnection();\n            yield this.connectionStorage.removeConnection();\n        });\n    }\n    generateUniversalLink(universalLink, message) {\n        if (isTelegramUrl(universalLink)) {\n            return this.generateTGUniversalLink(universalLink, message);\n        }\n        return this.generateRegularUniversalLink(universalLink, message);\n    }\n    generateRegularUniversalLink(universalLink, message) {\n        const url = new URL(universalLink);\n        url.searchParams.append('v', PROTOCOL_VERSION.toString());\n        url.searchParams.append('id', this.session.sessionCrypto.sessionId);\n        url.searchParams.append('r', JSON.stringify(message));\n        return url.toString();\n    }\n    generateTGUniversalLink(universalLink, message) {\n        const urlToWrap = this.generateRegularUniversalLink('about:blank', message);\n        const linkParams = urlToWrap.split('?')[1];\n        const startapp = 'tonconnect-' + encodeTelegramUrlParameters(linkParams);\n        // TODO: Remove this line after all dApps and the wallets-list.json have been updated\n        const updatedUniversalLink = this.convertToDirectLink(universalLink);\n        const url = new URL(updatedUniversalLink);\n        url.searchParams.append('startapp', startapp);\n        return url.toString();\n    }\n    // TODO: Remove this method after all dApps and the wallets-list.json have been updated\n    convertToDirectLink(universalLink) {\n        const url = new URL(universalLink);\n        if (url.searchParams.has('attach')) {\n            url.searchParams.delete('attach');\n            url.pathname += '/start';\n        }\n        return url.toString();\n    }\n    openGateways(sessionCrypto, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (Array.isArray(this.walletConnectionSource)) {\n                // close all gateways before opening new ones\n                this.pendingGateways.map(bridge => bridge.close().catch());\n                // open new gateways\n                this.pendingGateways = this.walletConnectionSource.map(source => {\n                    const gateway = new BridgeGateway(this.storage, source.bridgeUrl, sessionCrypto.sessionId, () => { }, () => { });\n                    gateway.setListener(message => this.pendingGatewaysListener(gateway, source.bridgeUrl, message));\n                    return gateway;\n                });\n                yield Promise.allSettled(this.pendingGateways.map(bridge => callForSuccess((_options) => {\n                    var _a;\n                    if (!this.pendingGateways.some(item => item === bridge)) {\n                        return bridge.close();\n                    }\n                    return bridge.registerSession({\n                        openingDeadlineMS: (_a = options === null || options === void 0 ? void 0 : options.openingDeadlineMS) !== null && _a !== void 0 ? _a : this.defaultOpeningDeadlineMS,\n                        signal: _options.signal\n                    });\n                }, {\n                    attempts: Number.MAX_SAFE_INTEGER,\n                    delayMs: this.defaultRetryTimeoutMS,\n                    signal: options === null || options === void 0 ? void 0 : options.signal\n                })));\n                return;\n            }\n            else {\n                if (this.gateway) {\n                    logDebug(`Gateway is already opened, closing previous gateway`);\n                    yield this.gateway.close();\n                }\n                this.gateway = new BridgeGateway(this.storage, this.walletConnectionSource.bridgeUrl, sessionCrypto.sessionId, this.gatewayListener.bind(this), this.gatewayErrorsListener.bind(this));\n                return yield this.gateway.registerSession({\n                    openingDeadlineMS: options === null || options === void 0 ? void 0 : options.openingDeadlineMS,\n                    signal: options === null || options === void 0 ? void 0 : options.signal\n                });\n            }\n        });\n    }\n    closeGateways(options) {\n        var _a;\n        (_a = this.gateway) === null || _a === void 0 ? void 0 : _a.close();\n        this.pendingGateways\n            .filter(item => item !== (options === null || options === void 0 ? void 0 : options.except))\n            .forEach(bridge => bridge.close());\n        this.pendingGateways = [];\n    }\n}\n\nfunction hasProperty(value, propertyKey) {\n    return hasProperties(value, [propertyKey]);\n}\nfunction hasProperties(value, propertyKeys) {\n    if (!value || typeof value !== 'object') {\n        return false;\n    }\n    return propertyKeys.every(propertyKey => propertyKey in value);\n}\n\nfunction isJSBridgeWithMetadata(value) {\n    try {\n        if (!hasProperty(value, 'tonconnect') || !hasProperty(value.tonconnect, 'walletInfo')) {\n            return false;\n        }\n        return hasProperties(value.tonconnect.walletInfo, [\n            'name',\n            'app_name',\n            'image',\n            'about_url',\n            'platforms'\n        ]);\n    }\n    catch (_a) {\n        return false;\n    }\n}\n\n/**\n * In memory storage like localStorage, but without persistence.\n * Uses as a fallback for localStorage in Safari's private mode.\n */\nclass InMemoryStorage {\n    constructor() {\n        this.storage = {};\n    }\n    static getInstance() {\n        if (!InMemoryStorage.instance) {\n            InMemoryStorage.instance = new InMemoryStorage();\n        }\n        return InMemoryStorage.instance;\n    }\n    get length() {\n        return Object.keys(this.storage).length;\n    }\n    clear() {\n        this.storage = {};\n    }\n    getItem(key) {\n        var _a;\n        return (_a = this.storage[key]) !== null && _a !== void 0 ? _a : null;\n    }\n    key(index) {\n        var _a;\n        const keys = Object.keys(this.storage);\n        if (index < 0 || index >= keys.length) {\n            return null;\n        }\n        return (_a = keys[index]) !== null && _a !== void 0 ? _a : null;\n    }\n    removeItem(key) {\n        delete this.storage[key];\n    }\n    setItem(key, value) {\n        this.storage[key] = value;\n    }\n}\n\nfunction getWindow() {\n    if (typeof window === 'undefined') {\n        return undefined;\n    }\n    return window;\n}\n/**\n * The function try to get window keys, if it is not available it returns empty array.\n * As an example, for Safari's private mode it returns empty array, because the browser does not allow to get window keys.\n */\nfunction tryGetWindowKeys() {\n    const window = getWindow();\n    if (!window) {\n        return [];\n    }\n    try {\n        return Object.keys(window);\n    }\n    catch (_a) {\n        return [];\n    }\n}\nfunction getDocument() {\n    if (typeof document === 'undefined') {\n        return undefined;\n    }\n    return document;\n}\nfunction getWebPageManifest() {\n    var _a;\n    const origin = (_a = getWindow()) === null || _a === void 0 ? void 0 : _a.location.origin;\n    if (origin) {\n        return origin + '/tonconnect-manifest.json';\n    }\n    return '';\n}\n/**\n * Returns `localStorage` if it is available. In Safari's private mode, it returns `InMemoryStorage`. In Node.js, it throws an error.\n */\nfunction tryGetLocalStorage() {\n    if (isLocalStorageAvailable()) {\n        return localStorage;\n    }\n    if (isNodeJs()) {\n        throw new TonConnectError('`localStorage` is unavailable, but it is required for TonConnect. For more details, see https://github.com/ton-connect/sdk/tree/main/packages/sdk#init-connector');\n    }\n    return InMemoryStorage.getInstance();\n}\n/**\n * Checks if `localStorage` is available.\n */\nfunction isLocalStorageAvailable() {\n    // We use a try/catch block because Safari's private mode throws an error when attempting to access localStorage.\n    try {\n        return typeof localStorage !== 'undefined';\n    }\n    catch (_a) {\n        return false;\n    }\n}\n/**\n * Checks if the environment is Node.js.\n */\nfunction isNodeJs() {\n    return (typeof process !== 'undefined' && process.versions != null && process.versions.node != null);\n}\n\nclass InjectedProvider {\n    constructor(storage, injectedWalletKey) {\n        this.injectedWalletKey = injectedWalletKey;\n        this.type = 'injected';\n        this.unsubscribeCallback = null;\n        this.listenSubscriptions = false;\n        this.listeners = [];\n        const window = InjectedProvider.window;\n        if (!InjectedProvider.isWindowContainsWallet(window, injectedWalletKey)) {\n            throw new WalletNotInjectedError();\n        }\n        this.connectionStorage = new BridgeConnectionStorage(storage);\n        this.injectedWallet = window[injectedWalletKey].tonconnect;\n    }\n    static fromStorage(storage) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const bridgeConnectionStorage = new BridgeConnectionStorage(storage);\n            const connection = yield bridgeConnectionStorage.getInjectedConnection();\n            return new InjectedProvider(storage, connection.jsBridgeKey);\n        });\n    }\n    static isWalletInjected(injectedWalletKey) {\n        return InjectedProvider.isWindowContainsWallet(this.window, injectedWalletKey);\n    }\n    static isInsideWalletBrowser(injectedWalletKey) {\n        if (InjectedProvider.isWindowContainsWallet(this.window, injectedWalletKey)) {\n            return this.window[injectedWalletKey].tonconnect.isWalletBrowser;\n        }\n        return false;\n    }\n    static getCurrentlyInjectedWallets() {\n        if (!this.window) {\n            return [];\n        }\n        const windowKeys = tryGetWindowKeys();\n        const wallets = windowKeys.filter(([_, value]) => isJSBridgeWithMetadata(value));\n        return wallets.map(([jsBridgeKey, wallet]) => ({\n            name: wallet.tonconnect.walletInfo.name,\n            appName: wallet.tonconnect.walletInfo.app_name,\n            aboutUrl: wallet.tonconnect.walletInfo.about_url,\n            imageUrl: wallet.tonconnect.walletInfo.image,\n            tondns: wallet.tonconnect.walletInfo.tondns,\n            jsBridgeKey,\n            injected: true,\n            embedded: wallet.tonconnect.isWalletBrowser,\n            platforms: wallet.tonconnect.walletInfo.platforms,\n            features: wallet.tonconnect.walletInfo.features\n        }));\n    }\n    static isWindowContainsWallet(window, injectedWalletKey) {\n        return (!!window &&\n            injectedWalletKey in window &&\n            typeof window[injectedWalletKey] === 'object' &&\n            'tonconnect' in window[injectedWalletKey]);\n    }\n    connect(message) {\n        this._connect(PROTOCOL_VERSION, message);\n    }\n    restoreConnection() {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                logDebug(`Injected Provider restoring connection...`);\n                const connectEvent = yield this.injectedWallet.restoreConnection();\n                logDebug('Injected Provider restoring connection response', connectEvent);\n                if (connectEvent.event === 'connect') {\n                    this.makeSubscriptions();\n                    this.listeners.forEach(listener => listener(connectEvent));\n                }\n                else {\n                    yield this.connectionStorage.removeConnection();\n                }\n            }\n            catch (e) {\n                yield this.connectionStorage.removeConnection();\n                console.error(e);\n            }\n        });\n    }\n    closeConnection() {\n        if (this.listenSubscriptions) {\n            this.injectedWallet.disconnect();\n        }\n        this.closeAllListeners();\n    }\n    disconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise(resolve => {\n                const onRequestSent = () => {\n                    this.closeAllListeners();\n                    this.connectionStorage.removeConnection().then(resolve);\n                };\n                try {\n                    this.injectedWallet.disconnect();\n                    onRequestSent();\n                }\n                catch (e) {\n                    logDebug(e);\n                    this.sendRequest({\n                        method: 'disconnect',\n                        params: []\n                    }, onRequestSent);\n                }\n            });\n        });\n    }\n    closeAllListeners() {\n        var _a;\n        this.listenSubscriptions = false;\n        this.listeners = [];\n        (_a = this.unsubscribeCallback) === null || _a === void 0 ? void 0 : _a.call(this);\n    }\n    listen(eventsCallback) {\n        this.listeners.push(eventsCallback);\n        return () => (this.listeners = this.listeners.filter(listener => listener !== eventsCallback));\n    }\n    sendRequest(request, optionsOrOnRequestSent) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            // TODO: remove deprecated method\n            const options = {};\n            if (typeof optionsOrOnRequestSent === 'function') {\n                options.onRequestSent = optionsOrOnRequestSent;\n            }\n            else {\n                options.onRequestSent = optionsOrOnRequestSent === null || optionsOrOnRequestSent === void 0 ? void 0 : optionsOrOnRequestSent.onRequestSent;\n                options.signal = optionsOrOnRequestSent === null || optionsOrOnRequestSent === void 0 ? void 0 : optionsOrOnRequestSent.signal;\n            }\n            const id = (yield this.connectionStorage.getNextRpcRequestId()).toString();\n            yield this.connectionStorage.increaseNextRpcRequestId();\n            logDebug('Send injected-bridge request:', Object.assign(Object.assign({}, request), { id }));\n            const result = this.injectedWallet.send(Object.assign(Object.assign({}, request), { id }));\n            result.then(response => logDebug('Wallet message received:', response));\n            (_a = options === null || options === void 0 ? void 0 : options.onRequestSent) === null || _a === void 0 ? void 0 : _a.call(options);\n            return result;\n        });\n    }\n    _connect(protocolVersion, message) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                logDebug(`Injected Provider connect request: protocolVersion: ${protocolVersion}, message:`, message);\n                const connectEvent = yield this.injectedWallet.connect(protocolVersion, message);\n                logDebug('Injected Provider connect response:', connectEvent);\n                if (connectEvent.event === 'connect') {\n                    yield this.updateSession();\n                    this.makeSubscriptions();\n                }\n                this.listeners.forEach(listener => listener(connectEvent));\n            }\n            catch (e) {\n                logDebug('Injected Provider connect error:', e);\n                const connectEventError = {\n                    event: 'connect_error',\n                    payload: {\n                        code: 0,\n                        message: e === null || e === void 0 ? void 0 : e.toString()\n                    }\n                };\n                this.listeners.forEach(listener => listener(connectEventError));\n            }\n        });\n    }\n    makeSubscriptions() {\n        this.listenSubscriptions = true;\n        this.unsubscribeCallback = this.injectedWallet.listen(e => {\n            logDebug('Wallet message received:', e);\n            if (this.listenSubscriptions) {\n                this.listeners.forEach(listener => listener(e));\n            }\n            if (e.event === 'disconnect') {\n                this.disconnect();\n            }\n        });\n    }\n    updateSession() {\n        return this.connectionStorage.storeConnection({\n            type: 'injected',\n            jsBridgeKey: this.injectedWalletKey,\n            nextRpcRequestId: 0\n        });\n    }\n}\nInjectedProvider.window = getWindow();\n\n/**\n * Default storage to save protocol data, uses `localStorage` if it is available. In Safari's private mode, it uses `InMemoryStorage`. In Node.js, it throws an error.\n */\nclass DefaultStorage {\n    constructor() {\n        this.localStorage = tryGetLocalStorage();\n    }\n    getItem(key) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.localStorage.getItem(key);\n        });\n    }\n    removeItem(key) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.localStorage.removeItem(key);\n        });\n    }\n    setItem(key, value) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.localStorage.setItem(key, value);\n        });\n    }\n}\n\n/**\n * Checks if `WalletInfo` is `WalletInfoInjectable` and `WalletInfo` is injected to the current webpage (`walletInfo.injected === true`).\n * @param value WalletInfo to check.\n */\nfunction isWalletInfoCurrentlyInjected(value) {\n    return isWalletInfoInjectable(value) && value.injected;\n}\n/**\n * Checks if `WalletInfo` is `WalletInfoInjectable` and dApp is opened inside this wallet's browser.\n * @param value WalletInfo to check.\n */\nfunction isWalletInfoCurrentlyEmbedded(value) {\n    return isWalletInfoCurrentlyInjected(value) && value.embedded;\n}\n/**\n * Checks if `WalletInfo` is `WalletInfoInjected`, but doesn't check if it is injected to the page or not.\n * @param value WalletInfo to check.\n */\nfunction isWalletInfoInjectable(value) {\n    return 'jsBridgeKey' in value;\n}\n/**\n * Checks if `WalletInfo` is `WalletInfoRemote`.\n * @param value WalletInfo to check.\n */\nfunction isWalletInfoRemote(value) {\n    return 'bridgeUrl' in value;\n}\n/**\n * @deprecated use `isWalletInfoInjectable` or `isWalletInfoCurrentlyInjected` instead.\n * @param value WalletInfo to check.\n */\nfunction isWalletInfoInjected(value) {\n    return 'jsBridgeKey' in value;\n}\n\nconst FALLBACK_WALLETS_LIST = [\n    {\n        app_name: 'telegram-wallet',\n        name: 'Wallet',\n        image: 'https://wallet.tg/images/logo-288.png',\n        about_url: 'https://wallet.tg/',\n        universal_url: 'https://t.me/wallet?attach=wallet',\n        bridge: [\n            {\n                type: 'sse',\n                url: 'https://walletbot.me/tonconnect-bridge/bridge'\n            }\n        ],\n        platforms: ['ios', 'android', 'macos', 'windows', 'linux']\n    },\n    {\n        app_name: 'tonkeeper',\n        name: 'Tonkeeper',\n        image: 'https://tonkeeper.com/assets/tonconnect-icon.png',\n        tondns: 'tonkeeper.ton',\n        about_url: 'https://tonkeeper.com',\n        universal_url: 'https://app.tonkeeper.com/ton-connect',\n        deepLink: 'tonkeeper-tc://',\n        bridge: [\n            {\n                type: 'sse',\n                url: 'https://bridge.tonapi.io/bridge'\n            },\n            {\n                type: 'js',\n                key: 'tonkeeper'\n            }\n        ],\n        platforms: ['ios', 'android', 'chrome', 'firefox', 'macos']\n    },\n    {\n        app_name: 'mytonwallet',\n        name: 'MyTonWallet',\n        image: 'https://static.mytonwallet.io/icon-256.png',\n        about_url: 'https://mytonwallet.io',\n        universal_url: 'https://connect.mytonwallet.org',\n        bridge: [\n            {\n                type: 'js',\n                key: 'mytonwallet'\n            },\n            {\n                type: 'sse',\n                url: 'https://tonconnectbridge.mytonwallet.org/bridge/'\n            }\n        ],\n        platforms: ['chrome', 'windows', 'macos', 'linux', 'ios', 'android', 'firefox']\n    },\n    {\n        app_name: 'tonhub',\n        name: 'Tonhub',\n        image: 'https://tonhub.com/tonconnect_logo.png',\n        about_url: 'https://tonhub.com',\n        universal_url: 'https://tonhub.com/ton-connect',\n        bridge: [\n            {\n                type: 'js',\n                key: 'tonhub'\n            },\n            {\n                type: 'sse',\n                url: 'https://connect.tonhubapi.com/tonconnect'\n            }\n        ],\n        platforms: ['ios', 'android']\n    },\n    {\n        app_name: 'bitgetTonWallet',\n        name: 'Bitget Wallet',\n        image: 'https://raw.githubusercontent.com/bitgetwallet/download/refs/heads/main/logo/png/bitget_wallet_logo_288_mini.png',\n        about_url: 'https://web3.bitget.com',\n        deepLink: 'bitkeep://',\n        bridge: [\n            {\n                type: 'js',\n                key: 'bitgetTonWallet'\n            },\n            {\n                type: 'sse',\n                url: 'https://ton-connect-bridge.bgwapi.io/bridge'\n            }\n        ],\n        platforms: ['ios', 'android', 'chrome'],\n        universal_url: 'https://bkcode.vip/ton-connect'\n    },\n    {\n        app_name: 'okxMiniWallet',\n        name: 'OKX Mini Wallet',\n        image: 'https://static.okx.com/cdn/assets/imgs/2411/8BE1A4A434D8F58A.png',\n        about_url: 'https://www.okx.com/web3',\n        universal_url: 'https://t.me/OKX_WALLET_BOT?attach=wallet',\n        bridge: [\n            {\n                type: 'sse',\n                url: 'https://www.okx.com/tonbridge/discover/rpc/bridge'\n            }\n        ],\n        platforms: ['ios', 'android', 'macos', 'windows', 'linux']\n    },\n    {\n        app_name: 'binanceWeb3TonWallet',\n        name: 'Binance Web3 Wallet',\n        image: 'https://public.bnbstatic.com/static/binance-w3w/ton-provider/binancew3w.png',\n        about_url: 'https://www.binance.com/en/web3wallet',\n        deepLink: 'bnc://app.binance.com/cedefi/ton-connect',\n        bridge: [\n            {\n                type: 'js',\n                key: 'binancew3w'\n            },\n            {\n                type: 'sse',\n                url: 'https://wallet.binance.com/tonbridge/bridge'\n            }\n        ],\n        platforms: ['ios', 'android', 'macos', 'windows', 'linux'],\n        universal_url: 'https://app.binance.com/cedefi/ton-connect'\n    },\n    {\n        app_name: 'fintopio-tg',\n        name: 'Fintopio',\n        image: 'https://fintopio.com/tonconnect-icon.png',\n        about_url: 'https://fintopio.com',\n        universal_url: 'https://t.me/fintopio?attach=wallet',\n        bridge: [\n            {\n                type: 'sse',\n                url: 'https://wallet-bridge.fintopio.com/bridge'\n            }\n        ],\n        platforms: ['ios', 'android', 'macos', 'windows', 'linux']\n    },\n    {\n        app_name: 'okxTonWallet',\n        name: 'OKX Wallet',\n        image: 'https://static.okx.com/cdn/assets/imgs/247/58E63FEA47A2B7D7.png',\n        about_url: 'https://www.okx.com/web3',\n        universal_url: 'https://www.okx.com/download?appendQuery=true&deeplink=okx://web3/wallet/tonconnect',\n        bridge: [\n            {\n                type: 'js',\n                key: 'okxTonWallet'\n            },\n            {\n                type: 'sse',\n                url: 'https://www.okx.com/tonbridge/discover/rpc/bridge'\n            }\n        ],\n        platforms: ['chrome', 'safari', 'firefox', 'ios', 'android']\n    },\n    {\n        app_name: 'hot',\n        name: 'HOT',\n        image: 'https://raw.githubusercontent.com/hot-dao/media/main/logo.png',\n        about_url: 'https://hot-labs.org/',\n        universal_url: 'https://t.me/herewalletbot?attach=wallet',\n        bridge: [\n            {\n                type: 'sse',\n                url: 'https://sse-bridge.hot-labs.org'\n            },\n            {\n                type: 'js',\n                key: 'hotWallet'\n            }\n        ],\n        platforms: ['ios', 'android', 'macos', 'windows', 'linux']\n    },\n    {\n        app_name: 'bybitTonWallet',\n        name: 'Bybit Wallet',\n        image: 'https://raw.githubusercontent.com/bybit-web3/bybit-web3.github.io/main/docs/images/bybit-logo.png',\n        about_url: 'https://www.bybit.com/web3',\n        universal_url: 'https://app.bybit.com/ton-connect',\n        deepLink: 'bybitapp://',\n        bridge: [\n            {\n                type: 'js',\n                key: 'bybitTonWallet'\n            },\n            {\n                type: 'sse',\n                url: 'https://api-node.bybit.com/spot/api/web3/bridge/ton/bridge'\n            }\n        ],\n        platforms: ['ios', 'android', 'chrome']\n    },\n    {\n        app_name: 'dewallet',\n        name: 'DeWallet',\n        image: 'https://raw.githubusercontent.com/delab-team/manifests-images/main/WalletAvatar.png',\n        about_url: 'https://delabwallet.com',\n        universal_url: 'https://t.me/dewallet?attach=wallet',\n        bridge: [\n            {\n                type: 'sse',\n                url: 'https://bridge.dewallet.pro/bridge'\n            }\n        ],\n        platforms: ['ios', 'android', 'macos', 'windows', 'linux']\n    },\n    {\n        app_name: 'safepalwallet',\n        name: 'SafePal',\n        image: 'https://s.pvcliping.com/web/public_image/SafePal_x288.png',\n        tondns: '',\n        about_url: 'https://www.safepal.com',\n        universal_url: 'https://link.safepal.io/ton-connect',\n        deepLink: 'safepal-tc://',\n        bridge: [\n            {\n                type: 'sse',\n                url: 'https://ton-bridge.safepal.com/tonbridge/v1/bridge'\n            },\n            {\n                type: 'js',\n                key: 'safepalwallet'\n            }\n        ],\n        platforms: ['ios', 'android', 'chrome', 'firefox']\n    },\n    {\n        app_name: 'GateWallet',\n        name: 'GateWallet',\n        image: 'https://img.gatedataimg.com/prd-ordinal-imgs/036f07bb8730716e/gateio-0925.png',\n        about_url: 'https://www.gate.io/',\n        bridge: [\n            {\n                type: 'js',\n                key: 'gatetonwallet'\n            },\n            {\n                type: 'sse',\n                url: 'https://dapp.gateio.services/tonbridge_api/bridge/v1'\n            }\n        ],\n        platforms: ['ios', 'android'],\n        universal_url: 'https://gateio.go.link/gateio/web3?adj_t=1ff8khdw_1fu4ccc7'\n    },\n    {\n        app_name: 'openmask',\n        name: 'OpenMask',\n        image: 'https://raw.githubusercontent.com/OpenProduct/openmask-extension/main/public/openmask-logo-288.png',\n        about_url: 'https://www.openmask.app/',\n        bridge: [\n            {\n                type: 'js',\n                key: 'openmask'\n            }\n        ],\n        platforms: ['chrome']\n    },\n    {\n        app_name: 'BitgetWeb3',\n        name: 'BitgetWeb3',\n        image: 'https://img.bitgetimg.com/image/third/1731638059795.png',\n        about_url: '​https://www.bitget.com',\n        universal_url: 'https://t.me/BitgetOfficialBot?attach=wallet',\n        bridge: [\n            {\n                type: 'sse',\n                url: 'https://ton-connect-bridge.bgwapi.io/bridge'\n            }\n        ],\n        platforms: ['ios', 'android', 'windows', 'macos', 'linux']\n    },\n    {\n        app_name: 'tobi',\n        name: 'Tobi',\n        image: 'https://app.tobiwallet.app/icons/logo-288.png',\n        about_url: 'https://tobi.fun',\n        universal_url: 'https://t.me/TobiCopilotBot?attach=wallet',\n        bridge: [\n            {\n                type: 'sse',\n                url: 'https://ton-bridge.tobiwallet.app/bridge'\n            }\n        ],\n        platforms: ['ios', 'android', 'macos', 'windows', 'linux']\n    },\n    {\n        app_name: 'xtonwallet',\n        name: 'XTONWallet',\n        image: 'https://xtonwallet.com/assets/img/icon-256-back.png',\n        about_url: 'https://xtonwallet.com',\n        bridge: [\n            {\n                type: 'js',\n                key: 'xtonwallet'\n            }\n        ],\n        platforms: ['chrome', 'firefox']\n    },\n    {\n        app_name: 'tonwallet',\n        name: 'TON Wallet',\n        image: 'https://wallet.ton.org/assets/ui/qr-logo.png',\n        about_url: 'https://chrome.google.com/webstore/detail/ton-wallet/nphplpgoakhhjchkkhmiggakijnkhfnd',\n        bridge: [\n            {\n                type: 'js',\n                key: 'tonwallet'\n            }\n        ],\n        platforms: ['chrome']\n    }\n];\n\nclass WalletsListManager {\n    constructor(options) {\n        var _a;\n        this.walletsListCache = null;\n        this.walletsListCacheCreationTimestamp = null;\n        this.walletsListSource =\n            (_a = options === null || options === void 0 ? void 0 : options.walletsListSource) !== null && _a !== void 0 ? _a : 'https://raw.githubusercontent.com/ton-blockchain/wallets-list/main/wallets-v2.json';\n        this.cacheTTLMs = options === null || options === void 0 ? void 0 : options.cacheTTLMs;\n    }\n    getWallets() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.cacheTTLMs &&\n                this.walletsListCacheCreationTimestamp &&\n                Date.now() > this.walletsListCacheCreationTimestamp + this.cacheTTLMs) {\n                this.walletsListCache = null;\n            }\n            if (!this.walletsListCache) {\n                this.walletsListCache = this.fetchWalletsList();\n                this.walletsListCache\n                    .then(() => {\n                    this.walletsListCacheCreationTimestamp = Date.now();\n                })\n                    .catch(() => {\n                    this.walletsListCache = null;\n                    this.walletsListCacheCreationTimestamp = null;\n                });\n            }\n            return this.walletsListCache;\n        });\n    }\n    getEmbeddedWallet() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const walletsList = yield this.getWallets();\n            const embeddedWallets = walletsList.filter(isWalletInfoCurrentlyEmbedded);\n            return embeddedWallets.length === 1 ? embeddedWallets[0] : null;\n        });\n    }\n    fetchWalletsList() {\n        return __awaiter(this, void 0, void 0, function* () {\n            let walletsList = [];\n            try {\n                const walletsResponse = yield fetch(this.walletsListSource);\n                walletsList = yield walletsResponse.json();\n                if (!Array.isArray(walletsList)) {\n                    throw new FetchWalletsError('Wrong wallets list format, wallets list must be an array.');\n                }\n                const wrongFormatWallets = walletsList.filter(wallet => !this.isCorrectWalletConfigDTO(wallet));\n                if (wrongFormatWallets.length) {\n                    logError(`Wallet(s) ${wrongFormatWallets\n                        .map(wallet => (wallet === null || wallet === void 0 ? void 0 : wallet.name) || 'unknown')\n                        .join(', ')} config format is wrong. They were removed from the wallets list.`);\n                    walletsList = walletsList.filter(wallet => this.isCorrectWalletConfigDTO(wallet));\n                }\n            }\n            catch (e) {\n                logError(e);\n                walletsList = FALLBACK_WALLETS_LIST;\n            }\n            let currentlyInjectedWallets = [];\n            try {\n                currentlyInjectedWallets = InjectedProvider.getCurrentlyInjectedWallets();\n            }\n            catch (e) {\n                logError(e);\n            }\n            return this.mergeWalletsLists(this.walletConfigDTOListToWalletConfigList(walletsList), currentlyInjectedWallets);\n        });\n    }\n    walletConfigDTOListToWalletConfigList(walletConfigDTO) {\n        return walletConfigDTO.map(walletConfigDTO => {\n            const walletConfig = {\n                name: walletConfigDTO.name,\n                appName: walletConfigDTO.app_name,\n                imageUrl: walletConfigDTO.image,\n                aboutUrl: walletConfigDTO.about_url,\n                tondns: walletConfigDTO.tondns,\n                platforms: walletConfigDTO.platforms,\n                features: walletConfigDTO.features\n            };\n            walletConfigDTO.bridge.forEach(bridge => {\n                if (bridge.type === 'sse') {\n                    walletConfig.bridgeUrl = bridge.url;\n                    walletConfig.universalLink =\n                        walletConfigDTO.universal_url;\n                    walletConfig.deepLink = walletConfigDTO.deepLink;\n                }\n                if (bridge.type === 'js') {\n                    const jsBridgeKey = bridge.key;\n                    walletConfig.jsBridgeKey = jsBridgeKey;\n                    walletConfig.injected =\n                        InjectedProvider.isWalletInjected(jsBridgeKey);\n                    walletConfig.embedded =\n                        InjectedProvider.isInsideWalletBrowser(jsBridgeKey);\n                }\n            });\n            return walletConfig;\n        });\n    }\n    mergeWalletsLists(list1, list2) {\n        const names = new Set(list1.concat(list2).map(item => item.name));\n        return [...names.values()].map(name => {\n            const list1Item = list1.find(item => item.name === name);\n            const list2Item = list2.find(item => item.name === name);\n            return Object.assign(Object.assign({}, (list1Item && Object.assign({}, list1Item))), (list2Item && Object.assign({}, list2Item)));\n        });\n    }\n    // eslint-disable-next-line complexity\n    isCorrectWalletConfigDTO(value) {\n        if (!value || !(typeof value === 'object')) {\n            return false;\n        }\n        const containsName = 'name' in value;\n        const containsAppName = 'app_name' in value;\n        const containsImage = 'image' in value;\n        const containsAbout = 'about_url' in value;\n        const containsPlatforms = 'platforms' in value;\n        if (!containsName ||\n            !containsImage ||\n            !containsAbout ||\n            !containsPlatforms ||\n            !containsAppName) {\n            return false;\n        }\n        if (!value.platforms ||\n            !Array.isArray(value.platforms) ||\n            !value.platforms.length) {\n            return false;\n        }\n        if (!('bridge' in value) ||\n            !Array.isArray(value.bridge) ||\n            !value.bridge.length) {\n            return false;\n        }\n        const bridge = value.bridge;\n        if (bridge.some(item => !item || typeof item !== 'object' || !('type' in item))) {\n            return false;\n        }\n        const sseBridge = bridge.find(item => item.type === 'sse');\n        if (sseBridge) {\n            if (!(typeof sseBridge === 'object' && 'url' in sseBridge) ||\n                !sseBridge.url ||\n                !value.universal_url) {\n                return false;\n            }\n        }\n        const jsBridge = bridge.find(item => item.type === 'js');\n        if (jsBridge) {\n            if (typeof jsBridge !== 'object' ||\n                !('key' in jsBridge) ||\n                !jsBridge.key) {\n                return false;\n            }\n        }\n        return true;\n    }\n}\n\nfunction checkSendTransactionSupport(features, options) {\n    const supportsDeprecatedSendTransactionFeature = features.includes('SendTransaction');\n    const sendTransactionFeature = findFeature(features, 'SendTransaction');\n    if (!supportsDeprecatedSendTransactionFeature && !sendTransactionFeature) {\n        throw new WalletNotSupportFeatureError(\"Wallet doesn't support SendTransaction feature.\");\n    }\n    if (options.requireExtraCurrencies) {\n        if (!sendTransactionFeature || !sendTransactionFeature.extraCurrencySupported) {\n            throw new WalletNotSupportFeatureError(`Wallet is not able to handle such SendTransaction request. Extra currencies support is required.`);\n        }\n    }\n    if (sendTransactionFeature && sendTransactionFeature.maxMessages !== undefined) {\n        if (sendTransactionFeature.maxMessages < options.requiredMessagesNumber) {\n            throw new WalletNotSupportFeatureError(`Wallet is not able to handle such SendTransaction request. Max support messages number is ${sendTransactionFeature.maxMessages}, but ${options.requiredMessagesNumber} is required.`);\n        }\n        return;\n    }\n    logWarning(\"Connected wallet didn't provide information about max allowed messages in the SendTransaction request. Request may be rejected by the wallet.\");\n}\nfunction checkRequiredWalletFeatures(features, walletsRequiredFeatures) {\n    if (typeof walletsRequiredFeatures !== 'object') {\n        return true;\n    }\n    const { sendTransaction } = walletsRequiredFeatures;\n    if (sendTransaction) {\n        const feature = findFeature(features, 'SendTransaction');\n        if (!feature) {\n            return false;\n        }\n        if (!checkSendTransaction(feature, sendTransaction)) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction findFeature(features, requiredFeatureName) {\n    return features.find(f => f && typeof f === 'object' && f.name === requiredFeatureName);\n}\nfunction checkSendTransaction(feature, requiredFeature) {\n    const correctMessagesNumber = requiredFeature.minMessages === undefined ||\n        requiredFeature.minMessages <= feature.maxMessages;\n    const correctExtraCurrency = !requiredFeature.extraCurrencyRequired || feature.extraCurrencySupported;\n    return !!(correctMessagesNumber && correctExtraCurrency);\n}\n\n/**\n * Create a request version event.\n */\nfunction createRequestVersionEvent() {\n    return {\n        type: 'request-version'\n    };\n}\n/**\n * Create a response version event.\n * @param version\n */\nfunction createResponseVersionEvent(version) {\n    return {\n        type: 'response-version',\n        version: version\n    };\n}\n/**\n * Create a version info.\n * @param version\n */\nfunction createVersionInfo(version) {\n    return {\n        ton_connect_sdk_lib: version.ton_connect_sdk_lib,\n        ton_connect_ui_lib: version.ton_connect_ui_lib\n    };\n}\nfunction createConnectionInfo(version, wallet) {\n    var _a, _b, _c, _d, _e, _f, _g, _h;\n    const isTonProof = ((_a = wallet === null || wallet === void 0 ? void 0 : wallet.connectItems) === null || _a === void 0 ? void 0 : _a.tonProof) && 'proof' in wallet.connectItems.tonProof;\n    const authType = isTonProof ? 'ton_proof' : 'ton_addr';\n    return {\n        wallet_address: (_c = (_b = wallet === null || wallet === void 0 ? void 0 : wallet.account) === null || _b === void 0 ? void 0 : _b.address) !== null && _c !== void 0 ? _c : null,\n        wallet_type: (_d = wallet === null || wallet === void 0 ? void 0 : wallet.device.appName) !== null && _d !== void 0 ? _d : null,\n        wallet_version: (_e = wallet === null || wallet === void 0 ? void 0 : wallet.device.appVersion) !== null && _e !== void 0 ? _e : null,\n        auth_type: authType,\n        custom_data: Object.assign({ chain_id: (_g = (_f = wallet === null || wallet === void 0 ? void 0 : wallet.account) === null || _f === void 0 ? void 0 : _f.chain) !== null && _g !== void 0 ? _g : null, provider: (_h = wallet === null || wallet === void 0 ? void 0 : wallet.provider) !== null && _h !== void 0 ? _h : null }, createVersionInfo(version))\n    };\n}\n/**\n * Create a connection init event.\n */\nfunction createConnectionStartedEvent(version) {\n    return {\n        type: 'connection-started',\n        custom_data: createVersionInfo(version)\n    };\n}\n/**\n * Create a connection completed event.\n * @param version\n * @param wallet\n */\nfunction createConnectionCompletedEvent(version, wallet) {\n    return Object.assign({ type: 'connection-completed', is_success: true }, createConnectionInfo(version, wallet));\n}\n/**\n * Create a connection error event.\n * @param version\n * @param error_message\n * @param errorCode\n */\nfunction createConnectionErrorEvent(version, error_message, errorCode) {\n    return {\n        type: 'connection-error',\n        is_success: false,\n        error_message: error_message,\n        error_code: errorCode !== null && errorCode !== void 0 ? errorCode : null,\n        custom_data: createVersionInfo(version)\n    };\n}\n/**\n * Create a connection restoring started event.\n */\nfunction createConnectionRestoringStartedEvent(version) {\n    return {\n        type: 'connection-restoring-started',\n        custom_data: createVersionInfo(version)\n    };\n}\n/**\n * Create a connection restoring completed event.\n * @param version\n * @param wallet\n */\nfunction createConnectionRestoringCompletedEvent(version, wallet) {\n    return Object.assign({ type: 'connection-restoring-completed', is_success: true }, createConnectionInfo(version, wallet));\n}\n/**\n * Create a connection restoring error event.\n * @param version\n * @param errorMessage\n */\nfunction createConnectionRestoringErrorEvent(version, errorMessage) {\n    return {\n        type: 'connection-restoring-error',\n        is_success: false,\n        error_message: errorMessage,\n        custom_data: createVersionInfo(version)\n    };\n}\nfunction createTransactionInfo(wallet, transaction) {\n    var _a, _b, _c, _d;\n    return {\n        valid_until: (_a = String(transaction.validUntil)) !== null && _a !== void 0 ? _a : null,\n        from: (_d = (_b = transaction.from) !== null && _b !== void 0 ? _b : (_c = wallet === null || wallet === void 0 ? void 0 : wallet.account) === null || _c === void 0 ? void 0 : _c.address) !== null && _d !== void 0 ? _d : null,\n        messages: transaction.messages.map(message => {\n            var _a, _b;\n            return ({\n                address: (_a = message.address) !== null && _a !== void 0 ? _a : null,\n                amount: (_b = message.amount) !== null && _b !== void 0 ? _b : null\n            });\n        })\n    };\n}\n/**\n * Create a transaction init event.\n * @param version\n * @param wallet\n * @param transaction\n */\nfunction createTransactionSentForSignatureEvent(version, wallet, transaction) {\n    return Object.assign(Object.assign({ type: 'transaction-sent-for-signature' }, createConnectionInfo(version, wallet)), createTransactionInfo(wallet, transaction));\n}\n/**\n * Create a transaction signed event.\n * @param version\n * @param wallet\n * @param transaction\n * @param signedTransaction\n */\nfunction createTransactionSignedEvent(version, wallet, transaction, signedTransaction) {\n    return Object.assign(Object.assign({ type: 'transaction-signed', is_success: true, signed_transaction: signedTransaction.boc }, createConnectionInfo(version, wallet)), createTransactionInfo(wallet, transaction));\n}\n/**\n * Create a transaction error event.\n * @param version\n * @param wallet\n * @param transaction\n * @param errorMessage\n * @param errorCode\n */\nfunction createTransactionSigningFailedEvent(version, wallet, transaction, errorMessage, errorCode) {\n    return Object.assign(Object.assign({ type: 'transaction-signing-failed', is_success: false, error_message: errorMessage, error_code: errorCode !== null && errorCode !== void 0 ? errorCode : null }, createConnectionInfo(version, wallet)), createTransactionInfo(wallet, transaction));\n}\n/**\n * Create a disconnect event.\n * @param version\n * @param wallet\n * @param scope\n * @returns\n */\nfunction createDisconnectionEvent(version, wallet, scope) {\n    return Object.assign({ type: 'disconnection', scope: scope }, createConnectionInfo(version, wallet));\n}\n\n/**\n * A concrete implementation of EventDispatcher that dispatches events to the browser window.\n */\nclass BrowserEventDispatcher {\n    constructor() {\n        /**\n         * The window object, possibly undefined in a server environment.\n         * @private\n         */\n        this.window = getWindow();\n    }\n    /**\n     * Dispatches an event with the given name and details to the browser window.\n     * @param eventName - The name of the event to dispatch.\n     * @param eventDetails - The details of the event to dispatch.\n     * @returns A promise that resolves when the event has been dispatched.\n     */\n    dispatchEvent(eventName, eventDetails) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            const event = new CustomEvent(eventName, { detail: eventDetails });\n            (_a = this.window) === null || _a === void 0 ? void 0 : _a.dispatchEvent(event);\n        });\n    }\n    /**\n     * Adds an event listener to the browser window.\n     * @param eventName - The name of the event to listen for.\n     * @param listener - The listener to add.\n     * @param options - The options for the listener.\n     * @returns A function that removes the listener.\n     */\n    addEventListener(eventName, listener, options) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            (_a = this.window) === null || _a === void 0 ? void 0 : _a.addEventListener(eventName, listener, options);\n            return () => {\n                var _a;\n                return (_a = this.window) === null || _a === void 0 ? void 0 : _a.removeEventListener(eventName, listener);\n            };\n        });\n    }\n}\n\n/**\n * Tracker for TonConnect user actions, such as transaction signing, connection, etc.\n *\n * List of events:\n *  * `connection-started`: when a user starts connecting a wallet.\n *  * `connection-completed`: when a user successfully connected a wallet.\n *  * `connection-error`: when a user cancels a connection or there is an error during the connection process.\n *  * `connection-restoring-started`: when the dApp starts restoring a connection.\n *  * `connection-restoring-completed`: when the dApp successfully restores a connection.\n *  * `connection-restoring-error`: when the dApp fails to restore a connection.\n *  * `disconnection`: when a user starts disconnecting a wallet.\n *  * `transaction-sent-for-signature`: when a user sends a transaction for signature.\n *  * `transaction-signed`: when a user successfully signs a transaction.\n *  * `transaction-signing-failed`: when a user cancels transaction signing or there is an error during the signing process.\n *\n * If you want to track user actions, you can subscribe to the window events with prefix `ton-connect-`:\n *\n * @example\n * window.addEventListener('ton-connect-transaction-sent-for-signature', (event) => {\n *    console.log('Transaction init', event.detail);\n * });\n *\n * @internal\n */\nclass TonConnectTracker {\n    constructor(options) {\n        var _a;\n        /**\n         * Event prefix for user actions.\n         * @private\n         */\n        this.eventPrefix = 'ton-connect-';\n        /**\n         * TonConnect UI version.\n         */\n        this.tonConnectUiVersion = null;\n        this.eventDispatcher = (_a = options === null || options === void 0 ? void 0 : options.eventDispatcher) !== null && _a !== void 0 ? _a : new BrowserEventDispatcher();\n        this.tonConnectSdkVersion = options.tonConnectSdkVersion;\n        this.init().catch();\n    }\n    /**\n     * Version of the library.\n     */\n    get version() {\n        return createVersionInfo({\n            ton_connect_sdk_lib: this.tonConnectSdkVersion,\n            ton_connect_ui_lib: this.tonConnectUiVersion\n        });\n    }\n    /**\n     * Called once when the tracker is created and request version other libraries.\n     */\n    init() {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                yield this.setRequestVersionHandler();\n                this.tonConnectUiVersion = yield this.requestTonConnectUiVersion();\n            }\n            catch (e) { }\n        });\n    }\n    /**\n     * Set request version handler.\n     * @private\n     */\n    setRequestVersionHandler() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.eventDispatcher.addEventListener('ton-connect-request-version', () => __awaiter(this, void 0, void 0, function* () {\n                yield this.eventDispatcher.dispatchEvent('ton-connect-response-version', createResponseVersionEvent(this.tonConnectSdkVersion));\n            }));\n        });\n    }\n    /**\n     * Request TonConnect UI version.\n     * @private\n     */\n    requestTonConnectUiVersion() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                try {\n                    yield this.eventDispatcher.addEventListener('ton-connect-ui-response-version', (event) => {\n                        resolve(event.detail.version);\n                    }, { once: true });\n                    yield this.eventDispatcher.dispatchEvent('ton-connect-ui-request-version', createRequestVersionEvent());\n                }\n                catch (e) {\n                    reject(e);\n                }\n            }));\n        });\n    }\n    /**\n     * Emit user action event to the window.\n     * @param eventDetails\n     * @private\n     */\n    dispatchUserActionEvent(eventDetails) {\n        try {\n            this.eventDispatcher\n                .dispatchEvent(`${this.eventPrefix}${eventDetails.type}`, eventDetails)\n                .catch();\n        }\n        catch (e) { }\n    }\n    /**\n     * Track connection init event.\n     * @param args\n     */\n    trackConnectionStarted(...args) {\n        try {\n            const event = createConnectionStartedEvent(this.version, ...args);\n            this.dispatchUserActionEvent(event);\n        }\n        catch (e) { }\n    }\n    /**\n     * Track connection success event.\n     * @param args\n     */\n    trackConnectionCompleted(...args) {\n        try {\n            const event = createConnectionCompletedEvent(this.version, ...args);\n            this.dispatchUserActionEvent(event);\n        }\n        catch (e) { }\n    }\n    /**\n     * Track connection error event.\n     * @param args\n     */\n    trackConnectionError(...args) {\n        try {\n            const event = createConnectionErrorEvent(this.version, ...args);\n            this.dispatchUserActionEvent(event);\n        }\n        catch (e) { }\n    }\n    /**\n     * Track connection restoring init event.\n     * @param args\n     */\n    trackConnectionRestoringStarted(...args) {\n        try {\n            const event = createConnectionRestoringStartedEvent(this.version, ...args);\n            this.dispatchUserActionEvent(event);\n        }\n        catch (e) { }\n    }\n    /**\n     * Track connection restoring success event.\n     * @param args\n     */\n    trackConnectionRestoringCompleted(...args) {\n        try {\n            const event = createConnectionRestoringCompletedEvent(this.version, ...args);\n            this.dispatchUserActionEvent(event);\n        }\n        catch (e) { }\n    }\n    /**\n     * Track connection restoring error event.\n     * @param args\n     */\n    trackConnectionRestoringError(...args) {\n        try {\n            const event = createConnectionRestoringErrorEvent(this.version, ...args);\n            this.dispatchUserActionEvent(event);\n        }\n        catch (e) { }\n    }\n    /**\n     * Track disconnect event.\n     * @param args\n     */\n    trackDisconnection(...args) {\n        try {\n            const event = createDisconnectionEvent(this.version, ...args);\n            this.dispatchUserActionEvent(event);\n        }\n        catch (e) { }\n    }\n    /**\n     * Track transaction init event.\n     * @param args\n     */\n    trackTransactionSentForSignature(...args) {\n        try {\n            const event = createTransactionSentForSignatureEvent(this.version, ...args);\n            this.dispatchUserActionEvent(event);\n        }\n        catch (e) { }\n    }\n    /**\n     * Track transaction signed event.\n     * @param args\n     */\n    trackTransactionSigned(...args) {\n        try {\n            const event = createTransactionSignedEvent(this.version, ...args);\n            this.dispatchUserActionEvent(event);\n        }\n        catch (e) { }\n    }\n    /**\n     * Track transaction error event.\n     * @param args\n     */\n    trackTransactionSigningFailed(...args) {\n        try {\n            const event = createTransactionSigningFailedEvent(this.version, ...args);\n            this.dispatchUserActionEvent(event);\n        }\n        catch (e) { }\n    }\n}\n\nconst tonConnectSdkVersion = \"3.1.0\";\n\nclass TonConnect {\n    constructor(options) {\n        this.walletsList = new WalletsListManager();\n        this._wallet = null;\n        this.provider = null;\n        this.statusChangeSubscriptions = [];\n        this.statusChangeErrorSubscriptions = [];\n        this.dappSettings = {\n            manifestUrl: (options === null || options === void 0 ? void 0 : options.manifestUrl) || getWebPageManifest(),\n            storage: (options === null || options === void 0 ? void 0 : options.storage) || new DefaultStorage()\n        };\n        this.walletsRequiredFeatures = options === null || options === void 0 ? void 0 : options.walletsRequiredFeatures;\n        this.walletsList = new WalletsListManager({\n            walletsListSource: options === null || options === void 0 ? void 0 : options.walletsListSource,\n            cacheTTLMs: options === null || options === void 0 ? void 0 : options.walletsListCacheTTLMs\n        });\n        this.tracker = new TonConnectTracker({\n            eventDispatcher: options === null || options === void 0 ? void 0 : options.eventDispatcher,\n            tonConnectSdkVersion: tonConnectSdkVersion\n        });\n        if (!this.dappSettings.manifestUrl) {\n            throw new DappMetadataError('Dapp tonconnect-manifest.json must be specified if window.location.origin is undefined. See more https://github.com/ton-connect/docs/blob/main/requests-responses.md#app-manifest');\n        }\n        this.bridgeConnectionStorage = new BridgeConnectionStorage(this.dappSettings.storage);\n        if (!(options === null || options === void 0 ? void 0 : options.disableAutoPauseConnection)) {\n            this.addWindowFocusAndBlurSubscriptions();\n        }\n    }\n    /**\n     * Returns available wallets list.\n     */\n    static getWallets() {\n        return this.walletsList.getWallets();\n    }\n    /**\n     * Shows if the wallet is connected right now.\n     */\n    get connected() {\n        return this._wallet !== null;\n    }\n    /**\n     * Current connected account or null if no account is connected.\n     */\n    get account() {\n        var _a;\n        return ((_a = this._wallet) === null || _a === void 0 ? void 0 : _a.account) || null;\n    }\n    /**\n     * Current connected wallet or null if no account is connected.\n     */\n    get wallet() {\n        return this._wallet;\n    }\n    set wallet(value) {\n        this._wallet = value;\n        this.statusChangeSubscriptions.forEach(callback => callback(this._wallet));\n    }\n    /**\n     * Returns available wallets list.\n     */\n    getWallets() {\n        return this.walletsList.getWallets();\n    }\n    /**\n     * Allows to subscribe to connection status changes and handle connection errors.\n     * @param callback will be called after connections status changes with actual wallet or null.\n     * @param errorsHandler (optional) will be called with some instance of TonConnectError when connect error is received.\n     * @returns unsubscribe callback.\n     */\n    onStatusChange(callback, errorsHandler) {\n        this.statusChangeSubscriptions.push(callback);\n        if (errorsHandler) {\n            this.statusChangeErrorSubscriptions.push(errorsHandler);\n        }\n        return () => {\n            this.statusChangeSubscriptions = this.statusChangeSubscriptions.filter(item => item !== callback);\n            if (errorsHandler) {\n                this.statusChangeErrorSubscriptions = this.statusChangeErrorSubscriptions.filter(item => item !== errorsHandler);\n            }\n        };\n    }\n    connect(wallet, requestOrOptions) {\n        var _a, _b;\n        // TODO: remove deprecated method\n        const options = {};\n        if (typeof requestOrOptions === 'object' && 'tonProof' in requestOrOptions) {\n            options.request = requestOrOptions;\n        }\n        if (typeof requestOrOptions === 'object' &&\n            ('openingDeadlineMS' in requestOrOptions ||\n                'signal' in requestOrOptions ||\n                'request' in requestOrOptions)) {\n            options.request = requestOrOptions === null || requestOrOptions === void 0 ? void 0 : requestOrOptions.request;\n            options.openingDeadlineMS = requestOrOptions === null || requestOrOptions === void 0 ? void 0 : requestOrOptions.openingDeadlineMS;\n            options.signal = requestOrOptions === null || requestOrOptions === void 0 ? void 0 : requestOrOptions.signal;\n        }\n        if (this.connected) {\n            throw new WalletAlreadyConnectedError();\n        }\n        const abortController = createAbortController(options === null || options === void 0 ? void 0 : options.signal);\n        (_a = this.abortController) === null || _a === void 0 ? void 0 : _a.abort();\n        this.abortController = abortController;\n        if (abortController.signal.aborted) {\n            throw new TonConnectError('Connection was aborted');\n        }\n        (_b = this.provider) === null || _b === void 0 ? void 0 : _b.closeConnection();\n        this.provider = this.createProvider(wallet);\n        abortController.signal.addEventListener('abort', () => {\n            var _a;\n            (_a = this.provider) === null || _a === void 0 ? void 0 : _a.closeConnection();\n            this.provider = null;\n        });\n        this.tracker.trackConnectionStarted();\n        return this.provider.connect(this.createConnectRequest(options === null || options === void 0 ? void 0 : options.request), {\n            openingDeadlineMS: options === null || options === void 0 ? void 0 : options.openingDeadlineMS,\n            signal: abortController.signal\n        });\n    }\n    /**\n     * Try to restore existing session and reconnect to the corresponding wallet. Call it immediately when your app is loaded.\n     */\n    restoreConnection(options) {\n        var _a, _b;\n        return __awaiter(this, void 0, void 0, function* () {\n            this.tracker.trackConnectionRestoringStarted();\n            const abortController = createAbortController(options === null || options === void 0 ? void 0 : options.signal);\n            (_a = this.abortController) === null || _a === void 0 ? void 0 : _a.abort();\n            this.abortController = abortController;\n            if (abortController.signal.aborted) {\n                this.tracker.trackConnectionRestoringError('Connection restoring was aborted');\n                return;\n            }\n            // TODO: potentially race condition here\n            const [bridgeConnectionType, embeddedWallet] = yield Promise.all([\n                this.bridgeConnectionStorage.storedConnectionType(),\n                this.walletsList.getEmbeddedWallet()\n            ]);\n            if (abortController.signal.aborted) {\n                this.tracker.trackConnectionRestoringError('Connection restoring was aborted');\n                return;\n            }\n            let provider = null;\n            try {\n                switch (bridgeConnectionType) {\n                    case 'http':\n                        provider = yield BridgeProvider.fromStorage(this.dappSettings.storage);\n                        break;\n                    case 'injected':\n                        provider = yield InjectedProvider.fromStorage(this.dappSettings.storage);\n                        break;\n                    default:\n                        if (embeddedWallet) {\n                            provider = this.createProvider(embeddedWallet);\n                        }\n                        else {\n                            return;\n                        }\n                }\n            }\n            catch (_c) {\n                this.tracker.trackConnectionRestoringError('Provider is not restored');\n                yield this.bridgeConnectionStorage.removeConnection();\n                provider === null || provider === void 0 ? void 0 : provider.closeConnection();\n                provider = null;\n                return;\n            }\n            if (abortController.signal.aborted) {\n                provider === null || provider === void 0 ? void 0 : provider.closeConnection();\n                this.tracker.trackConnectionRestoringError('Connection restoring was aborted');\n                return;\n            }\n            if (!provider) {\n                logError('Provider is not restored');\n                this.tracker.trackConnectionRestoringError('Provider is not restored');\n                return;\n            }\n            (_b = this.provider) === null || _b === void 0 ? void 0 : _b.closeConnection();\n            this.provider = provider;\n            provider.listen(this.walletEventsListener.bind(this));\n            const onAbortRestore = () => {\n                this.tracker.trackConnectionRestoringError('Connection restoring was aborted');\n                provider === null || provider === void 0 ? void 0 : provider.closeConnection();\n                provider = null;\n            };\n            abortController.signal.addEventListener('abort', onAbortRestore);\n            const restoreConnectionTask = callForSuccess((_options) => __awaiter(this, void 0, void 0, function* () {\n                yield (provider === null || provider === void 0 ? void 0 : provider.restoreConnection({\n                    openingDeadlineMS: options === null || options === void 0 ? void 0 : options.openingDeadlineMS,\n                    signal: _options.signal\n                }));\n                abortController.signal.removeEventListener('abort', onAbortRestore);\n                if (this.connected) {\n                    this.tracker.trackConnectionRestoringCompleted(this.wallet);\n                }\n                else {\n                    this.tracker.trackConnectionRestoringError('Connection restoring failed');\n                }\n            }), {\n                attempts: Number.MAX_SAFE_INTEGER,\n                delayMs: 2000,\n                signal: options === null || options === void 0 ? void 0 : options.signal\n            });\n            const restoreConnectionTimeout = new Promise(resolve => setTimeout(() => resolve(), 12000) // connection deadline\n            );\n            return Promise.race([restoreConnectionTask, restoreConnectionTimeout]);\n        });\n    }\n    sendTransaction(transaction, optionsOrOnRequestSent) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // TODO: remove deprecated method\n            const options = {};\n            if (typeof optionsOrOnRequestSent === 'function') {\n                options.onRequestSent = optionsOrOnRequestSent;\n            }\n            else {\n                options.onRequestSent = optionsOrOnRequestSent === null || optionsOrOnRequestSent === void 0 ? void 0 : optionsOrOnRequestSent.onRequestSent;\n                options.signal = optionsOrOnRequestSent === null || optionsOrOnRequestSent === void 0 ? void 0 : optionsOrOnRequestSent.signal;\n            }\n            const abortController = createAbortController(options === null || options === void 0 ? void 0 : options.signal);\n            if (abortController.signal.aborted) {\n                throw new TonConnectError('Transaction sending was aborted');\n            }\n            this.checkConnection();\n            const requiredMessagesNumber = transaction.messages.length;\n            const requireExtraCurrencies = transaction.messages.some(m => m.extraCurrency && Object.keys(m.extraCurrency).length > 0);\n            checkSendTransactionSupport(this.wallet.device.features, {\n                requiredMessagesNumber,\n                requireExtraCurrencies\n            });\n            this.tracker.trackTransactionSentForSignature(this.wallet, transaction);\n            const { validUntil, messages } = transaction, tx = __rest(transaction, [\"validUntil\", \"messages\"]);\n            const from = transaction.from || this.account.address;\n            const network = transaction.network || this.account.chain;\n            const response = yield this.provider.sendRequest(sendTransactionParser.convertToRpcRequest(Object.assign(Object.assign({}, tx), { from,\n                network, valid_until: validUntil, messages: messages.map((_a) => {\n                    var { extraCurrency } = _a, msg = __rest(_a, [\"extraCurrency\"]);\n                    return (Object.assign(Object.assign({}, msg), { extra_currency: extraCurrency }));\n                }) })), { onRequestSent: options.onRequestSent, signal: abortController.signal });\n            if (sendTransactionParser.isError(response)) {\n                this.tracker.trackTransactionSigningFailed(this.wallet, transaction, response.error.message, response.error.code);\n                return sendTransactionParser.parseAndThrowError(response);\n            }\n            const result = sendTransactionParser.convertFromRpcResponse(response);\n            this.tracker.trackTransactionSigned(this.wallet, transaction, result);\n            return result;\n        });\n    }\n    /**\n     * Disconnect form thw connected wallet and drop current session.\n     */\n    disconnect(options) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.connected) {\n                throw new WalletNotConnectedError();\n            }\n            const abortController = createAbortController(options === null || options === void 0 ? void 0 : options.signal);\n            const prevAbortController = this.abortController;\n            this.abortController = abortController;\n            if (abortController.signal.aborted) {\n                throw new TonConnectError('Disconnect was aborted');\n            }\n            this.onWalletDisconnected('dapp');\n            yield ((_a = this.provider) === null || _a === void 0 ? void 0 : _a.disconnect({\n                signal: abortController.signal\n            }));\n            prevAbortController === null || prevAbortController === void 0 ? void 0 : prevAbortController.abort();\n        });\n    }\n    /**\n     * Pause bridge HTTP connection. Might be helpful, if you want to pause connections while browser tab is unfocused,\n     * or if you use SDK with NodeJS and want to save server resources.\n     */\n    pauseConnection() {\n        var _a;\n        if (((_a = this.provider) === null || _a === void 0 ? void 0 : _a.type) !== 'http') {\n            return;\n        }\n        this.provider.pause();\n    }\n    /**\n     * Unpause bridge HTTP connection if it is paused.\n     */\n    unPauseConnection() {\n        var _a;\n        if (((_a = this.provider) === null || _a === void 0 ? void 0 : _a.type) !== 'http') {\n            return Promise.resolve();\n        }\n        return this.provider.unPause();\n    }\n    addWindowFocusAndBlurSubscriptions() {\n        const document = getDocument();\n        if (!document) {\n            return;\n        }\n        try {\n            document.addEventListener('visibilitychange', () => {\n                if (document.hidden) {\n                    this.pauseConnection();\n                }\n                else {\n                    this.unPauseConnection().catch();\n                }\n            });\n        }\n        catch (e) {\n            logError('Cannot subscribe to the document.visibilitychange: ', e);\n        }\n    }\n    createProvider(wallet) {\n        let provider;\n        if (!Array.isArray(wallet) && isWalletConnectionSourceJS(wallet)) {\n            provider = new InjectedProvider(this.dappSettings.storage, wallet.jsBridgeKey);\n        }\n        else {\n            provider = new BridgeProvider(this.dappSettings.storage, wallet);\n        }\n        provider.listen(this.walletEventsListener.bind(this));\n        return provider;\n    }\n    walletEventsListener(e) {\n        switch (e.event) {\n            case 'connect':\n                this.onWalletConnected(e.payload);\n                break;\n            case 'connect_error':\n                this.tracker.trackConnectionError(e.payload.message, e.payload.code);\n                const walletError = connectErrorsParser.parseError(e.payload);\n                this.onWalletConnectError(walletError);\n                break;\n            case 'disconnect':\n                this.onWalletDisconnected('wallet');\n        }\n    }\n    onWalletConnected(connectEvent) {\n        var _a;\n        const tonAccountItem = connectEvent.items.find(item => item.name === 'ton_addr');\n        const tonProofItem = connectEvent.items.find(item => item.name === 'ton_proof');\n        if (!tonAccountItem) {\n            throw new TonConnectError('ton_addr connection item was not found');\n        }\n        const hasRequiredFeatures = checkRequiredWalletFeatures(connectEvent.device.features, this.walletsRequiredFeatures);\n        if (!hasRequiredFeatures) {\n            (_a = this.provider) === null || _a === void 0 ? void 0 : _a.disconnect();\n            this.onWalletConnectError(new WalletMissingRequiredFeaturesError('Wallet does not support required features', { cause: { connectEvent } }));\n            return;\n        }\n        const wallet = {\n            device: connectEvent.device,\n            provider: this.provider.type,\n            account: {\n                address: tonAccountItem.address,\n                chain: tonAccountItem.network,\n                walletStateInit: tonAccountItem.walletStateInit,\n                publicKey: tonAccountItem.publicKey\n            }\n        };\n        if (tonProofItem) {\n            wallet.connectItems = {\n                tonProof: tonProofItem\n            };\n        }\n        this.wallet = wallet;\n        this.tracker.trackConnectionCompleted(wallet);\n    }\n    onWalletConnectError(error) {\n        this.statusChangeErrorSubscriptions.forEach(errorsHandler => errorsHandler(error));\n        logDebug(error);\n        if (error instanceof ManifestNotFoundError || error instanceof ManifestContentErrorError) {\n            logError(error);\n            throw error;\n        }\n    }\n    onWalletDisconnected(scope) {\n        this.tracker.trackDisconnection(this.wallet, scope);\n        this.wallet = null;\n    }\n    checkConnection() {\n        if (!this.connected) {\n            throw new WalletNotConnectedError();\n        }\n    }\n    createConnectRequest(request) {\n        const items = [\n            {\n                name: 'ton_addr'\n            }\n        ];\n        if (request === null || request === void 0 ? void 0 : request.tonProof) {\n            items.push({\n                name: 'ton_proof',\n                payload: request.tonProof\n            });\n        }\n        return {\n            manifestUrl: this.dappSettings.manifestUrl,\n            items\n        };\n    }\n}\nTonConnect.walletsList = new WalletsListManager();\n/**\n * Check if specified wallet is injected and available to use with the app.\n * @param walletJSKey target wallet's js bridge key.\n */\nTonConnect.isWalletInjected = (walletJSKey) => InjectedProvider.isWalletInjected(walletJSKey);\n/**\n * Check if the app is opened inside specified wallet's browser.\n * @param walletJSKey target wallet's js bridge key.\n */\nTonConnect.isInsideWalletBrowser = (walletJSKey) => InjectedProvider.isInsideWalletBrowser(walletJSKey);\n\nconst noBounceableTag = 0x51;\nconst testOnlyTag = 0x80;\n/**\n * Converts raw TON address to no-bounceable user-friendly format. [See details]{@link https://ton.org/docs/learn/overviews/addresses#user-friendly-address}\n * @param hexAddress raw TON address formatted as \"0:<hex string without 0x>\".\n * @param [testOnly=false] convert address to test-only form. [See details]{@link https://ton.org/docs/learn/overviews/addresses#user-friendly-address}\n */\nfunction toUserFriendlyAddress(hexAddress, testOnly = false) {\n    const { wc, hex } = parseHexAddress(hexAddress);\n    let tag = noBounceableTag;\n    if (testOnly) {\n        tag |= testOnlyTag;\n    }\n    const addr = new Int8Array(34);\n    addr[0] = tag;\n    addr[1] = wc;\n    addr.set(hex, 2);\n    const addressWithChecksum = new Uint8Array(36);\n    addressWithChecksum.set(addr);\n    addressWithChecksum.set(crc16(addr), 34);\n    let addressBase64 = _tonconnect_protocol__WEBPACK_IMPORTED_MODULE_0__.Base64.encode(addressWithChecksum);\n    return addressBase64.replace(/\\+/g, '-').replace(/\\//g, '_');\n}\nfunction parseHexAddress(hexAddress) {\n    if (!hexAddress.includes(':')) {\n        throw new WrongAddressError(`Wrong address ${hexAddress}. Address must include \":\".`);\n    }\n    const parts = hexAddress.split(':');\n    if (parts.length !== 2) {\n        throw new WrongAddressError(`Wrong address ${hexAddress}. Address must include \":\" only once.`);\n    }\n    const wc = parseInt(parts[0]);\n    if (wc !== 0 && wc !== -1) {\n        throw new WrongAddressError(`Wrong address ${hexAddress}. WC must be eq 0 or -1, but ${wc} received.`);\n    }\n    const hex = parts[1];\n    if ((hex === null || hex === void 0 ? void 0 : hex.length) !== 64) {\n        throw new WrongAddressError(`Wrong address ${hexAddress}. Hex part must be 64bytes length, but ${hex === null || hex === void 0 ? void 0 : hex.length} received.`);\n    }\n    return {\n        wc,\n        hex: hexToBytes(hex)\n    };\n}\nfunction crc16(data) {\n    const poly = 0x1021;\n    let reg = 0;\n    const message = new Uint8Array(data.length + 2);\n    message.set(data);\n    for (let byte of message) {\n        let mask = 0x80;\n        while (mask > 0) {\n            reg <<= 1;\n            if (byte & mask) {\n                reg += 1;\n            }\n            mask >>= 1;\n            if (reg > 0xffff) {\n                reg &= 0xffff;\n                reg ^= poly;\n            }\n        }\n    }\n    return new Uint8Array([Math.floor(reg / 256), reg % 256]);\n}\nconst toByteMap = {};\nfor (let ord = 0; ord <= 0xff; ord++) {\n    let s = ord.toString(16);\n    if (s.length < 2) {\n        s = '0' + s;\n    }\n    toByteMap[s] = ord;\n}\nfunction hexToBytes(hex) {\n    hex = hex.toLowerCase();\n    const length2 = hex.length;\n    if (length2 % 2 !== 0) {\n        throw new ParseHexError('Hex string must have length a multiple of 2: ' + hex);\n    }\n    const length = length2 / 2;\n    const result = new Uint8Array(length);\n    for (let i = 0; i < length; i++) {\n        const doubled = i * 2;\n        const hexSubstring = hex.substring(doubled, doubled + 2);\n        if (!toByteMap.hasOwnProperty(hexSubstring)) {\n            throw new ParseHexError('Invalid hex character: ' + hexSubstring);\n        }\n        result[i] = toByteMap[hexSubstring];\n    }\n    return result;\n}\n\n\n//# sourceMappingURL=index.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHRvbmNvbm5lY3Qvc2RrL2xpYi9lc20vaW5kZXgubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQXNJO0FBQ047QUFDcEY7QUFDTjs7QUFFdEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZEQUE2RCxjQUFjO0FBQzNFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNEJBQTRCLCtEQUErRCxpQkFBaUI7QUFDNUc7QUFDQSxvQ0FBb0MsTUFBTSwrQkFBK0IsWUFBWTtBQUNyRixtQ0FBbUMsTUFBTSxtQ0FBbUMsWUFBWTtBQUN4RixnQ0FBZ0M7QUFDaEM7QUFDQSxLQUFLO0FBQ0w7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMEJBQTBCLHdCQUF3QixFQUFFLHNCQUFzQixFQUFFLGtDQUFrQyxFQUFFLDhCQUE4QjtBQUM5STtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsS0FBSywyRUFBeUI7QUFDOUIsS0FBSywyRUFBeUI7QUFDOUIsS0FBSywyRUFBeUI7QUFDOUIsS0FBSywyRUFBeUI7QUFDOUIsS0FBSywyRUFBeUI7QUFDOUIsS0FBSywyRUFBeUI7QUFDOUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsS0FBSyw4RUFBNEI7QUFDakMsS0FBSyw4RUFBNEI7QUFDakMsS0FBSyw4RUFBNEI7QUFDakMs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Q0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYixTQUFTLEtBQUssMERBQTBEO0FBQ3hFLEtBQUs7QUFDTDs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMENBQTBDLCtEQUFhO0FBQ3ZEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQ0FBbUMsK0RBQWE7QUFDaEQ7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpREFBaUQseUNBQXlDO0FBQzFGLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtDQUFrQywrREFBYTtBQUMvQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQixhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FB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O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckI7QUFDQSxhQUFhO0FBQ2IsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0ZBQW9GLGNBQWMsSUFBSTtBQUN0RyxrRkFBa0YsY0FBYyxJQUFJO0FBQ3BHO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdGQUFnRixnQkFBZ0I7QUFDaEc7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFD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LGFBQWE7QUFDYixTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQixJQUFJLFlBQVk7QUFDckM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYixTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0NBQWtDLGlCQUFpQixFQUFFLGtCQUFrQjtBQUN2RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNB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QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFMGdDO0FBQzFnQyIsInNvdXJjZXMiOlsid2VicGFjazovL25leHRqcy10ZW1wbGF0ZS8uL25vZGVfbW9kdWxlcy9AdG9uY29ubmVjdC9zZGsvbGliL2VzbS9pbmRleC5tanM/YmI1NiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDT05ORUNUX0VWRU5UX0VSUk9SX0NPREVTLCBTRU5EX1RSQU5TQUNUSU9OX0VSUk9SX0NPREVTLCBCYXNlNjQsIFNlc3Npb25DcnlwdG8sIGhleFRvQnl0ZUFycmF5IH0gZnJvbSAnQHRvbmNvbm5lY3QvcHJvdG9jb2wnO1xuZXhwb3J0IHsgQ0hBSU4sIENPTk5FQ1RfRVZFTlRfRVJST1JfQ09ERVMsIENPTk5FQ1RfSVRFTV9FUlJPUl9DT0RFUywgU0VORF9UUkFOU0FDVElPTl9FUlJPUl9DT0RFUyB9IGZyb20gJ0B0b25jb25uZWN0L3Byb3RvY29sJztcbmltcG9ydCAnQHRvbmNvbm5lY3QvaXNvbW9ycGhpYy1ldmVudHNvdXJjZSc7XG5pbXBvcnQgJ0B0b25jb25uZWN0L2lzb21vcnBoaWMtZmV0Y2gnO1xuXG4vKiEgKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKipcclxuQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uXHJcblxyXG5QZXJtaXNzaW9uIHRvIHVzZSwgY29weSwgbW9kaWZ5LCBhbmQvb3IgZGlzdHJpYnV0ZSB0aGlzIHNvZnR3YXJlIGZvciBhbnlcclxucHVycG9zZSB3aXRoIG9yIHdpdGhvdXQgZmVlIGlzIGhlcmVieSBncmFudGVkLlxyXG5cclxuVEhFIFNPRlRXQVJFIElTIFBST1ZJREVEIFwiQVMgSVNcIiBBTkQgVEhFIEFVVEhPUiBESVNDTEFJTVMgQUxMIFdBUlJBTlRJRVMgV0lUSFxyXG5SRUdBUkQgVE8gVEhJUyBTT0ZUV0FSRSBJTkNMVURJTkcgQUxMIElNUExJRUQgV0FSUkFOVElFUyBPRiBNRVJDSEFOVEFCSUxJVFlcclxuQU5EIEZJVE5FU1MuIElOIE5PIEVWRU5UIFNIQUxMIFRIRSBBVVRIT1IgQkUgTElBQkxFIEZPUiBBTlkgU1BFQ0lBTCwgRElSRUNULFxyXG5JTkRJUkVDVCwgT1IgQ09OU0VRVUVOVElBTCBEQU1BR0VTIE9SIEFOWSBEQU1BR0VTIFdIQVRTT0VWRVIgUkVTVUxUSU5HIEZST01cclxuTE9TUyBPRiBVU0UsIERBVEEgT1IgUFJPRklUUywgV0hFVEhFUiBJTiBBTiBBQ1RJT04gT0YgQ09OVFJBQ1QsIE5FR0xJR0VOQ0UgT1JcclxuT1RIRVIgVE9SVElPVVMgQUNUSU9OLCBBUklTSU5HIE9VVCBPRiBPUiBJTiBDT05ORUNUSU9OIFdJVEggVEhFIFVTRSBPUlxyXG5QRVJGT1JNQU5DRSBPRiBUSElTIFNPRlRXQVJFLlxyXG4qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiAqL1xyXG5cclxuZnVuY3Rpb24gX19yZXN0KHMsIGUpIHtcclxuICAgIHZhciB0ID0ge307XHJcbiAgICBmb3IgKHZhciBwIGluIHMpIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwocywgcCkgJiYgZS5pbmRleE9mKHApIDwgMClcclxuICAgICAgICB0W3BdID0gc1twXTtcclxuICAgIGlmIChzICE9IG51bGwgJiYgdHlwZW9mIE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMgPT09IFwiZnVuY3Rpb25cIilcclxuICAgICAgICBmb3IgKHZhciBpID0gMCwgcCA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMocyk7IGkgPCBwLmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgICAgICAgIGlmIChlLmluZGV4T2YocFtpXSkgPCAwICYmIE9iamVjdC5wcm90b3R5cGUucHJvcGVydHlJc0VudW1lcmFibGUuY2FsbChzLCBwW2ldKSlcclxuICAgICAgICAgICAgICAgIHRbcFtpXV0gPSBzW3BbaV1dO1xyXG4gICAgICAgIH1cclxuICAgIHJldHVybiB0O1xyXG59XHJcblxyXG5mdW5jdGlvbiBfX2F3YWl0ZXIodGhpc0FyZywgX2FyZ3VtZW50cywgUCwgZ2VuZXJhdG9yKSB7XHJcbiAgICBmdW5jdGlvbiBhZG9wdCh2YWx1ZSkgeyByZXR1cm4gdmFsdWUgaW5zdGFuY2VvZiBQID8gdmFsdWUgOiBuZXcgUChmdW5jdGlvbiAocmVzb2x2ZSkgeyByZXNvbHZlKHZhbHVlKTsgfSk7IH1cclxuICAgIHJldHVybiBuZXcgKFAgfHwgKFAgPSBQcm9taXNlKSkoZnVuY3Rpb24gKHJlc29sdmUsIHJlamVjdCkge1xyXG4gICAgICAgIGZ1bmN0aW9uIGZ1bGZpbGxlZCh2YWx1ZSkgeyB0cnkgeyBzdGVwKGdlbmVyYXRvci5uZXh0KHZhbHVlKSk7IH0gY2F0Y2ggKGUpIHsgcmVqZWN0KGUpOyB9IH1cclxuICAgICAgICBmdW5jdGlvbiByZWplY3RlZCh2YWx1ZSkgeyB0cnkgeyBzdGVwKGdlbmVyYXRvcltcInRocm93XCJdKHZhbHVlKSk7IH0gY2F0Y2ggKGUpIHsgcmVqZWN0KGUpOyB9IH1cclxuICAgICAgICBmdW5jdGlvbiBzdGVwKHJlc3VsdCkgeyByZXN1bHQuZG9uZSA/IHJlc29sdmUocmVzdWx0LnZhbHVlKSA6IGFkb3B0KHJlc3VsdC52YWx1ZSkudGhlbihmdWxmaWxsZWQsIHJlamVjdGVkKTsgfVxyXG4gICAgICAgIHN0ZXAoKGdlbmVyYXRvciA9IGdlbmVyYXRvci5hcHBseSh0aGlzQXJnLCBfYXJndW1lbnRzIHx8IFtdKSkubmV4dCgpKTtcclxuICAgIH0pO1xyXG59XG5cbi8qKlxuICogQmFzZSBjbGFzcyBmb3IgVG9uQ29ubmVjdCBlcnJvcnMuIFlvdSBjYW4gY2hlY2sgaWYgdGhlIGVycm9yIHdhcyB0cmlnZ2VyZWQgYnkgdGhlIEB0b25jb25uZWN0L3NkayB1c2luZyBgZXJyIGluc3RhbmNlb2YgVG9uQ29ubmVjdEVycm9yYC5cbiAqL1xuY2xhc3MgVG9uQ29ubmVjdEVycm9yIGV4dGVuZHMgRXJyb3Ige1xuICAgIGNvbnN0cnVjdG9yKG1lc3NhZ2UsIG9wdGlvbnMpIHtcbiAgICAgICAgc3VwZXIobWVzc2FnZSwgb3B0aW9ucyk7XG4gICAgICAgIHRoaXMubWVzc2FnZSA9IGAke1RvbkNvbm5lY3RFcnJvci5wcmVmaXh9ICR7dGhpcy5jb25zdHJ1Y3Rvci5uYW1lfSR7dGhpcy5pbmZvID8gJzogJyArIHRoaXMuaW5mbyA6ICcnfSR7bWVzc2FnZSA/ICdcXG4nICsgbWVzc2FnZSA6ICcnfWA7XG4gICAgICAgIE9iamVjdC5zZXRQcm90b3R5cGVPZih0aGlzLCBUb25Db25uZWN0RXJyb3IucHJvdG90eXBlKTtcbiAgICB9XG4gICAgZ2V0IGluZm8oKSB7XG4gICAgICAgIHJldHVybiAnJztcbiAgICB9XG59XG5Ub25Db25uZWN0RXJyb3IucHJlZml4ID0gJ1tUT05fQ09OTkVDVF9TREtfRVJST1JdJztcblxuLyoqXG4gKiBUaHJvd24gd2hlbiBwYXNzZWQgRGFwcE1ldGFkYXRhIGlzIGluIGluY29ycmVjdCBmb3JtYXQuXG4gKi9cbmNsYXNzIERhcHBNZXRhZGF0YUVycm9yIGV4dGVuZHMgVG9uQ29ubmVjdEVycm9yIHtcbiAgICBnZXQgaW5mbygpIHtcbiAgICAgICAgcmV0dXJuICdQYXNzZWQgRGFwcE1ldGFkYXRhIGlzIGluIGluY29ycmVjdCBmb3JtYXQuJztcbiAgICB9XG4gICAgY29uc3RydWN0b3IoLi4uYXJncykge1xuICAgICAgICBzdXBlciguLi5hcmdzKTtcbiAgICAgICAgT2JqZWN0LnNldFByb3RvdHlwZU9mKHRoaXMsIERhcHBNZXRhZGF0YUVycm9yLnByb3RvdHlwZSk7XG4gICAgfVxufVxuXG4vKipcbiAqIFRocm93biB3aGVuIHBhc3NlZCBtYW5pZmVzdCBjb250YWlucyBlcnJvcnMuXG4gKi9cbmNsYXNzIE1hbmlmZXN0Q29udGVudEVycm9yRXJyb3IgZXh0ZW5kcyBUb25Db25uZWN0RXJyb3Ige1xuICAgIGdldCBpbmZvKCkge1xuICAgICAgICByZXR1cm4gJ1Bhc3NlZCBgdG9uY29ubmVjdC1tYW5pZmVzdC5qc29uYCBjb250YWlucyBlcnJvcnMuIENoZWNrIGZvcm1hdCBvZiB5b3VyIG1hbmlmZXN0LiBTZWUgbW9yZSBodHRwczovL2dpdGh1Yi5jb20vdG9uLWNvbm5lY3QvZG9jcy9ibG9iL21haW4vcmVxdWVzdHMtcmVzcG9uc2VzLm1kI2FwcC1tYW5pZmVzdCc7XG4gICAgfVxuICAgIGNvbnN0cnVjdG9yKC4uLmFyZ3MpIHtcbiAgICAgICAgc3VwZXIoLi4uYXJncyk7XG4gICAgICAgIE9iamVjdC5zZXRQcm90b3R5cGVPZih0aGlzLCBNYW5pZmVzdENvbnRlbnRFcnJvckVycm9yLnByb3RvdHlwZSk7XG4gICAgfVxufVxuXG4vKipcbiAqIFRocm93biB3aGVuIHdhbGxldCBjYW4ndCBnZXQgbWFuaWZlc3QgYnkgcGFzc2VkIG1hbmlmZXN0VXJsLlxuICovXG5jbGFzcyBNYW5pZmVzdE5vdEZvdW5kRXJyb3IgZXh0ZW5kcyBUb25Db25uZWN0RXJyb3Ige1xuICAgIGdldCBpbmZvKCkge1xuICAgICAgICByZXR1cm4gJ01hbmlmZXN0IG5vdCBmb3VuZC4gTWFrZSBzdXJlIHlvdSBhZGRlZCBgdG9uY29ubmVjdC1tYW5pZmVzdC5qc29uYCB0byB0aGUgcm9vdCBvZiB5b3VyIGFwcCBvciBwYXNzZWQgY29ycmVjdCBtYW5pZmVzdFVybC4gU2VlIG1vcmUgaHR0cHM6Ly9naXRodWIuY29tL3Rvbi1jb25uZWN0L2RvY3MvYmxvYi9tYWluL3JlcXVlc3RzLXJlc3BvbnNlcy5tZCNhcHAtbWFuaWZlc3QnO1xuICAgIH1cbiAgICBjb25zdHJ1Y3RvciguLi5hcmdzKSB7XG4gICAgICAgIHN1cGVyKC4uLmFyZ3MpO1xuICAgICAgICBPYmplY3Quc2V0UHJvdG90eXBlT2YodGhpcywgTWFuaWZlc3ROb3RGb3VuZEVycm9yLnByb3RvdHlwZSk7XG4gICAgfVxufVxuXG4vKipcbiAqIFRocm93biB3aGVuIHdhbGxldCBjb25uZWN0aW9uIGNhbGxlZCBidXQgd2FsbGV0IGFscmVhZHkgY29ubmVjdGVkLiBUbyBhdm9pZCB0aGUgZXJyb3IsIGRpc2Nvbm5lY3QgdGhlIHdhbGxldCBiZWZvcmUgZG9pbmcgYSBuZXcgY29ubmVjdGlvbi5cbiAqL1xuY2xhc3MgV2FsbGV0QWxyZWFkeUNvbm5lY3RlZEVycm9yIGV4dGVuZHMgVG9uQ29ubmVjdEVycm9yIHtcbiAgICBnZXQgaW5mbygpIHtcbiAgICAgICAgcmV0dXJuICdXYWxsZXQgY29ubmVjdGlvbiBjYWxsZWQgYnV0IHdhbGxldCBhbHJlYWR5IGNvbm5lY3RlZC4gVG8gYXZvaWQgdGhlIGVycm9yLCBkaXNjb25uZWN0IHRoZSB3YWxsZXQgYmVmb3JlIGRvaW5nIGEgbmV3IGNvbm5lY3Rpb24uJztcbiAgICB9XG4gICAgY29uc3RydWN0b3IoLi4uYXJncykge1xuICAgICAgICBzdXBlciguLi5hcmdzKTtcbiAgICAgICAgT2JqZWN0LnNldFByb3RvdHlwZU9mKHRoaXMsIFdhbGxldEFscmVhZHlDb25uZWN0ZWRFcnJvci5wcm90b3R5cGUpO1xuICAgIH1cbn1cblxuLyoqXG4gKiBUaHJvd24gd2hlbiBzZW5kIHRyYW5zYWN0aW9uIG9yIG90aGVyIHByb3RvY29sIG1ldGhvZHMgY2FsbGVkIHdoaWxlIHdhbGxldCBpcyBub3QgY29ubmVjdGVkLlxuICovXG5jbGFzcyBXYWxsZXROb3RDb25uZWN0ZWRFcnJvciBleHRlbmRzIFRvbkNvbm5lY3RFcnJvciB7XG4gICAgZ2V0IGluZm8oKSB7XG4gICAgICAgIHJldHVybiAnU2VuZCB0cmFuc2FjdGlvbiBvciBvdGhlciBwcm90b2NvbCBtZXRob2RzIGNhbGxlZCB3aGlsZSB3YWxsZXQgaXMgbm90IGNvbm5lY3RlZC4nO1xuICAgIH1cbiAgICBjb25zdHJ1Y3RvciguLi5hcmdzKSB7XG4gICAgICAgIHN1cGVyKC4uLmFyZ3MpO1xuICAgICAgICBPYmplY3Quc2V0UHJvdG90eXBlT2YodGhpcywgV2FsbGV0Tm90Q29ubmVjdGVkRXJyb3IucHJvdG90eXBlKTtcbiAgICB9XG59XG5cbi8qKlxuICogVGhyb3duIHdoZW4gdGhlcmUgaXMgYW4gYXR0ZW1wdCB0byBjb25uZWN0IHRvIHRoZSBpbmplY3RlZCB3YWxsZXQgd2hpbGUgaXQgaXMgbm90IGV4aXN0cyBpbiB0aGUgd2VicGFnZS5cbiAqL1xuY2xhc3MgV2FsbGV0Tm90SW5qZWN0ZWRFcnJvciBleHRlbmRzIFRvbkNvbm5lY3RFcnJvciB7XG4gICAgZ2V0IGluZm8oKSB7XG4gICAgICAgIHJldHVybiAnVGhlcmUgaXMgYW4gYXR0ZW1wdCB0byBjb25uZWN0IHRvIHRoZSBpbmplY3RlZCB3YWxsZXQgd2hpbGUgaXQgaXMgbm90IGV4aXN0cyBpbiB0aGUgd2VicGFnZS4nO1xuICAgIH1cbiAgICBjb25zdHJ1Y3RvciguLi5hcmdzKSB7XG4gICAgICAgIHN1cGVyKC4uLmFyZ3MpO1xuICAgICAgICBPYmplY3Quc2V0UHJvdG90eXBlT2YodGhpcywgV2FsbGV0Tm90SW5qZWN0ZWRFcnJvci5wcm90b3R5cGUpO1xuICAgIH1cbn1cblxuLyoqXG4gKiBUaHJvd24gd2hlbiB3YWxsZXQgZG9lc24ndCBzdXBwb3J0IHJlcXVlc3RlZCBmZWF0dXJlIG1ldGhvZC5cbiAqL1xuY2xhc3MgV2FsbGV0Tm90U3VwcG9ydEZlYXR1cmVFcnJvciBleHRlbmRzIFRvbkNvbm5lY3RFcnJvciB7XG4gICAgZ2V0IGluZm8oKSB7XG4gICAgICAgIHJldHVybiBcIldhbGxldCBkb2Vzbid0IHN1cHBvcnQgcmVxdWVzdGVkIGZlYXR1cmUgbWV0aG9kLlwiO1xuICAgIH1cbiAgICBjb25zdHJ1Y3RvciguLi5hcmdzKSB7XG4gICAgICAgIHN1cGVyKC4uLmFyZ3MpO1xuICAgICAgICBPYmplY3Quc2V0UHJvdG90eXBlT2YodGhpcywgV2FsbGV0Tm90U3VwcG9ydEZlYXR1cmVFcnJvci5wcm90b3R5cGUpO1xuICAgIH1cbn1cblxuLyoqXG4gKiBUaHJvd24gd2hlbiB3YWxsZXQgY2FuJ3QgZ2V0IG1hbmlmZXN0IGJ5IHBhc3NlZCBtYW5pZmVzdFVybC5cbiAqL1xuY2xhc3MgV2FsbGV0TWlzc2luZ1JlcXVpcmVkRmVhdHVyZXNFcnJvciBleHRlbmRzIFRvbkNvbm5lY3RFcnJvciB7XG4gICAgZ2V0IGluZm8oKSB7XG4gICAgICAgIHJldHVybiAnTWlzc2luZyByZXF1aXJlZCBmZWF0dXJlcy4gWW91IG5lZWQgdG8gdXBkYXRlIHlvdXIgd2FsbGV0Lic7XG4gICAgfVxuICAgIGNvbnN0cnVjdG9yKG1lc3NhZ2UsIG9wdGlvbnMpIHtcbiAgICAgICAgc3VwZXIobWVzc2FnZSwgb3B0aW9ucyk7XG4gICAgICAgIE9iamVjdC5zZXRQcm90b3R5cGVPZih0aGlzLCBXYWxsZXRNaXNzaW5nUmVxdWlyZWRGZWF0dXJlc0Vycm9yLnByb3RvdHlwZSk7XG4gICAgfVxufVxuXG5mdW5jdGlvbiBpc1dhbGxldENvbm5lY3Rpb25Tb3VyY2VKUyh2YWx1ZSkge1xuICAgIHJldHVybiAnanNCcmlkZ2VLZXknIGluIHZhbHVlO1xufVxuXG4vKipcbiAqIFRocm93biB3aGVuIHVzZXIgcmVqZWN0cyB0aGUgYWN0aW9uIGluIHRoZSB3YWxsZXQuXG4gKi9cbmNsYXNzIFVzZXJSZWplY3RzRXJyb3IgZXh0ZW5kcyBUb25Db25uZWN0RXJyb3Ige1xuICAgIGdldCBpbmZvKCkge1xuICAgICAgICByZXR1cm4gJ1VzZXIgcmVqZWN0cyB0aGUgYWN0aW9uIGluIHRoZSB3YWxsZXQuJztcbiAgICB9XG4gICAgY29uc3RydWN0b3IoLi4uYXJncykge1xuICAgICAgICBzdXBlciguLi5hcmdzKTtcbiAgICAgICAgT2JqZWN0LnNldFByb3RvdHlwZU9mKHRoaXMsIFVzZXJSZWplY3RzRXJyb3IucHJvdG90eXBlKTtcbiAgICB9XG59XG5cbi8qKlxuICogVGhyb3duIHdoZW4gcmVxdWVzdCB0byB0aGUgd2FsbGV0IGNvbnRhaW5zIGVycm9ycy5cbiAqL1xuY2xhc3MgQmFkUmVxdWVzdEVycm9yIGV4dGVuZHMgVG9uQ29ubmVjdEVycm9yIHtcbiAgICBnZXQgaW5mbygpIHtcbiAgICAgICAgcmV0dXJuICdSZXF1ZXN0IHRvIHRoZSB3YWxsZXQgY29udGFpbnMgZXJyb3JzLic7XG4gICAgfVxuICAgIGNvbnN0cnVjdG9yKC4uLmFyZ3MpIHtcbiAgICAgICAgc3VwZXIoLi4uYXJncyk7XG4gICAgICAgIE9iamVjdC5zZXRQcm90b3R5cGVPZih0aGlzLCBCYWRSZXF1ZXN0RXJyb3IucHJvdG90eXBlKTtcbiAgICB9XG59XG5cbi8qKlxuICogVGhyb3duIHdoZW4gYXBwIHRyaWVzIHRvIHNlbmQgcnBjIHJlcXVlc3QgdG8gdGhlIGluamVjdGVkIHdhbGxldCB3aGlsZSBub3QgY29ubmVjdGVkLlxuICovXG5jbGFzcyBVbmtub3duQXBwRXJyb3IgZXh0ZW5kcyBUb25Db25uZWN0RXJyb3Ige1xuICAgIGdldCBpbmZvKCkge1xuICAgICAgICByZXR1cm4gJ0FwcCB0cmllcyB0byBzZW5kIHJwYyByZXF1ZXN0IHRvIHRoZSBpbmplY3RlZCB3YWxsZXQgd2hpbGUgbm90IGNvbm5lY3RlZC4nO1xuICAgIH1cbiAgICBjb25zdHJ1Y3RvciguLi5hcmdzKSB7XG4gICAgICAgIHN1cGVyKC4uLmFyZ3MpO1xuICAgICAgICBPYmplY3Quc2V0UHJvdG90eXBlT2YodGhpcywgVW5rbm93bkFwcEVycm9yLnByb3RvdHlwZSk7XG4gICAgfVxufVxuXG4vKipcbiAqIFRocm93biB3aGVuIGBTdG9yYWdlYCB3YXMgbm90IHNwZWNpZmllZCBpbiB0aGUgYERhcHBNZXRhZGF0YWAgYW5kIGRlZmF1bHQgYGxvY2FsU3RvcmFnZWAgd2FzIG5vdCBkZXRlY3RlZCBpbiB0aGUgTm9kZS5qcyBlbnZpcm9ubWVudC5cbiAqL1xuY2xhc3MgTG9jYWxzdG9yYWdlTm90Rm91bmRFcnJvciBleHRlbmRzIFRvbkNvbm5lY3RFcnJvciB7XG4gICAgZ2V0IGluZm8oKSB7XG4gICAgICAgIHJldHVybiAnU3RvcmFnZSB3YXMgbm90IHNwZWNpZmllZCBpbiB0aGUgYERhcHBNZXRhZGF0YWAgYW5kIGRlZmF1bHQgYGxvY2FsU3RvcmFnZWAgd2FzIG5vdCBkZXRlY3RlZCBpbiB0aGUgZW52aXJvbm1lbnQuJztcbiAgICB9XG4gICAgY29uc3RydWN0b3IoLi4uYXJncykge1xuICAgICAgICBzdXBlciguLi5hcmdzKTtcbiAgICAgICAgT2JqZWN0LnNldFByb3RvdHlwZU9mKHRoaXMsIExvY2Fsc3RvcmFnZU5vdEZvdW5kRXJyb3IucHJvdG90eXBlKTtcbiAgICB9XG59XG5cbi8qKlxuICogVGhyb3duIHdoZW4gYW4gZXJyb3Igb2NjdXJyZWQgd2hpbGUgZmV0Y2hpbmcgdGhlIHdhbGxldHMgbGlzdC5cbiAqL1xuY2xhc3MgRmV0Y2hXYWxsZXRzRXJyb3IgZXh0ZW5kcyBUb25Db25uZWN0RXJyb3Ige1xuICAgIGdldCBpbmZvKCkge1xuICAgICAgICByZXR1cm4gJ0FuIGVycm9yIG9jY3VycmVkIHdoaWxlIGZldGNoaW5nIHRoZSB3YWxsZXRzIGxpc3QuJztcbiAgICB9XG4gICAgY29uc3RydWN0b3IoLi4uYXJncykge1xuICAgICAgICBzdXBlciguLi5hcmdzKTtcbiAgICAgICAgT2JqZWN0LnNldFByb3RvdHlwZU9mKHRoaXMsIEZldGNoV2FsbGV0c0Vycm9yLnByb3RvdHlwZSk7XG4gICAgfVxufVxuXG4vKipcbiAqIFRocm93biB3aGVuIHBhc3NlZCBhZGRyZXNzIGlzIGluIGluY29ycmVjdCBmb3JtYXQuXG4gKi9cbmNsYXNzIFdyb25nQWRkcmVzc0Vycm9yIGV4dGVuZHMgVG9uQ29ubmVjdEVycm9yIHtcbiAgICBnZXQgaW5mbygpIHtcbiAgICAgICAgcmV0dXJuICdQYXNzZWQgYWRkcmVzcyBpcyBpbiBpbmNvcnJlY3QgZm9ybWF0Lic7XG4gICAgfVxuICAgIGNvbnN0cnVjdG9yKC4uLmFyZ3MpIHtcbiAgICAgICAgc3VwZXIoLi4uYXJncyk7XG4gICAgICAgIE9iamVjdC5zZXRQcm90b3R5cGVPZih0aGlzLCBXcm9uZ0FkZHJlc3NFcnJvci5wcm90b3R5cGUpO1xuICAgIH1cbn1cblxuLyoqXG4gKiBUaHJvd24gd2hlbiBwYXNzZWQgaGV4IGlzIGluIGluY29ycmVjdCBmb3JtYXQuXG4gKi9cbmNsYXNzIFBhcnNlSGV4RXJyb3IgZXh0ZW5kcyBUb25Db25uZWN0RXJyb3Ige1xuICAgIGdldCBpbmZvKCkge1xuICAgICAgICByZXR1cm4gJ1Bhc3NlZCBoZXggaXMgaW4gaW5jb3JyZWN0IGZvcm1hdC4nO1xuICAgIH1cbiAgICBjb25zdHJ1Y3RvciguLi5hcmdzKSB7XG4gICAgICAgIHN1cGVyKC4uLmFyZ3MpO1xuICAgICAgICBPYmplY3Quc2V0UHJvdG90eXBlT2YodGhpcywgUGFyc2VIZXhFcnJvci5wcm90b3R5cGUpO1xuICAgIH1cbn1cblxuLyoqXG4gKiBVbmhhbmRlZCB1bmtub3duIGVycm9yLlxuICovXG5jbGFzcyBVbmtub3duRXJyb3IgZXh0ZW5kcyBUb25Db25uZWN0RXJyb3Ige1xuICAgIGNvbnN0cnVjdG9yKC4uLmFyZ3MpIHtcbiAgICAgICAgc3VwZXIoLi4uYXJncyk7XG4gICAgICAgIE9iamVjdC5zZXRQcm90b3R5cGVPZih0aGlzLCBVbmtub3duRXJyb3IucHJvdG90eXBlKTtcbiAgICB9XG59XG5cbmNvbnN0IGNvbm5lY3RFdmVudEVycm9yc0NvZGVzID0ge1xuICAgIFtDT05ORUNUX0VWRU5UX0VSUk9SX0NPREVTLlVOS05PV05fRVJST1JdOiBVbmtub3duRXJyb3IsXG4gICAgW0NPTk5FQ1RfRVZFTlRfRVJST1JfQ09ERVMuVVNFUl9SRUpFQ1RTX0VSUk9SXTogVXNlclJlamVjdHNFcnJvcixcbiAgICBbQ09OTkVDVF9FVkVOVF9FUlJPUl9DT0RFUy5CQURfUkVRVUVTVF9FUlJPUl06IEJhZFJlcXVlc3RFcnJvcixcbiAgICBbQ09OTkVDVF9FVkVOVF9FUlJPUl9DT0RFUy5VTktOT1dOX0FQUF9FUlJPUl06IFVua25vd25BcHBFcnJvcixcbiAgICBbQ09OTkVDVF9FVkVOVF9FUlJPUl9DT0RFUy5NQU5JRkVTVF9OT1RfRk9VTkRfRVJST1JdOiBNYW5pZmVzdE5vdEZvdW5kRXJyb3IsXG4gICAgW0NPTk5FQ1RfRVZFTlRfRVJST1JfQ09ERVMuTUFOSUZFU1RfQ09OVEVOVF9FUlJPUl06IE1hbmlmZXN0Q29udGVudEVycm9yRXJyb3Jcbn07XG5jbGFzcyBDb25uZWN0RXJyb3JzUGFyc2VyIHtcbiAgICBwYXJzZUVycm9yKGVycm9yKSB7XG4gICAgICAgIGxldCBFcnJvckNvbnN0cnVjdG9yID0gVW5rbm93bkVycm9yO1xuICAgICAgICBpZiAoZXJyb3IuY29kZSBpbiBjb25uZWN0RXZlbnRFcnJvcnNDb2Rlcykge1xuICAgICAgICAgICAgRXJyb3JDb25zdHJ1Y3RvciA9IGNvbm5lY3RFdmVudEVycm9yc0NvZGVzW2Vycm9yLmNvZGVdIHx8IFVua25vd25FcnJvcjtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gbmV3IEVycm9yQ29uc3RydWN0b3IoZXJyb3IubWVzc2FnZSk7XG4gICAgfVxufVxuY29uc3QgY29ubmVjdEVycm9yc1BhcnNlciA9IG5ldyBDb25uZWN0RXJyb3JzUGFyc2VyKCk7XG5cbmNsYXNzIFJwY1BhcnNlciB7XG4gICAgaXNFcnJvcihyZXNwb25zZSkge1xuICAgICAgICByZXR1cm4gJ2Vycm9yJyBpbiByZXNwb25zZTtcbiAgICB9XG59XG5cbmNvbnN0IHNlbmRUcmFuc2FjdGlvbkVycm9ycyA9IHtcbiAgICBbU0VORF9UUkFOU0FDVElPTl9FUlJPUl9DT0RFUy5VTktOT1dOX0VSUk9SXTogVW5rbm93bkVycm9yLFxuICAgIFtTRU5EX1RSQU5TQUNUSU9OX0VSUk9SX0NPREVTLlVTRVJfUkVKRUNUU19FUlJPUl06IFVzZXJSZWplY3RzRXJyb3IsXG4gICAgW1NFTkRfVFJBTlNBQ1RJT05fRVJST1JfQ09ERVMuQkFEX1JFUVVFU1RfRVJST1JdOiBCYWRSZXF1ZXN0RXJyb3IsXG4gICAgW1NFTkRfVFJBTlNBQ1RJT05fRVJST1JfQ09ERVMuVU5LTk9XTl9BUFBfRVJST1JdOiBVbmtub3duQXBwRXJyb3Jcbn07XG5jbGFzcyBTZW5kVHJhbnNhY3Rpb25QYXJzZXIgZXh0ZW5kcyBScGNQYXJzZXIge1xuICAgIGNvbnZlcnRUb1JwY1JlcXVlc3QocmVxdWVzdCkge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgbWV0aG9kOiAnc2VuZFRyYW5zYWN0aW9uJyxcbiAgICAgICAgICAgIHBhcmFtczogW0pTT04uc3RyaW5naWZ5KHJlcXVlc3QpXVxuICAgICAgICB9O1xuICAgIH1cbiAgICBwYXJzZUFuZFRocm93RXJyb3IocmVzcG9uc2UpIHtcbiAgICAgICAgbGV0IEVycm9yQ29uc3RydWN0b3IgPSBVbmtub3duRXJyb3I7XG4gICAgICAgIGlmIChyZXNwb25zZS5lcnJvci5jb2RlIGluIHNlbmRUcmFuc2FjdGlvbkVycm9ycykge1xuICAgICAgICAgICAgRXJyb3JDb25zdHJ1Y3RvciA9IHNlbmRUcmFuc2FjdGlvbkVycm9yc1tyZXNwb25zZS5lcnJvci5jb2RlXSB8fCBVbmtub3duRXJyb3I7XG4gICAgICAgIH1cbiAgICAgICAgdGhyb3cgbmV3IEVycm9yQ29uc3RydWN0b3IocmVzcG9uc2UuZXJyb3IubWVzc2FnZSk7XG4gICAgfVxuICAgIGNvbnZlcnRGcm9tUnBjUmVzcG9uc2UocnBjUmVzcG9uc2UpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIGJvYzogcnBjUmVzcG9uc2UucmVzdWx0XG4gICAgICAgIH07XG4gICAgfVxufVxuY29uc3Qgc2VuZFRyYW5zYWN0aW9uUGFyc2VyID0gbmV3IFNlbmRUcmFuc2FjdGlvblBhcnNlcigpO1xuXG5jbGFzcyBIdHRwQnJpZGdlR2F0ZXdheVN0b3JhZ2Uge1xuICAgIGNvbnN0cnVjdG9yKHN0b3JhZ2UsIGJyaWRnZVVybCkge1xuICAgICAgICB0aGlzLnN0b3JhZ2UgPSBzdG9yYWdlO1xuICAgICAgICB0aGlzLnN0b3JlS2V5ID0gJ3Rvbi1jb25uZWN0LXN0b3JhZ2VfaHR0cC1icmlkZ2UtZ2F0ZXdheTo6JyArIGJyaWRnZVVybDtcbiAgICB9XG4gICAgc3RvcmVMYXN0RXZlbnRJZChsYXN0RXZlbnRJZCkge1xuICAgICAgICByZXR1cm4gX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuc3RvcmFnZS5zZXRJdGVtKHRoaXMuc3RvcmVLZXksIGxhc3RFdmVudElkKTtcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIHJlbW92ZUxhc3RFdmVudElkKCkge1xuICAgICAgICByZXR1cm4gX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuc3RvcmFnZS5yZW1vdmVJdGVtKHRoaXMuc3RvcmVLZXkpO1xuICAgICAgICB9KTtcbiAgICB9XG4gICAgZ2V0TGFzdEV2ZW50SWQoKSB7XG4gICAgICAgIHJldHVybiBfX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7XG4gICAgICAgICAgICBjb25zdCBzdG9yZWQgPSB5aWVsZCB0aGlzLnN0b3JhZ2UuZ2V0SXRlbSh0aGlzLnN0b3JlS2V5KTtcbiAgICAgICAgICAgIGlmICghc3RvcmVkKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gc3RvcmVkO1xuICAgICAgICB9KTtcbiAgICB9XG59XG5cbmZ1bmN0aW9uIHJlbW92ZVVybExhc3RTbGFzaCh1cmwpIHtcbiAgICBpZiAodXJsLnNsaWNlKC0xKSA9PT0gJy8nKSB7XG4gICAgICAgIHJldHVybiB1cmwuc2xpY2UoMCwgLTEpO1xuICAgIH1cbiAgICByZXR1cm4gdXJsO1xufVxuZnVuY3Rpb24gYWRkUGF0aFRvVXJsKHVybCwgcGF0aCkge1xuICAgIHJldHVybiByZW1vdmVVcmxMYXN0U2xhc2godXJsKSArICcvJyArIHBhdGg7XG59XG5mdW5jdGlvbiBpc1RlbGVncmFtVXJsKGxpbmspIHtcbiAgICBpZiAoIWxpbmspIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICBjb25zdCB1cmwgPSBuZXcgVVJMKGxpbmspO1xuICAgIHJldHVybiB1cmwucHJvdG9jb2wgPT09ICd0ZzonIHx8IHVybC5ob3N0bmFtZSA9PT0gJ3QubWUnO1xufVxuZnVuY3Rpb24gZW5jb2RlVGVsZWdyYW1VcmxQYXJhbWV0ZXJzKHBhcmFtZXRlcnMpIHtcbiAgICByZXR1cm4gcGFyYW1ldGVyc1xuICAgICAgICAucmVwbGFjZUFsbCgnLicsICclMkUnKVxuICAgICAgICAucmVwbGFjZUFsbCgnLScsICclMkQnKVxuICAgICAgICAucmVwbGFjZUFsbCgnXycsICclNUYnKVxuICAgICAgICAucmVwbGFjZUFsbCgnJicsICctJylcbiAgICAgICAgLnJlcGxhY2VBbGwoJz0nLCAnX18nKVxuICAgICAgICAucmVwbGFjZUFsbCgnJScsICctLScpO1xufVxuXG4vKipcbiAqIERlbGF5cyB0aGUgZXhlY3V0aW9uIG9mIGNvZGUgZm9yIGEgc3BlY2lmaWVkIG51bWJlciBvZiBtaWxsaXNlY29uZHMuXG4gKiBAcGFyYW0ge251bWJlcn0gdGltZW91dCAtIFRoZSBudW1iZXIgb2YgbWlsbGlzZWNvbmRzIHRvIGRlbGF5IHRoZSBleGVjdXRpb24uXG4gKiBAcGFyYW0ge0RlbGF5T3B0aW9uc30gW29wdGlvbnNdIC0gT3B0aW9uYWwgY29uZmlndXJhdGlvbiBvcHRpb25zIGZvciB0aGUgZGVsYXkuXG4gKiBAcmV0dXJuIHtQcm9taXNlPHZvaWQ+fSAtIEEgcHJvbWlzZSB0aGF0IHJlc29sdmVzIGFmdGVyIHRoZSBzcGVjaWZpZWQgZGVsYXksIG9yIHJlamVjdHMgaWYgdGhlIGRlbGF5IGlzIGFib3J0ZWQuXG4gKi9cbmZ1bmN0aW9uIGRlbGF5KHRpbWVvdXQsIG9wdGlvbnMpIHtcbiAgICByZXR1cm4gX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xuICAgICAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgICAgICAgICAgdmFyIF9hLCBfYjtcbiAgICAgICAgICAgIGlmICgoX2EgPSBvcHRpb25zID09PSBudWxsIHx8IG9wdGlvbnMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IG9wdGlvbnMuc2lnbmFsKSA9PT0gbnVsbCB8fCBfYSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2EuYWJvcnRlZCkge1xuICAgICAgICAgICAgICAgIHJlamVjdChuZXcgVG9uQ29ubmVjdEVycm9yKCdEZWxheSBhYm9ydGVkJykpO1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNvbnN0IHRpbWVvdXRJZCA9IHNldFRpbWVvdXQoKCkgPT4gcmVzb2x2ZSgpLCB0aW1lb3V0KTtcbiAgICAgICAgICAgIChfYiA9IG9wdGlvbnMgPT09IG51bGwgfHwgb3B0aW9ucyA9PT0gdm9pZCAwID8gdm9pZCAwIDogb3B0aW9ucy5zaWduYWwpID09PSBudWxsIHx8IF9iID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYi5hZGRFdmVudExpc3RlbmVyKCdhYm9ydCcsICgpID0+IHtcbiAgICAgICAgICAgICAgICBjbGVhclRpbWVvdXQodGltZW91dElkKTtcbiAgICAgICAgICAgICAgICByZWplY3QobmV3IFRvbkNvbm5lY3RFcnJvcignRGVsYXkgYWJvcnRlZCcpKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9KTtcbiAgICB9KTtcbn1cblxuLyoqXG4gKiBDcmVhdGVzIGFuIEFib3J0Q29udHJvbGxlciBpbnN0YW5jZSB3aXRoIGFuIG9wdGlvbmFsIEFib3J0U2lnbmFsLlxuICpcbiAqIEBwYXJhbSB7QWJvcnRTaWduYWx9IFtzaWduYWxdIC0gQW4gb3B0aW9uYWwgQWJvcnRTaWduYWwgdG8gdXNlIGZvciBhYm9ydGluZyB0aGUgY29udHJvbGxlci5cbiAqIEByZXR1cm5zIHtBYm9ydENvbnRyb2xsZXJ9IC0gQW4gaW5zdGFuY2Ugb2YgQWJvcnRDb250cm9sbGVyLlxuICovXG5mdW5jdGlvbiBjcmVhdGVBYm9ydENvbnRyb2xsZXIoc2lnbmFsKSB7XG4gICAgY29uc3QgYWJvcnRDb250cm9sbGVyID0gbmV3IEFib3J0Q29udHJvbGxlcigpO1xuICAgIGlmIChzaWduYWwgPT09IG51bGwgfHwgc2lnbmFsID09PSB2b2lkIDAgPyB2b2lkIDAgOiBzaWduYWwuYWJvcnRlZCkge1xuICAgICAgICBhYm9ydENvbnRyb2xsZXIuYWJvcnQoKTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIHNpZ25hbCA9PT0gbnVsbCB8fCBzaWduYWwgPT09IHZvaWQgMCA/IHZvaWQgMCA6IHNpZ25hbC5hZGRFdmVudExpc3RlbmVyKCdhYm9ydCcsICgpID0+IGFib3J0Q29udHJvbGxlci5hYm9ydCgpLCB7IG9uY2U6IHRydWUgfSk7XG4gICAgfVxuICAgIHJldHVybiBhYm9ydENvbnRyb2xsZXI7XG59XG5cbi8qKlxuICogRnVuY3Rpb24gdG8gY2FsbCB0b24gYXBpIHVudGlsIHdlIGdldCByZXNwb25zZS5cbiAqIEJlY2F1c2UgdG9uIG5ldHdvcmsgaXMgcHJldHR5IHVuc3RhYmxlIHdlIG5lZWQgdG8gbWFrZSBzdXJlIHJlc3BvbnNlIGlzIGZpbmFsLlxuICogQHBhcmFtIHtUfSBmbiAtIGZ1bmN0aW9uIHRvIGNhbGxcbiAqIEBwYXJhbSB7Q2FsbEZvclN1Y2Nlc3NPcHRpb25zfSBbb3B0aW9uc10gLSBvcHRpb25hbCBjb25maWd1cmF0aW9uIG9wdGlvbnNcbiAqL1xuZnVuY3Rpb24gY2FsbEZvclN1Y2Nlc3MoZm4sIG9wdGlvbnMpIHtcbiAgICB2YXIgX2EsIF9iO1xuICAgIHJldHVybiBfX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7XG4gICAgICAgIGNvbnN0IGF0dGVtcHRzID0gKF9hID0gb3B0aW9ucyA9PT0gbnVsbCB8fCBvcHRpb25zID09PSB2b2lkIDAgPyB2b2lkIDAgOiBvcHRpb25zLmF0dGVtcHRzKSAhPT0gbnVsbCAmJiBfYSAhPT0gdm9pZCAwID8gX2EgOiAxMDtcbiAgICAgICAgY29uc3QgZGVsYXlNcyA9IChfYiA9IG9wdGlvbnMgPT09IG51bGwgfHwgb3B0aW9ucyA9PT0gdm9pZCAwID8gdm9pZCAwIDogb3B0aW9ucy5kZWxheU1zKSAhPT0gbnVsbCAmJiBfYiAhPT0gdm9pZCAwID8gX2IgOiAyMDA7XG4gICAgICAgIGNvbnN0IGFib3J0Q29udHJvbGxlciA9IGNyZWF0ZUFib3J0Q29udHJvbGxlcihvcHRpb25zID09PSBudWxsIHx8IG9wdGlvbnMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IG9wdGlvbnMuc2lnbmFsKTtcbiAgICAgICAgaWYgKHR5cGVvZiBmbiAhPT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICAgICAgdGhyb3cgbmV3IFRvbkNvbm5lY3RFcnJvcihgRXhwZWN0ZWQgYSBmdW5jdGlvbiwgZ290ICR7dHlwZW9mIGZufWApO1xuICAgICAgICB9XG4gICAgICAgIGxldCBpID0gMDtcbiAgICAgICAgbGV0IGxhc3RFcnJvcjtcbiAgICAgICAgd2hpbGUgKGkgPCBhdHRlbXB0cykge1xuICAgICAgICAgICAgaWYgKGFib3J0Q29udHJvbGxlci5zaWduYWwuYWJvcnRlZCkge1xuICAgICAgICAgICAgICAgIHRocm93IG5ldyBUb25Db25uZWN0RXJyb3IoYEFib3J0ZWQgYWZ0ZXIgYXR0ZW1wdHMgJHtpfWApO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICByZXR1cm4geWllbGQgZm4oeyBzaWduYWw6IGFib3J0Q29udHJvbGxlci5zaWduYWwgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjYXRjaCAoZXJyKSB7XG4gICAgICAgICAgICAgICAgbGFzdEVycm9yID0gZXJyO1xuICAgICAgICAgICAgICAgIGkrKztcbiAgICAgICAgICAgICAgICBpZiAoaSA8IGF0dGVtcHRzKSB7XG4gICAgICAgICAgICAgICAgICAgIHlpZWxkIGRlbGF5KGRlbGF5TXMpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICB0aHJvdyBsYXN0RXJyb3I7XG4gICAgfSk7XG59XG5cbmZ1bmN0aW9uIGxvZ0RlYnVnKC4uLmFyZ3MpIHtcbiAgICB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICBjb25zb2xlLmRlYnVnKCdbVE9OX0NPTk5FQ1RfU0RLXScsIC4uLmFyZ3MpO1xuICAgICAgICB9XG4gICAgICAgIGNhdGNoIChfYSkgeyB9XG4gICAgfVxufVxuZnVuY3Rpb24gbG9nRXJyb3IoLi4uYXJncykge1xuICAgIHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoJ1tUT05fQ09OTkVDVF9TREtdJywgLi4uYXJncyk7XG4gICAgICAgIH1cbiAgICAgICAgY2F0Y2ggKF9hKSB7IH1cbiAgICB9XG59XG5mdW5jdGlvbiBsb2dXYXJuaW5nKC4uLmFyZ3MpIHtcbiAgICB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICBjb25zb2xlLndhcm4oJ1tUT05fQ09OTkVDVF9TREtdJywgLi4uYXJncyk7XG4gICAgICAgIH1cbiAgICAgICAgY2F0Y2ggKF9hKSB7IH1cbiAgICB9XG59XG5cbi8qKlxuICogQ3JlYXRlIGEgcmVzb3VyY2UuXG4gKlxuICogQHRlbXBsYXRlIFQgLSBUaGUgdHlwZSBvZiB0aGUgcmVzb3VyY2UuXG4gKiBAdGVtcGxhdGUgQXJncyAtIFRoZSB0eXBlIG9mIHRoZSBhcmd1bWVudHMgZm9yIGNyZWF0aW5nIHRoZSByZXNvdXJjZS5cbiAqXG4gKiBAcGFyYW0geyguLi5hcmdzOiBBcmdzKSA9PiBQcm9taXNlPFQ+fSBjcmVhdGVGbiAtIEEgZnVuY3Rpb24gdGhhdCBjcmVhdGVzIHRoZSByZXNvdXJjZS5cbiAqIEBwYXJhbSB7KHJlc291cmNlOiBUKSA9PiBQcm9taXNlPHZvaWQ+fSBbZGlzcG9zZUZuXSAtIEFuIG9wdGlvbmFsIGZ1bmN0aW9uIHRoYXQgZGlzcG9zZXMgdGhlIHJlc291cmNlLlxuICovXG5mdW5jdGlvbiBjcmVhdGVSZXNvdXJjZShjcmVhdGVGbiwgZGlzcG9zZUZuKSB7XG4gICAgbGV0IGN1cnJlbnRSZXNvdXJjZSA9IG51bGw7XG4gICAgbGV0IGN1cnJlbnRBcmdzID0gbnVsbDtcbiAgICBsZXQgY3VycmVudFByb21pc2UgPSBudWxsO1xuICAgIGxldCBjdXJyZW50U2lnbmFsID0gbnVsbDtcbiAgICBsZXQgYWJvcnRDb250cm9sbGVyID0gbnVsbDtcbiAgICAvLyBjcmVhdGUgYSBuZXcgcmVzb3VyY2VcbiAgICBjb25zdCBjcmVhdGUgPSAoc2lnbmFsLCAuLi5hcmdzKSA9PiBfX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7XG4gICAgICAgIGN1cnJlbnRTaWduYWwgPSBzaWduYWwgIT09IG51bGwgJiYgc2lnbmFsICE9PSB2b2lkIDAgPyBzaWduYWwgOiBudWxsO1xuICAgICAgICBhYm9ydENvbnRyb2xsZXIgPT09IG51bGwgfHwgYWJvcnRDb250cm9sbGVyID09PSB2b2lkIDAgPyB2b2lkIDAgOiBhYm9ydENvbnRyb2xsZXIuYWJvcnQoKTtcbiAgICAgICAgYWJvcnRDb250cm9sbGVyID0gY3JlYXRlQWJvcnRDb250cm9sbGVyKHNpZ25hbCk7XG4gICAgICAgIGlmIChhYm9ydENvbnRyb2xsZXIuc2lnbmFsLmFib3J0ZWQpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBUb25Db25uZWN0RXJyb3IoJ1Jlc291cmNlIGNyZWF0aW9uIHdhcyBhYm9ydGVkJyk7XG4gICAgICAgIH1cbiAgICAgICAgY3VycmVudEFyZ3MgPSBhcmdzICE9PSBudWxsICYmIGFyZ3MgIT09IHZvaWQgMCA/IGFyZ3MgOiBudWxsO1xuICAgICAgICBjb25zdCBwcm9taXNlID0gY3JlYXRlRm4oYWJvcnRDb250cm9sbGVyLnNpZ25hbCwgLi4uYXJncyk7XG4gICAgICAgIGN1cnJlbnRQcm9taXNlID0gcHJvbWlzZTtcbiAgICAgICAgY29uc3QgcmVzb3VyY2UgPSB5aWVsZCBwcm9taXNlO1xuICAgICAgICBpZiAoY3VycmVudFByb21pc2UgIT09IHByb21pc2UgJiYgcmVzb3VyY2UgIT09IGN1cnJlbnRSZXNvdXJjZSkge1xuICAgICAgICAgICAgeWllbGQgZGlzcG9zZUZuKHJlc291cmNlKTtcbiAgICAgICAgICAgIHRocm93IG5ldyBUb25Db25uZWN0RXJyb3IoJ1Jlc291cmNlIGNyZWF0aW9uIHdhcyBhYm9ydGVkIGJ5IGEgbmV3IHJlc291cmNlIGNyZWF0aW9uJyk7XG4gICAgICAgIH1cbiAgICAgICAgY3VycmVudFJlc291cmNlID0gcmVzb3VyY2U7XG4gICAgICAgIHJldHVybiBjdXJyZW50UmVzb3VyY2U7XG4gICAgfSk7XG4gICAgLy8gZ2V0IHRoZSBjdXJyZW50IHJlc291cmNlXG4gICAgY29uc3QgY3VycmVudCA9ICgpID0+IHtcbiAgICAgICAgcmV0dXJuIGN1cnJlbnRSZXNvdXJjZSAhPT0gbnVsbCAmJiBjdXJyZW50UmVzb3VyY2UgIT09IHZvaWQgMCA/IGN1cnJlbnRSZXNvdXJjZSA6IG51bGw7XG4gICAgfTtcbiAgICAvLyBkaXNwb3NlIHRoZSBjdXJyZW50IHJlc291cmNlXG4gICAgY29uc3QgZGlzcG9zZSA9ICgpID0+IF9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIGNvbnN0IHJlc291cmNlID0gY3VycmVudFJlc291cmNlO1xuICAgICAgICAgICAgY3VycmVudFJlc291cmNlID0gbnVsbDtcbiAgICAgICAgICAgIGNvbnN0IHByb21pc2UgPSBjdXJyZW50UHJvbWlzZTtcbiAgICAgICAgICAgIGN1cnJlbnRQcm9taXNlID0gbnVsbDtcbiAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgYWJvcnRDb250cm9sbGVyID09PSBudWxsIHx8IGFib3J0Q29udHJvbGxlciA9PT0gdm9pZCAwID8gdm9pZCAwIDogYWJvcnRDb250cm9sbGVyLmFib3J0KCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjYXRjaCAoZSkgeyB9XG4gICAgICAgICAgICB5aWVsZCBQcm9taXNlLmFsbFNldHRsZWQoW1xuICAgICAgICAgICAgICAgIHJlc291cmNlID8gZGlzcG9zZUZuKHJlc291cmNlKSA6IFByb21pc2UucmVzb2x2ZSgpLFxuICAgICAgICAgICAgICAgIHByb21pc2UgPyBkaXNwb3NlRm4oeWllbGQgcHJvbWlzZSkgOiBQcm9taXNlLnJlc29sdmUoKVxuICAgICAgICAgICAgXSk7XG4gICAgICAgIH1cbiAgICAgICAgY2F0Y2ggKGUpIHsgfVxuICAgIH0pO1xuICAgIC8vIHJlY3JlYXRlIHRoZSBjdXJyZW50IHJlc291cmNlXG4gICAgY29uc3QgcmVjcmVhdGUgPSAoZGVsYXlNcykgPT4gX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xuICAgICAgICBjb25zdCByZXNvdXJjZSA9IGN1cnJlbnRSZXNvdXJjZTtcbiAgICAgICAgY29uc3QgcHJvbWlzZSA9IGN1cnJlbnRQcm9taXNlO1xuICAgICAgICBjb25zdCBhcmdzID0gY3VycmVudEFyZ3M7XG4gICAgICAgIGNvbnN0IHNpZ25hbCA9IGN1cnJlbnRTaWduYWw7XG4gICAgICAgIHlpZWxkIGRlbGF5KGRlbGF5TXMpO1xuICAgICAgICBpZiAocmVzb3VyY2UgPT09IGN1cnJlbnRSZXNvdXJjZSAmJlxuICAgICAgICAgICAgcHJvbWlzZSA9PT0gY3VycmVudFByb21pc2UgJiZcbiAgICAgICAgICAgIGFyZ3MgPT09IGN1cnJlbnRBcmdzICYmXG4gICAgICAgICAgICBzaWduYWwgPT09IGN1cnJlbnRTaWduYWwpIHtcbiAgICAgICAgICAgIHJldHVybiB5aWVsZCBjcmVhdGUoY3VycmVudFNpZ25hbCwgLi4uKGFyZ3MgIT09IG51bGwgJiYgYXJncyAhPT0gdm9pZCAwID8gYXJncyA6IFtdKSk7XG4gICAgICAgIH1cbiAgICAgICAgdGhyb3cgbmV3IFRvbkNvbm5lY3RFcnJvcignUmVzb3VyY2UgcmVjcmVhdGlvbiB3YXMgYWJvcnRlZCBieSBhIG5ldyByZXNvdXJjZSBjcmVhdGlvbicpO1xuICAgIH0pO1xuICAgIHJldHVybiB7XG4gICAgICAgIGNyZWF0ZSxcbiAgICAgICAgY3VycmVudCxcbiAgICAgICAgZGlzcG9zZSxcbiAgICAgICAgcmVjcmVhdGVcbiAgICB9O1xufVxuXG4vKipcbiAqIEV4ZWN1dGVzIGEgZnVuY3Rpb24gYW5kIHByb3ZpZGVzIGRlZmVycmVkIGJlaGF2aW9yLCBhbGxvd2luZyBmb3IgYSB0aW1lb3V0IGFuZCBhYm9ydCBmdW5jdGlvbmFsaXR5LlxuICpcbiAqIEBwYXJhbSB7RGVmZXJyYWJsZTxUPn0gZm4gLSBUaGUgZnVuY3Rpb24gdG8gZXhlY3V0ZS4gSXQgc2hvdWxkIHJldHVybiBhIHByb21pc2UgdGhhdCByZXNvbHZlcyB3aXRoIHRoZSBkZXNpcmVkIHJlc3VsdC5cbiAqIEBwYXJhbSB7RGVmZXJPcHRpb25zfSBvcHRpb25zIC0gT3B0aW9uYWwgY29uZmlndXJhdGlvbiBvcHRpb25zIGZvciB0aGUgZGVmZXIgYmVoYXZpb3IuXG4gKiBAcmV0dXJucyB7UHJvbWlzZTxUPn0gLSBBIHByb21pc2UgdGhhdCByZXNvbHZlcyB3aXRoIHRoZSByZXN1bHQgb2YgdGhlIGV4ZWN1dGVkIGZ1bmN0aW9uLCBvciByZWplY3RzIHdpdGggYW4gZXJyb3IgaWYgaXQgdGltZXMgb3V0IG9yIGlzIGFib3J0ZWQuXG4gKi9cbmZ1bmN0aW9uIHRpbWVvdXQoZm4sIG9wdGlvbnMpIHtcbiAgICBjb25zdCB0aW1lb3V0ID0gb3B0aW9ucyA9PT0gbnVsbCB8fCBvcHRpb25zID09PSB2b2lkIDAgPyB2b2lkIDAgOiBvcHRpb25zLnRpbWVvdXQ7XG4gICAgY29uc3Qgc2lnbmFsID0gb3B0aW9ucyA9PT0gbnVsbCB8fCBvcHRpb25zID09PSB2b2lkIDAgPyB2b2lkIDAgOiBvcHRpb25zLnNpZ25hbDtcbiAgICBjb25zdCBhYm9ydENvbnRyb2xsZXIgPSBjcmVhdGVBYm9ydENvbnRyb2xsZXIoc2lnbmFsKTtcbiAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4gX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xuICAgICAgICBpZiAoYWJvcnRDb250cm9sbGVyLnNpZ25hbC5hYm9ydGVkKSB7XG4gICAgICAgICAgICByZWplY3QobmV3IFRvbkNvbm5lY3RFcnJvcignT3BlcmF0aW9uIGFib3J0ZWQnKSk7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgbGV0IHRpbWVvdXRJZDtcbiAgICAgICAgaWYgKHR5cGVvZiB0aW1lb3V0ICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgICAgICAgdGltZW91dElkID0gc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgICAgICAgICAgYWJvcnRDb250cm9sbGVyLmFib3J0KCk7XG4gICAgICAgICAgICAgICAgcmVqZWN0KG5ldyBUb25Db25uZWN0RXJyb3IoYFRpbWVvdXQgYWZ0ZXIgJHt0aW1lb3V0fW1zYCkpO1xuICAgICAgICAgICAgfSwgdGltZW91dCk7XG4gICAgICAgIH1cbiAgICAgICAgYWJvcnRDb250cm9sbGVyLnNpZ25hbC5hZGRFdmVudExpc3RlbmVyKCdhYm9ydCcsICgpID0+IHtcbiAgICAgICAgICAgIGNsZWFyVGltZW91dCh0aW1lb3V0SWQpO1xuICAgICAgICAgICAgcmVqZWN0KG5ldyBUb25Db25uZWN0RXJyb3IoJ09wZXJhdGlvbiBhYm9ydGVkJykpO1xuICAgICAgICB9LCB7IG9uY2U6IHRydWUgfSk7XG4gICAgICAgIGNvbnN0IGRlZmVyT3B0aW9ucyA9IHsgdGltZW91dCwgYWJvcnQ6IGFib3J0Q29udHJvbGxlci5zaWduYWwgfTtcbiAgICAgICAgeWllbGQgZm4oKC4uLmFyZ3MpID0+IHtcbiAgICAgICAgICAgIGNsZWFyVGltZW91dCh0aW1lb3V0SWQpO1xuICAgICAgICAgICAgcmVzb2x2ZSguLi5hcmdzKTtcbiAgICAgICAgfSwgKCkgPT4ge1xuICAgICAgICAgICAgY2xlYXJUaW1lb3V0KHRpbWVvdXRJZCk7XG4gICAgICAgICAgICByZWplY3QoKTtcbiAgICAgICAgfSwgZGVmZXJPcHRpb25zKTtcbiAgICB9KSk7XG59XG5cbmNsYXNzIEJyaWRnZUdhdGV3YXkge1xuICAgIGNvbnN0cnVjdG9yKHN0b3JhZ2UsIGJyaWRnZVVybCwgc2Vzc2lvbklkLCBsaXN0ZW5lciwgZXJyb3JzTGlzdGVuZXIpIHtcbiAgICAgICAgdGhpcy5icmlkZ2VVcmwgPSBicmlkZ2VVcmw7XG4gICAgICAgIHRoaXMuc2Vzc2lvbklkID0gc2Vzc2lvbklkO1xuICAgICAgICB0aGlzLmxpc3RlbmVyID0gbGlzdGVuZXI7XG4gICAgICAgIHRoaXMuZXJyb3JzTGlzdGVuZXIgPSBlcnJvcnNMaXN0ZW5lcjtcbiAgICAgICAgdGhpcy5zc2VQYXRoID0gJ2V2ZW50cyc7XG4gICAgICAgIHRoaXMucG9zdFBhdGggPSAnbWVzc2FnZSc7XG4gICAgICAgIHRoaXMuaGVhcnRiZWF0TWVzc2FnZSA9ICdoZWFydGJlYXQnO1xuICAgICAgICB0aGlzLmRlZmF1bHRUdGwgPSAzMDA7XG4gICAgICAgIHRoaXMuZGVmYXVsdFJlY29ubmVjdERlbGF5ID0gMjAwMDtcbiAgICAgICAgdGhpcy5kZWZhdWx0UmVzZW5kRGVsYXkgPSA1MDAwO1xuICAgICAgICB0aGlzLmV2ZW50U291cmNlID0gY3JlYXRlUmVzb3VyY2UoKHNpZ25hbCwgb3BlbmluZ0RlYWRsaW5lTVMpID0+IF9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHtcbiAgICAgICAgICAgIGNvbnN0IGV2ZW50U291cmNlQ29uZmlnID0ge1xuICAgICAgICAgICAgICAgIGJyaWRnZVVybDogdGhpcy5icmlkZ2VVcmwsXG4gICAgICAgICAgICAgICAgc3NlUGF0aDogdGhpcy5zc2VQYXRoLFxuICAgICAgICAgICAgICAgIHNlc3Npb25JZDogdGhpcy5zZXNzaW9uSWQsXG4gICAgICAgICAgICAgICAgYnJpZGdlR2F0ZXdheVN0b3JhZ2U6IHRoaXMuYnJpZGdlR2F0ZXdheVN0b3JhZ2UsXG4gICAgICAgICAgICAgICAgZXJyb3JIYW5kbGVyOiB0aGlzLmVycm9yc0hhbmRsZXIuYmluZCh0aGlzKSxcbiAgICAgICAgICAgICAgICBtZXNzYWdlSGFuZGxlcjogdGhpcy5tZXNzYWdlc0hhbmRsZXIuYmluZCh0aGlzKSxcbiAgICAgICAgICAgICAgICBzaWduYWw6IHNpZ25hbCxcbiAgICAgICAgICAgICAgICBvcGVuaW5nRGVhZGxpbmVNUzogb3BlbmluZ0RlYWRsaW5lTVNcbiAgICAgICAgICAgIH07XG4gICAgICAgICAgICByZXR1cm4geWllbGQgY3JlYXRlRXZlbnRTb3VyY2UoZXZlbnRTb3VyY2VDb25maWcpO1xuICAgICAgICB9KSwgKHJlc291cmNlKSA9PiBfX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7XG4gICAgICAgICAgICByZXNvdXJjZS5jbG9zZSgpO1xuICAgICAgICB9KSk7XG4gICAgICAgIHRoaXMuYnJpZGdlR2F0ZXdheVN0b3JhZ2UgPSBuZXcgSHR0cEJyaWRnZUdhdGV3YXlTdG9yYWdlKHN0b3JhZ2UsIGJyaWRnZVVybCk7XG4gICAgfVxuICAgIGdldCBpc1JlYWR5KCkge1xuICAgICAgICBjb25zdCBldmVudFNvdXJjZSA9IHRoaXMuZXZlbnRTb3VyY2UuY3VycmVudCgpO1xuICAgICAgICByZXR1cm4gKGV2ZW50U291cmNlID09PSBudWxsIHx8IGV2ZW50U291cmNlID09PSB2b2lkIDAgPyB2b2lkIDAgOiBldmVudFNvdXJjZS5yZWFkeVN0YXRlKSA9PT0gRXZlbnRTb3VyY2UuT1BFTjtcbiAgICB9XG4gICAgZ2V0IGlzQ2xvc2VkKCkge1xuICAgICAgICBjb25zdCBldmVudFNvdXJjZSA9IHRoaXMuZXZlbnRTb3VyY2UuY3VycmVudCgpO1xuICAgICAgICByZXR1cm4gKGV2ZW50U291cmNlID09PSBudWxsIHx8IGV2ZW50U291cmNlID09PSB2b2lkIDAgPyB2b2lkIDAgOiBldmVudFNvdXJjZS5yZWFkeVN0YXRlKSAhPT0gRXZlbnRTb3VyY2UuT1BFTjtcbiAgICB9XG4gICAgZ2V0IGlzQ29ubmVjdGluZygpIHtcbiAgICAgICAgY29uc3QgZXZlbnRTb3VyY2UgPSB0aGlzLmV2ZW50U291cmNlLmN1cnJlbnQoKTtcbiAgICAgICAgcmV0dXJuIChldmVudFNvdXJjZSA9PT0gbnVsbCB8fCBldmVudFNvdXJjZSA9PT0gdm9pZCAwID8gdm9pZCAwIDogZXZlbnRTb3VyY2UucmVhZHlTdGF0ZSkgPT09IEV2ZW50U291cmNlLkNPTk5FQ1RJTkc7XG4gICAgfVxuICAgIHJlZ2lzdGVyU2Vzc2lvbihvcHRpb25zKSB7XG4gICAgICAgIHJldHVybiBfX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7XG4gICAgICAgICAgICB5aWVsZCB0aGlzLmV2ZW50U291cmNlLmNyZWF0ZShvcHRpb25zID09PSBudWxsIHx8IG9wdGlvbnMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IG9wdGlvbnMuc2lnbmFsLCBvcHRpb25zID09PSBudWxsIHx8IG9wdGlvbnMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IG9wdGlvbnMub3BlbmluZ0RlYWRsaW5lTVMpO1xuICAgICAgICB9KTtcbiAgICB9XG4gICAgc2VuZChtZXNzYWdlLCByZWNlaXZlciwgdG9waWMsIHR0bE9yT3B0aW9ucykge1xuICAgICAgICB2YXIgX2E7XG4gICAgICAgIHJldHVybiBfX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7XG4gICAgICAgICAgICAvLyBUT0RPOiByZW1vdmUgZGVwcmVjYXRlZCBtZXRob2RcbiAgICAgICAgICAgIGNvbnN0IG9wdGlvbnMgPSB7fTtcbiAgICAgICAgICAgIGlmICh0eXBlb2YgdHRsT3JPcHRpb25zID09PSAnbnVtYmVyJykge1xuICAgICAgICAgICAgICAgIG9wdGlvbnMudHRsID0gdHRsT3JPcHRpb25zO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgb3B0aW9ucy50dGwgPSB0dGxPck9wdGlvbnMgPT09IG51bGwgfHwgdHRsT3JPcHRpb25zID09PSB2b2lkIDAgPyB2b2lkIDAgOiB0dGxPck9wdGlvbnMudHRsO1xuICAgICAgICAgICAgICAgIG9wdGlvbnMuc2lnbmFsID0gdHRsT3JPcHRpb25zID09PSBudWxsIHx8IHR0bE9yT3B0aW9ucyA9PT0gdm9pZCAwID8gdm9pZCAwIDogdHRsT3JPcHRpb25zLnNpZ25hbDtcbiAgICAgICAgICAgICAgICBvcHRpb25zLmF0dGVtcHRzID0gdHRsT3JPcHRpb25zID09PSBudWxsIHx8IHR0bE9yT3B0aW9ucyA9PT0gdm9pZCAwID8gdm9pZCAwIDogdHRsT3JPcHRpb25zLmF0dGVtcHRzO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY29uc3QgdXJsID0gbmV3IFVSTChhZGRQYXRoVG9VcmwodGhpcy5icmlkZ2VVcmwsIHRoaXMucG9zdFBhdGgpKTtcbiAgICAgICAgICAgIHVybC5zZWFyY2hQYXJhbXMuYXBwZW5kKCdjbGllbnRfaWQnLCB0aGlzLnNlc3Npb25JZCk7XG4gICAgICAgICAgICB1cmwuc2VhcmNoUGFyYW1zLmFwcGVuZCgndG8nLCByZWNlaXZlcik7XG4gICAgICAgICAgICB1cmwuc2VhcmNoUGFyYW1zLmFwcGVuZCgndHRsJywgKChvcHRpb25zID09PSBudWxsIHx8IG9wdGlvbnMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IG9wdGlvbnMudHRsKSB8fCB0aGlzLmRlZmF1bHRUdGwpLnRvU3RyaW5nKCkpO1xuICAgICAgICAgICAgdXJsLnNlYXJjaFBhcmFtcy5hcHBlbmQoJ3RvcGljJywgdG9waWMpO1xuICAgICAgICAgICAgY29uc3QgYm9keSA9IEJhc2U2NC5lbmNvZGUobWVzc2FnZSk7XG4gICAgICAgICAgICB5aWVsZCBjYWxsRm9yU3VjY2Vzcygob3B0aW9ucykgPT4gX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xuICAgICAgICAgICAgICAgIGNvbnN0IHJlc3BvbnNlID0geWllbGQgdGhpcy5wb3N0KHVybCwgYm9keSwgb3B0aW9ucy5zaWduYWwpO1xuICAgICAgICAgICAgICAgIGlmICghcmVzcG9uc2Uub2spIHtcbiAgICAgICAgICAgICAgICAgICAgdGhyb3cgbmV3IFRvbkNvbm5lY3RFcnJvcihgQnJpZGdlIHNlbmQgZmFpbGVkLCBzdGF0dXMgJHtyZXNwb25zZS5zdGF0dXN9YCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSksIHtcbiAgICAgICAgICAgICAgICBhdHRlbXB0czogKF9hID0gb3B0aW9ucyA9PT0gbnVsbCB8fCBvcHRpb25zID09PSB2b2lkIDAgPyB2b2lkIDAgOiBvcHRpb25zLmF0dGVtcHRzKSAhPT0gbnVsbCAmJiBfYSAhPT0gdm9pZCAwID8gX2EgOiBOdW1iZXIuTUFYX1NBRkVfSU5URUdFUixcbiAgICAgICAgICAgICAgICBkZWxheU1zOiB0aGlzLmRlZmF1bHRSZXNlbmREZWxheSxcbiAgICAgICAgICAgICAgICBzaWduYWw6IG9wdGlvbnMgPT09IG51bGwgfHwgb3B0aW9ucyA9PT0gdm9pZCAwID8gdm9pZCAwIDogb3B0aW9ucy5zaWduYWxcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9KTtcbiAgICB9XG4gICAgcGF1c2UoKSB7XG4gICAgICAgIHRoaXMuZXZlbnRTb3VyY2UuZGlzcG9zZSgpLmNhdGNoKGUgPT4gbG9nRXJyb3IoYEJyaWRnZSBwYXVzZSBmYWlsZWQsICR7ZX1gKSk7XG4gICAgfVxuICAgIHVuUGF1c2UoKSB7XG4gICAgICAgIHJldHVybiBfX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7XG4gICAgICAgICAgICBjb25zdCBSRUNSRUFURV9XSVRIT1VUX0RFTEFZID0gMDtcbiAgICAgICAgICAgIHlpZWxkIHRoaXMuZXZlbnRTb3VyY2UucmVjcmVhdGUoUkVDUkVBVEVfV0lUSE9VVF9ERUxBWSk7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBjbG9zZSgpIHtcbiAgICAgICAgcmV0dXJuIF9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHtcbiAgICAgICAgICAgIHlpZWxkIHRoaXMuZXZlbnRTb3VyY2UuZGlzcG9zZSgpLmNhdGNoKGUgPT4gbG9nRXJyb3IoYEJyaWRnZSBjbG9zZSBmYWlsZWQsICR7ZX1gKSk7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBzZXRMaXN0ZW5lcihsaXN0ZW5lcikge1xuICAgICAgICB0aGlzLmxpc3RlbmVyID0gbGlzdGVuZXI7XG4gICAgfVxuICAgIHNldEVycm9yc0xpc3RlbmVyKGVycm9yc0xpc3RlbmVyKSB7XG4gICAgICAgIHRoaXMuZXJyb3JzTGlzdGVuZXIgPSBlcnJvcnNMaXN0ZW5lcjtcbiAgICB9XG4gICAgcG9zdCh1cmwsIGJvZHksIHNpZ25hbCkge1xuICAgICAgICByZXR1cm4gX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xuICAgICAgICAgICAgY29uc3QgcmVzcG9uc2UgPSB5aWVsZCBmZXRjaCh1cmwsIHtcbiAgICAgICAgICAgICAgICBtZXRob2Q6ICdwb3N0JyxcbiAgICAgICAgICAgICAgICBib2R5OiBib2R5LFxuICAgICAgICAgICAgICAgIHNpZ25hbDogc2lnbmFsXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIGlmICghcmVzcG9uc2Uub2spIHtcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgVG9uQ29ubmVjdEVycm9yKGBCcmlkZ2Ugc2VuZCBmYWlsZWQsIHN0YXR1cyAke3Jlc3BvbnNlLnN0YXR1c31gKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiByZXNwb25zZTtcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIGVycm9yc0hhbmRsZXIoZXZlbnRTb3VyY2UsIGUpIHtcbiAgICAgICAgcmV0dXJuIF9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHtcbiAgICAgICAgICAgIGlmICh0aGlzLmlzQ29ubmVjdGluZykge1xuICAgICAgICAgICAgICAgIGV2ZW50U291cmNlLmNsb3NlKCk7XG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IFRvbkNvbm5lY3RFcnJvcignQnJpZGdlIGVycm9yLCBmYWlsZWQgdG8gY29ubmVjdCcpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKHRoaXMuaXNSZWFkeSkge1xuICAgICAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuZXJyb3JzTGlzdGVuZXIoZSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGNhdGNoIChlKSB7IH1cbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAodGhpcy5pc0Nsb3NlZCkge1xuICAgICAgICAgICAgICAgIGV2ZW50U291cmNlLmNsb3NlKCk7XG4gICAgICAgICAgICAgICAgbG9nRGVidWcoYEJyaWRnZSByZWNvbm5lY3RpbmcsICR7dGhpcy5kZWZhdWx0UmVjb25uZWN0RGVsYXl9bXMgZGVsYXlgKTtcbiAgICAgICAgICAgICAgICByZXR1cm4geWllbGQgdGhpcy5ldmVudFNvdXJjZS5yZWNyZWF0ZSh0aGlzLmRlZmF1bHRSZWNvbm5lY3REZWxheSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB0aHJvdyBuZXcgVG9uQ29ubmVjdEVycm9yKCdCcmlkZ2UgZXJyb3IsIHVua25vd24gc3RhdGUnKTtcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIG1lc3NhZ2VzSGFuZGxlcihlKSB7XG4gICAgICAgIHJldHVybiBfX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7XG4gICAgICAgICAgICBpZiAoZS5kYXRhID09PSB0aGlzLmhlYXJ0YmVhdE1lc3NhZ2UpIHtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB5aWVsZCB0aGlzLmJyaWRnZUdhdGV3YXlTdG9yYWdlLnN0b3JlTGFzdEV2ZW50SWQoZS5sYXN0RXZlbnRJZCk7XG4gICAgICAgICAgICBpZiAodGhpcy5pc0Nsb3NlZCkge1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGxldCBicmlkZ2VJbmNvbWluZ01lc3NhZ2U7XG4gICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgIGJyaWRnZUluY29taW5nTWVzc2FnZSA9IEpTT04ucGFyc2UoZS5kYXRhKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNhdGNoIChlKSB7XG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IFRvbkNvbm5lY3RFcnJvcihgQnJpZGdlIG1lc3NhZ2UgcGFyc2UgZmFpbGVkLCBtZXNzYWdlICR7ZS5kYXRhfWApO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdGhpcy5saXN0ZW5lcihicmlkZ2VJbmNvbWluZ01lc3NhZ2UpO1xuICAgICAgICB9KTtcbiAgICB9XG59XG4vKipcbiAqIENyZWF0ZXMgYW4gZXZlbnQgc291cmNlLlxuICogQHBhcmFtIHtDcmVhdGVFdmVudFNvdXJjZUNvbmZpZ30gY29uZmlnIC0gQ29uZmlndXJhdGlvbiBmb3IgY3JlYXRpbmcgYW4gZXZlbnQgc291cmNlLlxuICovXG5mdW5jdGlvbiBjcmVhdGVFdmVudFNvdXJjZShjb25maWcpIHtcbiAgICByZXR1cm4gX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xuICAgICAgICByZXR1cm4geWllbGQgdGltZW91dCgocmVzb2x2ZSwgcmVqZWN0LCBkZWZlck9wdGlvbnMpID0+IF9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHtcbiAgICAgICAgICAgIHZhciBfYTtcbiAgICAgICAgICAgIGNvbnN0IGFib3J0Q29udHJvbGxlciA9IGNyZWF0ZUFib3J0Q29udHJvbGxlcihkZWZlck9wdGlvbnMuc2lnbmFsKTtcbiAgICAgICAgICAgIGNvbnN0IHNpZ25hbCA9IGFib3J0Q29udHJvbGxlci5zaWduYWw7XG4gICAgICAgICAgICBpZiAoc2lnbmFsLmFib3J0ZWQpIHtcbiAgICAgICAgICAgICAgICByZWplY3QobmV3IFRvbkNvbm5lY3RFcnJvcignQnJpZGdlIGNvbm5lY3Rpb24gYWJvcnRlZCcpKTtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjb25zdCB1cmwgPSBuZXcgVVJMKGFkZFBhdGhUb1VybChjb25maWcuYnJpZGdlVXJsLCBjb25maWcuc3NlUGF0aCkpO1xuICAgICAgICAgICAgdXJsLnNlYXJjaFBhcmFtcy5hcHBlbmQoJ2NsaWVudF9pZCcsIGNvbmZpZy5zZXNzaW9uSWQpO1xuICAgICAgICAgICAgY29uc3QgbGFzdEV2ZW50SWQgPSB5aWVsZCBjb25maWcuYnJpZGdlR2F0ZXdheVN0b3JhZ2UuZ2V0TGFzdEV2ZW50SWQoKTtcbiAgICAgICAgICAgIGlmIChsYXN0RXZlbnRJZCkge1xuICAgICAgICAgICAgICAgIHVybC5zZWFyY2hQYXJhbXMuYXBwZW5kKCdsYXN0X2V2ZW50X2lkJywgbGFzdEV2ZW50SWQpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKHNpZ25hbC5hYm9ydGVkKSB7XG4gICAgICAgICAgICAgICAgcmVqZWN0KG5ldyBUb25Db25uZWN0RXJyb3IoJ0JyaWRnZSBjb25uZWN0aW9uIGFib3J0ZWQnKSk7XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY29uc3QgZXZlbnRTb3VyY2UgPSBuZXcgRXZlbnRTb3VyY2UodXJsLnRvU3RyaW5nKCkpO1xuICAgICAgICAgICAgZXZlbnRTb3VyY2Uub25lcnJvciA9IChyZWFzb24pID0+IF9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHtcbiAgICAgICAgICAgICAgICBpZiAoc2lnbmFsLmFib3J0ZWQpIHtcbiAgICAgICAgICAgICAgICAgICAgZXZlbnRTb3VyY2UuY2xvc2UoKTtcbiAgICAgICAgICAgICAgICAgICAgcmVqZWN0KG5ldyBUb25Db25uZWN0RXJyb3IoJ0JyaWRnZSBjb25uZWN0aW9uIGFib3J0ZWQnKSk7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgbmV3SW5zdGFuY2UgPSB5aWVsZCBjb25maWcuZXJyb3JIYW5kbGVyKGV2ZW50U291cmNlLCByZWFzb24pO1xuICAgICAgICAgICAgICAgICAgICBpZiAobmV3SW5zdGFuY2UgIT09IGV2ZW50U291cmNlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBldmVudFNvdXJjZS5jbG9zZSgpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGlmIChuZXdJbnN0YW5jZSAmJiBuZXdJbnN0YW5jZSAhPT0gZXZlbnRTb3VyY2UpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlc29sdmUobmV3SW5zdGFuY2UpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGNhdGNoIChlKSB7XG4gICAgICAgICAgICAgICAgICAgIGV2ZW50U291cmNlLmNsb3NlKCk7XG4gICAgICAgICAgICAgICAgICAgIHJlamVjdChlKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIGV2ZW50U291cmNlLm9ub3BlbiA9ICgpID0+IHtcbiAgICAgICAgICAgICAgICBpZiAoc2lnbmFsLmFib3J0ZWQpIHtcbiAgICAgICAgICAgICAgICAgICAgZXZlbnRTb3VyY2UuY2xvc2UoKTtcbiAgICAgICAgICAgICAgICAgICAgcmVqZWN0KG5ldyBUb25Db25uZWN0RXJyb3IoJ0JyaWRnZSBjb25uZWN0aW9uIGFib3J0ZWQnKSk7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcmVzb2x2ZShldmVudFNvdXJjZSk7XG4gICAgICAgICAgICB9O1xuICAgICAgICAgICAgZXZlbnRTb3VyY2Uub25tZXNzYWdlID0gKGV2ZW50KSA9PiB7XG4gICAgICAgICAgICAgICAgaWYgKHNpZ25hbC5hYm9ydGVkKSB7XG4gICAgICAgICAgICAgICAgICAgIGV2ZW50U291cmNlLmNsb3NlKCk7XG4gICAgICAgICAgICAgICAgICAgIHJlamVjdChuZXcgVG9uQ29ubmVjdEVycm9yKCdCcmlkZ2UgY29ubmVjdGlvbiBhYm9ydGVkJykpO1xuICAgICAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGNvbmZpZy5tZXNzYWdlSGFuZGxlcihldmVudCk7XG4gICAgICAgICAgICB9O1xuICAgICAgICAgICAgKF9hID0gY29uZmlnLnNpZ25hbCkgPT09IG51bGwgfHwgX2EgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9hLmFkZEV2ZW50TGlzdGVuZXIoJ2Fib3J0JywgKCkgPT4ge1xuICAgICAgICAgICAgICAgIGV2ZW50U291cmNlLmNsb3NlKCk7XG4gICAgICAgICAgICAgICAgcmVqZWN0KG5ldyBUb25Db25uZWN0RXJyb3IoJ0JyaWRnZSBjb25uZWN0aW9uIGFib3J0ZWQnKSk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSksIHsgdGltZW91dDogY29uZmlnLm9wZW5pbmdEZWFkbGluZU1TLCBzaWduYWw6IGNvbmZpZy5zaWduYWwgfSk7XG4gICAgfSk7XG59XG5cbmZ1bmN0aW9uIGlzUGVuZGluZ0Nvbm5lY3Rpb25IdHRwKGNvbm5lY3Rpb24pIHtcbiAgICByZXR1cm4gISgnY29ubmVjdEV2ZW50JyBpbiBjb25uZWN0aW9uKTtcbn1cblxuY2xhc3MgQnJpZGdlQ29ubmVjdGlvblN0b3JhZ2Uge1xuICAgIGNvbnN0cnVjdG9yKHN0b3JhZ2UpIHtcbiAgICAgICAgdGhpcy5zdG9yYWdlID0gc3RvcmFnZTtcbiAgICAgICAgdGhpcy5zdG9yZUtleSA9ICd0b24tY29ubmVjdC1zdG9yYWdlX2JyaWRnZS1jb25uZWN0aW9uJztcbiAgICB9XG4gICAgc3RvcmVDb25uZWN0aW9uKGNvbm5lY3Rpb24pIHtcbiAgICAgICAgcmV0dXJuIF9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHtcbiAgICAgICAgICAgIGlmIChjb25uZWN0aW9uLnR5cGUgPT09ICdpbmplY3RlZCcpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5zdG9yYWdlLnNldEl0ZW0odGhpcy5zdG9yZUtleSwgSlNPTi5zdHJpbmdpZnkoY29ubmVjdGlvbikpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKCFpc1BlbmRpbmdDb25uZWN0aW9uSHR0cChjb25uZWN0aW9uKSkge1xuICAgICAgICAgICAgICAgIGNvbnN0IHJhd1Nlc3Npb24gPSB7XG4gICAgICAgICAgICAgICAgICAgIHNlc3Npb25LZXlQYWlyOiBjb25uZWN0aW9uLnNlc3Npb24uc2Vzc2lvbkNyeXB0by5zdHJpbmdpZnlLZXlwYWlyKCksXG4gICAgICAgICAgICAgICAgICAgIHdhbGxldFB1YmxpY0tleTogY29ubmVjdGlvbi5zZXNzaW9uLndhbGxldFB1YmxpY0tleSxcbiAgICAgICAgICAgICAgICAgICAgYnJpZGdlVXJsOiBjb25uZWN0aW9uLnNlc3Npb24uYnJpZGdlVXJsXG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICBjb25zdCByYXdDb25uZWN0aW9uID0ge1xuICAgICAgICAgICAgICAgICAgICB0eXBlOiAnaHR0cCcsXG4gICAgICAgICAgICAgICAgICAgIGNvbm5lY3RFdmVudDogY29ubmVjdGlvbi5jb25uZWN0RXZlbnQsXG4gICAgICAgICAgICAgICAgICAgIHNlc3Npb246IHJhd1Nlc3Npb24sXG4gICAgICAgICAgICAgICAgICAgIGxhc3RXYWxsZXRFdmVudElkOiBjb25uZWN0aW9uLmxhc3RXYWxsZXRFdmVudElkLFxuICAgICAgICAgICAgICAgICAgICBuZXh0UnBjUmVxdWVzdElkOiBjb25uZWN0aW9uLm5leHRScGNSZXF1ZXN0SWRcbiAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLnN0b3JhZ2Uuc2V0SXRlbSh0aGlzLnN0b3JlS2V5LCBKU09OLnN0cmluZ2lmeShyYXdDb25uZWN0aW9uKSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjb25zdCByYXdDb25uZWN0aW9uID0ge1xuICAgICAgICAgICAgICAgIHR5cGU6ICdodHRwJyxcbiAgICAgICAgICAgICAgICBjb25uZWN0aW9uU291cmNlOiBjb25uZWN0aW9uLmNvbm5lY3Rpb25Tb3VyY2UsXG4gICAgICAgICAgICAgICAgc2Vzc2lvbkNyeXB0bzogY29ubmVjdGlvbi5zZXNzaW9uQ3J5cHRvLnN0cmluZ2lmeUtleXBhaXIoKVxuICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLnN0b3JhZ2Uuc2V0SXRlbSh0aGlzLnN0b3JlS2V5LCBKU09OLnN0cmluZ2lmeShyYXdDb25uZWN0aW9uKSk7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICByZW1vdmVDb25uZWN0aW9uKCkge1xuICAgICAgICByZXR1cm4gX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuc3RvcmFnZS5yZW1vdmVJdGVtKHRoaXMuc3RvcmVLZXkpO1xuICAgICAgICB9KTtcbiAgICB9XG4gICAgZ2V0Q29ubmVjdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIF9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHtcbiAgICAgICAgICAgIGNvbnN0IHN0b3JlZCA9IHlpZWxkIHRoaXMuc3RvcmFnZS5nZXRJdGVtKHRoaXMuc3RvcmVLZXkpO1xuICAgICAgICAgICAgaWYgKCFzdG9yZWQpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNvbnN0IGNvbm5lY3Rpb24gPSBKU09OLnBhcnNlKHN0b3JlZCk7XG4gICAgICAgICAgICBpZiAoY29ubmVjdGlvbi50eXBlID09PSAnaW5qZWN0ZWQnKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGNvbm5lY3Rpb247XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoJ2Nvbm5lY3RFdmVudCcgaW4gY29ubmVjdGlvbikge1xuICAgICAgICAgICAgICAgIGNvbnN0IHNlc3Npb25DcnlwdG8gPSBuZXcgU2Vzc2lvbkNyeXB0byhjb25uZWN0aW9uLnNlc3Npb24uc2Vzc2lvbktleVBhaXIpO1xuICAgICAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgICAgIHR5cGU6ICdodHRwJyxcbiAgICAgICAgICAgICAgICAgICAgY29ubmVjdEV2ZW50OiBjb25uZWN0aW9uLmNvbm5lY3RFdmVudCxcbiAgICAgICAgICAgICAgICAgICAgbGFzdFdhbGxldEV2ZW50SWQ6IGNvbm5lY3Rpb24ubGFzdFdhbGxldEV2ZW50SWQsXG4gICAgICAgICAgICAgICAgICAgIG5leHRScGNSZXF1ZXN0SWQ6IGNvbm5lY3Rpb24ubmV4dFJwY1JlcXVlc3RJZCxcbiAgICAgICAgICAgICAgICAgICAgc2Vzc2lvbjoge1xuICAgICAgICAgICAgICAgICAgICAgICAgc2Vzc2lvbkNyeXB0byxcbiAgICAgICAgICAgICAgICAgICAgICAgIGJyaWRnZVVybDogY29ubmVjdGlvbi5zZXNzaW9uLmJyaWRnZVVybCxcbiAgICAgICAgICAgICAgICAgICAgICAgIHdhbGxldFB1YmxpY0tleTogY29ubmVjdGlvbi5zZXNzaW9uLndhbGxldFB1YmxpY0tleVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgdHlwZTogJ2h0dHAnLFxuICAgICAgICAgICAgICAgIHNlc3Npb25DcnlwdG86IG5ldyBTZXNzaW9uQ3J5cHRvKGNvbm5lY3Rpb24uc2Vzc2lvbkNyeXB0byksXG4gICAgICAgICAgICAgICAgY29ubmVjdGlvblNvdXJjZTogY29ubmVjdGlvbi5jb25uZWN0aW9uU291cmNlXG4gICAgICAgICAgICB9O1xuICAgICAgICB9KTtcbiAgICB9XG4gICAgZ2V0SHR0cENvbm5lY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiBfX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7XG4gICAgICAgICAgICBjb25zdCBjb25uZWN0aW9uID0geWllbGQgdGhpcy5nZXRDb25uZWN0aW9uKCk7XG4gICAgICAgICAgICBpZiAoIWNvbm5lY3Rpb24pIHtcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgVG9uQ29ubmVjdEVycm9yKCdUcnlpbmcgdG8gcmVhZCBIVFRQIGNvbm5lY3Rpb24gc291cmNlIHdoaWxlIG5vdGhpbmcgaXMgc3RvcmVkJyk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoY29ubmVjdGlvbi50eXBlID09PSAnaW5qZWN0ZWQnKSB7XG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IFRvbkNvbm5lY3RFcnJvcignVHJ5aW5nIHRvIHJlYWQgSFRUUCBjb25uZWN0aW9uIHNvdXJjZSB3aGlsZSBpbmplY3RlZCBjb25uZWN0aW9uIGlzIHN0b3JlZCcpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIGNvbm5lY3Rpb247XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBnZXRIdHRwUGVuZGluZ0Nvbm5lY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiBfX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7XG4gICAgICAgICAgICBjb25zdCBjb25uZWN0aW9uID0geWllbGQgdGhpcy5nZXRDb25uZWN0aW9uKCk7XG4gICAgICAgICAgICBpZiAoIWNvbm5lY3Rpb24pIHtcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgVG9uQ29ubmVjdEVycm9yKCdUcnlpbmcgdG8gcmVhZCBIVFRQIGNvbm5lY3Rpb24gc291cmNlIHdoaWxlIG5vdGhpbmcgaXMgc3RvcmVkJyk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoY29ubmVjdGlvbi50eXBlID09PSAnaW5qZWN0ZWQnKSB7XG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IFRvbkNvbm5lY3RFcnJvcignVHJ5aW5nIHRvIHJlYWQgSFRUUCBjb25uZWN0aW9uIHNvdXJjZSB3aGlsZSBpbmplY3RlZCBjb25uZWN0aW9uIGlzIHN0b3JlZCcpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKCFpc1BlbmRpbmdDb25uZWN0aW9uSHR0cChjb25uZWN0aW9uKSkge1xuICAgICAgICAgICAgICAgIHRocm93IG5ldyBUb25Db25uZWN0RXJyb3IoJ1RyeWluZyB0byByZWFkIEhUVFAtcGVuZGluZyBjb25uZWN0aW9uIHdoaWxlIGh0dHAgY29ubmVjdGlvbiBpcyBzdG9yZWQnKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBjb25uZWN0aW9uO1xuICAgICAgICB9KTtcbiAgICB9XG4gICAgZ2V0SW5qZWN0ZWRDb25uZWN0aW9uKCkge1xuICAgICAgICByZXR1cm4gX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xuICAgICAgICAgICAgY29uc3QgY29ubmVjdGlvbiA9IHlpZWxkIHRoaXMuZ2V0Q29ubmVjdGlvbigpO1xuICAgICAgICAgICAgaWYgKCFjb25uZWN0aW9uKSB7XG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IFRvbkNvbm5lY3RFcnJvcignVHJ5aW5nIHRvIHJlYWQgSW5qZWN0ZWQgYnJpZGdlIGNvbm5lY3Rpb24gc291cmNlIHdoaWxlIG5vdGhpbmcgaXMgc3RvcmVkJyk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoKGNvbm5lY3Rpb24gPT09IG51bGwgfHwgY29ubmVjdGlvbiA9PT0gdm9pZCAwID8gdm9pZCAwIDogY29ubmVjdGlvbi50eXBlKSA9PT0gJ2h0dHAnKSB7XG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IFRvbkNvbm5lY3RFcnJvcignVHJ5aW5nIHRvIHJlYWQgSW5qZWN0ZWQgYnJpZGdlIGNvbm5lY3Rpb24gc291cmNlIHdoaWxlIEhUVFAgY29ubmVjdGlvbiBpcyBzdG9yZWQnKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBjb25uZWN0aW9uO1xuICAgICAgICB9KTtcbiAgICB9XG4gICAgc3RvcmVkQ29ubmVjdGlvblR5cGUoKSB7XG4gICAgICAgIHJldHVybiBfX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7XG4gICAgICAgICAgICBjb25zdCBzdG9yZWQgPSB5aWVsZCB0aGlzLnN0b3JhZ2UuZ2V0SXRlbSh0aGlzLnN0b3JlS2V5KTtcbiAgICAgICAgICAgIGlmICghc3RvcmVkKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjb25zdCBjb25uZWN0aW9uID0gSlNPTi5wYXJzZShzdG9yZWQpO1xuICAgICAgICAgICAgcmV0dXJuIGNvbm5lY3Rpb24udHlwZTtcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIHN0b3JlTGFzdFdhbGxldEV2ZW50SWQoaWQpIHtcbiAgICAgICAgcmV0dXJuIF9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHtcbiAgICAgICAgICAgIGNvbnN0IGNvbm5lY3Rpb24gPSB5aWVsZCB0aGlzLmdldENvbm5lY3Rpb24oKTtcbiAgICAgICAgICAgIGlmIChjb25uZWN0aW9uICYmIGNvbm5lY3Rpb24udHlwZSA9PT0gJ2h0dHAnICYmICFpc1BlbmRpbmdDb25uZWN0aW9uSHR0cChjb25uZWN0aW9uKSkge1xuICAgICAgICAgICAgICAgIGNvbm5lY3Rpb24ubGFzdFdhbGxldEV2ZW50SWQgPSBpZDtcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5zdG9yZUNvbm5lY3Rpb24oY29ubmVjdGlvbik7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBnZXRMYXN0V2FsbGV0RXZlbnRJZCgpIHtcbiAgICAgICAgcmV0dXJuIF9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHtcbiAgICAgICAgICAgIGNvbnN0IGNvbm5lY3Rpb24gPSB5aWVsZCB0aGlzLmdldENvbm5lY3Rpb24oKTtcbiAgICAgICAgICAgIGlmIChjb25uZWN0aW9uICYmICdsYXN0V2FsbGV0RXZlbnRJZCcgaW4gY29ubmVjdGlvbikge1xuICAgICAgICAgICAgICAgIHJldHVybiBjb25uZWN0aW9uLmxhc3RXYWxsZXRFdmVudElkO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIGluY3JlYXNlTmV4dFJwY1JlcXVlc3RJZCgpIHtcbiAgICAgICAgcmV0dXJuIF9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHtcbiAgICAgICAgICAgIGNvbnN0IGNvbm5lY3Rpb24gPSB5aWVsZCB0aGlzLmdldENvbm5lY3Rpb24oKTtcbiAgICAgICAgICAgIGlmIChjb25uZWN0aW9uICYmICduZXh0UnBjUmVxdWVzdElkJyBpbiBjb25uZWN0aW9uKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgbGFzdElkID0gY29ubmVjdGlvbi5uZXh0UnBjUmVxdWVzdElkIHx8IDA7XG4gICAgICAgICAgICAgICAgY29ubmVjdGlvbi5uZXh0UnBjUmVxdWVzdElkID0gbGFzdElkICsgMTtcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5zdG9yZUNvbm5lY3Rpb24oY29ubmVjdGlvbik7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBnZXROZXh0UnBjUmVxdWVzdElkKCkge1xuICAgICAgICByZXR1cm4gX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xuICAgICAgICAgICAgY29uc3QgY29ubmVjdGlvbiA9IHlpZWxkIHRoaXMuZ2V0Q29ubmVjdGlvbigpO1xuICAgICAgICAgICAgaWYgKGNvbm5lY3Rpb24gJiYgJ25leHRScGNSZXF1ZXN0SWQnIGluIGNvbm5lY3Rpb24pIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gY29ubmVjdGlvbi5uZXh0UnBjUmVxdWVzdElkIHx8IDA7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gMDtcbiAgICAgICAgfSk7XG4gICAgfVxufVxuXG5jb25zdCBQUk9UT0NPTF9WRVJTSU9OID0gMjtcblxuY2xhc3MgQnJpZGdlUHJvdmlkZXIge1xuICAgIGNvbnN0cnVjdG9yKHN0b3JhZ2UsIHdhbGxldENvbm5lY3Rpb25Tb3VyY2UpIHtcbiAgICAgICAgdGhpcy5zdG9yYWdlID0gc3RvcmFnZTtcbiAgICAgICAgdGhpcy53YWxsZXRDb25uZWN0aW9uU291cmNlID0gd2FsbGV0Q29ubmVjdGlvblNvdXJjZTtcbiAgICAgICAgdGhpcy50eXBlID0gJ2h0dHAnO1xuICAgICAgICB0aGlzLnN0YW5kYXJkVW5pdmVyc2FsTGluayA9ICd0YzovLyc7XG4gICAgICAgIHRoaXMucGVuZGluZ1JlcXVlc3RzID0gbmV3IE1hcCgpO1xuICAgICAgICB0aGlzLnNlc3Npb24gPSBudWxsO1xuICAgICAgICB0aGlzLmdhdGV3YXkgPSBudWxsO1xuICAgICAgICB0aGlzLnBlbmRpbmdHYXRld2F5cyA9IFtdO1xuICAgICAgICB0aGlzLmxpc3RlbmVycyA9IFtdO1xuICAgICAgICB0aGlzLmRlZmF1bHRPcGVuaW5nRGVhZGxpbmVNUyA9IDEyMDAwO1xuICAgICAgICB0aGlzLmRlZmF1bHRSZXRyeVRpbWVvdXRNUyA9IDIwMDA7XG4gICAgICAgIHRoaXMuY29ubmVjdGlvblN0b3JhZ2UgPSBuZXcgQnJpZGdlQ29ubmVjdGlvblN0b3JhZ2Uoc3RvcmFnZSk7XG4gICAgfVxuICAgIHN0YXRpYyBmcm9tU3RvcmFnZShzdG9yYWdlKSB7XG4gICAgICAgIHJldHVybiBfX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7XG4gICAgICAgICAgICBjb25zdCBicmlkZ2VDb25uZWN0aW9uU3RvcmFnZSA9IG5ldyBCcmlkZ2VDb25uZWN0aW9uU3RvcmFnZShzdG9yYWdlKTtcbiAgICAgICAgICAgIGNvbnN0IGNvbm5lY3Rpb24gPSB5aWVsZCBicmlkZ2VDb25uZWN0aW9uU3RvcmFnZS5nZXRIdHRwQ29ubmVjdGlvbigpO1xuICAgICAgICAgICAgaWYgKGlzUGVuZGluZ0Nvbm5lY3Rpb25IdHRwKGNvbm5lY3Rpb24pKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIG5ldyBCcmlkZ2VQcm92aWRlcihzdG9yYWdlLCBjb25uZWN0aW9uLmNvbm5lY3Rpb25Tb3VyY2UpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIG5ldyBCcmlkZ2VQcm92aWRlcihzdG9yYWdlLCB7IGJyaWRnZVVybDogY29ubmVjdGlvbi5zZXNzaW9uLmJyaWRnZVVybCB9KTtcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIGNvbm5lY3QobWVzc2FnZSwgb3B0aW9ucykge1xuICAgICAgICB2YXIgX2E7XG4gICAgICAgIGNvbnN0IGFib3J0Q29udHJvbGxlciA9IGNyZWF0ZUFib3J0Q29udHJvbGxlcihvcHRpb25zID09PSBudWxsIHx8IG9wdGlvbnMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IG9wdGlvbnMuc2lnbmFsKTtcbiAgICAgICAgKF9hID0gdGhpcy5hYm9ydENvbnRyb2xsZXIpID09PSBudWxsIHx8IF9hID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYS5hYm9ydCgpO1xuICAgICAgICB0aGlzLmFib3J0Q29udHJvbGxlciA9IGFib3J0Q29udHJvbGxlcjtcbiAgICAgICAgdGhpcy5jbG9zZUdhdGV3YXlzKCk7XG4gICAgICAgIGNvbnN0IHNlc3Npb25DcnlwdG8gPSBuZXcgU2Vzc2lvbkNyeXB0bygpO1xuICAgICAgICB0aGlzLnNlc3Npb24gPSB7XG4gICAgICAgICAgICBzZXNzaW9uQ3J5cHRvLFxuICAgICAgICAgICAgYnJpZGdlVXJsOiAnYnJpZGdlVXJsJyBpbiB0aGlzLndhbGxldENvbm5lY3Rpb25Tb3VyY2VcbiAgICAgICAgICAgICAgICA/IHRoaXMud2FsbGV0Q29ubmVjdGlvblNvdXJjZS5icmlkZ2VVcmxcbiAgICAgICAgICAgICAgICA6ICcnXG4gICAgICAgIH07XG4gICAgICAgIHRoaXMuY29ubmVjdGlvblN0b3JhZ2VcbiAgICAgICAgICAgIC5zdG9yZUNvbm5lY3Rpb24oe1xuICAgICAgICAgICAgdHlwZTogJ2h0dHAnLFxuICAgICAgICAgICAgY29ubmVjdGlvblNvdXJjZTogdGhpcy53YWxsZXRDb25uZWN0aW9uU291cmNlLFxuICAgICAgICAgICAgc2Vzc2lvbkNyeXB0b1xuICAgICAgICB9KVxuICAgICAgICAgICAgLnRoZW4oKCkgPT4gX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xuICAgICAgICAgICAgaWYgKGFib3J0Q29udHJvbGxlci5zaWduYWwuYWJvcnRlZCkge1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHlpZWxkIGNhbGxGb3JTdWNjZXNzKF9vcHRpb25zID0+IHtcbiAgICAgICAgICAgICAgICB2YXIgX2E7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMub3BlbkdhdGV3YXlzKHNlc3Npb25DcnlwdG8sIHtcbiAgICAgICAgICAgICAgICAgICAgb3BlbmluZ0RlYWRsaW5lTVM6IChfYSA9IG9wdGlvbnMgPT09IG51bGwgfHwgb3B0aW9ucyA9PT0gdm9pZCAwID8gdm9pZCAwIDogb3B0aW9ucy5vcGVuaW5nRGVhZGxpbmVNUykgIT09IG51bGwgJiYgX2EgIT09IHZvaWQgMCA/IF9hIDogdGhpcy5kZWZhdWx0T3BlbmluZ0RlYWRsaW5lTVMsXG4gICAgICAgICAgICAgICAgICAgIHNpZ25hbDogX29wdGlvbnMgPT09IG51bGwgfHwgX29wdGlvbnMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9vcHRpb25zLnNpZ25hbFxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfSwge1xuICAgICAgICAgICAgICAgIGF0dGVtcHRzOiBOdW1iZXIuTUFYX1NBRkVfSU5URUdFUixcbiAgICAgICAgICAgICAgICBkZWxheU1zOiB0aGlzLmRlZmF1bHRSZXRyeVRpbWVvdXRNUyxcbiAgICAgICAgICAgICAgICBzaWduYWw6IGFib3J0Q29udHJvbGxlci5zaWduYWxcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9KSk7XG4gICAgICAgIGNvbnN0IHVuaXZlcnNhbExpbmsgPSAndW5pdmVyc2FsTGluaycgaW4gdGhpcy53YWxsZXRDb25uZWN0aW9uU291cmNlICYmXG4gICAgICAgICAgICB0aGlzLndhbGxldENvbm5lY3Rpb25Tb3VyY2UudW5pdmVyc2FsTGlua1xuICAgICAgICAgICAgPyB0aGlzLndhbGxldENvbm5lY3Rpb25Tb3VyY2UudW5pdmVyc2FsTGlua1xuICAgICAgICAgICAgOiB0aGlzLnN0YW5kYXJkVW5pdmVyc2FsTGluaztcbiAgICAgICAgcmV0dXJuIHRoaXMuZ2VuZXJhdGVVbml2ZXJzYWxMaW5rKHVuaXZlcnNhbExpbmssIG1lc3NhZ2UpO1xuICAgIH1cbiAgICByZXN0b3JlQ29ubmVjdGlvbihvcHRpb25zKSB7XG4gICAgICAgIHZhciBfYSwgX2I7XG4gICAgICAgIHJldHVybiBfX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7XG4gICAgICAgICAgICBjb25zdCBhYm9ydENvbnRyb2xsZXIgPSBjcmVhdGVBYm9ydENvbnRyb2xsZXIob3B0aW9ucyA9PT0gbnVsbCB8fCBvcHRpb25zID09PSB2b2lkIDAgPyB2b2lkIDAgOiBvcHRpb25zLnNpZ25hbCk7XG4gICAgICAgICAgICAoX2EgPSB0aGlzLmFib3J0Q29udHJvbGxlcikgPT09IG51bGwgfHwgX2EgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9hLmFib3J0KCk7XG4gICAgICAgICAgICB0aGlzLmFib3J0Q29udHJvbGxlciA9IGFib3J0Q29udHJvbGxlcjtcbiAgICAgICAgICAgIGlmIChhYm9ydENvbnRyb2xsZXIuc2lnbmFsLmFib3J0ZWQpIHtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB0aGlzLmNsb3NlR2F0ZXdheXMoKTtcbiAgICAgICAgICAgIGNvbnN0IHN0b3JlZENvbm5lY3Rpb24gPSB5aWVsZCB0aGlzLmNvbm5lY3Rpb25TdG9yYWdlLmdldEh0dHBDb25uZWN0aW9uKCk7XG4gICAgICAgICAgICBpZiAoIXN0b3JlZENvbm5lY3Rpb24pIHtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoYWJvcnRDb250cm9sbGVyLnNpZ25hbC5hYm9ydGVkKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY29uc3Qgb3BlbmluZ0RlYWRsaW5lTVMgPSAoX2IgPSBvcHRpb25zID09PSBudWxsIHx8IG9wdGlvbnMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IG9wdGlvbnMub3BlbmluZ0RlYWRsaW5lTVMpICE9PSBudWxsICYmIF9iICE9PSB2b2lkIDAgPyBfYiA6IHRoaXMuZGVmYXVsdE9wZW5pbmdEZWFkbGluZU1TO1xuICAgICAgICAgICAgaWYgKGlzUGVuZGluZ0Nvbm5lY3Rpb25IdHRwKHN0b3JlZENvbm5lY3Rpb24pKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5zZXNzaW9uID0ge1xuICAgICAgICAgICAgICAgICAgICBzZXNzaW9uQ3J5cHRvOiBzdG9yZWRDb25uZWN0aW9uLnNlc3Npb25DcnlwdG8sXG4gICAgICAgICAgICAgICAgICAgIGJyaWRnZVVybDogJ2JyaWRnZVVybCcgaW4gdGhpcy53YWxsZXRDb25uZWN0aW9uU291cmNlXG4gICAgICAgICAgICAgICAgICAgICAgICA/IHRoaXMud2FsbGV0Q29ubmVjdGlvblNvdXJjZS5icmlkZ2VVcmxcbiAgICAgICAgICAgICAgICAgICAgICAgIDogJydcbiAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgICAgIHJldHVybiB5aWVsZCB0aGlzLm9wZW5HYXRld2F5cyhzdG9yZWRDb25uZWN0aW9uLnNlc3Npb25DcnlwdG8sIHtcbiAgICAgICAgICAgICAgICAgICAgb3BlbmluZ0RlYWRsaW5lTVM6IG9wZW5pbmdEZWFkbGluZU1TLFxuICAgICAgICAgICAgICAgICAgICBzaWduYWw6IGFib3J0Q29udHJvbGxlciA9PT0gbnVsbCB8fCBhYm9ydENvbnRyb2xsZXIgPT09IHZvaWQgMCA/IHZvaWQgMCA6IGFib3J0Q29udHJvbGxlci5zaWduYWxcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChBcnJheS5pc0FycmF5KHRoaXMud2FsbGV0Q29ubmVjdGlvblNvdXJjZSkpIHtcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgVG9uQ29ubmVjdEVycm9yKCdJbnRlcm5hbCBlcnJvci4gQ29ubmVjdGlvbiBzb3VyY2UgaXMgYXJyYXkgd2hpbGUgV2FsbGV0Q29ubmVjdGlvblNvdXJjZUhUVFAgd2FzIGV4cGVjdGVkLicpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdGhpcy5zZXNzaW9uID0gc3RvcmVkQ29ubmVjdGlvbi5zZXNzaW9uO1xuICAgICAgICAgICAgaWYgKHRoaXMuZ2F0ZXdheSkge1xuICAgICAgICAgICAgICAgIGxvZ0RlYnVnKCdHYXRld2F5IGlzIGFscmVhZHkgb3BlbmVkLCBjbG9zaW5nIHByZXZpb3VzIGdhdGV3YXknKTtcbiAgICAgICAgICAgICAgICB5aWVsZCB0aGlzLmdhdGV3YXkuY2xvc2UoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHRoaXMuZ2F0ZXdheSA9IG5ldyBCcmlkZ2VHYXRld2F5KHRoaXMuc3RvcmFnZSwgdGhpcy53YWxsZXRDb25uZWN0aW9uU291cmNlLmJyaWRnZVVybCwgc3RvcmVkQ29ubmVjdGlvbi5zZXNzaW9uLnNlc3Npb25DcnlwdG8uc2Vzc2lvbklkLCB0aGlzLmdhdGV3YXlMaXN0ZW5lci5iaW5kKHRoaXMpLCB0aGlzLmdhdGV3YXlFcnJvcnNMaXN0ZW5lci5iaW5kKHRoaXMpKTtcbiAgICAgICAgICAgIGlmIChhYm9ydENvbnRyb2xsZXIuc2lnbmFsLmFib3J0ZWQpIHtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAvLyBub3RpZnkgbGlzdGVuZXJzIGFib3V0IHN0b3JlZCBjb25uZWN0aW9uXG4gICAgICAgICAgICB0aGlzLmxpc3RlbmVycy5mb3JFYWNoKGxpc3RlbmVyID0+IGxpc3RlbmVyKHN0b3JlZENvbm5lY3Rpb24uY29ubmVjdEV2ZW50KSk7XG4gICAgICAgICAgICAvLyB3YWl0IGZvciB0aGUgY29ubmVjdGlvbiB0byBiZSBvcGVuZWRcbiAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgeWllbGQgY2FsbEZvclN1Y2Nlc3Mob3B0aW9ucyA9PiB0aGlzLmdhdGV3YXkucmVnaXN0ZXJTZXNzaW9uKHtcbiAgICAgICAgICAgICAgICAgICAgb3BlbmluZ0RlYWRsaW5lTVM6IG9wZW5pbmdEZWFkbGluZU1TLFxuICAgICAgICAgICAgICAgICAgICBzaWduYWw6IG9wdGlvbnMuc2lnbmFsXG4gICAgICAgICAgICAgICAgfSksIHtcbiAgICAgICAgICAgICAgICAgICAgYXR0ZW1wdHM6IE51bWJlci5NQVhfU0FGRV9JTlRFR0VSLFxuICAgICAgICAgICAgICAgICAgICBkZWxheU1zOiB0aGlzLmRlZmF1bHRSZXRyeVRpbWVvdXRNUyxcbiAgICAgICAgICAgICAgICAgICAgc2lnbmFsOiBhYm9ydENvbnRyb2xsZXIuc2lnbmFsXG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjYXRjaCAoZSkge1xuICAgICAgICAgICAgICAgIHlpZWxkIHRoaXMuZGlzY29ubmVjdCh7IHNpZ25hbDogYWJvcnRDb250cm9sbGVyLnNpZ25hbCB9KTtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBzZW5kUmVxdWVzdChyZXF1ZXN0LCBvcHRpb25zT3JPblJlcXVlc3RTZW50KSB7XG4gICAgICAgIC8vIFRPRE86IHJlbW92ZSBkZXByZWNhdGVkIG1ldGhvZFxuICAgICAgICBjb25zdCBvcHRpb25zID0ge307XG4gICAgICAgIGlmICh0eXBlb2Ygb3B0aW9uc09yT25SZXF1ZXN0U2VudCA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICAgICAgb3B0aW9ucy5vblJlcXVlc3RTZW50ID0gb3B0aW9uc09yT25SZXF1ZXN0U2VudDtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIG9wdGlvbnMub25SZXF1ZXN0U2VudCA9IG9wdGlvbnNPck9uUmVxdWVzdFNlbnQgPT09IG51bGwgfHwgb3B0aW9uc09yT25SZXF1ZXN0U2VudCA9PT0gdm9pZCAwID8gdm9pZCAwIDogb3B0aW9uc09yT25SZXF1ZXN0U2VudC5vblJlcXVlc3RTZW50O1xuICAgICAgICAgICAgb3B0aW9ucy5zaWduYWwgPSBvcHRpb25zT3JPblJlcXVlc3RTZW50ID09PSBudWxsIHx8IG9wdGlvbnNPck9uUmVxdWVzdFNlbnQgPT09IHZvaWQgMCA/IHZvaWQgMCA6IG9wdGlvbnNPck9uUmVxdWVzdFNlbnQuc2lnbmFsO1xuICAgICAgICAgICAgb3B0aW9ucy5hdHRlbXB0cyA9IG9wdGlvbnNPck9uUmVxdWVzdFNlbnQgPT09IG51bGwgfHwgb3B0aW9uc09yT25SZXF1ZXN0U2VudCA9PT0gdm9pZCAwID8gdm9pZCAwIDogb3B0aW9uc09yT25SZXF1ZXN0U2VudC5hdHRlbXB0cztcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4gX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xuICAgICAgICAgICAgdmFyIF9hO1xuICAgICAgICAgICAgaWYgKCF0aGlzLmdhdGV3YXkgfHwgIXRoaXMuc2Vzc2lvbiB8fCAhKCd3YWxsZXRQdWJsaWNLZXknIGluIHRoaXMuc2Vzc2lvbikpIHtcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgVG9uQ29ubmVjdEVycm9yKCdUcnlpbmcgdG8gc2VuZCBicmlkZ2UgcmVxdWVzdCB3aXRob3V0IHNlc3Npb24nKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNvbnN0IGlkID0gKHlpZWxkIHRoaXMuY29ubmVjdGlvblN0b3JhZ2UuZ2V0TmV4dFJwY1JlcXVlc3RJZCgpKS50b1N0cmluZygpO1xuICAgICAgICAgICAgeWllbGQgdGhpcy5jb25uZWN0aW9uU3RvcmFnZS5pbmNyZWFzZU5leHRScGNSZXF1ZXN0SWQoKTtcbiAgICAgICAgICAgIGxvZ0RlYnVnKCdTZW5kIGh0dHAtYnJpZGdlIHJlcXVlc3Q6JywgT2JqZWN0LmFzc2lnbihPYmplY3QuYXNzaWduKHt9LCByZXF1ZXN0KSwgeyBpZCB9KSk7XG4gICAgICAgICAgICBjb25zdCBlbmNvZGVkUmVxdWVzdCA9IHRoaXMuc2Vzc2lvbi5zZXNzaW9uQ3J5cHRvLmVuY3J5cHQoSlNPTi5zdHJpbmdpZnkoT2JqZWN0LmFzc2lnbihPYmplY3QuYXNzaWduKHt9LCByZXF1ZXN0KSwgeyBpZCB9KSksIGhleFRvQnl0ZUFycmF5KHRoaXMuc2Vzc2lvbi53YWxsZXRQdWJsaWNLZXkpKTtcbiAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgeWllbGQgdGhpcy5nYXRld2F5LnNlbmQoZW5jb2RlZFJlcXVlc3QsIHRoaXMuc2Vzc2lvbi53YWxsZXRQdWJsaWNLZXksIHJlcXVlc3QubWV0aG9kLCB7IGF0dGVtcHRzOiBvcHRpb25zID09PSBudWxsIHx8IG9wdGlvbnMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IG9wdGlvbnMuYXR0ZW1wdHMsIHNpZ25hbDogb3B0aW9ucyA9PT0gbnVsbCB8fCBvcHRpb25zID09PSB2b2lkIDAgPyB2b2lkIDAgOiBvcHRpb25zLnNpZ25hbCB9KTtcbiAgICAgICAgICAgICAgICAoX2EgPSBvcHRpb25zID09PSBudWxsIHx8IG9wdGlvbnMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IG9wdGlvbnMub25SZXF1ZXN0U2VudCkgPT09IG51bGwgfHwgX2EgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9hLmNhbGwob3B0aW9ucyk7XG4gICAgICAgICAgICAgICAgdGhpcy5wZW5kaW5nUmVxdWVzdHMuc2V0KGlkLnRvU3RyaW5nKCksIHJlc29sdmUpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY2F0Y2ggKGUpIHtcbiAgICAgICAgICAgICAgICByZWplY3QoZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pKTtcbiAgICB9XG4gICAgY2xvc2VDb25uZWN0aW9uKCkge1xuICAgICAgICB0aGlzLmNsb3NlR2F0ZXdheXMoKTtcbiAgICAgICAgdGhpcy5saXN0ZW5lcnMgPSBbXTtcbiAgICAgICAgdGhpcy5zZXNzaW9uID0gbnVsbDtcbiAgICAgICAgdGhpcy5nYXRld2F5ID0gbnVsbDtcbiAgICB9XG4gICAgZGlzY29ubmVjdChvcHRpb25zKSB7XG4gICAgICAgIHJldHVybiBfX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7XG4gICAgICAgICAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUpID0+IF9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHtcbiAgICAgICAgICAgICAgICBsZXQgY2FsbGVkID0gZmFsc2U7XG4gICAgICAgICAgICAgICAgbGV0IHRpbWVvdXRJZCA9IG51bGw7XG4gICAgICAgICAgICAgICAgY29uc3Qgb25SZXF1ZXN0U2VudCA9ICgpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKCFjYWxsZWQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNhbGxlZCA9IHRydWU7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnJlbW92ZUJyaWRnZUFuZFNlc3Npb24oKS50aGVuKHJlc29sdmUpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLmNsb3NlR2F0ZXdheXMoKTtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgYWJvcnRDb250cm9sbGVyID0gY3JlYXRlQWJvcnRDb250cm9sbGVyKG9wdGlvbnMgPT09IG51bGwgfHwgb3B0aW9ucyA9PT0gdm9pZCAwID8gdm9pZCAwIDogb3B0aW9ucy5zaWduYWwpO1xuICAgICAgICAgICAgICAgICAgICB0aW1lb3V0SWQgPSBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGFib3J0Q29udHJvbGxlci5hYm9ydCgpO1xuICAgICAgICAgICAgICAgICAgICB9LCB0aGlzLmRlZmF1bHRPcGVuaW5nRGVhZGxpbmVNUyk7XG4gICAgICAgICAgICAgICAgICAgIHlpZWxkIHRoaXMuc2VuZFJlcXVlc3QoeyBtZXRob2Q6ICdkaXNjb25uZWN0JywgcGFyYW1zOiBbXSB9LCB7XG4gICAgICAgICAgICAgICAgICAgICAgICBvblJlcXVlc3RTZW50OiBvblJlcXVlc3RTZW50LFxuICAgICAgICAgICAgICAgICAgICAgICAgc2lnbmFsOiBhYm9ydENvbnRyb2xsZXIuc2lnbmFsLFxuICAgICAgICAgICAgICAgICAgICAgICAgYXR0ZW1wdHM6IDFcbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGNhdGNoIChlKSB7XG4gICAgICAgICAgICAgICAgICAgIGxvZ0RlYnVnKCdEaXNjb25uZWN0IGVycm9yOicsIGUpO1xuICAgICAgICAgICAgICAgICAgICBpZiAoIWNhbGxlZCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5yZW1vdmVCcmlkZ2VBbmRTZXNzaW9uKCkudGhlbihyZXNvbHZlKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBmaW5hbGx5IHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKHRpbWVvdXRJZCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgY2xlYXJUaW1lb3V0KHRpbWVvdXRJZCk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgb25SZXF1ZXN0U2VudCgpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pKTtcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIGxpc3RlbihjYWxsYmFjaykge1xuICAgICAgICB0aGlzLmxpc3RlbmVycy5wdXNoKGNhbGxiYWNrKTtcbiAgICAgICAgcmV0dXJuICgpID0+ICh0aGlzLmxpc3RlbmVycyA9IHRoaXMubGlzdGVuZXJzLmZpbHRlcihsaXN0ZW5lciA9PiBsaXN0ZW5lciAhPT0gY2FsbGJhY2spKTtcbiAgICB9XG4gICAgcGF1c2UoKSB7XG4gICAgICAgIHZhciBfYTtcbiAgICAgICAgKF9hID0gdGhpcy5nYXRld2F5KSA9PT0gbnVsbCB8fCBfYSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2EucGF1c2UoKTtcbiAgICAgICAgdGhpcy5wZW5kaW5nR2F0ZXdheXMuZm9yRWFjaChicmlkZ2UgPT4gYnJpZGdlLnBhdXNlKCkpO1xuICAgIH1cbiAgICB1blBhdXNlKCkge1xuICAgICAgICByZXR1cm4gX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xuICAgICAgICAgICAgY29uc3QgcHJvbWlzZXMgPSB0aGlzLnBlbmRpbmdHYXRld2F5cy5tYXAoYnJpZGdlID0+IGJyaWRnZS51blBhdXNlKCkpO1xuICAgICAgICAgICAgaWYgKHRoaXMuZ2F0ZXdheSkge1xuICAgICAgICAgICAgICAgIHByb21pc2VzLnB1c2godGhpcy5nYXRld2F5LnVuUGF1c2UoKSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB5aWVsZCBQcm9taXNlLmFsbChwcm9taXNlcyk7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBwZW5kaW5nR2F0ZXdheXNMaXN0ZW5lcihnYXRld2F5LCBicmlkZ2VVcmwsIGJyaWRnZUluY29taW5nTWVzc2FnZSkge1xuICAgICAgICByZXR1cm4gX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xuICAgICAgICAgICAgaWYgKCF0aGlzLnBlbmRpbmdHYXRld2F5cy5pbmNsdWRlcyhnYXRld2F5KSkge1xuICAgICAgICAgICAgICAgIHlpZWxkIGdhdGV3YXkuY2xvc2UoKTtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB0aGlzLmNsb3NlR2F0ZXdheXMoeyBleGNlcHQ6IGdhdGV3YXkgfSk7XG4gICAgICAgICAgICBpZiAodGhpcy5nYXRld2F5KSB7XG4gICAgICAgICAgICAgICAgbG9nRGVidWcoJ0dhdGV3YXkgaXMgYWxyZWFkeSBvcGVuZWQsIGNsb3NpbmcgcHJldmlvdXMgZ2F0ZXdheScpO1xuICAgICAgICAgICAgICAgIHlpZWxkIHRoaXMuZ2F0ZXdheS5jbG9zZSgpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdGhpcy5zZXNzaW9uLmJyaWRnZVVybCA9IGJyaWRnZVVybDtcbiAgICAgICAgICAgIHRoaXMuZ2F0ZXdheSA9IGdhdGV3YXk7XG4gICAgICAgICAgICB0aGlzLmdhdGV3YXkuc2V0RXJyb3JzTGlzdGVuZXIodGhpcy5nYXRld2F5RXJyb3JzTGlzdGVuZXIuYmluZCh0aGlzKSk7XG4gICAgICAgICAgICB0aGlzLmdhdGV3YXkuc2V0TGlzdGVuZXIodGhpcy5nYXRld2F5TGlzdGVuZXIuYmluZCh0aGlzKSk7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5nYXRld2F5TGlzdGVuZXIoYnJpZGdlSW5jb21pbmdNZXNzYWdlKTtcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIGdhdGV3YXlMaXN0ZW5lcihicmlkZ2VJbmNvbWluZ01lc3NhZ2UpIHtcbiAgICAgICAgcmV0dXJuIF9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHtcbiAgICAgICAgICAgIGNvbnN0IHdhbGxldE1lc3NhZ2UgPSBKU09OLnBhcnNlKHRoaXMuc2Vzc2lvbi5zZXNzaW9uQ3J5cHRvLmRlY3J5cHQoQmFzZTY0LmRlY29kZShicmlkZ2VJbmNvbWluZ01lc3NhZ2UubWVzc2FnZSkudG9VaW50OEFycmF5KCksIGhleFRvQnl0ZUFycmF5KGJyaWRnZUluY29taW5nTWVzc2FnZS5mcm9tKSkpO1xuICAgICAgICAgICAgbG9nRGVidWcoJ1dhbGxldCBtZXNzYWdlIHJlY2VpdmVkOicsIHdhbGxldE1lc3NhZ2UpO1xuICAgICAgICAgICAgaWYgKCEoJ2V2ZW50JyBpbiB3YWxsZXRNZXNzYWdlKSkge1xuICAgICAgICAgICAgICAgIGNvbnN0IGlkID0gd2FsbGV0TWVzc2FnZS5pZC50b1N0cmluZygpO1xuICAgICAgICAgICAgICAgIGNvbnN0IHJlc29sdmUgPSB0aGlzLnBlbmRpbmdSZXF1ZXN0cy5nZXQoaWQpO1xuICAgICAgICAgICAgICAgIGlmICghcmVzb2x2ZSkge1xuICAgICAgICAgICAgICAgICAgICBsb2dEZWJ1ZyhgUmVzcG9uc2UgaWQgJHtpZH0gZG9lc24ndCBtYXRjaCBhbnkgcmVxdWVzdCdzIGlkYCk7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcmVzb2x2ZSh3YWxsZXRNZXNzYWdlKTtcbiAgICAgICAgICAgICAgICB0aGlzLnBlbmRpbmdSZXF1ZXN0cy5kZWxldGUoaWQpO1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmICh3YWxsZXRNZXNzYWdlLmlkICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgICAgICBjb25zdCBsYXN0SWQgPSB5aWVsZCB0aGlzLmNvbm5lY3Rpb25TdG9yYWdlLmdldExhc3RXYWxsZXRFdmVudElkKCk7XG4gICAgICAgICAgICAgICAgaWYgKGxhc3RJZCAhPT0gdW5kZWZpbmVkICYmIHdhbGxldE1lc3NhZ2UuaWQgPD0gbGFzdElkKSB7XG4gICAgICAgICAgICAgICAgICAgIGxvZ0Vycm9yKGBSZWNlaXZlZCBldmVudCBpZCAoPSR7d2FsbGV0TWVzc2FnZS5pZH0pIG11c3QgYmUgZ3JlYXRlciB0aGFuIHN0b3JlZCBsYXN0IHdhbGxldCBldmVudCBpZCAoPSR7bGFzdElkfSkgYCk7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYgKHdhbGxldE1lc3NhZ2UuZXZlbnQgIT09ICdjb25uZWN0Jykge1xuICAgICAgICAgICAgICAgICAgICB5aWVsZCB0aGlzLmNvbm5lY3Rpb25TdG9yYWdlLnN0b3JlTGFzdFdhbGxldEV2ZW50SWQod2FsbGV0TWVzc2FnZS5pZCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgLy8gYHRoaXMubGlzdGVuZXJzYCBtaWdodCBiZSBtb2RpZmllZCBpbiB0aGUgZXZlbnQgaGFuZGxlclxuICAgICAgICAgICAgY29uc3QgbGlzdGVuZXJzID0gdGhpcy5saXN0ZW5lcnM7XG4gICAgICAgICAgICBpZiAod2FsbGV0TWVzc2FnZS5ldmVudCA9PT0gJ2Nvbm5lY3QnKSB7XG4gICAgICAgICAgICAgICAgeWllbGQgdGhpcy51cGRhdGVTZXNzaW9uKHdhbGxldE1lc3NhZ2UsIGJyaWRnZUluY29taW5nTWVzc2FnZS5mcm9tKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmICh3YWxsZXRNZXNzYWdlLmV2ZW50ID09PSAnZGlzY29ubmVjdCcpIHtcbiAgICAgICAgICAgICAgICBsb2dEZWJ1ZyhgUmVtb3ZpbmcgYnJpZGdlIGFuZCBzZXNzaW9uOiByZWNlaXZlZCBkaXNjb25uZWN0IGV2ZW50YCk7XG4gICAgICAgICAgICAgICAgeWllbGQgdGhpcy5yZW1vdmVCcmlkZ2VBbmRTZXNzaW9uKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBsaXN0ZW5lcnMuZm9yRWFjaChsaXN0ZW5lciA9PiBsaXN0ZW5lcih3YWxsZXRNZXNzYWdlKSk7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBnYXRld2F5RXJyb3JzTGlzdGVuZXIoZSkge1xuICAgICAgICByZXR1cm4gX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IFRvbkNvbm5lY3RFcnJvcihgQnJpZGdlIGVycm9yICR7SlNPTi5zdHJpbmdpZnkoZSl9YCk7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICB1cGRhdGVTZXNzaW9uKGNvbm5lY3RFdmVudCwgd2FsbGV0UHVibGljS2V5KSB7XG4gICAgICAgIHJldHVybiBfX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7XG4gICAgICAgICAgICB0aGlzLnNlc3Npb24gPSBPYmplY3QuYXNzaWduKE9iamVjdC5hc3NpZ24oe30sIHRoaXMuc2Vzc2lvbiksIHsgd2FsbGV0UHVibGljS2V5IH0pO1xuICAgICAgICAgICAgY29uc3QgdG9uQWRkckl0ZW0gPSBjb25uZWN0RXZlbnQucGF5bG9hZC5pdGVtcy5maW5kKGl0ZW0gPT4gaXRlbS5uYW1lID09PSAndG9uX2FkZHInKTtcbiAgICAgICAgICAgIGNvbnN0IGNvbm5lY3RFdmVudFRvU2F2ZSA9IE9iamVjdC5hc3NpZ24oT2JqZWN0LmFzc2lnbih7fSwgY29ubmVjdEV2ZW50KSwgeyBwYXlsb2FkOiBPYmplY3QuYXNzaWduKE9iamVjdC5hc3NpZ24oe30sIGNvbm5lY3RFdmVudC5wYXlsb2FkKSwgeyBpdGVtczogW3RvbkFkZHJJdGVtXSB9KSB9KTtcbiAgICAgICAgICAgIHlpZWxkIHRoaXMuY29ubmVjdGlvblN0b3JhZ2Uuc3RvcmVDb25uZWN0aW9uKHtcbiAgICAgICAgICAgICAgICB0eXBlOiAnaHR0cCcsXG4gICAgICAgICAgICAgICAgc2Vzc2lvbjogdGhpcy5zZXNzaW9uLFxuICAgICAgICAgICAgICAgIGxhc3RXYWxsZXRFdmVudElkOiBjb25uZWN0RXZlbnQuaWQsXG4gICAgICAgICAgICAgICAgY29ubmVjdEV2ZW50OiBjb25uZWN0RXZlbnRUb1NhdmUsXG4gICAgICAgICAgICAgICAgbmV4dFJwY1JlcXVlc3RJZDogMFxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICByZW1vdmVCcmlkZ2VBbmRTZXNzaW9uKCkge1xuICAgICAgICByZXR1cm4gX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xuICAgICAgICAgICAgdGhpcy5jbG9zZUNvbm5lY3Rpb24oKTtcbiAgICAgICAgICAgIHlpZWxkIHRoaXMuY29ubmVjdGlvblN0b3JhZ2UucmVtb3ZlQ29ubmVjdGlvbigpO1xuICAgICAgICB9KTtcbiAgICB9XG4gICAgZ2VuZXJhdGVVbml2ZXJzYWxMaW5rKHVuaXZlcnNhbExpbmssIG1lc3NhZ2UpIHtcbiAgICAgICAgaWYgKGlzVGVsZWdyYW1VcmwodW5pdmVyc2FsTGluaykpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmdlbmVyYXRlVEdVbml2ZXJzYWxMaW5rKHVuaXZlcnNhbExpbmssIG1lc3NhZ2UpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0aGlzLmdlbmVyYXRlUmVndWxhclVuaXZlcnNhbExpbmsodW5pdmVyc2FsTGluaywgbWVzc2FnZSk7XG4gICAgfVxuICAgIGdlbmVyYXRlUmVndWxhclVuaXZlcnNhbExpbmsodW5pdmVyc2FsTGluaywgbWVzc2FnZSkge1xuICAgICAgICBjb25zdCB1cmwgPSBuZXcgVVJMKHVuaXZlcnNhbExpbmspO1xuICAgICAgICB1cmwuc2VhcmNoUGFyYW1zLmFwcGVuZCgndicsIFBST1RPQ09MX1ZFUlNJT04udG9TdHJpbmcoKSk7XG4gICAgICAgIHVybC5zZWFyY2hQYXJhbXMuYXBwZW5kKCdpZCcsIHRoaXMuc2Vzc2lvbi5zZXNzaW9uQ3J5cHRvLnNlc3Npb25JZCk7XG4gICAgICAgIHVybC5zZWFyY2hQYXJhbXMuYXBwZW5kKCdyJywgSlNPTi5zdHJpbmdpZnkobWVzc2FnZSkpO1xuICAgICAgICByZXR1cm4gdXJsLnRvU3RyaW5nKCk7XG4gICAgfVxuICAgIGdlbmVyYXRlVEdVbml2ZXJzYWxMaW5rKHVuaXZlcnNhbExpbmssIG1lc3NhZ2UpIHtcbiAgICAgICAgY29uc3QgdXJsVG9XcmFwID0gdGhpcy5nZW5lcmF0ZVJlZ3VsYXJVbml2ZXJzYWxMaW5rKCdhYm91dDpibGFuaycsIG1lc3NhZ2UpO1xuICAgICAgICBjb25zdCBsaW5rUGFyYW1zID0gdXJsVG9XcmFwLnNwbGl0KCc/JylbMV07XG4gICAgICAgIGNvbnN0IHN0YXJ0YXBwID0gJ3RvbmNvbm5lY3QtJyArIGVuY29kZVRlbGVncmFtVXJsUGFyYW1ldGVycyhsaW5rUGFyYW1zKTtcbiAgICAgICAgLy8gVE9ETzogUmVtb3ZlIHRoaXMgbGluZSBhZnRlciBhbGwgZEFwcHMgYW5kIHRoZSB3YWxsZXRzLWxpc3QuanNvbiBoYXZlIGJlZW4gdXBkYXRlZFxuICAgICAgICBjb25zdCB1cGRhdGVkVW5pdmVyc2FsTGluayA9IHRoaXMuY29udmVydFRvRGlyZWN0TGluayh1bml2ZXJzYWxMaW5rKTtcbiAgICAgICAgY29uc3QgdXJsID0gbmV3IFVSTCh1cGRhdGVkVW5pdmVyc2FsTGluayk7XG4gICAgICAgIHVybC5zZWFyY2hQYXJhbXMuYXBwZW5kKCdzdGFydGFwcCcsIHN0YXJ0YXBwKTtcbiAgICAgICAgcmV0dXJuIHVybC50b1N0cmluZygpO1xuICAgIH1cbiAgICAvLyBUT0RPOiBSZW1vdmUgdGhpcyBtZXRob2QgYWZ0ZXIgYWxsIGRBcHBzIGFuZCB0aGUgd2FsbGV0cy1saXN0Lmpzb24gaGF2ZSBiZWVuIHVwZGF0ZWRcbiAgICBjb252ZXJ0VG9EaXJlY3RMaW5rKHVuaXZlcnNhbExpbmspIHtcbiAgICAgICAgY29uc3QgdXJsID0gbmV3IFVSTCh1bml2ZXJzYWxMaW5rKTtcbiAgICAgICAgaWYgKHVybC5zZWFyY2hQYXJhbXMuaGFzKCdhdHRhY2gnKSkge1xuICAgICAgICAgICAgdXJsLnNlYXJjaFBhcmFtcy5kZWxldGUoJ2F0dGFjaCcpO1xuICAgICAgICAgICAgdXJsLnBhdGhuYW1lICs9ICcvc3RhcnQnO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB1cmwudG9TdHJpbmcoKTtcbiAgICB9XG4gICAgb3BlbkdhdGV3YXlzKHNlc3Npb25DcnlwdG8sIG9wdGlvbnMpIHtcbiAgICAgICAgcmV0dXJuIF9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHtcbiAgICAgICAgICAgIGlmIChBcnJheS5pc0FycmF5KHRoaXMud2FsbGV0Q29ubmVjdGlvblNvdXJjZSkpIHtcbiAgICAgICAgICAgICAgICAvLyBjbG9zZSBhbGwgZ2F0ZXdheXMgYmVmb3JlIG9wZW5pbmcgbmV3IG9uZXNcbiAgICAgICAgICAgICAgICB0aGlzLnBlbmRpbmdHYXRld2F5cy5tYXAoYnJpZGdlID0+IGJyaWRnZS5jbG9zZSgpLmNhdGNoKCkpO1xuICAgICAgICAgICAgICAgIC8vIG9wZW4gbmV3IGdhdGV3YXlzXG4gICAgICAgICAgICAgICAgdGhpcy5wZW5kaW5nR2F0ZXdheXMgPSB0aGlzLndhbGxldENvbm5lY3Rpb25Tb3VyY2UubWFwKHNvdXJjZSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IGdhdGV3YXkgPSBuZXcgQnJpZGdlR2F0ZXdheSh0aGlzLnN0b3JhZ2UsIHNvdXJjZS5icmlkZ2VVcmwsIHNlc3Npb25DcnlwdG8uc2Vzc2lvbklkLCAoKSA9PiB7IH0sICgpID0+IHsgfSk7XG4gICAgICAgICAgICAgICAgICAgIGdhdGV3YXkuc2V0TGlzdGVuZXIobWVzc2FnZSA9PiB0aGlzLnBlbmRpbmdHYXRld2F5c0xpc3RlbmVyKGdhdGV3YXksIHNvdXJjZS5icmlkZ2VVcmwsIG1lc3NhZ2UpKTtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGdhdGV3YXk7XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgeWllbGQgUHJvbWlzZS5hbGxTZXR0bGVkKHRoaXMucGVuZGluZ0dhdGV3YXlzLm1hcChicmlkZ2UgPT4gY2FsbEZvclN1Y2Nlc3MoKF9vcHRpb25zKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIHZhciBfYTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKCF0aGlzLnBlbmRpbmdHYXRld2F5cy5zb21lKGl0ZW0gPT4gaXRlbSA9PT0gYnJpZGdlKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGJyaWRnZS5jbG9zZSgpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBicmlkZ2UucmVnaXN0ZXJTZXNzaW9uKHtcbiAgICAgICAgICAgICAgICAgICAgICAgIG9wZW5pbmdEZWFkbGluZU1TOiAoX2EgPSBvcHRpb25zID09PSBudWxsIHx8IG9wdGlvbnMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IG9wdGlvbnMub3BlbmluZ0RlYWRsaW5lTVMpICE9PSBudWxsICYmIF9hICE9PSB2b2lkIDAgPyBfYSA6IHRoaXMuZGVmYXVsdE9wZW5pbmdEZWFkbGluZU1TLFxuICAgICAgICAgICAgICAgICAgICAgICAgc2lnbmFsOiBfb3B0aW9ucy5zaWduYWxcbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgfSwge1xuICAgICAgICAgICAgICAgICAgICBhdHRlbXB0czogTnVtYmVyLk1BWF9TQUZFX0lOVEVHRVIsXG4gICAgICAgICAgICAgICAgICAgIGRlbGF5TXM6IHRoaXMuZGVmYXVsdFJldHJ5VGltZW91dE1TLFxuICAgICAgICAgICAgICAgICAgICBzaWduYWw6IG9wdGlvbnMgPT09IG51bGwgfHwgb3B0aW9ucyA9PT0gdm9pZCAwID8gdm9pZCAwIDogb3B0aW9ucy5zaWduYWxcbiAgICAgICAgICAgICAgICB9KSkpO1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIGlmICh0aGlzLmdhdGV3YXkpIHtcbiAgICAgICAgICAgICAgICAgICAgbG9nRGVidWcoYEdhdGV3YXkgaXMgYWxyZWFkeSBvcGVuZWQsIGNsb3NpbmcgcHJldmlvdXMgZ2F0ZXdheWApO1xuICAgICAgICAgICAgICAgICAgICB5aWVsZCB0aGlzLmdhdGV3YXkuY2xvc2UoKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgdGhpcy5nYXRld2F5ID0gbmV3IEJyaWRnZUdhdGV3YXkodGhpcy5zdG9yYWdlLCB0aGlzLndhbGxldENvbm5lY3Rpb25Tb3VyY2UuYnJpZGdlVXJsLCBzZXNzaW9uQ3J5cHRvLnNlc3Npb25JZCwgdGhpcy5nYXRld2F5TGlzdGVuZXIuYmluZCh0aGlzKSwgdGhpcy5nYXRld2F5RXJyb3JzTGlzdGVuZXIuYmluZCh0aGlzKSk7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHlpZWxkIHRoaXMuZ2F0ZXdheS5yZWdpc3RlclNlc3Npb24oe1xuICAgICAgICAgICAgICAgICAgICBvcGVuaW5nRGVhZGxpbmVNUzogb3B0aW9ucyA9PT0gbnVsbCB8fCBvcHRpb25zID09PSB2b2lkIDAgPyB2b2lkIDAgOiBvcHRpb25zLm9wZW5pbmdEZWFkbGluZU1TLFxuICAgICAgICAgICAgICAgICAgICBzaWduYWw6IG9wdGlvbnMgPT09IG51bGwgfHwgb3B0aW9ucyA9PT0gdm9pZCAwID8gdm9pZCAwIDogb3B0aW9ucy5zaWduYWxcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgfVxuICAgIGNsb3NlR2F0ZXdheXMob3B0aW9ucykge1xuICAgICAgICB2YXIgX2E7XG4gICAgICAgIChfYSA9IHRoaXMuZ2F0ZXdheSkgPT09IG51bGwgfHwgX2EgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9hLmNsb3NlKCk7XG4gICAgICAgIHRoaXMucGVuZGluZ0dhdGV3YXlzXG4gICAgICAgICAgICAuZmlsdGVyKGl0ZW0gPT4gaXRlbSAhPT0gKG9wdGlvbnMgPT09IG51bGwgfHwgb3B0aW9ucyA9PT0gdm9pZCAwID8gdm9pZCAwIDogb3B0aW9ucy5leGNlcHQpKVxuICAgICAgICAgICAgLmZvckVhY2goYnJpZGdlID0+IGJyaWRnZS5jbG9zZSgpKTtcbiAgICAgICAgdGhpcy5wZW5kaW5nR2F0ZXdheXMgPSBbXTtcbiAgICB9XG59XG5cbmZ1bmN0aW9uIGhhc1Byb3BlcnR5KHZhbHVlLCBwcm9wZXJ0eUtleSkge1xuICAgIHJldHVybiBoYXNQcm9wZXJ0aWVzKHZhbHVlLCBbcHJvcGVydHlLZXldKTtcbn1cbmZ1bmN0aW9uIGhhc1Byb3BlcnRpZXModmFsdWUsIHByb3BlcnR5S2V5cykge1xuICAgIGlmICghdmFsdWUgfHwgdHlwZW9mIHZhbHVlICE9PSAnb2JqZWN0Jykge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIHJldHVybiBwcm9wZXJ0eUtleXMuZXZlcnkocHJvcGVydHlLZXkgPT4gcHJvcGVydHlLZXkgaW4gdmFsdWUpO1xufVxuXG5mdW5jdGlvbiBpc0pTQnJpZGdlV2l0aE1ldGFkYXRhKHZhbHVlKSB7XG4gICAgdHJ5IHtcbiAgICAgICAgaWYgKCFoYXNQcm9wZXJ0eSh2YWx1ZSwgJ3RvbmNvbm5lY3QnKSB8fCAhaGFzUHJvcGVydHkodmFsdWUudG9uY29ubmVjdCwgJ3dhbGxldEluZm8nKSkge1xuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBoYXNQcm9wZXJ0aWVzKHZhbHVlLnRvbmNvbm5lY3Qud2FsbGV0SW5mbywgW1xuICAgICAgICAgICAgJ25hbWUnLFxuICAgICAgICAgICAgJ2FwcF9uYW1lJyxcbiAgICAgICAgICAgICdpbWFnZScsXG4gICAgICAgICAgICAnYWJvdXRfdXJsJyxcbiAgICAgICAgICAgICdwbGF0Zm9ybXMnXG4gICAgICAgIF0pO1xuICAgIH1cbiAgICBjYXRjaCAoX2EpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbn1cblxuLyoqXG4gKiBJbiBtZW1vcnkgc3RvcmFnZSBsaWtlIGxvY2FsU3RvcmFnZSwgYnV0IHdpdGhvdXQgcGVyc2lzdGVuY2UuXG4gKiBVc2VzIGFzIGEgZmFsbGJhY2sgZm9yIGxvY2FsU3RvcmFnZSBpbiBTYWZhcmkncyBwcml2YXRlIG1vZGUuXG4gKi9cbmNsYXNzIEluTWVtb3J5U3RvcmFnZSB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHRoaXMuc3RvcmFnZSA9IHt9O1xuICAgIH1cbiAgICBzdGF0aWMgZ2V0SW5zdGFuY2UoKSB7XG4gICAgICAgIGlmICghSW5NZW1vcnlTdG9yYWdlLmluc3RhbmNlKSB7XG4gICAgICAgICAgICBJbk1lbW9yeVN0b3JhZ2UuaW5zdGFuY2UgPSBuZXcgSW5NZW1vcnlTdG9yYWdlKCk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIEluTWVtb3J5U3RvcmFnZS5pbnN0YW5jZTtcbiAgICB9XG4gICAgZ2V0IGxlbmd0aCgpIHtcbiAgICAgICAgcmV0dXJuIE9iamVjdC5rZXlzKHRoaXMuc3RvcmFnZSkubGVuZ3RoO1xuICAgIH1cbiAgICBjbGVhcigpIHtcbiAgICAgICAgdGhpcy5zdG9yYWdlID0ge307XG4gICAgfVxuICAgIGdldEl0ZW0oa2V5KSB7XG4gICAgICAgIHZhciBfYTtcbiAgICAgICAgcmV0dXJuIChfYSA9IHRoaXMuc3RvcmFnZVtrZXldKSAhPT0gbnVsbCAmJiBfYSAhPT0gdm9pZCAwID8gX2EgOiBudWxsO1xuICAgIH1cbiAgICBrZXkoaW5kZXgpIHtcbiAgICAgICAgdmFyIF9hO1xuICAgICAgICBjb25zdCBrZXlzID0gT2JqZWN0LmtleXModGhpcy5zdG9yYWdlKTtcbiAgICAgICAgaWYgKGluZGV4IDwgMCB8fCBpbmRleCA+PSBrZXlzLmxlbmd0aCkge1xuICAgICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIChfYSA9IGtleXNbaW5kZXhdKSAhPT0gbnVsbCAmJiBfYSAhPT0gdm9pZCAwID8gX2EgOiBudWxsO1xuICAgIH1cbiAgICByZW1vdmVJdGVtKGtleSkge1xuICAgICAgICBkZWxldGUgdGhpcy5zdG9yYWdlW2tleV07XG4gICAgfVxuICAgIHNldEl0ZW0oa2V5LCB2YWx1ZSkge1xuICAgICAgICB0aGlzLnN0b3JhZ2Vba2V5XSA9IHZhbHVlO1xuICAgIH1cbn1cblxuZnVuY3Rpb24gZ2V0V2luZG93KCkge1xuICAgIGlmICh0eXBlb2Ygd2luZG93ID09PSAndW5kZWZpbmVkJykge1xuICAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgIH1cbiAgICByZXR1cm4gd2luZG93O1xufVxuLyoqXG4gKiBUaGUgZnVuY3Rpb24gdHJ5IHRvIGdldCB3aW5kb3cga2V5cywgaWYgaXQgaXMgbm90IGF2YWlsYWJsZSBpdCByZXR1cm5zIGVtcHR5IGFycmF5LlxuICogQXMgYW4gZXhhbXBsZSwgZm9yIFNhZmFyaSdzIHByaXZhdGUgbW9kZSBpdCByZXR1cm5zIGVtcHR5IGFycmF5LCBiZWNhdXNlIHRoZSBicm93c2VyIGRvZXMgbm90IGFsbG93IHRvIGdldCB3aW5kb3cga2V5cy5cbiAqL1xuZnVuY3Rpb24gdHJ5R2V0V2luZG93S2V5cygpIHtcbiAgICBjb25zdCB3aW5kb3cgPSBnZXRXaW5kb3coKTtcbiAgICBpZiAoIXdpbmRvdykge1xuICAgICAgICByZXR1cm4gW107XG4gICAgfVxuICAgIHRyeSB7XG4gICAgICAgIHJldHVybiBPYmplY3Qua2V5cyh3aW5kb3cpO1xuICAgIH1cbiAgICBjYXRjaCAoX2EpIHtcbiAgICAgICAgcmV0dXJuIFtdO1xuICAgIH1cbn1cbmZ1bmN0aW9uIGdldERvY3VtZW50KCkge1xuICAgIGlmICh0eXBlb2YgZG9jdW1lbnQgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgfVxuICAgIHJldHVybiBkb2N1bWVudDtcbn1cbmZ1bmN0aW9uIGdldFdlYlBhZ2VNYW5pZmVzdCgpIHtcbiAgICB2YXIgX2E7XG4gICAgY29uc3Qgb3JpZ2luID0gKF9hID0gZ2V0V2luZG93KCkpID09PSBudWxsIHx8IF9hID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYS5sb2NhdGlvbi5vcmlnaW47XG4gICAgaWYgKG9yaWdpbikge1xuICAgICAgICByZXR1cm4gb3JpZ2luICsgJy90b25jb25uZWN0LW1hbmlmZXN0Lmpzb24nO1xuICAgIH1cbiAgICByZXR1cm4gJyc7XG59XG4vKipcbiAqIFJldHVybnMgYGxvY2FsU3RvcmFnZWAgaWYgaXQgaXMgYXZhaWxhYmxlLiBJbiBTYWZhcmkncyBwcml2YXRlIG1vZGUsIGl0IHJldHVybnMgYEluTWVtb3J5U3RvcmFnZWAuIEluIE5vZGUuanMsIGl0IHRocm93cyBhbiBlcnJvci5cbiAqL1xuZnVuY3Rpb24gdHJ5R2V0TG9jYWxTdG9yYWdlKCkge1xuICAgIGlmIChpc0xvY2FsU3RvcmFnZUF2YWlsYWJsZSgpKSB7XG4gICAgICAgIHJldHVybiBsb2NhbFN0b3JhZ2U7XG4gICAgfVxuICAgIGlmIChpc05vZGVKcygpKSB7XG4gICAgICAgIHRocm93IG5ldyBUb25Db25uZWN0RXJyb3IoJ2Bsb2NhbFN0b3JhZ2VgIGlzIHVuYXZhaWxhYmxlLCBidXQgaXQgaXMgcmVxdWlyZWQgZm9yIFRvbkNvbm5lY3QuIEZvciBtb3JlIGRldGFpbHMsIHNlZSBodHRwczovL2dpdGh1Yi5jb20vdG9uLWNvbm5lY3Qvc2RrL3RyZWUvbWFpbi9wYWNrYWdlcy9zZGsjaW5pdC1jb25uZWN0b3InKTtcbiAgICB9XG4gICAgcmV0dXJuIEluTWVtb3J5U3RvcmFnZS5nZXRJbnN0YW5jZSgpO1xufVxuLyoqXG4gKiBDaGVja3MgaWYgYGxvY2FsU3RvcmFnZWAgaXMgYXZhaWxhYmxlLlxuICovXG5mdW5jdGlvbiBpc0xvY2FsU3RvcmFnZUF2YWlsYWJsZSgpIHtcbiAgICAvLyBXZSB1c2UgYSB0cnkvY2F0Y2ggYmxvY2sgYmVjYXVzZSBTYWZhcmkncyBwcml2YXRlIG1vZGUgdGhyb3dzIGFuIGVycm9yIHdoZW4gYXR0ZW1wdGluZyB0byBhY2Nlc3MgbG9jYWxTdG9yYWdlLlxuICAgIHRyeSB7XG4gICAgICAgIHJldHVybiB0eXBlb2YgbG9jYWxTdG9yYWdlICE9PSAndW5kZWZpbmVkJztcbiAgICB9XG4gICAgY2F0Y2ggKF9hKSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG59XG4vKipcbiAqIENoZWNrcyBpZiB0aGUgZW52aXJvbm1lbnQgaXMgTm9kZS5qcy5cbiAqL1xuZnVuY3Rpb24gaXNOb2RlSnMoKSB7XG4gICAgcmV0dXJuICh0eXBlb2YgcHJvY2VzcyAhPT0gJ3VuZGVmaW5lZCcgJiYgcHJvY2Vzcy52ZXJzaW9ucyAhPSBudWxsICYmIHByb2Nlc3MudmVyc2lvbnMubm9kZSAhPSBudWxsKTtcbn1cblxuY2xhc3MgSW5qZWN0ZWRQcm92aWRlciB7XG4gICAgY29uc3RydWN0b3Ioc3RvcmFnZSwgaW5qZWN0ZWRXYWxsZXRLZXkpIHtcbiAgICAgICAgdGhpcy5pbmplY3RlZFdhbGxldEtleSA9IGluamVjdGVkV2FsbGV0S2V5O1xuICAgICAgICB0aGlzLnR5cGUgPSAnaW5qZWN0ZWQnO1xuICAgICAgICB0aGlzLnVuc3Vic2NyaWJlQ2FsbGJhY2sgPSBudWxsO1xuICAgICAgICB0aGlzLmxpc3RlblN1YnNjcmlwdGlvbnMgPSBmYWxzZTtcbiAgICAgICAgdGhpcy5saXN0ZW5lcnMgPSBbXTtcbiAgICAgICAgY29uc3Qgd2luZG93ID0gSW5qZWN0ZWRQcm92aWRlci53aW5kb3c7XG4gICAgICAgIGlmICghSW5qZWN0ZWRQcm92aWRlci5pc1dpbmRvd0NvbnRhaW5zV2FsbGV0KHdpbmRvdywgaW5qZWN0ZWRXYWxsZXRLZXkpKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgV2FsbGV0Tm90SW5qZWN0ZWRFcnJvcigpO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuY29ubmVjdGlvblN0b3JhZ2UgPSBuZXcgQnJpZGdlQ29ubmVjdGlvblN0b3JhZ2Uoc3RvcmFnZSk7XG4gICAgICAgIHRoaXMuaW5qZWN0ZWRXYWxsZXQgPSB3aW5kb3dbaW5qZWN0ZWRXYWxsZXRLZXldLnRvbmNvbm5lY3Q7XG4gICAgfVxuICAgIHN0YXRpYyBmcm9tU3RvcmFnZShzdG9yYWdlKSB7XG4gICAgICAgIHJldHVybiBfX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7XG4gICAgICAgICAgICBjb25zdCBicmlkZ2VDb25uZWN0aW9uU3RvcmFnZSA9IG5ldyBCcmlkZ2VDb25uZWN0aW9uU3RvcmFnZShzdG9yYWdlKTtcbiAgICAgICAgICAgIGNvbnN0IGNvbm5lY3Rpb24gPSB5aWVsZCBicmlkZ2VDb25uZWN0aW9uU3RvcmFnZS5nZXRJbmplY3RlZENvbm5lY3Rpb24oKTtcbiAgICAgICAgICAgIHJldHVybiBuZXcgSW5qZWN0ZWRQcm92aWRlcihzdG9yYWdlLCBjb25uZWN0aW9uLmpzQnJpZGdlS2V5KTtcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIHN0YXRpYyBpc1dhbGxldEluamVjdGVkKGluamVjdGVkV2FsbGV0S2V5KSB7XG4gICAgICAgIHJldHVybiBJbmplY3RlZFByb3ZpZGVyLmlzV2luZG93Q29udGFpbnNXYWxsZXQodGhpcy53aW5kb3csIGluamVjdGVkV2FsbGV0S2V5KTtcbiAgICB9XG4gICAgc3RhdGljIGlzSW5zaWRlV2FsbGV0QnJvd3NlcihpbmplY3RlZFdhbGxldEtleSkge1xuICAgICAgICBpZiAoSW5qZWN0ZWRQcm92aWRlci5pc1dpbmRvd0NvbnRhaW5zV2FsbGV0KHRoaXMud2luZG93LCBpbmplY3RlZFdhbGxldEtleSkpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLndpbmRvd1tpbmplY3RlZFdhbGxldEtleV0udG9uY29ubmVjdC5pc1dhbGxldEJyb3dzZXI7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICBzdGF0aWMgZ2V0Q3VycmVudGx5SW5qZWN0ZWRXYWxsZXRzKCkge1xuICAgICAgICBpZiAoIXRoaXMud2luZG93KSB7XG4gICAgICAgICAgICByZXR1cm4gW107XG4gICAgICAgIH1cbiAgICAgICAgY29uc3Qgd2luZG93S2V5cyA9IHRyeUdldFdpbmRvd0tleXMoKTtcbiAgICAgICAgY29uc3Qgd2FsbGV0cyA9IHdpbmRvd0tleXMuZmlsdGVyKChbXywgdmFsdWVdKSA9PiBpc0pTQnJpZGdlV2l0aE1ldGFkYXRhKHZhbHVlKSk7XG4gICAgICAgIHJldHVybiB3YWxsZXRzLm1hcCgoW2pzQnJpZGdlS2V5LCB3YWxsZXRdKSA9PiAoe1xuICAgICAgICAgICAgbmFtZTogd2FsbGV0LnRvbmNvbm5lY3Qud2FsbGV0SW5mby5uYW1lLFxuICAgICAgICAgICAgYXBwTmFtZTogd2FsbGV0LnRvbmNvbm5lY3Qud2FsbGV0SW5mby5hcHBfbmFtZSxcbiAgICAgICAgICAgIGFib3V0VXJsOiB3YWxsZXQudG9uY29ubmVjdC53YWxsZXRJbmZvLmFib3V0X3VybCxcbiAgICAgICAgICAgIGltYWdlVXJsOiB3YWxsZXQudG9uY29ubmVjdC53YWxsZXRJbmZvLmltYWdlLFxuICAgICAgICAgICAgdG9uZG5zOiB3YWxsZXQudG9uY29ubmVjdC53YWxsZXRJbmZvLnRvbmRucyxcbiAgICAgICAgICAgIGpzQnJpZGdlS2V5LFxuICAgICAgICAgICAgaW5qZWN0ZWQ6IHRydWUsXG4gICAgICAgICAgICBlbWJlZGRlZDogd2FsbGV0LnRvbmNvbm5lY3QuaXNXYWxsZXRCcm93c2VyLFxuICAgICAgICAgICAgcGxhdGZvcm1zOiB3YWxsZXQudG9uY29ubmVjdC53YWxsZXRJbmZvLnBsYXRmb3JtcyxcbiAgICAgICAgICAgIGZlYXR1cmVzOiB3YWxsZXQudG9uY29ubmVjdC53YWxsZXRJbmZvLmZlYXR1cmVzXG4gICAgICAgIH0pKTtcbiAgICB9XG4gICAgc3RhdGljIGlzV2luZG93Q29udGFpbnNXYWxsZXQod2luZG93LCBpbmplY3RlZFdhbGxldEtleSkge1xuICAgICAgICByZXR1cm4gKCEhd2luZG93ICYmXG4gICAgICAgICAgICBpbmplY3RlZFdhbGxldEtleSBpbiB3aW5kb3cgJiZcbiAgICAgICAgICAgIHR5cGVvZiB3aW5kb3dbaW5qZWN0ZWRXYWxsZXRLZXldID09PSAnb2JqZWN0JyAmJlxuICAgICAgICAgICAgJ3RvbmNvbm5lY3QnIGluIHdpbmRvd1tpbmplY3RlZFdhbGxldEtleV0pO1xuICAgIH1cbiAgICBjb25uZWN0KG1lc3NhZ2UpIHtcbiAgICAgICAgdGhpcy5fY29ubmVjdChQUk9UT0NPTF9WRVJTSU9OLCBtZXNzYWdlKTtcbiAgICB9XG4gICAgcmVzdG9yZUNvbm5lY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiBfX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7XG4gICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgIGxvZ0RlYnVnKGBJbmplY3RlZCBQcm92aWRlciByZXN0b3JpbmcgY29ubmVjdGlvbi4uLmApO1xuICAgICAgICAgICAgICAgIGNvbnN0IGNvbm5lY3RFdmVudCA9IHlpZWxkIHRoaXMuaW5qZWN0ZWRXYWxsZXQucmVzdG9yZUNvbm5lY3Rpb24oKTtcbiAgICAgICAgICAgICAgICBsb2dEZWJ1ZygnSW5qZWN0ZWQgUHJvdmlkZXIgcmVzdG9yaW5nIGNvbm5lY3Rpb24gcmVzcG9uc2UnLCBjb25uZWN0RXZlbnQpO1xuICAgICAgICAgICAgICAgIGlmIChjb25uZWN0RXZlbnQuZXZlbnQgPT09ICdjb25uZWN0Jykge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLm1ha2VTdWJzY3JpcHRpb25zKCk7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMubGlzdGVuZXJzLmZvckVhY2gobGlzdGVuZXIgPT4gbGlzdGVuZXIoY29ubmVjdEV2ZW50KSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICB5aWVsZCB0aGlzLmNvbm5lY3Rpb25TdG9yYWdlLnJlbW92ZUNvbm5lY3Rpb24oKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjYXRjaCAoZSkge1xuICAgICAgICAgICAgICAgIHlpZWxkIHRoaXMuY29ubmVjdGlvblN0b3JhZ2UucmVtb3ZlQ29ubmVjdGlvbigpO1xuICAgICAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBjbG9zZUNvbm5lY3Rpb24oKSB7XG4gICAgICAgIGlmICh0aGlzLmxpc3RlblN1YnNjcmlwdGlvbnMpIHtcbiAgICAgICAgICAgIHRoaXMuaW5qZWN0ZWRXYWxsZXQuZGlzY29ubmVjdCgpO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuY2xvc2VBbGxMaXN0ZW5lcnMoKTtcbiAgICB9XG4gICAgZGlzY29ubmVjdCgpIHtcbiAgICAgICAgcmV0dXJuIF9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHtcbiAgICAgICAgICAgIHJldHVybiBuZXcgUHJvbWlzZShyZXNvbHZlID0+IHtcbiAgICAgICAgICAgICAgICBjb25zdCBvblJlcXVlc3RTZW50ID0gKCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLmNsb3NlQWxsTGlzdGVuZXJzKCk7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuY29ubmVjdGlvblN0b3JhZ2UucmVtb3ZlQ29ubmVjdGlvbigpLnRoZW4ocmVzb2x2ZSk7XG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLmluamVjdGVkV2FsbGV0LmRpc2Nvbm5lY3QoKTtcbiAgICAgICAgICAgICAgICAgICAgb25SZXF1ZXN0U2VudCgpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBjYXRjaCAoZSkge1xuICAgICAgICAgICAgICAgICAgICBsb2dEZWJ1ZyhlKTtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5zZW5kUmVxdWVzdCh7XG4gICAgICAgICAgICAgICAgICAgICAgICBtZXRob2Q6ICdkaXNjb25uZWN0JyxcbiAgICAgICAgICAgICAgICAgICAgICAgIHBhcmFtczogW11cbiAgICAgICAgICAgICAgICAgICAgfSwgb25SZXF1ZXN0U2VudCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBjbG9zZUFsbExpc3RlbmVycygpIHtcbiAgICAgICAgdmFyIF9hO1xuICAgICAgICB0aGlzLmxpc3RlblN1YnNjcmlwdGlvbnMgPSBmYWxzZTtcbiAgICAgICAgdGhpcy5saXN0ZW5lcnMgPSBbXTtcbiAgICAgICAgKF9hID0gdGhpcy51bnN1YnNjcmliZUNhbGxiYWNrKSA9PT0gbnVsbCB8fCBfYSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2EuY2FsbCh0aGlzKTtcbiAgICB9XG4gICAgbGlzdGVuKGV2ZW50c0NhbGxiYWNrKSB7XG4gICAgICAgIHRoaXMubGlzdGVuZXJzLnB1c2goZXZlbnRzQ2FsbGJhY2spO1xuICAgICAgICByZXR1cm4gKCkgPT4gKHRoaXMubGlzdGVuZXJzID0gdGhpcy5saXN0ZW5lcnMuZmlsdGVyKGxpc3RlbmVyID0+IGxpc3RlbmVyICE9PSBldmVudHNDYWxsYmFjaykpO1xuICAgIH1cbiAgICBzZW5kUmVxdWVzdChyZXF1ZXN0LCBvcHRpb25zT3JPblJlcXVlc3RTZW50KSB7XG4gICAgICAgIHZhciBfYTtcbiAgICAgICAgcmV0dXJuIF9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHtcbiAgICAgICAgICAgIC8vIFRPRE86IHJlbW92ZSBkZXByZWNhdGVkIG1ldGhvZFxuICAgICAgICAgICAgY29uc3Qgb3B0aW9ucyA9IHt9O1xuICAgICAgICAgICAgaWYgKHR5cGVvZiBvcHRpb25zT3JPblJlcXVlc3RTZW50ID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgICAgICAgICAgb3B0aW9ucy5vblJlcXVlc3RTZW50ID0gb3B0aW9uc09yT25SZXF1ZXN0U2VudDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIG9wdGlvbnMub25SZXF1ZXN0U2VudCA9IG9wdGlvbnNPck9uUmVxdWVzdFNlbnQgPT09IG51bGwgfHwgb3B0aW9uc09yT25SZXF1ZXN0U2VudCA9PT0gdm9pZCAwID8gdm9pZCAwIDogb3B0aW9uc09yT25SZXF1ZXN0U2VudC5vblJlcXVlc3RTZW50O1xuICAgICAgICAgICAgICAgIG9wdGlvbnMuc2lnbmFsID0gb3B0aW9uc09yT25SZXF1ZXN0U2VudCA9PT0gbnVsbCB8fCBvcHRpb25zT3JPblJlcXVlc3RTZW50ID09PSB2b2lkIDAgPyB2b2lkIDAgOiBvcHRpb25zT3JPblJlcXVlc3RTZW50LnNpZ25hbDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNvbnN0IGlkID0gKHlpZWxkIHRoaXMuY29ubmVjdGlvblN0b3JhZ2UuZ2V0TmV4dFJwY1JlcXVlc3RJZCgpKS50b1N0cmluZygpO1xuICAgICAgICAgICAgeWllbGQgdGhpcy5jb25uZWN0aW9uU3RvcmFnZS5pbmNyZWFzZU5leHRScGNSZXF1ZXN0SWQoKTtcbiAgICAgICAgICAgIGxvZ0RlYnVnKCdTZW5kIGluamVjdGVkLWJyaWRnZSByZXF1ZXN0OicsIE9iamVjdC5hc3NpZ24oT2JqZWN0LmFzc2lnbih7fSwgcmVxdWVzdCksIHsgaWQgfSkpO1xuICAgICAgICAgICAgY29uc3QgcmVzdWx0ID0gdGhpcy5pbmplY3RlZFdhbGxldC5zZW5kKE9iamVjdC5hc3NpZ24oT2JqZWN0LmFzc2lnbih7fSwgcmVxdWVzdCksIHsgaWQgfSkpO1xuICAgICAgICAgICAgcmVzdWx0LnRoZW4ocmVzcG9uc2UgPT4gbG9nRGVidWcoJ1dhbGxldCBtZXNzYWdlIHJlY2VpdmVkOicsIHJlc3BvbnNlKSk7XG4gICAgICAgICAgICAoX2EgPSBvcHRpb25zID09PSBudWxsIHx8IG9wdGlvbnMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IG9wdGlvbnMub25SZXF1ZXN0U2VudCkgPT09IG51bGwgfHwgX2EgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9hLmNhbGwob3B0aW9ucyk7XG4gICAgICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgICAgICB9KTtcbiAgICB9XG4gICAgX2Nvbm5lY3QocHJvdG9jb2xWZXJzaW9uLCBtZXNzYWdlKSB7XG4gICAgICAgIHJldHVybiBfX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7XG4gICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgIGxvZ0RlYnVnKGBJbmplY3RlZCBQcm92aWRlciBjb25uZWN0IHJlcXVlc3Q6IHByb3RvY29sVmVyc2lvbjogJHtwcm90b2NvbFZlcnNpb259LCBtZXNzYWdlOmAsIG1lc3NhZ2UpO1xuICAgICAgICAgICAgICAgIGNvbnN0IGNvbm5lY3RFdmVudCA9IHlpZWxkIHRoaXMuaW5qZWN0ZWRXYWxsZXQuY29ubmVjdChwcm90b2NvbFZlcnNpb24sIG1lc3NhZ2UpO1xuICAgICAgICAgICAgICAgIGxvZ0RlYnVnKCdJbmplY3RlZCBQcm92aWRlciBjb25uZWN0IHJlc3BvbnNlOicsIGNvbm5lY3RFdmVudCk7XG4gICAgICAgICAgICAgICAgaWYgKGNvbm5lY3RFdmVudC5ldmVudCA9PT0gJ2Nvbm5lY3QnKSB7XG4gICAgICAgICAgICAgICAgICAgIHlpZWxkIHRoaXMudXBkYXRlU2Vzc2lvbigpO1xuICAgICAgICAgICAgICAgICAgICB0aGlzLm1ha2VTdWJzY3JpcHRpb25zKCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHRoaXMubGlzdGVuZXJzLmZvckVhY2gobGlzdGVuZXIgPT4gbGlzdGVuZXIoY29ubmVjdEV2ZW50KSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjYXRjaCAoZSkge1xuICAgICAgICAgICAgICAgIGxvZ0RlYnVnKCdJbmplY3RlZCBQcm92aWRlciBjb25uZWN0IGVycm9yOicsIGUpO1xuICAgICAgICAgICAgICAgIGNvbnN0IGNvbm5lY3RFdmVudEVycm9yID0ge1xuICAgICAgICAgICAgICAgICAgICBldmVudDogJ2Nvbm5lY3RfZXJyb3InLFxuICAgICAgICAgICAgICAgICAgICBwYXlsb2FkOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb2RlOiAwLFxuICAgICAgICAgICAgICAgICAgICAgICAgbWVzc2FnZTogZSA9PT0gbnVsbCB8fCBlID09PSB2b2lkIDAgPyB2b2lkIDAgOiBlLnRvU3RyaW5nKClcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICAgICAgdGhpcy5saXN0ZW5lcnMuZm9yRWFjaChsaXN0ZW5lciA9PiBsaXN0ZW5lcihjb25uZWN0RXZlbnRFcnJvcikpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICB9XG4gICAgbWFrZVN1YnNjcmlwdGlvbnMoKSB7XG4gICAgICAgIHRoaXMubGlzdGVuU3Vic2NyaXB0aW9ucyA9IHRydWU7XG4gICAgICAgIHRoaXMudW5zdWJzY3JpYmVDYWxsYmFjayA9IHRoaXMuaW5qZWN0ZWRXYWxsZXQubGlzdGVuKGUgPT4ge1xuICAgICAgICAgICAgbG9nRGVidWcoJ1dhbGxldCBtZXNzYWdlIHJlY2VpdmVkOicsIGUpO1xuICAgICAgICAgICAgaWYgKHRoaXMubGlzdGVuU3Vic2NyaXB0aW9ucykge1xuICAgICAgICAgICAgICAgIHRoaXMubGlzdGVuZXJzLmZvckVhY2gobGlzdGVuZXIgPT4gbGlzdGVuZXIoZSkpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKGUuZXZlbnQgPT09ICdkaXNjb25uZWN0Jykge1xuICAgICAgICAgICAgICAgIHRoaXMuZGlzY29ubmVjdCgpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICB9XG4gICAgdXBkYXRlU2Vzc2lvbigpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuY29ubmVjdGlvblN0b3JhZ2Uuc3RvcmVDb25uZWN0aW9uKHtcbiAgICAgICAgICAgIHR5cGU6ICdpbmplY3RlZCcsXG4gICAgICAgICAgICBqc0JyaWRnZUtleTogdGhpcy5pbmplY3RlZFdhbGxldEtleSxcbiAgICAgICAgICAgIG5leHRScGNSZXF1ZXN0SWQ6IDBcbiAgICAgICAgfSk7XG4gICAgfVxufVxuSW5qZWN0ZWRQcm92aWRlci53aW5kb3cgPSBnZXRXaW5kb3coKTtcblxuLyoqXG4gKiBEZWZhdWx0IHN0b3JhZ2UgdG8gc2F2ZSBwcm90b2NvbCBkYXRhLCB1c2VzIGBsb2NhbFN0b3JhZ2VgIGlmIGl0IGlzIGF2YWlsYWJsZS4gSW4gU2FmYXJpJ3MgcHJpdmF0ZSBtb2RlLCBpdCB1c2VzIGBJbk1lbW9yeVN0b3JhZ2VgLiBJbiBOb2RlLmpzLCBpdCB0aHJvd3MgYW4gZXJyb3IuXG4gKi9cbmNsYXNzIERlZmF1bHRTdG9yYWdlIHtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgdGhpcy5sb2NhbFN0b3JhZ2UgPSB0cnlHZXRMb2NhbFN0b3JhZ2UoKTtcbiAgICB9XG4gICAgZ2V0SXRlbShrZXkpIHtcbiAgICAgICAgcmV0dXJuIF9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmxvY2FsU3RvcmFnZS5nZXRJdGVtKGtleSk7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICByZW1vdmVJdGVtKGtleSkge1xuICAgICAgICByZXR1cm4gX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xuICAgICAgICAgICAgdGhpcy5sb2NhbFN0b3JhZ2UucmVtb3ZlSXRlbShrZXkpO1xuICAgICAgICB9KTtcbiAgICB9XG4gICAgc2V0SXRlbShrZXksIHZhbHVlKSB7XG4gICAgICAgIHJldHVybiBfX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7XG4gICAgICAgICAgICB0aGlzLmxvY2FsU3RvcmFnZS5zZXRJdGVtKGtleSwgdmFsdWUpO1xuICAgICAgICB9KTtcbiAgICB9XG59XG5cbi8qKlxuICogQ2hlY2tzIGlmIGBXYWxsZXRJbmZvYCBpcyBgV2FsbGV0SW5mb0luamVjdGFibGVgIGFuZCBgV2FsbGV0SW5mb2AgaXMgaW5qZWN0ZWQgdG8gdGhlIGN1cnJlbnQgd2VicGFnZSAoYHdhbGxldEluZm8uaW5qZWN0ZWQgPT09IHRydWVgKS5cbiAqIEBwYXJhbSB2YWx1ZSBXYWxsZXRJbmZvIHRvIGNoZWNrLlxuICovXG5mdW5jdGlvbiBpc1dhbGxldEluZm9DdXJyZW50bHlJbmplY3RlZCh2YWx1ZSkge1xuICAgIHJldHVybiBpc1dhbGxldEluZm9JbmplY3RhYmxlKHZhbHVlKSAmJiB2YWx1ZS5pbmplY3RlZDtcbn1cbi8qKlxuICogQ2hlY2tzIGlmIGBXYWxsZXRJbmZvYCBpcyBgV2FsbGV0SW5mb0luamVjdGFibGVgIGFuZCBkQXBwIGlzIG9wZW5lZCBpbnNpZGUgdGhpcyB3YWxsZXQncyBicm93c2VyLlxuICogQHBhcmFtIHZhbHVlIFdhbGxldEluZm8gdG8gY2hlY2suXG4gKi9cbmZ1bmN0aW9uIGlzV2FsbGV0SW5mb0N1cnJlbnRseUVtYmVkZGVkKHZhbHVlKSB7XG4gICAgcmV0dXJuIGlzV2FsbGV0SW5mb0N1cnJlbnRseUluamVjdGVkKHZhbHVlKSAmJiB2YWx1ZS5lbWJlZGRlZDtcbn1cbi8qKlxuICogQ2hlY2tzIGlmIGBXYWxsZXRJbmZvYCBpcyBgV2FsbGV0SW5mb0luamVjdGVkYCwgYnV0IGRvZXNuJ3QgY2hlY2sgaWYgaXQgaXMgaW5qZWN0ZWQgdG8gdGhlIHBhZ2Ugb3Igbm90LlxuICogQHBhcmFtIHZhbHVlIFdhbGxldEluZm8gdG8gY2hlY2suXG4gKi9cbmZ1bmN0aW9uIGlzV2FsbGV0SW5mb0luamVjdGFibGUodmFsdWUpIHtcbiAgICByZXR1cm4gJ2pzQnJpZGdlS2V5JyBpbiB2YWx1ZTtcbn1cbi8qKlxuICogQ2hlY2tzIGlmIGBXYWxsZXRJbmZvYCBpcyBgV2FsbGV0SW5mb1JlbW90ZWAuXG4gKiBAcGFyYW0gdmFsdWUgV2FsbGV0SW5mbyB0byBjaGVjay5cbiAqL1xuZnVuY3Rpb24gaXNXYWxsZXRJbmZvUmVtb3RlKHZhbHVlKSB7XG4gICAgcmV0dXJuICdicmlkZ2VVcmwnIGluIHZhbHVlO1xufVxuLyoqXG4gKiBAZGVwcmVjYXRlZCB1c2UgYGlzV2FsbGV0SW5mb0luamVjdGFibGVgIG9yIGBpc1dhbGxldEluZm9DdXJyZW50bHlJbmplY3RlZGAgaW5zdGVhZC5cbiAqIEBwYXJhbSB2YWx1ZSBXYWxsZXRJbmZvIHRvIGNoZWNrLlxuICovXG5mdW5jdGlvbiBpc1dhbGxldEluZm9JbmplY3RlZCh2YWx1ZSkge1xuICAgIHJldHVybiAnanNCcmlkZ2VLZXknIGluIHZhbHVlO1xufVxuXG5jb25zdCBGQUxMQkFDS19XQUxMRVRTX0xJU1QgPSBbXG4gICAge1xuICAgICAgICBhcHBfbmFtZTogJ3RlbGVncmFtLXdhbGxldCcsXG4gICAgICAgIG5hbWU6ICdXYWxsZXQnLFxuICAgICAgICBpbWFnZTogJ2h0dHBzOi8vd2FsbGV0LnRnL2ltYWdlcy9sb2dvLTI4OC5wbmcnLFxuICAgICAgICBhYm91dF91cmw6ICdodHRwczovL3dhbGxldC50Zy8nLFxuICAgICAgICB1bml2ZXJzYWxfdXJsOiAnaHR0cHM6Ly90Lm1lL3dhbGxldD9hdHRhY2g9d2FsbGV0JyxcbiAgICAgICAgYnJpZGdlOiBbXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgdHlwZTogJ3NzZScsXG4gICAgICAgICAgICAgICAgdXJsOiAnaHR0cHM6Ly93YWxsZXRib3QubWUvdG9uY29ubmVjdC1icmlkZ2UvYnJpZGdlJ1xuICAgICAgICAgICAgfVxuICAgICAgICBdLFxuICAgICAgICBwbGF0Zm9ybXM6IFsnaW9zJywgJ2FuZHJvaWQnLCAnbWFjb3MnLCAnd2luZG93cycsICdsaW51eCddXG4gICAgfSxcbiAgICB7XG4gICAgICAgIGFwcF9uYW1lOiAndG9ua2VlcGVyJyxcbiAgICAgICAgbmFtZTogJ1RvbmtlZXBlcicsXG4gICAgICAgIGltYWdlOiAnaHR0cHM6Ly90b25rZWVwZXIuY29tL2Fzc2V0cy90b25jb25uZWN0LWljb24ucG5nJyxcbiAgICAgICAgdG9uZG5zOiAndG9ua2VlcGVyLnRvbicsXG4gICAgICAgIGFib3V0X3VybDogJ2h0dHBzOi8vdG9ua2VlcGVyLmNvbScsXG4gICAgICAgIHVuaXZlcnNhbF91cmw6ICdodHRwczovL2FwcC50b25rZWVwZXIuY29tL3Rvbi1jb25uZWN0JyxcbiAgICAgICAgZGVlcExpbms6ICd0b25rZWVwZXItdGM6Ly8nLFxuICAgICAgICBicmlkZ2U6IFtcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICB0eXBlOiAnc3NlJyxcbiAgICAgICAgICAgICAgICB1cmw6ICdodHRwczovL2JyaWRnZS50b25hcGkuaW8vYnJpZGdlJ1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICB0eXBlOiAnanMnLFxuICAgICAgICAgICAgICAgIGtleTogJ3RvbmtlZXBlcidcbiAgICAgICAgICAgIH1cbiAgICAgICAgXSxcbiAgICAgICAgcGxhdGZvcm1zOiBbJ2lvcycsICdhbmRyb2lkJywgJ2Nocm9tZScsICdmaXJlZm94JywgJ21hY29zJ11cbiAgICB9LFxuICAgIHtcbiAgICAgICAgYXBwX25hbWU6ICdteXRvbndhbGxldCcsXG4gICAgICAgIG5hbWU6ICdNeVRvbldhbGxldCcsXG4gICAgICAgIGltYWdlOiAnaHR0cHM6Ly9zdGF0aWMubXl0b253YWxsZXQuaW8vaWNvbi0yNTYucG5nJyxcbiAgICAgICAgYWJvdXRfdXJsOiAnaHR0cHM6Ly9teXRvbndhbGxldC5pbycsXG4gICAgICAgIHVuaXZlcnNhbF91cmw6ICdodHRwczovL2Nvbm5lY3QubXl0b253YWxsZXQub3JnJyxcbiAgICAgICAgYnJpZGdlOiBbXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgdHlwZTogJ2pzJyxcbiAgICAgICAgICAgICAgICBrZXk6ICdteXRvbndhbGxldCdcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgdHlwZTogJ3NzZScsXG4gICAgICAgICAgICAgICAgdXJsOiAnaHR0cHM6Ly90b25jb25uZWN0YnJpZGdlLm15dG9ud2FsbGV0Lm9yZy9icmlkZ2UvJ1xuICAgICAgICAgICAgfVxuICAgICAgICBdLFxuICAgICAgICBwbGF0Zm9ybXM6IFsnY2hyb21lJywgJ3dpbmRvd3MnLCAnbWFjb3MnLCAnbGludXgnLCAnaW9zJywgJ2FuZHJvaWQnLCAnZmlyZWZveCddXG4gICAgfSxcbiAgICB7XG4gICAgICAgIGFwcF9uYW1lOiAndG9uaHViJyxcbiAgICAgICAgbmFtZTogJ1Rvbmh1YicsXG4gICAgICAgIGltYWdlOiAnaHR0cHM6Ly90b25odWIuY29tL3RvbmNvbm5lY3RfbG9nby5wbmcnLFxuICAgICAgICBhYm91dF91cmw6ICdodHRwczovL3Rvbmh1Yi5jb20nLFxuICAgICAgICB1bml2ZXJzYWxfdXJsOiAnaHR0cHM6Ly90b25odWIuY29tL3Rvbi1jb25uZWN0JyxcbiAgICAgICAgYnJpZGdlOiBbXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgdHlwZTogJ2pzJyxcbiAgICAgICAgICAgICAgICBrZXk6ICd0b25odWInXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIHR5cGU6ICdzc2UnLFxuICAgICAgICAgICAgICAgIHVybDogJ2h0dHBzOi8vY29ubmVjdC50b25odWJhcGkuY29tL3RvbmNvbm5lY3QnXG4gICAgICAgICAgICB9XG4gICAgICAgIF0sXG4gICAgICAgIHBsYXRmb3JtczogWydpb3MnLCAnYW5kcm9pZCddXG4gICAgfSxcbiAgICB7XG4gICAgICAgIGFwcF9uYW1lOiAnYml0Z2V0VG9uV2FsbGV0JyxcbiAgICAgICAgbmFtZTogJ0JpdGdldCBXYWxsZXQnLFxuICAgICAgICBpbWFnZTogJ2h0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9iaXRnZXR3YWxsZXQvZG93bmxvYWQvcmVmcy9oZWFkcy9tYWluL2xvZ28vcG5nL2JpdGdldF93YWxsZXRfbG9nb18yODhfbWluaS5wbmcnLFxuICAgICAgICBhYm91dF91cmw6ICdodHRwczovL3dlYjMuYml0Z2V0LmNvbScsXG4gICAgICAgIGRlZXBMaW5rOiAnYml0a2VlcDovLycsXG4gICAgICAgIGJyaWRnZTogW1xuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIHR5cGU6ICdqcycsXG4gICAgICAgICAgICAgICAga2V5OiAnYml0Z2V0VG9uV2FsbGV0J1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICB0eXBlOiAnc3NlJyxcbiAgICAgICAgICAgICAgICB1cmw6ICdodHRwczovL3Rvbi1jb25uZWN0LWJyaWRnZS5iZ3dhcGkuaW8vYnJpZGdlJ1xuICAgICAgICAgICAgfVxuICAgICAgICBdLFxuICAgICAgICBwbGF0Zm9ybXM6IFsnaW9zJywgJ2FuZHJvaWQnLCAnY2hyb21lJ10sXG4gICAgICAgIHVuaXZlcnNhbF91cmw6ICdodHRwczovL2JrY29kZS52aXAvdG9uLWNvbm5lY3QnXG4gICAgfSxcbiAgICB7XG4gICAgICAgIGFwcF9uYW1lOiAnb2t4TWluaVdhbGxldCcsXG4gICAgICAgIG5hbWU6ICdPS1ggTWluaSBXYWxsZXQnLFxuICAgICAgICBpbWFnZTogJ2h0dHBzOi8vc3RhdGljLm9reC5jb20vY2RuL2Fzc2V0cy9pbWdzLzI0MTEvOEJFMUE0QTQzNEQ4RjU4QS5wbmcnLFxuICAgICAgICBhYm91dF91cmw6ICdodHRwczovL3d3dy5va3guY29tL3dlYjMnLFxuICAgICAgICB1bml2ZXJzYWxfdXJsOiAnaHR0cHM6Ly90Lm1lL09LWF9XQUxMRVRfQk9UP2F0dGFjaD13YWxsZXQnLFxuICAgICAgICBicmlkZ2U6IFtcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICB0eXBlOiAnc3NlJyxcbiAgICAgICAgICAgICAgICB1cmw6ICdodHRwczovL3d3dy5va3guY29tL3RvbmJyaWRnZS9kaXNjb3Zlci9ycGMvYnJpZGdlJ1xuICAgICAgICAgICAgfVxuICAgICAgICBdLFxuICAgICAgICBwbGF0Zm9ybXM6IFsnaW9zJywgJ2FuZHJvaWQnLCAnbWFjb3MnLCAnd2luZG93cycsICdsaW51eCddXG4gICAgfSxcbiAgICB7XG4gICAgICAgIGFwcF9uYW1lOiAnYmluYW5jZVdlYjNUb25XYWxsZXQnLFxuICAgICAgICBuYW1lOiAnQmluYW5jZSBXZWIzIFdhbGxldCcsXG4gICAgICAgIGltYWdlOiAnaHR0cHM6Ly9wdWJsaWMuYm5ic3RhdGljLmNvbS9zdGF0aWMvYmluYW5jZS13M3cvdG9uLXByb3ZpZGVyL2JpbmFuY2V3M3cucG5nJyxcbiAgICAgICAgYWJvdXRfdXJsOiAnaHR0cHM6Ly93d3cuYmluYW5jZS5jb20vZW4vd2ViM3dhbGxldCcsXG4gICAgICAgIGRlZXBMaW5rOiAnYm5jOi8vYXBwLmJpbmFuY2UuY29tL2NlZGVmaS90b24tY29ubmVjdCcsXG4gICAgICAgIGJyaWRnZTogW1xuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIHR5cGU6ICdqcycsXG4gICAgICAgICAgICAgICAga2V5OiAnYmluYW5jZXczdydcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgdHlwZTogJ3NzZScsXG4gICAgICAgICAgICAgICAgdXJsOiAnaHR0cHM6Ly93YWxsZXQuYmluYW5jZS5jb20vdG9uYnJpZGdlL2JyaWRnZSdcbiAgICAgICAgICAgIH1cbiAgICAgICAgXSxcbiAgICAgICAgcGxhdGZvcm1zOiBbJ2lvcycsICdhbmRyb2lkJywgJ21hY29zJywgJ3dpbmRvd3MnLCAnbGludXgnXSxcbiAgICAgICAgdW5pdmVyc2FsX3VybDogJ2h0dHBzOi8vYXBwLmJpbmFuY2UuY29tL2NlZGVmaS90b24tY29ubmVjdCdcbiAgICB9LFxuICAgIHtcbiAgICAgICAgYXBwX25hbWU6ICdmaW50b3Bpby10ZycsXG4gICAgICAgIG5hbWU6ICdGaW50b3BpbycsXG4gICAgICAgIGltYWdlOiAnaHR0cHM6Ly9maW50b3Bpby5jb20vdG9uY29ubmVjdC1pY29uLnBuZycsXG4gICAgICAgIGFib3V0X3VybDogJ2h0dHBzOi8vZmludG9waW8uY29tJyxcbiAgICAgICAgdW5pdmVyc2FsX3VybDogJ2h0dHBzOi8vdC5tZS9maW50b3Bpbz9hdHRhY2g9d2FsbGV0JyxcbiAgICAgICAgYnJpZGdlOiBbXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgdHlwZTogJ3NzZScsXG4gICAgICAgICAgICAgICAgdXJsOiAnaHR0cHM6Ly93YWxsZXQtYnJpZGdlLmZpbnRvcGlvLmNvbS9icmlkZ2UnXG4gICAgICAgICAgICB9XG4gICAgICAgIF0sXG4gICAgICAgIHBsYXRmb3JtczogWydpb3MnLCAnYW5kcm9pZCcsICdtYWNvcycsICd3aW5kb3dzJywgJ2xpbnV4J11cbiAgICB9LFxuICAgIHtcbiAgICAgICAgYXBwX25hbWU6ICdva3hUb25XYWxsZXQnLFxuICAgICAgICBuYW1lOiAnT0tYIFdhbGxldCcsXG4gICAgICAgIGltYWdlOiAnaHR0cHM6Ly9zdGF0aWMub2t4LmNvbS9jZG4vYXNzZXRzL2ltZ3MvMjQ3LzU4RTYzRkVBNDdBMkI3RDcucG5nJyxcbiAgICAgICAgYWJvdXRfdXJsOiAnaHR0cHM6Ly93d3cub2t4LmNvbS93ZWIzJyxcbiAgICAgICAgdW5pdmVyc2FsX3VybDogJ2h0dHBzOi8vd3d3Lm9reC5jb20vZG93bmxvYWQ/YXBwZW5kUXVlcnk9dHJ1ZSZkZWVwbGluaz1va3g6Ly93ZWIzL3dhbGxldC90b25jb25uZWN0JyxcbiAgICAgICAgYnJpZGdlOiBbXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgdHlwZTogJ2pzJyxcbiAgICAgICAgICAgICAgICBrZXk6ICdva3hUb25XYWxsZXQnXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIHR5cGU6ICdzc2UnLFxuICAgICAgICAgICAgICAgIHVybDogJ2h0dHBzOi8vd3d3Lm9reC5jb20vdG9uYnJpZGdlL2Rpc2NvdmVyL3JwYy9icmlkZ2UnXG4gICAgICAgICAgICB9XG4gICAgICAgIF0sXG4gICAgICAgIHBsYXRmb3JtczogWydjaHJvbWUnLCAnc2FmYXJpJywgJ2ZpcmVmb3gnLCAnaW9zJywgJ2FuZHJvaWQnXVxuICAgIH0sXG4gICAge1xuICAgICAgICBhcHBfbmFtZTogJ2hvdCcsXG4gICAgICAgIG5hbWU6ICdIT1QnLFxuICAgICAgICBpbWFnZTogJ2h0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9ob3QtZGFvL21lZGlhL21haW4vbG9nby5wbmcnLFxuICAgICAgICBhYm91dF91cmw6ICdodHRwczovL2hvdC1sYWJzLm9yZy8nLFxuICAgICAgICB1bml2ZXJzYWxfdXJsOiAnaHR0cHM6Ly90Lm1lL2hlcmV3YWxsZXRib3Q/YXR0YWNoPXdhbGxldCcsXG4gICAgICAgIGJyaWRnZTogW1xuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIHR5cGU6ICdzc2UnLFxuICAgICAgICAgICAgICAgIHVybDogJ2h0dHBzOi8vc3NlLWJyaWRnZS5ob3QtbGFicy5vcmcnXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIHR5cGU6ICdqcycsXG4gICAgICAgICAgICAgICAga2V5OiAnaG90V2FsbGV0J1xuICAgICAgICAgICAgfVxuICAgICAgICBdLFxuICAgICAgICBwbGF0Zm9ybXM6IFsnaW9zJywgJ2FuZHJvaWQnLCAnbWFjb3MnLCAnd2luZG93cycsICdsaW51eCddXG4gICAgfSxcbiAgICB7XG4gICAgICAgIGFwcF9uYW1lOiAnYnliaXRUb25XYWxsZXQnLFxuICAgICAgICBuYW1lOiAnQnliaXQgV2FsbGV0JyxcbiAgICAgICAgaW1hZ2U6ICdodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vYnliaXQtd2ViMy9ieWJpdC13ZWIzLmdpdGh1Yi5pby9tYWluL2RvY3MvaW1hZ2VzL2J5Yml0LWxvZ28ucG5nJyxcbiAgICAgICAgYWJvdXRfdXJsOiAnaHR0cHM6Ly93d3cuYnliaXQuY29tL3dlYjMnLFxuICAgICAgICB1bml2ZXJzYWxfdXJsOiAnaHR0cHM6Ly9hcHAuYnliaXQuY29tL3Rvbi1jb25uZWN0JyxcbiAgICAgICAgZGVlcExpbms6ICdieWJpdGFwcDovLycsXG4gICAgICAgIGJyaWRnZTogW1xuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIHR5cGU6ICdqcycsXG4gICAgICAgICAgICAgICAga2V5OiAnYnliaXRUb25XYWxsZXQnXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIHR5cGU6ICdzc2UnLFxuICAgICAgICAgICAgICAgIHVybDogJ2h0dHBzOi8vYXBpLW5vZGUuYnliaXQuY29tL3Nwb3QvYXBpL3dlYjMvYnJpZGdlL3Rvbi9icmlkZ2UnXG4gICAgICAgICAgICB9XG4gICAgICAgIF0sXG4gICAgICAgIHBsYXRmb3JtczogWydpb3MnLCAnYW5kcm9pZCcsICdjaHJvbWUnXVxuICAgIH0sXG4gICAge1xuICAgICAgICBhcHBfbmFtZTogJ2Rld2FsbGV0JyxcbiAgICAgICAgbmFtZTogJ0RlV2FsbGV0JyxcbiAgICAgICAgaW1hZ2U6ICdodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vZGVsYWItdGVhbS9tYW5pZmVzdHMtaW1hZ2VzL21haW4vV2FsbGV0QXZhdGFyLnBuZycsXG4gICAgICAgIGFib3V0X3VybDogJ2h0dHBzOi8vZGVsYWJ3YWxsZXQuY29tJyxcbiAgICAgICAgdW5pdmVyc2FsX3VybDogJ2h0dHBzOi8vdC5tZS9kZXdhbGxldD9hdHRhY2g9d2FsbGV0JyxcbiAgICAgICAgYnJpZGdlOiBbXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgdHlwZTogJ3NzZScsXG4gICAgICAgICAgICAgICAgdXJsOiAnaHR0cHM6Ly9icmlkZ2UuZGV3YWxsZXQucHJvL2JyaWRnZSdcbiAgICAgICAgICAgIH1cbiAgICAgICAgXSxcbiAgICAgICAgcGxhdGZvcm1zOiBbJ2lvcycsICdhbmRyb2lkJywgJ21hY29zJywgJ3dpbmRvd3MnLCAnbGludXgnXVxuICAgIH0sXG4gICAge1xuICAgICAgICBhcHBfbmFtZTogJ3NhZmVwYWx3YWxsZXQnLFxuICAgICAgICBuYW1lOiAnU2FmZVBhbCcsXG4gICAgICAgIGltYWdlOiAnaHR0cHM6Ly9zLnB2Y2xpcGluZy5jb20vd2ViL3B1YmxpY19pbWFnZS9TYWZlUGFsX3gyODgucG5nJyxcbiAgICAgICAgdG9uZG5zOiAnJyxcbiAgICAgICAgYWJvdXRfdXJsOiAnaHR0cHM6Ly93d3cuc2FmZXBhbC5jb20nLFxuICAgICAgICB1bml2ZXJzYWxfdXJsOiAnaHR0cHM6Ly9saW5rLnNhZmVwYWwuaW8vdG9uLWNvbm5lY3QnLFxuICAgICAgICBkZWVwTGluazogJ3NhZmVwYWwtdGM6Ly8nLFxuICAgICAgICBicmlkZ2U6IFtcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICB0eXBlOiAnc3NlJyxcbiAgICAgICAgICAgICAgICB1cmw6ICdodHRwczovL3Rvbi1icmlkZ2Uuc2FmZXBhbC5jb20vdG9uYnJpZGdlL3YxL2JyaWRnZSdcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgdHlwZTogJ2pzJyxcbiAgICAgICAgICAgICAgICBrZXk6ICdzYWZlcGFsd2FsbGV0J1xuICAgICAgICAgICAgfVxuICAgICAgICBdLFxuICAgICAgICBwbGF0Zm9ybXM6IFsnaW9zJywgJ2FuZHJvaWQnLCAnY2hyb21lJywgJ2ZpcmVmb3gnXVxuICAgIH0sXG4gICAge1xuICAgICAgICBhcHBfbmFtZTogJ0dhdGVXYWxsZXQnLFxuICAgICAgICBuYW1lOiAnR2F0ZVdhbGxldCcsXG4gICAgICAgIGltYWdlOiAnaHR0cHM6Ly9pbWcuZ2F0ZWRhdGFpbWcuY29tL3ByZC1vcmRpbmFsLWltZ3MvMDM2ZjA3YmI4NzMwNzE2ZS9nYXRlaW8tMDkyNS5wbmcnLFxuICAgICAgICBhYm91dF91cmw6ICdodHRwczovL3d3dy5nYXRlLmlvLycsXG4gICAgICAgIGJyaWRnZTogW1xuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIHR5cGU6ICdqcycsXG4gICAgICAgICAgICAgICAga2V5OiAnZ2F0ZXRvbndhbGxldCdcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgdHlwZTogJ3NzZScsXG4gICAgICAgICAgICAgICAgdXJsOiAnaHR0cHM6Ly9kYXBwLmdhdGVpby5zZXJ2aWNlcy90b25icmlkZ2VfYXBpL2JyaWRnZS92MSdcbiAgICAgICAgICAgIH1cbiAgICAgICAgXSxcbiAgICAgICAgcGxhdGZvcm1zOiBbJ2lvcycsICdhbmRyb2lkJ10sXG4gICAgICAgIHVuaXZlcnNhbF91cmw6ICdodHRwczovL2dhdGVpby5nby5saW5rL2dhdGVpby93ZWIzP2Fkal90PTFmZjhraGR3XzFmdTRjY2M3J1xuICAgIH0sXG4gICAge1xuICAgICAgICBhcHBfbmFtZTogJ29wZW5tYXNrJyxcbiAgICAgICAgbmFtZTogJ09wZW5NYXNrJyxcbiAgICAgICAgaW1hZ2U6ICdodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vT3BlblByb2R1Y3Qvb3Blbm1hc2stZXh0ZW5zaW9uL21haW4vcHVibGljL29wZW5tYXNrLWxvZ28tMjg4LnBuZycsXG4gICAgICAgIGFib3V0X3VybDogJ2h0dHBzOi8vd3d3Lm9wZW5tYXNrLmFwcC8nLFxuICAgICAgICBicmlkZ2U6IFtcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICB0eXBlOiAnanMnLFxuICAgICAgICAgICAgICAgIGtleTogJ29wZW5tYXNrJ1xuICAgICAgICAgICAgfVxuICAgICAgICBdLFxuICAgICAgICBwbGF0Zm9ybXM6IFsnY2hyb21lJ11cbiAgICB9LFxuICAgIHtcbiAgICAgICAgYXBwX25hbWU6ICdCaXRnZXRXZWIzJyxcbiAgICAgICAgbmFtZTogJ0JpdGdldFdlYjMnLFxuICAgICAgICBpbWFnZTogJ2h0dHBzOi8vaW1nLmJpdGdldGltZy5jb20vaW1hZ2UvdGhpcmQvMTczMTYzODA1OTc5NS5wbmcnLFxuICAgICAgICBhYm91dF91cmw6ICfigItodHRwczovL3d3dy5iaXRnZXQuY29tJyxcbiAgICAgICAgdW5pdmVyc2FsX3VybDogJ2h0dHBzOi8vdC5tZS9CaXRnZXRPZmZpY2lhbEJvdD9hdHRhY2g9d2FsbGV0JyxcbiAgICAgICAgYnJpZGdlOiBbXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgdHlwZTogJ3NzZScsXG4gICAgICAgICAgICAgICAgdXJsOiAnaHR0cHM6Ly90b24tY29ubmVjdC1icmlkZ2UuYmd3YXBpLmlvL2JyaWRnZSdcbiAgICAgICAgICAgIH1cbiAgICAgICAgXSxcbiAgICAgICAgcGxhdGZvcm1zOiBbJ2lvcycsICdhbmRyb2lkJywgJ3dpbmRvd3MnLCAnbWFjb3MnLCAnbGludXgnXVxuICAgIH0sXG4gICAge1xuICAgICAgICBhcHBfbmFtZTogJ3RvYmknLFxuICAgICAgICBuYW1lOiAnVG9iaScsXG4gICAgICAgIGltYWdlOiAnaHR0cHM6Ly9hcHAudG9iaXdhbGxldC5hcHAvaWNvbnMvbG9nby0yODgucG5nJyxcbiAgICAgICAgYWJvdXRfdXJsOiAnaHR0cHM6Ly90b2JpLmZ1bicsXG4gICAgICAgIHVuaXZlcnNhbF91cmw6ICdodHRwczovL3QubWUvVG9iaUNvcGlsb3RCb3Q/YXR0YWNoPXdhbGxldCcsXG4gICAgICAgIGJyaWRnZTogW1xuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIHR5cGU6ICdzc2UnLFxuICAgICAgICAgICAgICAgIHVybDogJ2h0dHBzOi8vdG9uLWJyaWRnZS50b2Jpd2FsbGV0LmFwcC9icmlkZ2UnXG4gICAgICAgICAgICB9XG4gICAgICAgIF0sXG4gICAgICAgIHBsYXRmb3JtczogWydpb3MnLCAnYW5kcm9pZCcsICdtYWNvcycsICd3aW5kb3dzJywgJ2xpbnV4J11cbiAgICB9LFxuICAgIHtcbiAgICAgICAgYXBwX25hbWU6ICd4dG9ud2FsbGV0JyxcbiAgICAgICAgbmFtZTogJ1hUT05XYWxsZXQnLFxuICAgICAgICBpbWFnZTogJ2h0dHBzOi8veHRvbndhbGxldC5jb20vYXNzZXRzL2ltZy9pY29uLTI1Ni1iYWNrLnBuZycsXG4gICAgICAgIGFib3V0X3VybDogJ2h0dHBzOi8veHRvbndhbGxldC5jb20nLFxuICAgICAgICBicmlkZ2U6IFtcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICB0eXBlOiAnanMnLFxuICAgICAgICAgICAgICAgIGtleTogJ3h0b253YWxsZXQnXG4gICAgICAgICAgICB9XG4gICAgICAgIF0sXG4gICAgICAgIHBsYXRmb3JtczogWydjaHJvbWUnLCAnZmlyZWZveCddXG4gICAgfSxcbiAgICB7XG4gICAgICAgIGFwcF9uYW1lOiAndG9ud2FsbGV0JyxcbiAgICAgICAgbmFtZTogJ1RPTiBXYWxsZXQnLFxuICAgICAgICBpbWFnZTogJ2h0dHBzOi8vd2FsbGV0LnRvbi5vcmcvYXNzZXRzL3VpL3FyLWxvZ28ucG5nJyxcbiAgICAgICAgYWJvdXRfdXJsOiAnaHR0cHM6Ly9jaHJvbWUuZ29vZ2xlLmNvbS93ZWJzdG9yZS9kZXRhaWwvdG9uLXdhbGxldC9ucGhwbHBnb2FraGhqY2hra2htaWdnYWtpam5raGZuZCcsXG4gICAgICAgIGJyaWRnZTogW1xuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIHR5cGU6ICdqcycsXG4gICAgICAgICAgICAgICAga2V5OiAndG9ud2FsbGV0J1xuICAgICAgICAgICAgfVxuICAgICAgICBdLFxuICAgICAgICBwbGF0Zm9ybXM6IFsnY2hyb21lJ11cbiAgICB9XG5dO1xuXG5jbGFzcyBXYWxsZXRzTGlzdE1hbmFnZXIge1xuICAgIGNvbnN0cnVjdG9yKG9wdGlvbnMpIHtcbiAgICAgICAgdmFyIF9hO1xuICAgICAgICB0aGlzLndhbGxldHNMaXN0Q2FjaGUgPSBudWxsO1xuICAgICAgICB0aGlzLndhbGxldHNMaXN0Q2FjaGVDcmVhdGlvblRpbWVzdGFtcCA9IG51bGw7XG4gICAgICAgIHRoaXMud2FsbGV0c0xpc3RTb3VyY2UgPVxuICAgICAgICAgICAgKF9hID0gb3B0aW9ucyA9PT0gbnVsbCB8fCBvcHRpb25zID09PSB2b2lkIDAgPyB2b2lkIDAgOiBvcHRpb25zLndhbGxldHNMaXN0U291cmNlKSAhPT0gbnVsbCAmJiBfYSAhPT0gdm9pZCAwID8gX2EgOiAnaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL3Rvbi1ibG9ja2NoYWluL3dhbGxldHMtbGlzdC9tYWluL3dhbGxldHMtdjIuanNvbic7XG4gICAgICAgIHRoaXMuY2FjaGVUVExNcyA9IG9wdGlvbnMgPT09IG51bGwgfHwgb3B0aW9ucyA9PT0gdm9pZCAwID8gdm9pZCAwIDogb3B0aW9ucy5jYWNoZVRUTE1zO1xuICAgIH1cbiAgICBnZXRXYWxsZXRzKCkge1xuICAgICAgICByZXR1cm4gX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xuICAgICAgICAgICAgaWYgKHRoaXMuY2FjaGVUVExNcyAmJlxuICAgICAgICAgICAgICAgIHRoaXMud2FsbGV0c0xpc3RDYWNoZUNyZWF0aW9uVGltZXN0YW1wICYmXG4gICAgICAgICAgICAgICAgRGF0ZS5ub3coKSA+IHRoaXMud2FsbGV0c0xpc3RDYWNoZUNyZWF0aW9uVGltZXN0YW1wICsgdGhpcy5jYWNoZVRUTE1zKSB7XG4gICAgICAgICAgICAgICAgdGhpcy53YWxsZXRzTGlzdENhY2hlID0gbnVsbDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmICghdGhpcy53YWxsZXRzTGlzdENhY2hlKSB7XG4gICAgICAgICAgICAgICAgdGhpcy53YWxsZXRzTGlzdENhY2hlID0gdGhpcy5mZXRjaFdhbGxldHNMaXN0KCk7XG4gICAgICAgICAgICAgICAgdGhpcy53YWxsZXRzTGlzdENhY2hlXG4gICAgICAgICAgICAgICAgICAgIC50aGVuKCgpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy53YWxsZXRzTGlzdENhY2hlQ3JlYXRpb25UaW1lc3RhbXAgPSBEYXRlLm5vdygpO1xuICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgICAgICAgIC5jYXRjaCgoKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMud2FsbGV0c0xpc3RDYWNoZSA9IG51bGw7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMud2FsbGV0c0xpc3RDYWNoZUNyZWF0aW9uVGltZXN0YW1wID0gbnVsbDtcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiB0aGlzLndhbGxldHNMaXN0Q2FjaGU7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBnZXRFbWJlZGRlZFdhbGxldCgpIHtcbiAgICAgICAgcmV0dXJuIF9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHtcbiAgICAgICAgICAgIGNvbnN0IHdhbGxldHNMaXN0ID0geWllbGQgdGhpcy5nZXRXYWxsZXRzKCk7XG4gICAgICAgICAgICBjb25zdCBlbWJlZGRlZFdhbGxldHMgPSB3YWxsZXRzTGlzdC5maWx0ZXIoaXNXYWxsZXRJbmZvQ3VycmVudGx5RW1iZWRkZWQpO1xuICAgICAgICAgICAgcmV0dXJuIGVtYmVkZGVkV2FsbGV0cy5sZW5ndGggPT09IDEgPyBlbWJlZGRlZFdhbGxldHNbMF0gOiBudWxsO1xuICAgICAgICB9KTtcbiAgICB9XG4gICAgZmV0Y2hXYWxsZXRzTGlzdCgpIHtcbiAgICAgICAgcmV0dXJuIF9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHtcbiAgICAgICAgICAgIGxldCB3YWxsZXRzTGlzdCA9IFtdO1xuICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICBjb25zdCB3YWxsZXRzUmVzcG9uc2UgPSB5aWVsZCBmZXRjaCh0aGlzLndhbGxldHNMaXN0U291cmNlKTtcbiAgICAgICAgICAgICAgICB3YWxsZXRzTGlzdCA9IHlpZWxkIHdhbGxldHNSZXNwb25zZS5qc29uKCk7XG4gICAgICAgICAgICAgICAgaWYgKCFBcnJheS5pc0FycmF5KHdhbGxldHNMaXN0KSkge1xuICAgICAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRmV0Y2hXYWxsZXRzRXJyb3IoJ1dyb25nIHdhbGxldHMgbGlzdCBmb3JtYXQsIHdhbGxldHMgbGlzdCBtdXN0IGJlIGFuIGFycmF5LicpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBjb25zdCB3cm9uZ0Zvcm1hdFdhbGxldHMgPSB3YWxsZXRzTGlzdC5maWx0ZXIod2FsbGV0ID0+ICF0aGlzLmlzQ29ycmVjdFdhbGxldENvbmZpZ0RUTyh3YWxsZXQpKTtcbiAgICAgICAgICAgICAgICBpZiAod3JvbmdGb3JtYXRXYWxsZXRzLmxlbmd0aCkge1xuICAgICAgICAgICAgICAgICAgICBsb2dFcnJvcihgV2FsbGV0KHMpICR7d3JvbmdGb3JtYXRXYWxsZXRzXG4gICAgICAgICAgICAgICAgICAgICAgICAubWFwKHdhbGxldCA9PiAod2FsbGV0ID09PSBudWxsIHx8IHdhbGxldCA9PT0gdm9pZCAwID8gdm9pZCAwIDogd2FsbGV0Lm5hbWUpIHx8ICd1bmtub3duJylcbiAgICAgICAgICAgICAgICAgICAgICAgIC5qb2luKCcsICcpfSBjb25maWcgZm9ybWF0IGlzIHdyb25nLiBUaGV5IHdlcmUgcmVtb3ZlZCBmcm9tIHRoZSB3YWxsZXRzIGxpc3QuYCk7XG4gICAgICAgICAgICAgICAgICAgIHdhbGxldHNMaXN0ID0gd2FsbGV0c0xpc3QuZmlsdGVyKHdhbGxldCA9PiB0aGlzLmlzQ29ycmVjdFdhbGxldENvbmZpZ0RUTyh3YWxsZXQpKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjYXRjaCAoZSkge1xuICAgICAgICAgICAgICAgIGxvZ0Vycm9yKGUpO1xuICAgICAgICAgICAgICAgIHdhbGxldHNMaXN0ID0gRkFMTEJBQ0tfV0FMTEVUU19MSVNUO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgbGV0IGN1cnJlbnRseUluamVjdGVkV2FsbGV0cyA9IFtdO1xuICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICBjdXJyZW50bHlJbmplY3RlZFdhbGxldHMgPSBJbmplY3RlZFByb3ZpZGVyLmdldEN1cnJlbnRseUluamVjdGVkV2FsbGV0cygpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY2F0Y2ggKGUpIHtcbiAgICAgICAgICAgICAgICBsb2dFcnJvcihlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiB0aGlzLm1lcmdlV2FsbGV0c0xpc3RzKHRoaXMud2FsbGV0Q29uZmlnRFRPTGlzdFRvV2FsbGV0Q29uZmlnTGlzdCh3YWxsZXRzTGlzdCksIGN1cnJlbnRseUluamVjdGVkV2FsbGV0cyk7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICB3YWxsZXRDb25maWdEVE9MaXN0VG9XYWxsZXRDb25maWdMaXN0KHdhbGxldENvbmZpZ0RUTykge1xuICAgICAgICByZXR1cm4gd2FsbGV0Q29uZmlnRFRPLm1hcCh3YWxsZXRDb25maWdEVE8gPT4ge1xuICAgICAgICAgICAgY29uc3Qgd2FsbGV0Q29uZmlnID0ge1xuICAgICAgICAgICAgICAgIG5hbWU6IHdhbGxldENvbmZpZ0RUTy5uYW1lLFxuICAgICAgICAgICAgICAgIGFwcE5hbWU6IHdhbGxldENvbmZpZ0RUTy5hcHBfbmFtZSxcbiAgICAgICAgICAgICAgICBpbWFnZVVybDogd2FsbGV0Q29uZmlnRFRPLmltYWdlLFxuICAgICAgICAgICAgICAgIGFib3V0VXJsOiB3YWxsZXRDb25maWdEVE8uYWJvdXRfdXJsLFxuICAgICAgICAgICAgICAgIHRvbmRuczogd2FsbGV0Q29uZmlnRFRPLnRvbmRucyxcbiAgICAgICAgICAgICAgICBwbGF0Zm9ybXM6IHdhbGxldENvbmZpZ0RUTy5wbGF0Zm9ybXMsXG4gICAgICAgICAgICAgICAgZmVhdHVyZXM6IHdhbGxldENvbmZpZ0RUTy5mZWF0dXJlc1xuICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIHdhbGxldENvbmZpZ0RUTy5icmlkZ2UuZm9yRWFjaChicmlkZ2UgPT4ge1xuICAgICAgICAgICAgICAgIGlmIChicmlkZ2UudHlwZSA9PT0gJ3NzZScpIHtcbiAgICAgICAgICAgICAgICAgICAgd2FsbGV0Q29uZmlnLmJyaWRnZVVybCA9IGJyaWRnZS51cmw7XG4gICAgICAgICAgICAgICAgICAgIHdhbGxldENvbmZpZy51bml2ZXJzYWxMaW5rID1cbiAgICAgICAgICAgICAgICAgICAgICAgIHdhbGxldENvbmZpZ0RUTy51bml2ZXJzYWxfdXJsO1xuICAgICAgICAgICAgICAgICAgICB3YWxsZXRDb25maWcuZGVlcExpbmsgPSB3YWxsZXRDb25maWdEVE8uZGVlcExpbms7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmIChicmlkZ2UudHlwZSA9PT0gJ2pzJykge1xuICAgICAgICAgICAgICAgICAgICBjb25zdCBqc0JyaWRnZUtleSA9IGJyaWRnZS5rZXk7XG4gICAgICAgICAgICAgICAgICAgIHdhbGxldENvbmZpZy5qc0JyaWRnZUtleSA9IGpzQnJpZGdlS2V5O1xuICAgICAgICAgICAgICAgICAgICB3YWxsZXRDb25maWcuaW5qZWN0ZWQgPVxuICAgICAgICAgICAgICAgICAgICAgICAgSW5qZWN0ZWRQcm92aWRlci5pc1dhbGxldEluamVjdGVkKGpzQnJpZGdlS2V5KTtcbiAgICAgICAgICAgICAgICAgICAgd2FsbGV0Q29uZmlnLmVtYmVkZGVkID1cbiAgICAgICAgICAgICAgICAgICAgICAgIEluamVjdGVkUHJvdmlkZXIuaXNJbnNpZGVXYWxsZXRCcm93c2VyKGpzQnJpZGdlS2V5KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIHJldHVybiB3YWxsZXRDb25maWc7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBtZXJnZVdhbGxldHNMaXN0cyhsaXN0MSwgbGlzdDIpIHtcbiAgICAgICAgY29uc3QgbmFtZXMgPSBuZXcgU2V0KGxpc3QxLmNvbmNhdChsaXN0MikubWFwKGl0ZW0gPT4gaXRlbS5uYW1lKSk7XG4gICAgICAgIHJldHVybiBbLi4ubmFtZXMudmFsdWVzKCldLm1hcChuYW1lID0+IHtcbiAgICAgICAgICAgIGNvbnN0IGxpc3QxSXRlbSA9IGxpc3QxLmZpbmQoaXRlbSA9PiBpdGVtLm5hbWUgPT09IG5hbWUpO1xuICAgICAgICAgICAgY29uc3QgbGlzdDJJdGVtID0gbGlzdDIuZmluZChpdGVtID0+IGl0ZW0ubmFtZSA9PT0gbmFtZSk7XG4gICAgICAgICAgICByZXR1cm4gT2JqZWN0LmFzc2lnbihPYmplY3QuYXNzaWduKHt9LCAobGlzdDFJdGVtICYmIE9iamVjdC5hc3NpZ24oe30sIGxpc3QxSXRlbSkpKSwgKGxpc3QySXRlbSAmJiBPYmplY3QuYXNzaWduKHt9LCBsaXN0Mkl0ZW0pKSk7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgY29tcGxleGl0eVxuICAgIGlzQ29ycmVjdFdhbGxldENvbmZpZ0RUTyh2YWx1ZSkge1xuICAgICAgICBpZiAoIXZhbHVlIHx8ICEodHlwZW9mIHZhbHVlID09PSAnb2JqZWN0JykpIHtcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBjb250YWluc05hbWUgPSAnbmFtZScgaW4gdmFsdWU7XG4gICAgICAgIGNvbnN0IGNvbnRhaW5zQXBwTmFtZSA9ICdhcHBfbmFtZScgaW4gdmFsdWU7XG4gICAgICAgIGNvbnN0IGNvbnRhaW5zSW1hZ2UgPSAnaW1hZ2UnIGluIHZhbHVlO1xuICAgICAgICBjb25zdCBjb250YWluc0Fib3V0ID0gJ2Fib3V0X3VybCcgaW4gdmFsdWU7XG4gICAgICAgIGNvbnN0IGNvbnRhaW5zUGxhdGZvcm1zID0gJ3BsYXRmb3JtcycgaW4gdmFsdWU7XG4gICAgICAgIGlmICghY29udGFpbnNOYW1lIHx8XG4gICAgICAgICAgICAhY29udGFpbnNJbWFnZSB8fFxuICAgICAgICAgICAgIWNvbnRhaW5zQWJvdXQgfHxcbiAgICAgICAgICAgICFjb250YWluc1BsYXRmb3JtcyB8fFxuICAgICAgICAgICAgIWNvbnRhaW5zQXBwTmFtZSkge1xuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG4gICAgICAgIGlmICghdmFsdWUucGxhdGZvcm1zIHx8XG4gICAgICAgICAgICAhQXJyYXkuaXNBcnJheSh2YWx1ZS5wbGF0Zm9ybXMpIHx8XG4gICAgICAgICAgICAhdmFsdWUucGxhdGZvcm1zLmxlbmd0aCkge1xuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG4gICAgICAgIGlmICghKCdicmlkZ2UnIGluIHZhbHVlKSB8fFxuICAgICAgICAgICAgIUFycmF5LmlzQXJyYXkodmFsdWUuYnJpZGdlKSB8fFxuICAgICAgICAgICAgIXZhbHVlLmJyaWRnZS5sZW5ndGgpIHtcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBicmlkZ2UgPSB2YWx1ZS5icmlkZ2U7XG4gICAgICAgIGlmIChicmlkZ2Uuc29tZShpdGVtID0+ICFpdGVtIHx8IHR5cGVvZiBpdGVtICE9PSAnb2JqZWN0JyB8fCAhKCd0eXBlJyBpbiBpdGVtKSkpIHtcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBzc2VCcmlkZ2UgPSBicmlkZ2UuZmluZChpdGVtID0+IGl0ZW0udHlwZSA9PT0gJ3NzZScpO1xuICAgICAgICBpZiAoc3NlQnJpZGdlKSB7XG4gICAgICAgICAgICBpZiAoISh0eXBlb2Ygc3NlQnJpZGdlID09PSAnb2JqZWN0JyAmJiAndXJsJyBpbiBzc2VCcmlkZ2UpIHx8XG4gICAgICAgICAgICAgICAgIXNzZUJyaWRnZS51cmwgfHxcbiAgICAgICAgICAgICAgICAhdmFsdWUudW5pdmVyc2FsX3VybCkge1xuICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBjb25zdCBqc0JyaWRnZSA9IGJyaWRnZS5maW5kKGl0ZW0gPT4gaXRlbS50eXBlID09PSAnanMnKTtcbiAgICAgICAgaWYgKGpzQnJpZGdlKSB7XG4gICAgICAgICAgICBpZiAodHlwZW9mIGpzQnJpZGdlICE9PSAnb2JqZWN0JyB8fFxuICAgICAgICAgICAgICAgICEoJ2tleScgaW4ganNCcmlkZ2UpIHx8XG4gICAgICAgICAgICAgICAgIWpzQnJpZGdlLmtleSkge1xuICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG59XG5cbmZ1bmN0aW9uIGNoZWNrU2VuZFRyYW5zYWN0aW9uU3VwcG9ydChmZWF0dXJlcywgb3B0aW9ucykge1xuICAgIGNvbnN0IHN1cHBvcnRzRGVwcmVjYXRlZFNlbmRUcmFuc2FjdGlvbkZlYXR1cmUgPSBmZWF0dXJlcy5pbmNsdWRlcygnU2VuZFRyYW5zYWN0aW9uJyk7XG4gICAgY29uc3Qgc2VuZFRyYW5zYWN0aW9uRmVhdHVyZSA9IGZpbmRGZWF0dXJlKGZlYXR1cmVzLCAnU2VuZFRyYW5zYWN0aW9uJyk7XG4gICAgaWYgKCFzdXBwb3J0c0RlcHJlY2F0ZWRTZW5kVHJhbnNhY3Rpb25GZWF0dXJlICYmICFzZW5kVHJhbnNhY3Rpb25GZWF0dXJlKSB7XG4gICAgICAgIHRocm93IG5ldyBXYWxsZXROb3RTdXBwb3J0RmVhdHVyZUVycm9yKFwiV2FsbGV0IGRvZXNuJ3Qgc3VwcG9ydCBTZW5kVHJhbnNhY3Rpb24gZmVhdHVyZS5cIik7XG4gICAgfVxuICAgIGlmIChvcHRpb25zLnJlcXVpcmVFeHRyYUN1cnJlbmNpZXMpIHtcbiAgICAgICAgaWYgKCFzZW5kVHJhbnNhY3Rpb25GZWF0dXJlIHx8ICFzZW5kVHJhbnNhY3Rpb25GZWF0dXJlLmV4dHJhQ3VycmVuY3lTdXBwb3J0ZWQpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBXYWxsZXROb3RTdXBwb3J0RmVhdHVyZUVycm9yKGBXYWxsZXQgaXMgbm90IGFibGUgdG8gaGFuZGxlIHN1Y2ggU2VuZFRyYW5zYWN0aW9uIHJlcXVlc3QuIEV4dHJhIGN1cnJlbmNpZXMgc3VwcG9ydCBpcyByZXF1aXJlZC5gKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBpZiAoc2VuZFRyYW5zYWN0aW9uRmVhdHVyZSAmJiBzZW5kVHJhbnNhY3Rpb25GZWF0dXJlLm1heE1lc3NhZ2VzICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgaWYgKHNlbmRUcmFuc2FjdGlvbkZlYXR1cmUubWF4TWVzc2FnZXMgPCBvcHRpb25zLnJlcXVpcmVkTWVzc2FnZXNOdW1iZXIpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBXYWxsZXROb3RTdXBwb3J0RmVhdHVyZUVycm9yKGBXYWxsZXQgaXMgbm90IGFibGUgdG8gaGFuZGxlIHN1Y2ggU2VuZFRyYW5zYWN0aW9uIHJlcXVlc3QuIE1heCBzdXBwb3J0IG1lc3NhZ2VzIG51bWJlciBpcyAke3NlbmRUcmFuc2FjdGlvbkZlYXR1cmUubWF4TWVzc2FnZXN9LCBidXQgJHtvcHRpb25zLnJlcXVpcmVkTWVzc2FnZXNOdW1iZXJ9IGlzIHJlcXVpcmVkLmApO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybjtcbiAgICB9XG4gICAgbG9nV2FybmluZyhcIkNvbm5lY3RlZCB3YWxsZXQgZGlkbid0IHByb3ZpZGUgaW5mb3JtYXRpb24gYWJvdXQgbWF4IGFsbG93ZWQgbWVzc2FnZXMgaW4gdGhlIFNlbmRUcmFuc2FjdGlvbiByZXF1ZXN0LiBSZXF1ZXN0IG1heSBiZSByZWplY3RlZCBieSB0aGUgd2FsbGV0LlwiKTtcbn1cbmZ1bmN0aW9uIGNoZWNrUmVxdWlyZWRXYWxsZXRGZWF0dXJlcyhmZWF0dXJlcywgd2FsbGV0c1JlcXVpcmVkRmVhdHVyZXMpIHtcbiAgICBpZiAodHlwZW9mIHdhbGxldHNSZXF1aXJlZEZlYXR1cmVzICE9PSAnb2JqZWN0Jykge1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG4gICAgY29uc3QgeyBzZW5kVHJhbnNhY3Rpb24gfSA9IHdhbGxldHNSZXF1aXJlZEZlYXR1cmVzO1xuICAgIGlmIChzZW5kVHJhbnNhY3Rpb24pIHtcbiAgICAgICAgY29uc3QgZmVhdHVyZSA9IGZpbmRGZWF0dXJlKGZlYXR1cmVzLCAnU2VuZFRyYW5zYWN0aW9uJyk7XG4gICAgICAgIGlmICghZmVhdHVyZSkge1xuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG4gICAgICAgIGlmICghY2hlY2tTZW5kVHJhbnNhY3Rpb24oZmVhdHVyZSwgc2VuZFRyYW5zYWN0aW9uKSkge1xuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiB0cnVlO1xufVxuZnVuY3Rpb24gZmluZEZlYXR1cmUoZmVhdHVyZXMsIHJlcXVpcmVkRmVhdHVyZU5hbWUpIHtcbiAgICByZXR1cm4gZmVhdHVyZXMuZmluZChmID0+IGYgJiYgdHlwZW9mIGYgPT09ICdvYmplY3QnICYmIGYubmFtZSA9PT0gcmVxdWlyZWRGZWF0dXJlTmFtZSk7XG59XG5mdW5jdGlvbiBjaGVja1NlbmRUcmFuc2FjdGlvbihmZWF0dXJlLCByZXF1aXJlZEZlYXR1cmUpIHtcbiAgICBjb25zdCBjb3JyZWN0TWVzc2FnZXNOdW1iZXIgPSByZXF1aXJlZEZlYXR1cmUubWluTWVzc2FnZXMgPT09IHVuZGVmaW5lZCB8fFxuICAgICAgICByZXF1aXJlZEZlYXR1cmUubWluTWVzc2FnZXMgPD0gZmVhdHVyZS5tYXhNZXNzYWdlcztcbiAgICBjb25zdCBjb3JyZWN0RXh0cmFDdXJyZW5jeSA9ICFyZXF1aXJlZEZlYXR1cmUuZXh0cmFDdXJyZW5jeVJlcXVpcmVkIHx8IGZlYXR1cmUuZXh0cmFDdXJyZW5jeVN1cHBvcnRlZDtcbiAgICByZXR1cm4gISEoY29ycmVjdE1lc3NhZ2VzTnVtYmVyICYmIGNvcnJlY3RFeHRyYUN1cnJlbmN5KTtcbn1cblxuLyoqXG4gKiBDcmVhdGUgYSByZXF1ZXN0IHZlcnNpb24gZXZlbnQuXG4gKi9cbmZ1bmN0aW9uIGNyZWF0ZVJlcXVlc3RWZXJzaW9uRXZlbnQoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgdHlwZTogJ3JlcXVlc3QtdmVyc2lvbidcbiAgICB9O1xufVxuLyoqXG4gKiBDcmVhdGUgYSByZXNwb25zZSB2ZXJzaW9uIGV2ZW50LlxuICogQHBhcmFtIHZlcnNpb25cbiAqL1xuZnVuY3Rpb24gY3JlYXRlUmVzcG9uc2VWZXJzaW9uRXZlbnQodmVyc2lvbikge1xuICAgIHJldHVybiB7XG4gICAgICAgIHR5cGU6ICdyZXNwb25zZS12ZXJzaW9uJyxcbiAgICAgICAgdmVyc2lvbjogdmVyc2lvblxuICAgIH07XG59XG4vKipcbiAqIENyZWF0ZSBhIHZlcnNpb24gaW5mby5cbiAqIEBwYXJhbSB2ZXJzaW9uXG4gKi9cbmZ1bmN0aW9uIGNyZWF0ZVZlcnNpb25JbmZvKHZlcnNpb24pIHtcbiAgICByZXR1cm4ge1xuICAgICAgICB0b25fY29ubmVjdF9zZGtfbGliOiB2ZXJzaW9uLnRvbl9jb25uZWN0X3Nka19saWIsXG4gICAgICAgIHRvbl9jb25uZWN0X3VpX2xpYjogdmVyc2lvbi50b25fY29ubmVjdF91aV9saWJcbiAgICB9O1xufVxuZnVuY3Rpb24gY3JlYXRlQ29ubmVjdGlvbkluZm8odmVyc2lvbiwgd2FsbGV0KSB7XG4gICAgdmFyIF9hLCBfYiwgX2MsIF9kLCBfZSwgX2YsIF9nLCBfaDtcbiAgICBjb25zdCBpc1RvblByb29mID0gKChfYSA9IHdhbGxldCA9PT0gbnVsbCB8fCB3YWxsZXQgPT09IHZvaWQgMCA/IHZvaWQgMCA6IHdhbGxldC5jb25uZWN0SXRlbXMpID09PSBudWxsIHx8IF9hID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYS50b25Qcm9vZikgJiYgJ3Byb29mJyBpbiB3YWxsZXQuY29ubmVjdEl0ZW1zLnRvblByb29mO1xuICAgIGNvbnN0IGF1dGhUeXBlID0gaXNUb25Qcm9vZiA/ICd0b25fcHJvb2YnIDogJ3Rvbl9hZGRyJztcbiAgICByZXR1cm4ge1xuICAgICAgICB3YWxsZXRfYWRkcmVzczogKF9jID0gKF9iID0gd2FsbGV0ID09PSBudWxsIHx8IHdhbGxldCA9PT0gdm9pZCAwID8gdm9pZCAwIDogd2FsbGV0LmFjY291bnQpID09PSBudWxsIHx8IF9iID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYi5hZGRyZXNzKSAhPT0gbnVsbCAmJiBfYyAhPT0gdm9pZCAwID8gX2MgOiBudWxsLFxuICAgICAgICB3YWxsZXRfdHlwZTogKF9kID0gd2FsbGV0ID09PSBudWxsIHx8IHdhbGxldCA9PT0gdm9pZCAwID8gdm9pZCAwIDogd2FsbGV0LmRldmljZS5hcHBOYW1lKSAhPT0gbnVsbCAmJiBfZCAhPT0gdm9pZCAwID8gX2QgOiBudWxsLFxuICAgICAgICB3YWxsZXRfdmVyc2lvbjogKF9lID0gd2FsbGV0ID09PSBudWxsIHx8IHdhbGxldCA9PT0gdm9pZCAwID8gdm9pZCAwIDogd2FsbGV0LmRldmljZS5hcHBWZXJzaW9uKSAhPT0gbnVsbCAmJiBfZSAhPT0gdm9pZCAwID8gX2UgOiBudWxsLFxuICAgICAgICBhdXRoX3R5cGU6IGF1dGhUeXBlLFxuICAgICAgICBjdXN0b21fZGF0YTogT2JqZWN0LmFzc2lnbih7IGNoYWluX2lkOiAoX2cgPSAoX2YgPSB3YWxsZXQgPT09IG51bGwgfHwgd2FsbGV0ID09PSB2b2lkIDAgPyB2b2lkIDAgOiB3YWxsZXQuYWNjb3VudCkgPT09IG51bGwgfHwgX2YgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9mLmNoYWluKSAhPT0gbnVsbCAmJiBfZyAhPT0gdm9pZCAwID8gX2cgOiBudWxsLCBwcm92aWRlcjogKF9oID0gd2FsbGV0ID09PSBudWxsIHx8IHdhbGxldCA9PT0gdm9pZCAwID8gdm9pZCAwIDogd2FsbGV0LnByb3ZpZGVyKSAhPT0gbnVsbCAmJiBfaCAhPT0gdm9pZCAwID8gX2ggOiBudWxsIH0sIGNyZWF0ZVZlcnNpb25JbmZvKHZlcnNpb24pKVxuICAgIH07XG59XG4vKipcbiAqIENyZWF0ZSBhIGNvbm5lY3Rpb24gaW5pdCBldmVudC5cbiAqL1xuZnVuY3Rpb24gY3JlYXRlQ29ubmVjdGlvblN0YXJ0ZWRFdmVudCh2ZXJzaW9uKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgdHlwZTogJ2Nvbm5lY3Rpb24tc3RhcnRlZCcsXG4gICAgICAgIGN1c3RvbV9kYXRhOiBjcmVhdGVWZXJzaW9uSW5mbyh2ZXJzaW9uKVxuICAgIH07XG59XG4vKipcbiAqIENyZWF0ZSBhIGNvbm5lY3Rpb24gY29tcGxldGVkIGV2ZW50LlxuICogQHBhcmFtIHZlcnNpb25cbiAqIEBwYXJhbSB3YWxsZXRcbiAqL1xuZnVuY3Rpb24gY3JlYXRlQ29ubmVjdGlvbkNvbXBsZXRlZEV2ZW50KHZlcnNpb24sIHdhbGxldCkge1xuICAgIHJldHVybiBPYmplY3QuYXNzaWduKHsgdHlwZTogJ2Nvbm5lY3Rpb24tY29tcGxldGVkJywgaXNfc3VjY2VzczogdHJ1ZSB9LCBjcmVhdGVDb25uZWN0aW9uSW5mbyh2ZXJzaW9uLCB3YWxsZXQpKTtcbn1cbi8qKlxuICogQ3JlYXRlIGEgY29ubmVjdGlvbiBlcnJvciBldmVudC5cbiAqIEBwYXJhbSB2ZXJzaW9uXG4gKiBAcGFyYW0gZXJyb3JfbWVzc2FnZVxuICogQHBhcmFtIGVycm9yQ29kZVxuICovXG5mdW5jdGlvbiBjcmVhdGVDb25uZWN0aW9uRXJyb3JFdmVudCh2ZXJzaW9uLCBlcnJvcl9tZXNzYWdlLCBlcnJvckNvZGUpIHtcbiAgICByZXR1cm4ge1xuICAgICAgICB0eXBlOiAnY29ubmVjdGlvbi1lcnJvcicsXG4gICAgICAgIGlzX3N1Y2Nlc3M6IGZhbHNlLFxuICAgICAgICBlcnJvcl9tZXNzYWdlOiBlcnJvcl9tZXNzYWdlLFxuICAgICAgICBlcnJvcl9jb2RlOiBlcnJvckNvZGUgIT09IG51bGwgJiYgZXJyb3JDb2RlICE9PSB2b2lkIDAgPyBlcnJvckNvZGUgOiBudWxsLFxuICAgICAgICBjdXN0b21fZGF0YTogY3JlYXRlVmVyc2lvbkluZm8odmVyc2lvbilcbiAgICB9O1xufVxuLyoqXG4gKiBDcmVhdGUgYSBjb25uZWN0aW9uIHJlc3RvcmluZyBzdGFydGVkIGV2ZW50LlxuICovXG5mdW5jdGlvbiBjcmVhdGVDb25uZWN0aW9uUmVzdG9yaW5nU3RhcnRlZEV2ZW50KHZlcnNpb24pIHtcbiAgICByZXR1cm4ge1xuICAgICAgICB0eXBlOiAnY29ubmVjdGlvbi1yZXN0b3Jpbmctc3RhcnRlZCcsXG4gICAgICAgIGN1c3RvbV9kYXRhOiBjcmVhdGVWZXJzaW9uSW5mbyh2ZXJzaW9uKVxuICAgIH07XG59XG4vKipcbiAqIENyZWF0ZSBhIGNvbm5lY3Rpb24gcmVzdG9yaW5nIGNvbXBsZXRlZCBldmVudC5cbiAqIEBwYXJhbSB2ZXJzaW9uXG4gKiBAcGFyYW0gd2FsbGV0XG4gKi9cbmZ1bmN0aW9uIGNyZWF0ZUNvbm5lY3Rpb25SZXN0b3JpbmdDb21wbGV0ZWRFdmVudCh2ZXJzaW9uLCB3YWxsZXQpIHtcbiAgICByZXR1cm4gT2JqZWN0LmFzc2lnbih7IHR5cGU6ICdjb25uZWN0aW9uLXJlc3RvcmluZy1jb21wbGV0ZWQnLCBpc19zdWNjZXNzOiB0cnVlIH0sIGNyZWF0ZUNvbm5lY3Rpb25JbmZvKHZlcnNpb24sIHdhbGxldCkpO1xufVxuLyoqXG4gKiBDcmVhdGUgYSBjb25uZWN0aW9uIHJlc3RvcmluZyBlcnJvciBldmVudC5cbiAqIEBwYXJhbSB2ZXJzaW9uXG4gKiBAcGFyYW0gZXJyb3JNZXNzYWdlXG4gKi9cbmZ1bmN0aW9uIGNyZWF0ZUNvbm5lY3Rpb25SZXN0b3JpbmdFcnJvckV2ZW50KHZlcnNpb24sIGVycm9yTWVzc2FnZSkge1xuICAgIHJldHVybiB7XG4gICAgICAgIHR5cGU6ICdjb25uZWN0aW9uLXJlc3RvcmluZy1lcnJvcicsXG4gICAgICAgIGlzX3N1Y2Nlc3M6IGZhbHNlLFxuICAgICAgICBlcnJvcl9tZXNzYWdlOiBlcnJvck1lc3NhZ2UsXG4gICAgICAgIGN1c3RvbV9kYXRhOiBjcmVhdGVWZXJzaW9uSW5mbyh2ZXJzaW9uKVxuICAgIH07XG59XG5mdW5jdGlvbiBjcmVhdGVUcmFuc2FjdGlvbkluZm8od2FsbGV0LCB0cmFuc2FjdGlvbikge1xuICAgIHZhciBfYSwgX2IsIF9jLCBfZDtcbiAgICByZXR1cm4ge1xuICAgICAgICB2YWxpZF91bnRpbDogKF9hID0gU3RyaW5nKHRyYW5zYWN0aW9uLnZhbGlkVW50aWwpKSAhPT0gbnVsbCAmJiBfYSAhPT0gdm9pZCAwID8gX2EgOiBudWxsLFxuICAgICAgICBmcm9tOiAoX2QgPSAoX2IgPSB0cmFuc2FjdGlvbi5mcm9tKSAhPT0gbnVsbCAmJiBfYiAhPT0gdm9pZCAwID8gX2IgOiAoX2MgPSB3YWxsZXQgPT09IG51bGwgfHwgd2FsbGV0ID09PSB2b2lkIDAgPyB2b2lkIDAgOiB3YWxsZXQuYWNjb3VudCkgPT09IG51bGwgfHwgX2MgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9jLmFkZHJlc3MpICE9PSBudWxsICYmIF9kICE9PSB2b2lkIDAgPyBfZCA6IG51bGwsXG4gICAgICAgIG1lc3NhZ2VzOiB0cmFuc2FjdGlvbi5tZXNzYWdlcy5tYXAobWVzc2FnZSA9PiB7XG4gICAgICAgICAgICB2YXIgX2EsIF9iO1xuICAgICAgICAgICAgcmV0dXJuICh7XG4gICAgICAgICAgICAgICAgYWRkcmVzczogKF9hID0gbWVzc2FnZS5hZGRyZXNzKSAhPT0gbnVsbCAmJiBfYSAhPT0gdm9pZCAwID8gX2EgOiBudWxsLFxuICAgICAgICAgICAgICAgIGFtb3VudDogKF9iID0gbWVzc2FnZS5hbW91bnQpICE9PSBudWxsICYmIF9iICE9PSB2b2lkIDAgPyBfYiA6IG51bGxcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9KVxuICAgIH07XG59XG4vKipcbiAqIENyZWF0ZSBhIHRyYW5zYWN0aW9uIGluaXQgZXZlbnQuXG4gKiBAcGFyYW0gdmVyc2lvblxuICogQHBhcmFtIHdhbGxldFxuICogQHBhcmFtIHRyYW5zYWN0aW9uXG4gKi9cbmZ1bmN0aW9uIGNyZWF0ZVRyYW5zYWN0aW9uU2VudEZvclNpZ25hdHVyZUV2ZW50KHZlcnNpb24sIHdhbGxldCwgdHJhbnNhY3Rpb24pIHtcbiAgICByZXR1cm4gT2JqZWN0LmFzc2lnbihPYmplY3QuYXNzaWduKHsgdHlwZTogJ3RyYW5zYWN0aW9uLXNlbnQtZm9yLXNpZ25hdHVyZScgfSwgY3JlYXRlQ29ubmVjdGlvbkluZm8odmVyc2lvbiwgd2FsbGV0KSksIGNyZWF0ZVRyYW5zYWN0aW9uSW5mbyh3YWxsZXQsIHRyYW5zYWN0aW9uKSk7XG59XG4vKipcbiAqIENyZWF0ZSBhIHRyYW5zYWN0aW9uIHNpZ25lZCBldmVudC5cbiAqIEBwYXJhbSB2ZXJzaW9uXG4gKiBAcGFyYW0gd2FsbGV0XG4gKiBAcGFyYW0gdHJhbnNhY3Rpb25cbiAqIEBwYXJhbSBzaWduZWRUcmFuc2FjdGlvblxuICovXG5mdW5jdGlvbiBjcmVhdGVUcmFuc2FjdGlvblNpZ25lZEV2ZW50KHZlcnNpb24sIHdhbGxldCwgdHJhbnNhY3Rpb24sIHNpZ25lZFRyYW5zYWN0aW9uKSB7XG4gICAgcmV0dXJuIE9iamVjdC5hc3NpZ24oT2JqZWN0LmFzc2lnbih7IHR5cGU6ICd0cmFuc2FjdGlvbi1zaWduZWQnLCBpc19zdWNjZXNzOiB0cnVlLCBzaWduZWRfdHJhbnNhY3Rpb246IHNpZ25lZFRyYW5zYWN0aW9uLmJvYyB9LCBjcmVhdGVDb25uZWN0aW9uSW5mbyh2ZXJzaW9uLCB3YWxsZXQpKSwgY3JlYXRlVHJhbnNhY3Rpb25JbmZvKHdhbGxldCwgdHJhbnNhY3Rpb24pKTtcbn1cbi8qKlxuICogQ3JlYXRlIGEgdHJhbnNhY3Rpb24gZXJyb3IgZXZlbnQuXG4gKiBAcGFyYW0gdmVyc2lvblxuICogQHBhcmFtIHdhbGxldFxuICogQHBhcmFtIHRyYW5zYWN0aW9uXG4gKiBAcGFyYW0gZXJyb3JNZXNzYWdlXG4gKiBAcGFyYW0gZXJyb3JDb2RlXG4gKi9cbmZ1bmN0aW9uIGNyZWF0ZVRyYW5zYWN0aW9uU2lnbmluZ0ZhaWxlZEV2ZW50KHZlcnNpb24sIHdhbGxldCwgdHJhbnNhY3Rpb24sIGVycm9yTWVzc2FnZSwgZXJyb3JDb2RlKSB7XG4gICAgcmV0dXJuIE9iamVjdC5hc3NpZ24oT2JqZWN0LmFzc2lnbih7IHR5cGU6ICd0cmFuc2FjdGlvbi1zaWduaW5nLWZhaWxlZCcsIGlzX3N1Y2Nlc3M6IGZhbHNlLCBlcnJvcl9tZXNzYWdlOiBlcnJvck1lc3NhZ2UsIGVycm9yX2NvZGU6IGVycm9yQ29kZSAhPT0gbnVsbCAmJiBlcnJvckNvZGUgIT09IHZvaWQgMCA/IGVycm9yQ29kZSA6IG51bGwgfSwgY3JlYXRlQ29ubmVjdGlvbkluZm8odmVyc2lvbiwgd2FsbGV0KSksIGNyZWF0ZVRyYW5zYWN0aW9uSW5mbyh3YWxsZXQsIHRyYW5zYWN0aW9uKSk7XG59XG4vKipcbiAqIENyZWF0ZSBhIGRpc2Nvbm5lY3QgZXZlbnQuXG4gKiBAcGFyYW0gdmVyc2lvblxuICogQHBhcmFtIHdhbGxldFxuICogQHBhcmFtIHNjb3BlXG4gKiBAcmV0dXJuc1xuICovXG5mdW5jdGlvbiBjcmVhdGVEaXNjb25uZWN0aW9uRXZlbnQodmVyc2lvbiwgd2FsbGV0LCBzY29wZSkge1xuICAgIHJldHVybiBPYmplY3QuYXNzaWduKHsgdHlwZTogJ2Rpc2Nvbm5lY3Rpb24nLCBzY29wZTogc2NvcGUgfSwgY3JlYXRlQ29ubmVjdGlvbkluZm8odmVyc2lvbiwgd2FsbGV0KSk7XG59XG5cbi8qKlxuICogQSBjb25jcmV0ZSBpbXBsZW1lbnRhdGlvbiBvZiBFdmVudERpc3BhdGNoZXIgdGhhdCBkaXNwYXRjaGVzIGV2ZW50cyB0byB0aGUgYnJvd3NlciB3aW5kb3cuXG4gKi9cbmNsYXNzIEJyb3dzZXJFdmVudERpc3BhdGNoZXIge1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICAvKipcbiAgICAgICAgICogVGhlIHdpbmRvdyBvYmplY3QsIHBvc3NpYmx5IHVuZGVmaW5lZCBpbiBhIHNlcnZlciBlbnZpcm9ubWVudC5cbiAgICAgICAgICogQHByaXZhdGVcbiAgICAgICAgICovXG4gICAgICAgIHRoaXMud2luZG93ID0gZ2V0V2luZG93KCk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIERpc3BhdGNoZXMgYW4gZXZlbnQgd2l0aCB0aGUgZ2l2ZW4gbmFtZSBhbmQgZGV0YWlscyB0byB0aGUgYnJvd3NlciB3aW5kb3cuXG4gICAgICogQHBhcmFtIGV2ZW50TmFtZSAtIFRoZSBuYW1lIG9mIHRoZSBldmVudCB0byBkaXNwYXRjaC5cbiAgICAgKiBAcGFyYW0gZXZlbnREZXRhaWxzIC0gVGhlIGRldGFpbHMgb2YgdGhlIGV2ZW50IHRvIGRpc3BhdGNoLlxuICAgICAqIEByZXR1cm5zIEEgcHJvbWlzZSB0aGF0IHJlc29sdmVzIHdoZW4gdGhlIGV2ZW50IGhhcyBiZWVuIGRpc3BhdGNoZWQuXG4gICAgICovXG4gICAgZGlzcGF0Y2hFdmVudChldmVudE5hbWUsIGV2ZW50RGV0YWlscykge1xuICAgICAgICB2YXIgX2E7XG4gICAgICAgIHJldHVybiBfX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7XG4gICAgICAgICAgICBjb25zdCBldmVudCA9IG5ldyBDdXN0b21FdmVudChldmVudE5hbWUsIHsgZGV0YWlsOiBldmVudERldGFpbHMgfSk7XG4gICAgICAgICAgICAoX2EgPSB0aGlzLndpbmRvdykgPT09IG51bGwgfHwgX2EgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9hLmRpc3BhdGNoRXZlbnQoZXZlbnQpO1xuICAgICAgICB9KTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQWRkcyBhbiBldmVudCBsaXN0ZW5lciB0byB0aGUgYnJvd3NlciB3aW5kb3cuXG4gICAgICogQHBhcmFtIGV2ZW50TmFtZSAtIFRoZSBuYW1lIG9mIHRoZSBldmVudCB0byBsaXN0ZW4gZm9yLlxuICAgICAqIEBwYXJhbSBsaXN0ZW5lciAtIFRoZSBsaXN0ZW5lciB0byBhZGQuXG4gICAgICogQHBhcmFtIG9wdGlvbnMgLSBUaGUgb3B0aW9ucyBmb3IgdGhlIGxpc3RlbmVyLlxuICAgICAqIEByZXR1cm5zIEEgZnVuY3Rpb24gdGhhdCByZW1vdmVzIHRoZSBsaXN0ZW5lci5cbiAgICAgKi9cbiAgICBhZGRFdmVudExpc3RlbmVyKGV2ZW50TmFtZSwgbGlzdGVuZXIsIG9wdGlvbnMpIHtcbiAgICAgICAgdmFyIF9hO1xuICAgICAgICByZXR1cm4gX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xuICAgICAgICAgICAgKF9hID0gdGhpcy53aW5kb3cpID09PSBudWxsIHx8IF9hID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYS5hZGRFdmVudExpc3RlbmVyKGV2ZW50TmFtZSwgbGlzdGVuZXIsIG9wdGlvbnMpO1xuICAgICAgICAgICAgcmV0dXJuICgpID0+IHtcbiAgICAgICAgICAgICAgICB2YXIgX2E7XG4gICAgICAgICAgICAgICAgcmV0dXJuIChfYSA9IHRoaXMud2luZG93KSA9PT0gbnVsbCB8fCBfYSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2EucmVtb3ZlRXZlbnRMaXN0ZW5lcihldmVudE5hbWUsIGxpc3RlbmVyKTtcbiAgICAgICAgICAgIH07XG4gICAgICAgIH0pO1xuICAgIH1cbn1cblxuLyoqXG4gKiBUcmFja2VyIGZvciBUb25Db25uZWN0IHVzZXIgYWN0aW9ucywgc3VjaCBhcyB0cmFuc2FjdGlvbiBzaWduaW5nLCBjb25uZWN0aW9uLCBldGMuXG4gKlxuICogTGlzdCBvZiBldmVudHM6XG4gKiAgKiBgY29ubmVjdGlvbi1zdGFydGVkYDogd2hlbiBhIHVzZXIgc3RhcnRzIGNvbm5lY3RpbmcgYSB3YWxsZXQuXG4gKiAgKiBgY29ubmVjdGlvbi1jb21wbGV0ZWRgOiB3aGVuIGEgdXNlciBzdWNjZXNzZnVsbHkgY29ubmVjdGVkIGEgd2FsbGV0LlxuICogICogYGNvbm5lY3Rpb24tZXJyb3JgOiB3aGVuIGEgdXNlciBjYW5jZWxzIGEgY29ubmVjdGlvbiBvciB0aGVyZSBpcyBhbiBlcnJvciBkdXJpbmcgdGhlIGNvbm5lY3Rpb24gcHJvY2Vzcy5cbiAqICAqIGBjb25uZWN0aW9uLXJlc3RvcmluZy1zdGFydGVkYDogd2hlbiB0aGUgZEFwcCBzdGFydHMgcmVzdG9yaW5nIGEgY29ubmVjdGlvbi5cbiAqICAqIGBjb25uZWN0aW9uLXJlc3RvcmluZy1jb21wbGV0ZWRgOiB3aGVuIHRoZSBkQXBwIHN1Y2Nlc3NmdWxseSByZXN0b3JlcyBhIGNvbm5lY3Rpb24uXG4gKiAgKiBgY29ubmVjdGlvbi1yZXN0b3JpbmctZXJyb3JgOiB3aGVuIHRoZSBkQXBwIGZhaWxzIHRvIHJlc3RvcmUgYSBjb25uZWN0aW9uLlxuICogICogYGRpc2Nvbm5lY3Rpb25gOiB3aGVuIGEgdXNlciBzdGFydHMgZGlzY29ubmVjdGluZyBhIHdhbGxldC5cbiAqICAqIGB0cmFuc2FjdGlvbi1zZW50LWZvci1zaWduYXR1cmVgOiB3aGVuIGEgdXNlciBzZW5kcyBhIHRyYW5zYWN0aW9uIGZvciBzaWduYXR1cmUuXG4gKiAgKiBgdHJhbnNhY3Rpb24tc2lnbmVkYDogd2hlbiBhIHVzZXIgc3VjY2Vzc2Z1bGx5IHNpZ25zIGEgdHJhbnNhY3Rpb24uXG4gKiAgKiBgdHJhbnNhY3Rpb24tc2lnbmluZy1mYWlsZWRgOiB3aGVuIGEgdXNlciBjYW5jZWxzIHRyYW5zYWN0aW9uIHNpZ25pbmcgb3IgdGhlcmUgaXMgYW4gZXJyb3IgZHVyaW5nIHRoZSBzaWduaW5nIHByb2Nlc3MuXG4gKlxuICogSWYgeW91IHdhbnQgdG8gdHJhY2sgdXNlciBhY3Rpb25zLCB5b3UgY2FuIHN1YnNjcmliZSB0byB0aGUgd2luZG93IGV2ZW50cyB3aXRoIHByZWZpeCBgdG9uLWNvbm5lY3QtYDpcbiAqXG4gKiBAZXhhbXBsZVxuICogd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ3Rvbi1jb25uZWN0LXRyYW5zYWN0aW9uLXNlbnQtZm9yLXNpZ25hdHVyZScsIChldmVudCkgPT4ge1xuICogICAgY29uc29sZS5sb2coJ1RyYW5zYWN0aW9uIGluaXQnLCBldmVudC5kZXRhaWwpO1xuICogfSk7XG4gKlxuICogQGludGVybmFsXG4gKi9cbmNsYXNzIFRvbkNvbm5lY3RUcmFja2VyIHtcbiAgICBjb25zdHJ1Y3RvcihvcHRpb25zKSB7XG4gICAgICAgIHZhciBfYTtcbiAgICAgICAgLyoqXG4gICAgICAgICAqIEV2ZW50IHByZWZpeCBmb3IgdXNlciBhY3Rpb25zLlxuICAgICAgICAgKiBAcHJpdmF0ZVxuICAgICAgICAgKi9cbiAgICAgICAgdGhpcy5ldmVudFByZWZpeCA9ICd0b24tY29ubmVjdC0nO1xuICAgICAgICAvKipcbiAgICAgICAgICogVG9uQ29ubmVjdCBVSSB2ZXJzaW9uLlxuICAgICAgICAgKi9cbiAgICAgICAgdGhpcy50b25Db25uZWN0VWlWZXJzaW9uID0gbnVsbDtcbiAgICAgICAgdGhpcy5ldmVudERpc3BhdGNoZXIgPSAoX2EgPSBvcHRpb25zID09PSBudWxsIHx8IG9wdGlvbnMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IG9wdGlvbnMuZXZlbnREaXNwYXRjaGVyKSAhPT0gbnVsbCAmJiBfYSAhPT0gdm9pZCAwID8gX2EgOiBuZXcgQnJvd3NlckV2ZW50RGlzcGF0Y2hlcigpO1xuICAgICAgICB0aGlzLnRvbkNvbm5lY3RTZGtWZXJzaW9uID0gb3B0aW9ucy50b25Db25uZWN0U2RrVmVyc2lvbjtcbiAgICAgICAgdGhpcy5pbml0KCkuY2F0Y2goKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogVmVyc2lvbiBvZiB0aGUgbGlicmFyeS5cbiAgICAgKi9cbiAgICBnZXQgdmVyc2lvbigpIHtcbiAgICAgICAgcmV0dXJuIGNyZWF0ZVZlcnNpb25JbmZvKHtcbiAgICAgICAgICAgIHRvbl9jb25uZWN0X3Nka19saWI6IHRoaXMudG9uQ29ubmVjdFNka1ZlcnNpb24sXG4gICAgICAgICAgICB0b25fY29ubmVjdF91aV9saWI6IHRoaXMudG9uQ29ubmVjdFVpVmVyc2lvblxuICAgICAgICB9KTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQ2FsbGVkIG9uY2Ugd2hlbiB0aGUgdHJhY2tlciBpcyBjcmVhdGVkIGFuZCByZXF1ZXN0IHZlcnNpb24gb3RoZXIgbGlicmFyaWVzLlxuICAgICAqL1xuICAgIGluaXQoKSB7XG4gICAgICAgIHJldHVybiBfX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7XG4gICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgIHlpZWxkIHRoaXMuc2V0UmVxdWVzdFZlcnNpb25IYW5kbGVyKCk7XG4gICAgICAgICAgICAgICAgdGhpcy50b25Db25uZWN0VWlWZXJzaW9uID0geWllbGQgdGhpcy5yZXF1ZXN0VG9uQ29ubmVjdFVpVmVyc2lvbigpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY2F0Y2ggKGUpIHsgfVxuICAgICAgICB9KTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogU2V0IHJlcXVlc3QgdmVyc2lvbiBoYW5kbGVyLlxuICAgICAqIEBwcml2YXRlXG4gICAgICovXG4gICAgc2V0UmVxdWVzdFZlcnNpb25IYW5kbGVyKCkge1xuICAgICAgICByZXR1cm4gX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xuICAgICAgICAgICAgeWllbGQgdGhpcy5ldmVudERpc3BhdGNoZXIuYWRkRXZlbnRMaXN0ZW5lcigndG9uLWNvbm5lY3QtcmVxdWVzdC12ZXJzaW9uJywgKCkgPT4gX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xuICAgICAgICAgICAgICAgIHlpZWxkIHRoaXMuZXZlbnREaXNwYXRjaGVyLmRpc3BhdGNoRXZlbnQoJ3Rvbi1jb25uZWN0LXJlc3BvbnNlLXZlcnNpb24nLCBjcmVhdGVSZXNwb25zZVZlcnNpb25FdmVudCh0aGlzLnRvbkNvbm5lY3RTZGtWZXJzaW9uKSk7XG4gICAgICAgICAgICB9KSk7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBSZXF1ZXN0IFRvbkNvbm5lY3QgVUkgdmVyc2lvbi5cbiAgICAgKiBAcHJpdmF0ZVxuICAgICAqL1xuICAgIHJlcXVlc3RUb25Db25uZWN0VWlWZXJzaW9uKCkge1xuICAgICAgICByZXR1cm4gX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xuICAgICAgICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IF9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHtcbiAgICAgICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgICAgICB5aWVsZCB0aGlzLmV2ZW50RGlzcGF0Y2hlci5hZGRFdmVudExpc3RlbmVyKCd0b24tY29ubmVjdC11aS1yZXNwb25zZS12ZXJzaW9uJywgKGV2ZW50KSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXNvbHZlKGV2ZW50LmRldGFpbC52ZXJzaW9uKTtcbiAgICAgICAgICAgICAgICAgICAgfSwgeyBvbmNlOiB0cnVlIH0pO1xuICAgICAgICAgICAgICAgICAgICB5aWVsZCB0aGlzLmV2ZW50RGlzcGF0Y2hlci5kaXNwYXRjaEV2ZW50KCd0b24tY29ubmVjdC11aS1yZXF1ZXN0LXZlcnNpb24nLCBjcmVhdGVSZXF1ZXN0VmVyc2lvbkV2ZW50KCkpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBjYXRjaCAoZSkge1xuICAgICAgICAgICAgICAgICAgICByZWplY3QoZSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSkpO1xuICAgICAgICB9KTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogRW1pdCB1c2VyIGFjdGlvbiBldmVudCB0byB0aGUgd2luZG93LlxuICAgICAqIEBwYXJhbSBldmVudERldGFpbHNcbiAgICAgKiBAcHJpdmF0ZVxuICAgICAqL1xuICAgIGRpc3BhdGNoVXNlckFjdGlvbkV2ZW50KGV2ZW50RGV0YWlscykge1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgdGhpcy5ldmVudERpc3BhdGNoZXJcbiAgICAgICAgICAgICAgICAuZGlzcGF0Y2hFdmVudChgJHt0aGlzLmV2ZW50UHJlZml4fSR7ZXZlbnREZXRhaWxzLnR5cGV9YCwgZXZlbnREZXRhaWxzKVxuICAgICAgICAgICAgICAgIC5jYXRjaCgpO1xuICAgICAgICB9XG4gICAgICAgIGNhdGNoIChlKSB7IH1cbiAgICB9XG4gICAgLyoqXG4gICAgICogVHJhY2sgY29ubmVjdGlvbiBpbml0IGV2ZW50LlxuICAgICAqIEBwYXJhbSBhcmdzXG4gICAgICovXG4gICAgdHJhY2tDb25uZWN0aW9uU3RhcnRlZCguLi5hcmdzKSB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICBjb25zdCBldmVudCA9IGNyZWF0ZUNvbm5lY3Rpb25TdGFydGVkRXZlbnQodGhpcy52ZXJzaW9uLCAuLi5hcmdzKTtcbiAgICAgICAgICAgIHRoaXMuZGlzcGF0Y2hVc2VyQWN0aW9uRXZlbnQoZXZlbnQpO1xuICAgICAgICB9XG4gICAgICAgIGNhdGNoIChlKSB7IH1cbiAgICB9XG4gICAgLyoqXG4gICAgICogVHJhY2sgY29ubmVjdGlvbiBzdWNjZXNzIGV2ZW50LlxuICAgICAqIEBwYXJhbSBhcmdzXG4gICAgICovXG4gICAgdHJhY2tDb25uZWN0aW9uQ29tcGxldGVkKC4uLmFyZ3MpIHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIGNvbnN0IGV2ZW50ID0gY3JlYXRlQ29ubmVjdGlvbkNvbXBsZXRlZEV2ZW50KHRoaXMudmVyc2lvbiwgLi4uYXJncyk7XG4gICAgICAgICAgICB0aGlzLmRpc3BhdGNoVXNlckFjdGlvbkV2ZW50KGV2ZW50KTtcbiAgICAgICAgfVxuICAgICAgICBjYXRjaCAoZSkgeyB9XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFRyYWNrIGNvbm5lY3Rpb24gZXJyb3IgZXZlbnQuXG4gICAgICogQHBhcmFtIGFyZ3NcbiAgICAgKi9cbiAgICB0cmFja0Nvbm5lY3Rpb25FcnJvciguLi5hcmdzKSB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICBjb25zdCBldmVudCA9IGNyZWF0ZUNvbm5lY3Rpb25FcnJvckV2ZW50KHRoaXMudmVyc2lvbiwgLi4uYXJncyk7XG4gICAgICAgICAgICB0aGlzLmRpc3BhdGNoVXNlckFjdGlvbkV2ZW50KGV2ZW50KTtcbiAgICAgICAgfVxuICAgICAgICBjYXRjaCAoZSkgeyB9XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFRyYWNrIGNvbm5lY3Rpb24gcmVzdG9yaW5nIGluaXQgZXZlbnQuXG4gICAgICogQHBhcmFtIGFyZ3NcbiAgICAgKi9cbiAgICB0cmFja0Nvbm5lY3Rpb25SZXN0b3JpbmdTdGFydGVkKC4uLmFyZ3MpIHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIGNvbnN0IGV2ZW50ID0gY3JlYXRlQ29ubmVjdGlvblJlc3RvcmluZ1N0YXJ0ZWRFdmVudCh0aGlzLnZlcnNpb24sIC4uLmFyZ3MpO1xuICAgICAgICAgICAgdGhpcy5kaXNwYXRjaFVzZXJBY3Rpb25FdmVudChldmVudCk7XG4gICAgICAgIH1cbiAgICAgICAgY2F0Y2ggKGUpIHsgfVxuICAgIH1cbiAgICAvKipcbiAgICAgKiBUcmFjayBjb25uZWN0aW9uIHJlc3RvcmluZyBzdWNjZXNzIGV2ZW50LlxuICAgICAqIEBwYXJhbSBhcmdzXG4gICAgICovXG4gICAgdHJhY2tDb25uZWN0aW9uUmVzdG9yaW5nQ29tcGxldGVkKC4uLmFyZ3MpIHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIGNvbnN0IGV2ZW50ID0gY3JlYXRlQ29ubmVjdGlvblJlc3RvcmluZ0NvbXBsZXRlZEV2ZW50KHRoaXMudmVyc2lvbiwgLi4uYXJncyk7XG4gICAgICAgICAgICB0aGlzLmRpc3BhdGNoVXNlckFjdGlvbkV2ZW50KGV2ZW50KTtcbiAgICAgICAgfVxuICAgICAgICBjYXRjaCAoZSkgeyB9XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFRyYWNrIGNvbm5lY3Rpb24gcmVzdG9yaW5nIGVycm9yIGV2ZW50LlxuICAgICAqIEBwYXJhbSBhcmdzXG4gICAgICovXG4gICAgdHJhY2tDb25uZWN0aW9uUmVzdG9yaW5nRXJyb3IoLi4uYXJncykge1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgY29uc3QgZXZlbnQgPSBjcmVhdGVDb25uZWN0aW9uUmVzdG9yaW5nRXJyb3JFdmVudCh0aGlzLnZlcnNpb24sIC4uLmFyZ3MpO1xuICAgICAgICAgICAgdGhpcy5kaXNwYXRjaFVzZXJBY3Rpb25FdmVudChldmVudCk7XG4gICAgICAgIH1cbiAgICAgICAgY2F0Y2ggKGUpIHsgfVxuICAgIH1cbiAgICAvKipcbiAgICAgKiBUcmFjayBkaXNjb25uZWN0IGV2ZW50LlxuICAgICAqIEBwYXJhbSBhcmdzXG4gICAgICovXG4gICAgdHJhY2tEaXNjb25uZWN0aW9uKC4uLmFyZ3MpIHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIGNvbnN0IGV2ZW50ID0gY3JlYXRlRGlzY29ubmVjdGlvbkV2ZW50KHRoaXMudmVyc2lvbiwgLi4uYXJncyk7XG4gICAgICAgICAgICB0aGlzLmRpc3BhdGNoVXNlckFjdGlvbkV2ZW50KGV2ZW50KTtcbiAgICAgICAgfVxuICAgICAgICBjYXRjaCAoZSkgeyB9XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFRyYWNrIHRyYW5zYWN0aW9uIGluaXQgZXZlbnQuXG4gICAgICogQHBhcmFtIGFyZ3NcbiAgICAgKi9cbiAgICB0cmFja1RyYW5zYWN0aW9uU2VudEZvclNpZ25hdHVyZSguLi5hcmdzKSB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICBjb25zdCBldmVudCA9IGNyZWF0ZVRyYW5zYWN0aW9uU2VudEZvclNpZ25hdHVyZUV2ZW50KHRoaXMudmVyc2lvbiwgLi4uYXJncyk7XG4gICAgICAgICAgICB0aGlzLmRpc3BhdGNoVXNlckFjdGlvbkV2ZW50KGV2ZW50KTtcbiAgICAgICAgfVxuICAgICAgICBjYXRjaCAoZSkgeyB9XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFRyYWNrIHRyYW5zYWN0aW9uIHNpZ25lZCBldmVudC5cbiAgICAgKiBAcGFyYW0gYXJnc1xuICAgICAqL1xuICAgIHRyYWNrVHJhbnNhY3Rpb25TaWduZWQoLi4uYXJncykge1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgY29uc3QgZXZlbnQgPSBjcmVhdGVUcmFuc2FjdGlvblNpZ25lZEV2ZW50KHRoaXMudmVyc2lvbiwgLi4uYXJncyk7XG4gICAgICAgICAgICB0aGlzLmRpc3BhdGNoVXNlckFjdGlvbkV2ZW50KGV2ZW50KTtcbiAgICAgICAgfVxuICAgICAgICBjYXRjaCAoZSkgeyB9XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFRyYWNrIHRyYW5zYWN0aW9uIGVycm9yIGV2ZW50LlxuICAgICAqIEBwYXJhbSBhcmdzXG4gICAgICovXG4gICAgdHJhY2tUcmFuc2FjdGlvblNpZ25pbmdGYWlsZWQoLi4uYXJncykge1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgY29uc3QgZXZlbnQgPSBjcmVhdGVUcmFuc2FjdGlvblNpZ25pbmdGYWlsZWRFdmVudCh0aGlzLnZlcnNpb24sIC4uLmFyZ3MpO1xuICAgICAgICAgICAgdGhpcy5kaXNwYXRjaFVzZXJBY3Rpb25FdmVudChldmVudCk7XG4gICAgICAgIH1cbiAgICAgICAgY2F0Y2ggKGUpIHsgfVxuICAgIH1cbn1cblxuY29uc3QgdG9uQ29ubmVjdFNka1ZlcnNpb24gPSBcIjMuMS4wXCI7XG5cbmNsYXNzIFRvbkNvbm5lY3Qge1xuICAgIGNvbnN0cnVjdG9yKG9wdGlvbnMpIHtcbiAgICAgICAgdGhpcy53YWxsZXRzTGlzdCA9IG5ldyBXYWxsZXRzTGlzdE1hbmFnZXIoKTtcbiAgICAgICAgdGhpcy5fd2FsbGV0ID0gbnVsbDtcbiAgICAgICAgdGhpcy5wcm92aWRlciA9IG51bGw7XG4gICAgICAgIHRoaXMuc3RhdHVzQ2hhbmdlU3Vic2NyaXB0aW9ucyA9IFtdO1xuICAgICAgICB0aGlzLnN0YXR1c0NoYW5nZUVycm9yU3Vic2NyaXB0aW9ucyA9IFtdO1xuICAgICAgICB0aGlzLmRhcHBTZXR0aW5ncyA9IHtcbiAgICAgICAgICAgIG1hbmlmZXN0VXJsOiAob3B0aW9ucyA9PT0gbnVsbCB8fCBvcHRpb25zID09PSB2b2lkIDAgPyB2b2lkIDAgOiBvcHRpb25zLm1hbmlmZXN0VXJsKSB8fCBnZXRXZWJQYWdlTWFuaWZlc3QoKSxcbiAgICAgICAgICAgIHN0b3JhZ2U6IChvcHRpb25zID09PSBudWxsIHx8IG9wdGlvbnMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IG9wdGlvbnMuc3RvcmFnZSkgfHwgbmV3IERlZmF1bHRTdG9yYWdlKClcbiAgICAgICAgfTtcbiAgICAgICAgdGhpcy53YWxsZXRzUmVxdWlyZWRGZWF0dXJlcyA9IG9wdGlvbnMgPT09IG51bGwgfHwgb3B0aW9ucyA9PT0gdm9pZCAwID8gdm9pZCAwIDogb3B0aW9ucy53YWxsZXRzUmVxdWlyZWRGZWF0dXJlcztcbiAgICAgICAgdGhpcy53YWxsZXRzTGlzdCA9IG5ldyBXYWxsZXRzTGlzdE1hbmFnZXIoe1xuICAgICAgICAgICAgd2FsbGV0c0xpc3RTb3VyY2U6IG9wdGlvbnMgPT09IG51bGwgfHwgb3B0aW9ucyA9PT0gdm9pZCAwID8gdm9pZCAwIDogb3B0aW9ucy53YWxsZXRzTGlzdFNvdXJjZSxcbiAgICAgICAgICAgIGNhY2hlVFRMTXM6IG9wdGlvbnMgPT09IG51bGwgfHwgb3B0aW9ucyA9PT0gdm9pZCAwID8gdm9pZCAwIDogb3B0aW9ucy53YWxsZXRzTGlzdENhY2hlVFRMTXNcbiAgICAgICAgfSk7XG4gICAgICAgIHRoaXMudHJhY2tlciA9IG5ldyBUb25Db25uZWN0VHJhY2tlcih7XG4gICAgICAgICAgICBldmVudERpc3BhdGNoZXI6IG9wdGlvbnMgPT09IG51bGwgfHwgb3B0aW9ucyA9PT0gdm9pZCAwID8gdm9pZCAwIDogb3B0aW9ucy5ldmVudERpc3BhdGNoZXIsXG4gICAgICAgICAgICB0b25Db25uZWN0U2RrVmVyc2lvbjogdG9uQ29ubmVjdFNka1ZlcnNpb25cbiAgICAgICAgfSk7XG4gICAgICAgIGlmICghdGhpcy5kYXBwU2V0dGluZ3MubWFuaWZlc3RVcmwpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBEYXBwTWV0YWRhdGFFcnJvcignRGFwcCB0b25jb25uZWN0LW1hbmlmZXN0Lmpzb24gbXVzdCBiZSBzcGVjaWZpZWQgaWYgd2luZG93LmxvY2F0aW9uLm9yaWdpbiBpcyB1bmRlZmluZWQuIFNlZSBtb3JlIGh0dHBzOi8vZ2l0aHViLmNvbS90b24tY29ubmVjdC9kb2NzL2Jsb2IvbWFpbi9yZXF1ZXN0cy1yZXNwb25zZXMubWQjYXBwLW1hbmlmZXN0Jyk7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5icmlkZ2VDb25uZWN0aW9uU3RvcmFnZSA9IG5ldyBCcmlkZ2VDb25uZWN0aW9uU3RvcmFnZSh0aGlzLmRhcHBTZXR0aW5ncy5zdG9yYWdlKTtcbiAgICAgICAgaWYgKCEob3B0aW9ucyA9PT0gbnVsbCB8fCBvcHRpb25zID09PSB2b2lkIDAgPyB2b2lkIDAgOiBvcHRpb25zLmRpc2FibGVBdXRvUGF1c2VDb25uZWN0aW9uKSkge1xuICAgICAgICAgICAgdGhpcy5hZGRXaW5kb3dGb2N1c0FuZEJsdXJTdWJzY3JpcHRpb25zKCk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgLyoqXG4gICAgICogUmV0dXJucyBhdmFpbGFibGUgd2FsbGV0cyBsaXN0LlxuICAgICAqL1xuICAgIHN0YXRpYyBnZXRXYWxsZXRzKCkge1xuICAgICAgICByZXR1cm4gdGhpcy53YWxsZXRzTGlzdC5nZXRXYWxsZXRzKCk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFNob3dzIGlmIHRoZSB3YWxsZXQgaXMgY29ubmVjdGVkIHJpZ2h0IG5vdy5cbiAgICAgKi9cbiAgICBnZXQgY29ubmVjdGVkKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5fd2FsbGV0ICE9PSBudWxsO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBDdXJyZW50IGNvbm5lY3RlZCBhY2NvdW50IG9yIG51bGwgaWYgbm8gYWNjb3VudCBpcyBjb25uZWN0ZWQuXG4gICAgICovXG4gICAgZ2V0IGFjY291bnQoKSB7XG4gICAgICAgIHZhciBfYTtcbiAgICAgICAgcmV0dXJuICgoX2EgPSB0aGlzLl93YWxsZXQpID09PSBudWxsIHx8IF9hID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYS5hY2NvdW50KSB8fCBudWxsO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBDdXJyZW50IGNvbm5lY3RlZCB3YWxsZXQgb3IgbnVsbCBpZiBubyBhY2NvdW50IGlzIGNvbm5lY3RlZC5cbiAgICAgKi9cbiAgICBnZXQgd2FsbGV0KCkge1xuICAgICAgICByZXR1cm4gdGhpcy5fd2FsbGV0O1xuICAgIH1cbiAgICBzZXQgd2FsbGV0KHZhbHVlKSB7XG4gICAgICAgIHRoaXMuX3dhbGxldCA9IHZhbHVlO1xuICAgICAgICB0aGlzLnN0YXR1c0NoYW5nZVN1YnNjcmlwdGlvbnMuZm9yRWFjaChjYWxsYmFjayA9PiBjYWxsYmFjayh0aGlzLl93YWxsZXQpKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogUmV0dXJucyBhdmFpbGFibGUgd2FsbGV0cyBsaXN0LlxuICAgICAqL1xuICAgIGdldFdhbGxldHMoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLndhbGxldHNMaXN0LmdldFdhbGxldHMoKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQWxsb3dzIHRvIHN1YnNjcmliZSB0byBjb25uZWN0aW9uIHN0YXR1cyBjaGFuZ2VzIGFuZCBoYW5kbGUgY29ubmVjdGlvbiBlcnJvcnMuXG4gICAgICogQHBhcmFtIGNhbGxiYWNrIHdpbGwgYmUgY2FsbGVkIGFmdGVyIGNvbm5lY3Rpb25zIHN0YXR1cyBjaGFuZ2VzIHdpdGggYWN0dWFsIHdhbGxldCBvciBudWxsLlxuICAgICAqIEBwYXJhbSBlcnJvcnNIYW5kbGVyIChvcHRpb25hbCkgd2lsbCBiZSBjYWxsZWQgd2l0aCBzb21lIGluc3RhbmNlIG9mIFRvbkNvbm5lY3RFcnJvciB3aGVuIGNvbm5lY3QgZXJyb3IgaXMgcmVjZWl2ZWQuXG4gICAgICogQHJldHVybnMgdW5zdWJzY3JpYmUgY2FsbGJhY2suXG4gICAgICovXG4gICAgb25TdGF0dXNDaGFuZ2UoY2FsbGJhY2ssIGVycm9yc0hhbmRsZXIpIHtcbiAgICAgICAgdGhpcy5zdGF0dXNDaGFuZ2VTdWJzY3JpcHRpb25zLnB1c2goY2FsbGJhY2spO1xuICAgICAgICBpZiAoZXJyb3JzSGFuZGxlcikge1xuICAgICAgICAgICAgdGhpcy5zdGF0dXNDaGFuZ2VFcnJvclN1YnNjcmlwdGlvbnMucHVzaChlcnJvcnNIYW5kbGVyKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gKCkgPT4ge1xuICAgICAgICAgICAgdGhpcy5zdGF0dXNDaGFuZ2VTdWJzY3JpcHRpb25zID0gdGhpcy5zdGF0dXNDaGFuZ2VTdWJzY3JpcHRpb25zLmZpbHRlcihpdGVtID0+IGl0ZW0gIT09IGNhbGxiYWNrKTtcbiAgICAgICAgICAgIGlmIChlcnJvcnNIYW5kbGVyKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5zdGF0dXNDaGFuZ2VFcnJvclN1YnNjcmlwdGlvbnMgPSB0aGlzLnN0YXR1c0NoYW5nZUVycm9yU3Vic2NyaXB0aW9ucy5maWx0ZXIoaXRlbSA9PiBpdGVtICE9PSBlcnJvcnNIYW5kbGVyKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcbiAgICB9XG4gICAgY29ubmVjdCh3YWxsZXQsIHJlcXVlc3RPck9wdGlvbnMpIHtcbiAgICAgICAgdmFyIF9hLCBfYjtcbiAgICAgICAgLy8gVE9ETzogcmVtb3ZlIGRlcHJlY2F0ZWQgbWV0aG9kXG4gICAgICAgIGNvbnN0IG9wdGlvbnMgPSB7fTtcbiAgICAgICAgaWYgKHR5cGVvZiByZXF1ZXN0T3JPcHRpb25zID09PSAnb2JqZWN0JyAmJiAndG9uUHJvb2YnIGluIHJlcXVlc3RPck9wdGlvbnMpIHtcbiAgICAgICAgICAgIG9wdGlvbnMucmVxdWVzdCA9IHJlcXVlc3RPck9wdGlvbnM7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHR5cGVvZiByZXF1ZXN0T3JPcHRpb25zID09PSAnb2JqZWN0JyAmJlxuICAgICAgICAgICAgKCdvcGVuaW5nRGVhZGxpbmVNUycgaW4gcmVxdWVzdE9yT3B0aW9ucyB8fFxuICAgICAgICAgICAgICAgICdzaWduYWwnIGluIHJlcXVlc3RPck9wdGlvbnMgfHxcbiAgICAgICAgICAgICAgICAncmVxdWVzdCcgaW4gcmVxdWVzdE9yT3B0aW9ucykpIHtcbiAgICAgICAgICAgIG9wdGlvbnMucmVxdWVzdCA9IHJlcXVlc3RPck9wdGlvbnMgPT09IG51bGwgfHwgcmVxdWVzdE9yT3B0aW9ucyA9PT0gdm9pZCAwID8gdm9pZCAwIDogcmVxdWVzdE9yT3B0aW9ucy5yZXF1ZXN0O1xuICAgICAgICAgICAgb3B0aW9ucy5vcGVuaW5nRGVhZGxpbmVNUyA9IHJlcXVlc3RPck9wdGlvbnMgPT09IG51bGwgfHwgcmVxdWVzdE9yT3B0aW9ucyA9PT0gdm9pZCAwID8gdm9pZCAwIDogcmVxdWVzdE9yT3B0aW9ucy5vcGVuaW5nRGVhZGxpbmVNUztcbiAgICAgICAgICAgIG9wdGlvbnMuc2lnbmFsID0gcmVxdWVzdE9yT3B0aW9ucyA9PT0gbnVsbCB8fCByZXF1ZXN0T3JPcHRpb25zID09PSB2b2lkIDAgPyB2b2lkIDAgOiByZXF1ZXN0T3JPcHRpb25zLnNpZ25hbDtcbiAgICAgICAgfVxuICAgICAgICBpZiAodGhpcy5jb25uZWN0ZWQpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBXYWxsZXRBbHJlYWR5Q29ubmVjdGVkRXJyb3IoKTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBhYm9ydENvbnRyb2xsZXIgPSBjcmVhdGVBYm9ydENvbnRyb2xsZXIob3B0aW9ucyA9PT0gbnVsbCB8fCBvcHRpb25zID09PSB2b2lkIDAgPyB2b2lkIDAgOiBvcHRpb25zLnNpZ25hbCk7XG4gICAgICAgIChfYSA9IHRoaXMuYWJvcnRDb250cm9sbGVyKSA9PT0gbnVsbCB8fCBfYSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2EuYWJvcnQoKTtcbiAgICAgICAgdGhpcy5hYm9ydENvbnRyb2xsZXIgPSBhYm9ydENvbnRyb2xsZXI7XG4gICAgICAgIGlmIChhYm9ydENvbnRyb2xsZXIuc2lnbmFsLmFib3J0ZWQpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBUb25Db25uZWN0RXJyb3IoJ0Nvbm5lY3Rpb24gd2FzIGFib3J0ZWQnKTtcbiAgICAgICAgfVxuICAgICAgICAoX2IgPSB0aGlzLnByb3ZpZGVyKSA9PT0gbnVsbCB8fCBfYiA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2IuY2xvc2VDb25uZWN0aW9uKCk7XG4gICAgICAgIHRoaXMucHJvdmlkZXIgPSB0aGlzLmNyZWF0ZVByb3ZpZGVyKHdhbGxldCk7XG4gICAgICAgIGFib3J0Q29udHJvbGxlci5zaWduYWwuYWRkRXZlbnRMaXN0ZW5lcignYWJvcnQnLCAoKSA9PiB7XG4gICAgICAgICAgICB2YXIgX2E7XG4gICAgICAgICAgICAoX2EgPSB0aGlzLnByb3ZpZGVyKSA9PT0gbnVsbCB8fCBfYSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2EuY2xvc2VDb25uZWN0aW9uKCk7XG4gICAgICAgICAgICB0aGlzLnByb3ZpZGVyID0gbnVsbDtcbiAgICAgICAgfSk7XG4gICAgICAgIHRoaXMudHJhY2tlci50cmFja0Nvbm5lY3Rpb25TdGFydGVkKCk7XG4gICAgICAgIHJldHVybiB0aGlzLnByb3ZpZGVyLmNvbm5lY3QodGhpcy5jcmVhdGVDb25uZWN0UmVxdWVzdChvcHRpb25zID09PSBudWxsIHx8IG9wdGlvbnMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IG9wdGlvbnMucmVxdWVzdCksIHtcbiAgICAgICAgICAgIG9wZW5pbmdEZWFkbGluZU1TOiBvcHRpb25zID09PSBudWxsIHx8IG9wdGlvbnMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IG9wdGlvbnMub3BlbmluZ0RlYWRsaW5lTVMsXG4gICAgICAgICAgICBzaWduYWw6IGFib3J0Q29udHJvbGxlci5zaWduYWxcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFRyeSB0byByZXN0b3JlIGV4aXN0aW5nIHNlc3Npb24gYW5kIHJlY29ubmVjdCB0byB0aGUgY29ycmVzcG9uZGluZyB3YWxsZXQuIENhbGwgaXQgaW1tZWRpYXRlbHkgd2hlbiB5b3VyIGFwcCBpcyBsb2FkZWQuXG4gICAgICovXG4gICAgcmVzdG9yZUNvbm5lY3Rpb24ob3B0aW9ucykge1xuICAgICAgICB2YXIgX2EsIF9iO1xuICAgICAgICByZXR1cm4gX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xuICAgICAgICAgICAgdGhpcy50cmFja2VyLnRyYWNrQ29ubmVjdGlvblJlc3RvcmluZ1N0YXJ0ZWQoKTtcbiAgICAgICAgICAgIGNvbnN0IGFib3J0Q29udHJvbGxlciA9IGNyZWF0ZUFib3J0Q29udHJvbGxlcihvcHRpb25zID09PSBudWxsIHx8IG9wdGlvbnMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IG9wdGlvbnMuc2lnbmFsKTtcbiAgICAgICAgICAgIChfYSA9IHRoaXMuYWJvcnRDb250cm9sbGVyKSA9PT0gbnVsbCB8fCBfYSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2EuYWJvcnQoKTtcbiAgICAgICAgICAgIHRoaXMuYWJvcnRDb250cm9sbGVyID0gYWJvcnRDb250cm9sbGVyO1xuICAgICAgICAgICAgaWYgKGFib3J0Q29udHJvbGxlci5zaWduYWwuYWJvcnRlZCkge1xuICAgICAgICAgICAgICAgIHRoaXMudHJhY2tlci50cmFja0Nvbm5lY3Rpb25SZXN0b3JpbmdFcnJvcignQ29ubmVjdGlvbiByZXN0b3Jpbmcgd2FzIGFib3J0ZWQnKTtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAvLyBUT0RPOiBwb3RlbnRpYWxseSByYWNlIGNvbmRpdGlvbiBoZXJlXG4gICAgICAgICAgICBjb25zdCBbYnJpZGdlQ29ubmVjdGlvblR5cGUsIGVtYmVkZGVkV2FsbGV0XSA9IHlpZWxkIFByb21pc2UuYWxsKFtcbiAgICAgICAgICAgICAgICB0aGlzLmJyaWRnZUNvbm5lY3Rpb25TdG9yYWdlLnN0b3JlZENvbm5lY3Rpb25UeXBlKCksXG4gICAgICAgICAgICAgICAgdGhpcy53YWxsZXRzTGlzdC5nZXRFbWJlZGRlZFdhbGxldCgpXG4gICAgICAgICAgICBdKTtcbiAgICAgICAgICAgIGlmIChhYm9ydENvbnRyb2xsZXIuc2lnbmFsLmFib3J0ZWQpIHtcbiAgICAgICAgICAgICAgICB0aGlzLnRyYWNrZXIudHJhY2tDb25uZWN0aW9uUmVzdG9yaW5nRXJyb3IoJ0Nvbm5lY3Rpb24gcmVzdG9yaW5nIHdhcyBhYm9ydGVkJyk7XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgbGV0IHByb3ZpZGVyID0gbnVsbDtcbiAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgc3dpdGNoIChicmlkZ2VDb25uZWN0aW9uVHlwZSkge1xuICAgICAgICAgICAgICAgICAgICBjYXNlICdodHRwJzpcbiAgICAgICAgICAgICAgICAgICAgICAgIHByb3ZpZGVyID0geWllbGQgQnJpZGdlUHJvdmlkZXIuZnJvbVN0b3JhZ2UodGhpcy5kYXBwU2V0dGluZ3Muc3RvcmFnZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICAgICAgY2FzZSAnaW5qZWN0ZWQnOlxuICAgICAgICAgICAgICAgICAgICAgICAgcHJvdmlkZXIgPSB5aWVsZCBJbmplY3RlZFByb3ZpZGVyLmZyb21TdG9yYWdlKHRoaXMuZGFwcFNldHRpbmdzLnN0b3JhZ2UpO1xuICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoZW1iZWRkZWRXYWxsZXQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwcm92aWRlciA9IHRoaXMuY3JlYXRlUHJvdmlkZXIoZW1iZWRkZWRXYWxsZXQpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNhdGNoIChfYykge1xuICAgICAgICAgICAgICAgIHRoaXMudHJhY2tlci50cmFja0Nvbm5lY3Rpb25SZXN0b3JpbmdFcnJvcignUHJvdmlkZXIgaXMgbm90IHJlc3RvcmVkJyk7XG4gICAgICAgICAgICAgICAgeWllbGQgdGhpcy5icmlkZ2VDb25uZWN0aW9uU3RvcmFnZS5yZW1vdmVDb25uZWN0aW9uKCk7XG4gICAgICAgICAgICAgICAgcHJvdmlkZXIgPT09IG51bGwgfHwgcHJvdmlkZXIgPT09IHZvaWQgMCA/IHZvaWQgMCA6IHByb3ZpZGVyLmNsb3NlQ29ubmVjdGlvbigpO1xuICAgICAgICAgICAgICAgIHByb3ZpZGVyID0gbnVsbDtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoYWJvcnRDb250cm9sbGVyLnNpZ25hbC5hYm9ydGVkKSB7XG4gICAgICAgICAgICAgICAgcHJvdmlkZXIgPT09IG51bGwgfHwgcHJvdmlkZXIgPT09IHZvaWQgMCA/IHZvaWQgMCA6IHByb3ZpZGVyLmNsb3NlQ29ubmVjdGlvbigpO1xuICAgICAgICAgICAgICAgIHRoaXMudHJhY2tlci50cmFja0Nvbm5lY3Rpb25SZXN0b3JpbmdFcnJvcignQ29ubmVjdGlvbiByZXN0b3Jpbmcgd2FzIGFib3J0ZWQnKTtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoIXByb3ZpZGVyKSB7XG4gICAgICAgICAgICAgICAgbG9nRXJyb3IoJ1Byb3ZpZGVyIGlzIG5vdCByZXN0b3JlZCcpO1xuICAgICAgICAgICAgICAgIHRoaXMudHJhY2tlci50cmFja0Nvbm5lY3Rpb25SZXN0b3JpbmdFcnJvcignUHJvdmlkZXIgaXMgbm90IHJlc3RvcmVkJyk7XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgKF9iID0gdGhpcy5wcm92aWRlcikgPT09IG51bGwgfHwgX2IgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9iLmNsb3NlQ29ubmVjdGlvbigpO1xuICAgICAgICAgICAgdGhpcy5wcm92aWRlciA9IHByb3ZpZGVyO1xuICAgICAgICAgICAgcHJvdmlkZXIubGlzdGVuKHRoaXMud2FsbGV0RXZlbnRzTGlzdGVuZXIuYmluZCh0aGlzKSk7XG4gICAgICAgICAgICBjb25zdCBvbkFib3J0UmVzdG9yZSA9ICgpID0+IHtcbiAgICAgICAgICAgICAgICB0aGlzLnRyYWNrZXIudHJhY2tDb25uZWN0aW9uUmVzdG9yaW5nRXJyb3IoJ0Nvbm5lY3Rpb24gcmVzdG9yaW5nIHdhcyBhYm9ydGVkJyk7XG4gICAgICAgICAgICAgICAgcHJvdmlkZXIgPT09IG51bGwgfHwgcHJvdmlkZXIgPT09IHZvaWQgMCA/IHZvaWQgMCA6IHByb3ZpZGVyLmNsb3NlQ29ubmVjdGlvbigpO1xuICAgICAgICAgICAgICAgIHByb3ZpZGVyID0gbnVsbDtcbiAgICAgICAgICAgIH07XG4gICAgICAgICAgICBhYm9ydENvbnRyb2xsZXIuc2lnbmFsLmFkZEV2ZW50TGlzdGVuZXIoJ2Fib3J0Jywgb25BYm9ydFJlc3RvcmUpO1xuICAgICAgICAgICAgY29uc3QgcmVzdG9yZUNvbm5lY3Rpb25UYXNrID0gY2FsbEZvclN1Y2Nlc3MoKF9vcHRpb25zKSA9PiBfX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7XG4gICAgICAgICAgICAgICAgeWllbGQgKHByb3ZpZGVyID09PSBudWxsIHx8IHByb3ZpZGVyID09PSB2b2lkIDAgPyB2b2lkIDAgOiBwcm92aWRlci5yZXN0b3JlQ29ubmVjdGlvbih7XG4gICAgICAgICAgICAgICAgICAgIG9wZW5pbmdEZWFkbGluZU1TOiBvcHRpb25zID09PSBudWxsIHx8IG9wdGlvbnMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IG9wdGlvbnMub3BlbmluZ0RlYWRsaW5lTVMsXG4gICAgICAgICAgICAgICAgICAgIHNpZ25hbDogX29wdGlvbnMuc2lnbmFsXG4gICAgICAgICAgICAgICAgfSkpO1xuICAgICAgICAgICAgICAgIGFib3J0Q29udHJvbGxlci5zaWduYWwucmVtb3ZlRXZlbnRMaXN0ZW5lcignYWJvcnQnLCBvbkFib3J0UmVzdG9yZSk7XG4gICAgICAgICAgICAgICAgaWYgKHRoaXMuY29ubmVjdGVkKSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMudHJhY2tlci50cmFja0Nvbm5lY3Rpb25SZXN0b3JpbmdDb21wbGV0ZWQodGhpcy53YWxsZXQpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy50cmFja2VyLnRyYWNrQ29ubmVjdGlvblJlc3RvcmluZ0Vycm9yKCdDb25uZWN0aW9uIHJlc3RvcmluZyBmYWlsZWQnKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KSwge1xuICAgICAgICAgICAgICAgIGF0dGVtcHRzOiBOdW1iZXIuTUFYX1NBRkVfSU5URUdFUixcbiAgICAgICAgICAgICAgICBkZWxheU1zOiAyMDAwLFxuICAgICAgICAgICAgICAgIHNpZ25hbDogb3B0aW9ucyA9PT0gbnVsbCB8fCBvcHRpb25zID09PSB2b2lkIDAgPyB2b2lkIDAgOiBvcHRpb25zLnNpZ25hbFxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICBjb25zdCByZXN0b3JlQ29ubmVjdGlvblRpbWVvdXQgPSBuZXcgUHJvbWlzZShyZXNvbHZlID0+IHNldFRpbWVvdXQoKCkgPT4gcmVzb2x2ZSgpLCAxMjAwMCkgLy8gY29ubmVjdGlvbiBkZWFkbGluZVxuICAgICAgICAgICAgKTtcbiAgICAgICAgICAgIHJldHVybiBQcm9taXNlLnJhY2UoW3Jlc3RvcmVDb25uZWN0aW9uVGFzaywgcmVzdG9yZUNvbm5lY3Rpb25UaW1lb3V0XSk7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBzZW5kVHJhbnNhY3Rpb24odHJhbnNhY3Rpb24sIG9wdGlvbnNPck9uUmVxdWVzdFNlbnQpIHtcbiAgICAgICAgcmV0dXJuIF9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHtcbiAgICAgICAgICAgIC8vIFRPRE86IHJlbW92ZSBkZXByZWNhdGVkIG1ldGhvZFxuICAgICAgICAgICAgY29uc3Qgb3B0aW9ucyA9IHt9O1xuICAgICAgICAgICAgaWYgKHR5cGVvZiBvcHRpb25zT3JPblJlcXVlc3RTZW50ID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgICAgICAgICAgb3B0aW9ucy5vblJlcXVlc3RTZW50ID0gb3B0aW9uc09yT25SZXF1ZXN0U2VudDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIG9wdGlvbnMub25SZXF1ZXN0U2VudCA9IG9wdGlvbnNPck9uUmVxdWVzdFNlbnQgPT09IG51bGwgfHwgb3B0aW9uc09yT25SZXF1ZXN0U2VudCA9PT0gdm9pZCAwID8gdm9pZCAwIDogb3B0aW9uc09yT25SZXF1ZXN0U2VudC5vblJlcXVlc3RTZW50O1xuICAgICAgICAgICAgICAgIG9wdGlvbnMuc2lnbmFsID0gb3B0aW9uc09yT25SZXF1ZXN0U2VudCA9PT0gbnVsbCB8fCBvcHRpb25zT3JPblJlcXVlc3RTZW50ID09PSB2b2lkIDAgPyB2b2lkIDAgOiBvcHRpb25zT3JPblJlcXVlc3RTZW50LnNpZ25hbDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNvbnN0IGFib3J0Q29udHJvbGxlciA9IGNyZWF0ZUFib3J0Q29udHJvbGxlcihvcHRpb25zID09PSBudWxsIHx8IG9wdGlvbnMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IG9wdGlvbnMuc2lnbmFsKTtcbiAgICAgICAgICAgIGlmIChhYm9ydENvbnRyb2xsZXIuc2lnbmFsLmFib3J0ZWQpIHtcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgVG9uQ29ubmVjdEVycm9yKCdUcmFuc2FjdGlvbiBzZW5kaW5nIHdhcyBhYm9ydGVkJyk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB0aGlzLmNoZWNrQ29ubmVjdGlvbigpO1xuICAgICAgICAgICAgY29uc3QgcmVxdWlyZWRNZXNzYWdlc051bWJlciA9IHRyYW5zYWN0aW9uLm1lc3NhZ2VzLmxlbmd0aDtcbiAgICAgICAgICAgIGNvbnN0IHJlcXVpcmVFeHRyYUN1cnJlbmNpZXMgPSB0cmFuc2FjdGlvbi5tZXNzYWdlcy5zb21lKG0gPT4gbS5leHRyYUN1cnJlbmN5ICYmIE9iamVjdC5rZXlzKG0uZXh0cmFDdXJyZW5jeSkubGVuZ3RoID4gMCk7XG4gICAgICAgICAgICBjaGVja1NlbmRUcmFuc2FjdGlvblN1cHBvcnQodGhpcy53YWxsZXQuZGV2aWNlLmZlYXR1cmVzLCB7XG4gICAgICAgICAgICAgICAgcmVxdWlyZWRNZXNzYWdlc051bWJlcixcbiAgICAgICAgICAgICAgICByZXF1aXJlRXh0cmFDdXJyZW5jaWVzXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIHRoaXMudHJhY2tlci50cmFja1RyYW5zYWN0aW9uU2VudEZvclNpZ25hdHVyZSh0aGlzLndhbGxldCwgdHJhbnNhY3Rpb24pO1xuICAgICAgICAgICAgY29uc3QgeyB2YWxpZFVudGlsLCBtZXNzYWdlcyB9ID0gdHJhbnNhY3Rpb24sIHR4ID0gX19yZXN0KHRyYW5zYWN0aW9uLCBbXCJ2YWxpZFVudGlsXCIsIFwibWVzc2FnZXNcIl0pO1xuICAgICAgICAgICAgY29uc3QgZnJvbSA9IHRyYW5zYWN0aW9uLmZyb20gfHwgdGhpcy5hY2NvdW50LmFkZHJlc3M7XG4gICAgICAgICAgICBjb25zdCBuZXR3b3JrID0gdHJhbnNhY3Rpb24ubmV0d29yayB8fCB0aGlzLmFjY291bnQuY2hhaW47XG4gICAgICAgICAgICBjb25zdCByZXNwb25zZSA9IHlpZWxkIHRoaXMucHJvdmlkZXIuc2VuZFJlcXVlc3Qoc2VuZFRyYW5zYWN0aW9uUGFyc2VyLmNvbnZlcnRUb1JwY1JlcXVlc3QoT2JqZWN0LmFzc2lnbihPYmplY3QuYXNzaWduKHt9LCB0eCksIHsgZnJvbSxcbiAgICAgICAgICAgICAgICBuZXR3b3JrLCB2YWxpZF91bnRpbDogdmFsaWRVbnRpbCwgbWVzc2FnZXM6IG1lc3NhZ2VzLm1hcCgoX2EpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIHsgZXh0cmFDdXJyZW5jeSB9ID0gX2EsIG1zZyA9IF9fcmVzdChfYSwgW1wiZXh0cmFDdXJyZW5jeVwiXSk7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiAoT2JqZWN0LmFzc2lnbihPYmplY3QuYXNzaWduKHt9LCBtc2cpLCB7IGV4dHJhX2N1cnJlbmN5OiBleHRyYUN1cnJlbmN5IH0pKTtcbiAgICAgICAgICAgICAgICB9KSB9KSksIHsgb25SZXF1ZXN0U2VudDogb3B0aW9ucy5vblJlcXVlc3RTZW50LCBzaWduYWw6IGFib3J0Q29udHJvbGxlci5zaWduYWwgfSk7XG4gICAgICAgICAgICBpZiAoc2VuZFRyYW5zYWN0aW9uUGFyc2VyLmlzRXJyb3IocmVzcG9uc2UpKSB7XG4gICAgICAgICAgICAgICAgdGhpcy50cmFja2VyLnRyYWNrVHJhbnNhY3Rpb25TaWduaW5nRmFpbGVkKHRoaXMud2FsbGV0LCB0cmFuc2FjdGlvbiwgcmVzcG9uc2UuZXJyb3IubWVzc2FnZSwgcmVzcG9uc2UuZXJyb3IuY29kZSk7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHNlbmRUcmFuc2FjdGlvblBhcnNlci5wYXJzZUFuZFRocm93RXJyb3IocmVzcG9uc2UpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY29uc3QgcmVzdWx0ID0gc2VuZFRyYW5zYWN0aW9uUGFyc2VyLmNvbnZlcnRGcm9tUnBjUmVzcG9uc2UocmVzcG9uc2UpO1xuICAgICAgICAgICAgdGhpcy50cmFja2VyLnRyYWNrVHJhbnNhY3Rpb25TaWduZWQodGhpcy53YWxsZXQsIHRyYW5zYWN0aW9uLCByZXN1bHQpO1xuICAgICAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIERpc2Nvbm5lY3QgZm9ybSB0aHcgY29ubmVjdGVkIHdhbGxldCBhbmQgZHJvcCBjdXJyZW50IHNlc3Npb24uXG4gICAgICovXG4gICAgZGlzY29ubmVjdChvcHRpb25zKSB7XG4gICAgICAgIHZhciBfYTtcbiAgICAgICAgcmV0dXJuIF9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHtcbiAgICAgICAgICAgIGlmICghdGhpcy5jb25uZWN0ZWQpIHtcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgV2FsbGV0Tm90Q29ubmVjdGVkRXJyb3IoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNvbnN0IGFib3J0Q29udHJvbGxlciA9IGNyZWF0ZUFib3J0Q29udHJvbGxlcihvcHRpb25zID09PSBudWxsIHx8IG9wdGlvbnMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IG9wdGlvbnMuc2lnbmFsKTtcbiAgICAgICAgICAgIGNvbnN0IHByZXZBYm9ydENvbnRyb2xsZXIgPSB0aGlzLmFib3J0Q29udHJvbGxlcjtcbiAgICAgICAgICAgIHRoaXMuYWJvcnRDb250cm9sbGVyID0gYWJvcnRDb250cm9sbGVyO1xuICAgICAgICAgICAgaWYgKGFib3J0Q29udHJvbGxlci5zaWduYWwuYWJvcnRlZCkge1xuICAgICAgICAgICAgICAgIHRocm93IG5ldyBUb25Db25uZWN0RXJyb3IoJ0Rpc2Nvbm5lY3Qgd2FzIGFib3J0ZWQnKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHRoaXMub25XYWxsZXREaXNjb25uZWN0ZWQoJ2RhcHAnKTtcbiAgICAgICAgICAgIHlpZWxkICgoX2EgPSB0aGlzLnByb3ZpZGVyKSA9PT0gbnVsbCB8fCBfYSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2EuZGlzY29ubmVjdCh7XG4gICAgICAgICAgICAgICAgc2lnbmFsOiBhYm9ydENvbnRyb2xsZXIuc2lnbmFsXG4gICAgICAgICAgICB9KSk7XG4gICAgICAgICAgICBwcmV2QWJvcnRDb250cm9sbGVyID09PSBudWxsIHx8IHByZXZBYm9ydENvbnRyb2xsZXIgPT09IHZvaWQgMCA/IHZvaWQgMCA6IHByZXZBYm9ydENvbnRyb2xsZXIuYWJvcnQoKTtcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFBhdXNlIGJyaWRnZSBIVFRQIGNvbm5lY3Rpb24uIE1pZ2h0IGJlIGhlbHBmdWwsIGlmIHlvdSB3YW50IHRvIHBhdXNlIGNvbm5lY3Rpb25zIHdoaWxlIGJyb3dzZXIgdGFiIGlzIHVuZm9jdXNlZCxcbiAgICAgKiBvciBpZiB5b3UgdXNlIFNESyB3aXRoIE5vZGVKUyBhbmQgd2FudCB0byBzYXZlIHNlcnZlciByZXNvdXJjZXMuXG4gICAgICovXG4gICAgcGF1c2VDb25uZWN0aW9uKCkge1xuICAgICAgICB2YXIgX2E7XG4gICAgICAgIGlmICgoKF9hID0gdGhpcy5wcm92aWRlcikgPT09IG51bGwgfHwgX2EgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9hLnR5cGUpICE9PSAnaHR0cCcpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLnByb3ZpZGVyLnBhdXNlKCk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFVucGF1c2UgYnJpZGdlIEhUVFAgY29ubmVjdGlvbiBpZiBpdCBpcyBwYXVzZWQuXG4gICAgICovXG4gICAgdW5QYXVzZUNvbm5lY3Rpb24oKSB7XG4gICAgICAgIHZhciBfYTtcbiAgICAgICAgaWYgKCgoX2EgPSB0aGlzLnByb3ZpZGVyKSA9PT0gbnVsbCB8fCBfYSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2EudHlwZSkgIT09ICdodHRwJykge1xuICAgICAgICAgICAgcmV0dXJuIFByb21pc2UucmVzb2x2ZSgpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0aGlzLnByb3ZpZGVyLnVuUGF1c2UoKTtcbiAgICB9XG4gICAgYWRkV2luZG93Rm9jdXNBbmRCbHVyU3Vic2NyaXB0aW9ucygpIHtcbiAgICAgICAgY29uc3QgZG9jdW1lbnQgPSBnZXREb2N1bWVudCgpO1xuICAgICAgICBpZiAoIWRvY3VtZW50KSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ3Zpc2liaWxpdHljaGFuZ2UnLCAoKSA9PiB7XG4gICAgICAgICAgICAgICAgaWYgKGRvY3VtZW50LmhpZGRlbikge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLnBhdXNlQ29ubmVjdGlvbigpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy51blBhdXNlQ29ubmVjdGlvbigpLmNhdGNoKCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgICAgY2F0Y2ggKGUpIHtcbiAgICAgICAgICAgIGxvZ0Vycm9yKCdDYW5ub3Qgc3Vic2NyaWJlIHRvIHRoZSBkb2N1bWVudC52aXNpYmlsaXR5Y2hhbmdlOiAnLCBlKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBjcmVhdGVQcm92aWRlcih3YWxsZXQpIHtcbiAgICAgICAgbGV0IHByb3ZpZGVyO1xuICAgICAgICBpZiAoIUFycmF5LmlzQXJyYXkod2FsbGV0KSAmJiBpc1dhbGxldENvbm5lY3Rpb25Tb3VyY2VKUyh3YWxsZXQpKSB7XG4gICAgICAgICAgICBwcm92aWRlciA9IG5ldyBJbmplY3RlZFByb3ZpZGVyKHRoaXMuZGFwcFNldHRpbmdzLnN0b3JhZ2UsIHdhbGxldC5qc0JyaWRnZUtleSk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBwcm92aWRlciA9IG5ldyBCcmlkZ2VQcm92aWRlcih0aGlzLmRhcHBTZXR0aW5ncy5zdG9yYWdlLCB3YWxsZXQpO1xuICAgICAgICB9XG4gICAgICAgIHByb3ZpZGVyLmxpc3Rlbih0aGlzLndhbGxldEV2ZW50c0xpc3RlbmVyLmJpbmQodGhpcykpO1xuICAgICAgICByZXR1cm4gcHJvdmlkZXI7XG4gICAgfVxuICAgIHdhbGxldEV2ZW50c0xpc3RlbmVyKGUpIHtcbiAgICAgICAgc3dpdGNoIChlLmV2ZW50KSB7XG4gICAgICAgICAgICBjYXNlICdjb25uZWN0JzpcbiAgICAgICAgICAgICAgICB0aGlzLm9uV2FsbGV0Q29ubmVjdGVkKGUucGF5bG9hZCk7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlICdjb25uZWN0X2Vycm9yJzpcbiAgICAgICAgICAgICAgICB0aGlzLnRyYWNrZXIudHJhY2tDb25uZWN0aW9uRXJyb3IoZS5wYXlsb2FkLm1lc3NhZ2UsIGUucGF5bG9hZC5jb2RlKTtcbiAgICAgICAgICAgICAgICBjb25zdCB3YWxsZXRFcnJvciA9IGNvbm5lY3RFcnJvcnNQYXJzZXIucGFyc2VFcnJvcihlLnBheWxvYWQpO1xuICAgICAgICAgICAgICAgIHRoaXMub25XYWxsZXRDb25uZWN0RXJyb3Iod2FsbGV0RXJyb3IpO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSAnZGlzY29ubmVjdCc6XG4gICAgICAgICAgICAgICAgdGhpcy5vbldhbGxldERpc2Nvbm5lY3RlZCgnd2FsbGV0Jyk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgb25XYWxsZXRDb25uZWN0ZWQoY29ubmVjdEV2ZW50KSB7XG4gICAgICAgIHZhciBfYTtcbiAgICAgICAgY29uc3QgdG9uQWNjb3VudEl0ZW0gPSBjb25uZWN0RXZlbnQuaXRlbXMuZmluZChpdGVtID0+IGl0ZW0ubmFtZSA9PT0gJ3Rvbl9hZGRyJyk7XG4gICAgICAgIGNvbnN0IHRvblByb29mSXRlbSA9IGNvbm5lY3RFdmVudC5pdGVtcy5maW5kKGl0ZW0gPT4gaXRlbS5uYW1lID09PSAndG9uX3Byb29mJyk7XG4gICAgICAgIGlmICghdG9uQWNjb3VudEl0ZW0pIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBUb25Db25uZWN0RXJyb3IoJ3Rvbl9hZGRyIGNvbm5lY3Rpb24gaXRlbSB3YXMgbm90IGZvdW5kJyk7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgaGFzUmVxdWlyZWRGZWF0dXJlcyA9IGNoZWNrUmVxdWlyZWRXYWxsZXRGZWF0dXJlcyhjb25uZWN0RXZlbnQuZGV2aWNlLmZlYXR1cmVzLCB0aGlzLndhbGxldHNSZXF1aXJlZEZlYXR1cmVzKTtcbiAgICAgICAgaWYgKCFoYXNSZXF1aXJlZEZlYXR1cmVzKSB7XG4gICAgICAgICAgICAoX2EgPSB0aGlzLnByb3ZpZGVyKSA9PT0gbnVsbCB8fCBfYSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2EuZGlzY29ubmVjdCgpO1xuICAgICAgICAgICAgdGhpcy5vbldhbGxldENvbm5lY3RFcnJvcihuZXcgV2FsbGV0TWlzc2luZ1JlcXVpcmVkRmVhdHVyZXNFcnJvcignV2FsbGV0IGRvZXMgbm90IHN1cHBvcnQgcmVxdWlyZWQgZmVhdHVyZXMnLCB7IGNhdXNlOiB7IGNvbm5lY3RFdmVudCB9IH0pKTtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCB3YWxsZXQgPSB7XG4gICAgICAgICAgICBkZXZpY2U6IGNvbm5lY3RFdmVudC5kZXZpY2UsXG4gICAgICAgICAgICBwcm92aWRlcjogdGhpcy5wcm92aWRlci50eXBlLFxuICAgICAgICAgICAgYWNjb3VudDoge1xuICAgICAgICAgICAgICAgIGFkZHJlc3M6IHRvbkFjY291bnRJdGVtLmFkZHJlc3MsXG4gICAgICAgICAgICAgICAgY2hhaW46IHRvbkFjY291bnRJdGVtLm5ldHdvcmssXG4gICAgICAgICAgICAgICAgd2FsbGV0U3RhdGVJbml0OiB0b25BY2NvdW50SXRlbS53YWxsZXRTdGF0ZUluaXQsXG4gICAgICAgICAgICAgICAgcHVibGljS2V5OiB0b25BY2NvdW50SXRlbS5wdWJsaWNLZXlcbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcbiAgICAgICAgaWYgKHRvblByb29mSXRlbSkge1xuICAgICAgICAgICAgd2FsbGV0LmNvbm5lY3RJdGVtcyA9IHtcbiAgICAgICAgICAgICAgICB0b25Qcm9vZjogdG9uUHJvb2ZJdGVtXG4gICAgICAgICAgICB9O1xuICAgICAgICB9XG4gICAgICAgIHRoaXMud2FsbGV0ID0gd2FsbGV0O1xuICAgICAgICB0aGlzLnRyYWNrZXIudHJhY2tDb25uZWN0aW9uQ29tcGxldGVkKHdhbGxldCk7XG4gICAgfVxuICAgIG9uV2FsbGV0Q29ubmVjdEVycm9yKGVycm9yKSB7XG4gICAgICAgIHRoaXMuc3RhdHVzQ2hhbmdlRXJyb3JTdWJzY3JpcHRpb25zLmZvckVhY2goZXJyb3JzSGFuZGxlciA9PiBlcnJvcnNIYW5kbGVyKGVycm9yKSk7XG4gICAgICAgIGxvZ0RlYnVnKGVycm9yKTtcbiAgICAgICAgaWYgKGVycm9yIGluc3RhbmNlb2YgTWFuaWZlc3ROb3RGb3VuZEVycm9yIHx8IGVycm9yIGluc3RhbmNlb2YgTWFuaWZlc3RDb250ZW50RXJyb3JFcnJvcikge1xuICAgICAgICAgICAgbG9nRXJyb3IoZXJyb3IpO1xuICAgICAgICAgICAgdGhyb3cgZXJyb3I7XG4gICAgICAgIH1cbiAgICB9XG4gICAgb25XYWxsZXREaXNjb25uZWN0ZWQoc2NvcGUpIHtcbiAgICAgICAgdGhpcy50cmFja2VyLnRyYWNrRGlzY29ubmVjdGlvbih0aGlzLndhbGxldCwgc2NvcGUpO1xuICAgICAgICB0aGlzLndhbGxldCA9IG51bGw7XG4gICAgfVxuICAgIGNoZWNrQ29ubmVjdGlvbigpIHtcbiAgICAgICAgaWYgKCF0aGlzLmNvbm5lY3RlZCkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IFdhbGxldE5vdENvbm5lY3RlZEVycm9yKCk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgY3JlYXRlQ29ubmVjdFJlcXVlc3QocmVxdWVzdCkge1xuICAgICAgICBjb25zdCBpdGVtcyA9IFtcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBuYW1lOiAndG9uX2FkZHInXG4gICAgICAgICAgICB9XG4gICAgICAgIF07XG4gICAgICAgIGlmIChyZXF1ZXN0ID09PSBudWxsIHx8IHJlcXVlc3QgPT09IHZvaWQgMCA/IHZvaWQgMCA6IHJlcXVlc3QudG9uUHJvb2YpIHtcbiAgICAgICAgICAgIGl0ZW1zLnB1c2goe1xuICAgICAgICAgICAgICAgIG5hbWU6ICd0b25fcHJvb2YnLFxuICAgICAgICAgICAgICAgIHBheWxvYWQ6IHJlcXVlc3QudG9uUHJvb2ZcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBtYW5pZmVzdFVybDogdGhpcy5kYXBwU2V0dGluZ3MubWFuaWZlc3RVcmwsXG4gICAgICAgICAgICBpdGVtc1xuICAgICAgICB9O1xuICAgIH1cbn1cblRvbkNvbm5lY3Qud2FsbGV0c0xpc3QgPSBuZXcgV2FsbGV0c0xpc3RNYW5hZ2VyKCk7XG4vKipcbiAqIENoZWNrIGlmIHNwZWNpZmllZCB3YWxsZXQgaXMgaW5qZWN0ZWQgYW5kIGF2YWlsYWJsZSB0byB1c2Ugd2l0aCB0aGUgYXBwLlxuICogQHBhcmFtIHdhbGxldEpTS2V5IHRhcmdldCB3YWxsZXQncyBqcyBicmlkZ2Uga2V5LlxuICovXG5Ub25Db25uZWN0LmlzV2FsbGV0SW5qZWN0ZWQgPSAod2FsbGV0SlNLZXkpID0+IEluamVjdGVkUHJvdmlkZXIuaXNXYWxsZXRJbmplY3RlZCh3YWxsZXRKU0tleSk7XG4vKipcbiAqIENoZWNrIGlmIHRoZSBhcHAgaXMgb3BlbmVkIGluc2lkZSBzcGVjaWZpZWQgd2FsbGV0J3MgYnJvd3Nlci5cbiAqIEBwYXJhbSB3YWxsZXRKU0tleSB0YXJnZXQgd2FsbGV0J3MganMgYnJpZGdlIGtleS5cbiAqL1xuVG9uQ29ubmVjdC5pc0luc2lkZVdhbGxldEJyb3dzZXIgPSAod2FsbGV0SlNLZXkpID0+IEluamVjdGVkUHJvdmlkZXIuaXNJbnNpZGVXYWxsZXRCcm93c2VyKHdhbGxldEpTS2V5KTtcblxuY29uc3Qgbm9Cb3VuY2VhYmxlVGFnID0gMHg1MTtcbmNvbnN0IHRlc3RPbmx5VGFnID0gMHg4MDtcbi8qKlxuICogQ29udmVydHMgcmF3IFRPTiBhZGRyZXNzIHRvIG5vLWJvdW5jZWFibGUgdXNlci1mcmllbmRseSBmb3JtYXQuIFtTZWUgZGV0YWlsc117QGxpbmsgaHR0cHM6Ly90b24ub3JnL2RvY3MvbGVhcm4vb3ZlcnZpZXdzL2FkZHJlc3NlcyN1c2VyLWZyaWVuZGx5LWFkZHJlc3N9XG4gKiBAcGFyYW0gaGV4QWRkcmVzcyByYXcgVE9OIGFkZHJlc3MgZm9ybWF0dGVkIGFzIFwiMDo8aGV4IHN0cmluZyB3aXRob3V0IDB4PlwiLlxuICogQHBhcmFtIFt0ZXN0T25seT1mYWxzZV0gY29udmVydCBhZGRyZXNzIHRvIHRlc3Qtb25seSBmb3JtLiBbU2VlIGRldGFpbHNde0BsaW5rIGh0dHBzOi8vdG9uLm9yZy9kb2NzL2xlYXJuL292ZXJ2aWV3cy9hZGRyZXNzZXMjdXNlci1mcmllbmRseS1hZGRyZXNzfVxuICovXG5mdW5jdGlvbiB0b1VzZXJGcmllbmRseUFkZHJlc3MoaGV4QWRkcmVzcywgdGVzdE9ubHkgPSBmYWxzZSkge1xuICAgIGNvbnN0IHsgd2MsIGhleCB9ID0gcGFyc2VIZXhBZGRyZXNzKGhleEFkZHJlc3MpO1xuICAgIGxldCB0YWcgPSBub0JvdW5jZWFibGVUYWc7XG4gICAgaWYgKHRlc3RPbmx5KSB7XG4gICAgICAgIHRhZyB8PSB0ZXN0T25seVRhZztcbiAgICB9XG4gICAgY29uc3QgYWRkciA9IG5ldyBJbnQ4QXJyYXkoMzQpO1xuICAgIGFkZHJbMF0gPSB0YWc7XG4gICAgYWRkclsxXSA9IHdjO1xuICAgIGFkZHIuc2V0KGhleCwgMik7XG4gICAgY29uc3QgYWRkcmVzc1dpdGhDaGVja3N1bSA9IG5ldyBVaW50OEFycmF5KDM2KTtcbiAgICBhZGRyZXNzV2l0aENoZWNrc3VtLnNldChhZGRyKTtcbiAgICBhZGRyZXNzV2l0aENoZWNrc3VtLnNldChjcmMxNihhZGRyKSwgMzQpO1xuICAgIGxldCBhZGRyZXNzQmFzZTY0ID0gQmFzZTY0LmVuY29kZShhZGRyZXNzV2l0aENoZWNrc3VtKTtcbiAgICByZXR1cm4gYWRkcmVzc0Jhc2U2NC5yZXBsYWNlKC9cXCsvZywgJy0nKS5yZXBsYWNlKC9cXC8vZywgJ18nKTtcbn1cbmZ1bmN0aW9uIHBhcnNlSGV4QWRkcmVzcyhoZXhBZGRyZXNzKSB7XG4gICAgaWYgKCFoZXhBZGRyZXNzLmluY2x1ZGVzKCc6JykpIHtcbiAgICAgICAgdGhyb3cgbmV3IFdyb25nQWRkcmVzc0Vycm9yKGBXcm9uZyBhZGRyZXNzICR7aGV4QWRkcmVzc30uIEFkZHJlc3MgbXVzdCBpbmNsdWRlIFwiOlwiLmApO1xuICAgIH1cbiAgICBjb25zdCBwYXJ0cyA9IGhleEFkZHJlc3Muc3BsaXQoJzonKTtcbiAgICBpZiAocGFydHMubGVuZ3RoICE9PSAyKSB7XG4gICAgICAgIHRocm93IG5ldyBXcm9uZ0FkZHJlc3NFcnJvcihgV3JvbmcgYWRkcmVzcyAke2hleEFkZHJlc3N9LiBBZGRyZXNzIG11c3QgaW5jbHVkZSBcIjpcIiBvbmx5IG9uY2UuYCk7XG4gICAgfVxuICAgIGNvbnN0IHdjID0gcGFyc2VJbnQocGFydHNbMF0pO1xuICAgIGlmICh3YyAhPT0gMCAmJiB3YyAhPT0gLTEpIHtcbiAgICAgICAgdGhyb3cgbmV3IFdyb25nQWRkcmVzc0Vycm9yKGBXcm9uZyBhZGRyZXNzICR7aGV4QWRkcmVzc30uIFdDIG11c3QgYmUgZXEgMCBvciAtMSwgYnV0ICR7d2N9IHJlY2VpdmVkLmApO1xuICAgIH1cbiAgICBjb25zdCBoZXggPSBwYXJ0c1sxXTtcbiAgICBpZiAoKGhleCA9PT0gbnVsbCB8fCBoZXggPT09IHZvaWQgMCA/IHZvaWQgMCA6IGhleC5sZW5ndGgpICE9PSA2NCkge1xuICAgICAgICB0aHJvdyBuZXcgV3JvbmdBZGRyZXNzRXJyb3IoYFdyb25nIGFkZHJlc3MgJHtoZXhBZGRyZXNzfS4gSGV4IHBhcnQgbXVzdCBiZSA2NGJ5dGVzIGxlbmd0aCwgYnV0ICR7aGV4ID09PSBudWxsIHx8IGhleCA9PT0gdm9pZCAwID8gdm9pZCAwIDogaGV4Lmxlbmd0aH0gcmVjZWl2ZWQuYCk7XG4gICAgfVxuICAgIHJldHVybiB7XG4gICAgICAgIHdjLFxuICAgICAgICBoZXg6IGhleFRvQnl0ZXMoaGV4KVxuICAgIH07XG59XG5mdW5jdGlvbiBjcmMxNihkYXRhKSB7XG4gICAgY29uc3QgcG9seSA9IDB4MTAyMTtcbiAgICBsZXQgcmVnID0gMDtcbiAgICBjb25zdCBtZXNzYWdlID0gbmV3IFVpbnQ4QXJyYXkoZGF0YS5sZW5ndGggKyAyKTtcbiAgICBtZXNzYWdlLnNldChkYXRhKTtcbiAgICBmb3IgKGxldCBieXRlIG9mIG1lc3NhZ2UpIHtcbiAgICAgICAgbGV0IG1hc2sgPSAweDgwO1xuICAgICAgICB3aGlsZSAobWFzayA+IDApIHtcbiAgICAgICAgICAgIHJlZyA8PD0gMTtcbiAgICAgICAgICAgIGlmIChieXRlICYgbWFzaykge1xuICAgICAgICAgICAgICAgIHJlZyArPSAxO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgbWFzayA+Pj0gMTtcbiAgICAgICAgICAgIGlmIChyZWcgPiAweGZmZmYpIHtcbiAgICAgICAgICAgICAgICByZWcgJj0gMHhmZmZmO1xuICAgICAgICAgICAgICAgIHJlZyBePSBwb2x5O1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiBuZXcgVWludDhBcnJheShbTWF0aC5mbG9vcihyZWcgLyAyNTYpLCByZWcgJSAyNTZdKTtcbn1cbmNvbnN0IHRvQnl0ZU1hcCA9IHt9O1xuZm9yIChsZXQgb3JkID0gMDsgb3JkIDw9IDB4ZmY7IG9yZCsrKSB7XG4gICAgbGV0IHMgPSBvcmQudG9TdHJpbmcoMTYpO1xuICAgIGlmIChzLmxlbmd0aCA8IDIpIHtcbiAgICAgICAgcyA9ICcwJyArIHM7XG4gICAgfVxuICAgIHRvQnl0ZU1hcFtzXSA9IG9yZDtcbn1cbmZ1bmN0aW9uIGhleFRvQnl0ZXMoaGV4KSB7XG4gICAgaGV4ID0gaGV4LnRvTG93ZXJDYXNlKCk7XG4gICAgY29uc3QgbGVuZ3RoMiA9IGhleC5sZW5ndGg7XG4gICAgaWYgKGxlbmd0aDIgJSAyICE9PSAwKSB7XG4gICAgICAgIHRocm93IG5ldyBQYXJzZUhleEVycm9yKCdIZXggc3RyaW5nIG11c3QgaGF2ZSBsZW5ndGggYSBtdWx0aXBsZSBvZiAyOiAnICsgaGV4KTtcbiAgICB9XG4gICAgY29uc3QgbGVuZ3RoID0gbGVuZ3RoMiAvIDI7XG4gICAgY29uc3QgcmVzdWx0ID0gbmV3IFVpbnQ4QXJyYXkobGVuZ3RoKTtcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IGxlbmd0aDsgaSsrKSB7XG4gICAgICAgIGNvbnN0IGRvdWJsZWQgPSBpICogMjtcbiAgICAgICAgY29uc3QgaGV4U3Vic3RyaW5nID0gaGV4LnN1YnN0cmluZyhkb3VibGVkLCBkb3VibGVkICsgMik7XG4gICAgICAgIGlmICghdG9CeXRlTWFwLmhhc093blByb3BlcnR5KGhleFN1YnN0cmluZykpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBQYXJzZUhleEVycm9yKCdJbnZhbGlkIGhleCBjaGFyYWN0ZXI6ICcgKyBoZXhTdWJzdHJpbmcpO1xuICAgICAgICB9XG4gICAgICAgIHJlc3VsdFtpXSA9IHRvQnl0ZU1hcFtoZXhTdWJzdHJpbmddO1xuICAgIH1cbiAgICByZXR1cm4gcmVzdWx0O1xufVxuXG5leHBvcnQgeyBCYWRSZXF1ZXN0RXJyb3IsIEJyb3dzZXJFdmVudERpc3BhdGNoZXIsIEZldGNoV2FsbGV0c0Vycm9yLCBMb2NhbHN0b3JhZ2VOb3RGb3VuZEVycm9yLCBQYXJzZUhleEVycm9yLCBUb25Db25uZWN0LCBUb25Db25uZWN0RXJyb3IsIFVua25vd25BcHBFcnJvciwgVW5rbm93bkVycm9yLCBVc2VyUmVqZWN0c0Vycm9yLCBXYWxsZXRBbHJlYWR5Q29ubmVjdGVkRXJyb3IsIFdhbGxldE1pc3NpbmdSZXF1aXJlZEZlYXR1cmVzRXJyb3IsIFdhbGxldE5vdENvbm5lY3RlZEVycm9yLCBXYWxsZXROb3RJbmplY3RlZEVycm9yLCBXYWxsZXROb3RTdXBwb3J0RmVhdHVyZUVycm9yLCBXYWxsZXRzTGlzdE1hbmFnZXIsIFdyb25nQWRkcmVzc0Vycm9yLCBjaGVja1JlcXVpcmVkV2FsbGV0RmVhdHVyZXMsIGNyZWF0ZUNvbm5lY3Rpb25Db21wbGV0ZWRFdmVudCwgY3JlYXRlQ29ubmVjdGlvbkVycm9yRXZlbnQsIGNyZWF0ZUNvbm5lY3Rpb25SZXN0b3JpbmdDb21wbGV0ZWRFdmVudCwgY3JlYXRlQ29ubmVjdGlvblJlc3RvcmluZ0Vycm9yRXZlbnQsIGNyZWF0ZUNvbm5lY3Rpb25SZXN0b3JpbmdTdGFydGVkRXZlbnQsIGNyZWF0ZUNvbm5lY3Rpb25TdGFydGVkRXZlbnQsIGNyZWF0ZURpc2Nvbm5lY3Rpb25FdmVudCwgY3JlYXRlUmVxdWVzdFZlcnNpb25FdmVudCwgY3JlYXRlUmVzcG9uc2VWZXJzaW9uRXZlbnQsIGNyZWF0ZVRyYW5zYWN0aW9uU2VudEZvclNpZ25hdHVyZUV2ZW50LCBjcmVhdGVUcmFuc2FjdGlvblNpZ25lZEV2ZW50LCBjcmVhdGVUcmFuc2FjdGlvblNpZ25pbmdGYWlsZWRFdmVudCwgY3JlYXRlVmVyc2lvbkluZm8sIFRvbkNvbm5lY3QgYXMgZGVmYXVsdCwgZW5jb2RlVGVsZWdyYW1VcmxQYXJhbWV0ZXJzLCBpc1RlbGVncmFtVXJsLCBpc1dhbGxldEluZm9DdXJyZW50bHlFbWJlZGRlZCwgaXNXYWxsZXRJbmZvQ3VycmVudGx5SW5qZWN0ZWQsIGlzV2FsbGV0SW5mb0luamVjdGFibGUsIGlzV2FsbGV0SW5mb0luamVjdGVkLCBpc1dhbGxldEluZm9SZW1vdGUsIHRvVXNlckZyaWVuZGx5QWRkcmVzcyB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXgubWpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@tonconnect/sdk/lib/esm/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@tonconnect/ui-react/lib/index.mjs":
/*!*********************************************************!*\
  !*** ./node_modules/@tonconnect/ui-react/lib/index.mjs ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BadRequestError: () => (/* reexport safe */ _tonconnect_ui__WEBPACK_IMPORTED_MODULE_2__.BadRequestError),\n/* harmony export */   BrowserEventDispatcher: () => (/* reexport safe */ _tonconnect_ui__WEBPACK_IMPORTED_MODULE_2__.BrowserEventDispatcher),\n/* harmony export */   CHAIN: () => (/* reexport safe */ _tonconnect_ui__WEBPACK_IMPORTED_MODULE_2__.CHAIN),\n/* harmony export */   CONNECT_EVENT_ERROR_CODES: () => (/* reexport safe */ _tonconnect_ui__WEBPACK_IMPORTED_MODULE_2__.CONNECT_EVENT_ERROR_CODES),\n/* harmony export */   CONNECT_ITEM_ERROR_CODES: () => (/* reexport safe */ _tonconnect_ui__WEBPACK_IMPORTED_MODULE_2__.CONNECT_ITEM_ERROR_CODES),\n/* harmony export */   FetchWalletsError: () => (/* reexport safe */ _tonconnect_ui__WEBPACK_IMPORTED_MODULE_2__.FetchWalletsError),\n/* harmony export */   LocalstorageNotFoundError: () => (/* reexport safe */ _tonconnect_ui__WEBPACK_IMPORTED_MODULE_2__.LocalstorageNotFoundError),\n/* harmony export */   ParseHexError: () => (/* reexport safe */ _tonconnect_ui__WEBPACK_IMPORTED_MODULE_2__.ParseHexError),\n/* harmony export */   SEND_TRANSACTION_ERROR_CODES: () => (/* reexport safe */ _tonconnect_ui__WEBPACK_IMPORTED_MODULE_2__.SEND_TRANSACTION_ERROR_CODES),\n/* harmony export */   THEME: () => (/* reexport safe */ _tonconnect_ui__WEBPACK_IMPORTED_MODULE_2__.THEME),\n/* harmony export */   TonConnect: () => (/* reexport safe */ _tonconnect_ui__WEBPACK_IMPORTED_MODULE_2__.TonConnect),\n/* harmony export */   TonConnectButton: () => (/* binding */ TonConnectButton$1),\n/* harmony export */   TonConnectError: () => (/* reexport safe */ _tonconnect_ui__WEBPACK_IMPORTED_MODULE_2__.TonConnectError),\n/* harmony export */   TonConnectProviderNotSetError: () => (/* binding */ TonConnectProviderNotSetError),\n/* harmony export */   TonConnectUI: () => (/* reexport safe */ _tonconnect_ui__WEBPACK_IMPORTED_MODULE_2__.TonConnectUI),\n/* harmony export */   TonConnectUIContext: () => (/* binding */ TonConnectUIContext),\n/* harmony export */   TonConnectUIError: () => (/* reexport safe */ _tonconnect_ui__WEBPACK_IMPORTED_MODULE_2__.TonConnectUIError),\n/* harmony export */   TonConnectUIProvider: () => (/* binding */ TonConnectUIProvider$1),\n/* harmony export */   TonConnectUIReactError: () => (/* binding */ TonConnectUIReactError),\n/* harmony export */   UnknownAppError: () => (/* reexport safe */ _tonconnect_ui__WEBPACK_IMPORTED_MODULE_2__.UnknownAppError),\n/* harmony export */   UnknownError: () => (/* reexport safe */ _tonconnect_ui__WEBPACK_IMPORTED_MODULE_2__.UnknownError),\n/* harmony export */   UserRejectsError: () => (/* reexport safe */ _tonconnect_ui__WEBPACK_IMPORTED_MODULE_2__.UserRejectsError),\n/* harmony export */   WalletAlreadyConnectedError: () => (/* reexport safe */ _tonconnect_ui__WEBPACK_IMPORTED_MODULE_2__.WalletAlreadyConnectedError),\n/* harmony export */   WalletMissingRequiredFeaturesError: () => (/* reexport safe */ _tonconnect_ui__WEBPACK_IMPORTED_MODULE_2__.WalletMissingRequiredFeaturesError),\n/* harmony export */   WalletNotConnectedError: () => (/* reexport safe */ _tonconnect_ui__WEBPACK_IMPORTED_MODULE_2__.WalletNotConnectedError),\n/* harmony export */   WalletNotInjectedError: () => (/* reexport safe */ _tonconnect_ui__WEBPACK_IMPORTED_MODULE_2__.WalletNotInjectedError),\n/* harmony export */   WalletNotSupportFeatureError: () => (/* reexport safe */ _tonconnect_ui__WEBPACK_IMPORTED_MODULE_2__.WalletNotSupportFeatureError),\n/* harmony export */   WalletsListManager: () => (/* reexport safe */ _tonconnect_ui__WEBPACK_IMPORTED_MODULE_2__.WalletsListManager),\n/* harmony export */   WrongAddressError: () => (/* reexport safe */ _tonconnect_ui__WEBPACK_IMPORTED_MODULE_2__.WrongAddressError),\n/* harmony export */   checkRequiredWalletFeatures: () => (/* reexport safe */ _tonconnect_ui__WEBPACK_IMPORTED_MODULE_2__.checkRequiredWalletFeatures),\n/* harmony export */   createConnectionCompletedEvent: () => (/* reexport safe */ _tonconnect_ui__WEBPACK_IMPORTED_MODULE_2__.createConnectionCompletedEvent),\n/* harmony export */   createConnectionErrorEvent: () => (/* reexport safe */ _tonconnect_ui__WEBPACK_IMPORTED_MODULE_2__.createConnectionErrorEvent),\n/* harmony export */   createConnectionRestoringCompletedEvent: () => (/* reexport safe */ _tonconnect_ui__WEBPACK_IMPORTED_MODULE_2__.createConnectionRestoringCompletedEvent),\n/* harmony export */   createConnectionRestoringErrorEvent: () => (/* reexport safe */ _tonconnect_ui__WEBPACK_IMPORTED_MODULE_2__.createConnectionRestoringErrorEvent),\n/* harmony export */   createConnectionRestoringStartedEvent: () => (/* reexport safe */ _tonconnect_ui__WEBPACK_IMPORTED_MODULE_2__.createConnectionRestoringStartedEvent),\n/* harmony export */   createConnectionStartedEvent: () => (/* reexport safe */ _tonconnect_ui__WEBPACK_IMPORTED_MODULE_2__.createConnectionStartedEvent),\n/* harmony export */   createDisconnectionEvent: () => (/* reexport safe */ _tonconnect_ui__WEBPACK_IMPORTED_MODULE_2__.createDisconnectionEvent),\n/* harmony export */   createRequestVersionEvent: () => (/* reexport safe */ _tonconnect_ui__WEBPACK_IMPORTED_MODULE_2__.createRequestVersionEvent),\n/* harmony export */   createResponseVersionEvent: () => (/* reexport safe */ _tonconnect_ui__WEBPACK_IMPORTED_MODULE_2__.createResponseVersionEvent),\n/* harmony export */   createTransactionSentForSignatureEvent: () => (/* reexport safe */ _tonconnect_ui__WEBPACK_IMPORTED_MODULE_2__.createTransactionSentForSignatureEvent),\n/* harmony export */   createTransactionSignedEvent: () => (/* reexport safe */ _tonconnect_ui__WEBPACK_IMPORTED_MODULE_2__.createTransactionSignedEvent),\n/* harmony export */   createTransactionSigningFailedEvent: () => (/* reexport safe */ _tonconnect_ui__WEBPACK_IMPORTED_MODULE_2__.createTransactionSigningFailedEvent),\n/* harmony export */   createVersionInfo: () => (/* reexport safe */ _tonconnect_ui__WEBPACK_IMPORTED_MODULE_2__.createVersionInfo),\n/* harmony export */   encodeTelegramUrlParameters: () => (/* reexport safe */ _tonconnect_ui__WEBPACK_IMPORTED_MODULE_2__.encodeTelegramUrlParameters),\n/* harmony export */   isTelegramUrl: () => (/* reexport safe */ _tonconnect_ui__WEBPACK_IMPORTED_MODULE_2__.isTelegramUrl),\n/* harmony export */   isWalletInfoCurrentlyEmbedded: () => (/* reexport safe */ _tonconnect_ui__WEBPACK_IMPORTED_MODULE_2__.isWalletInfoCurrentlyEmbedded),\n/* harmony export */   isWalletInfoCurrentlyInjected: () => (/* reexport safe */ _tonconnect_ui__WEBPACK_IMPORTED_MODULE_2__.isWalletInfoCurrentlyInjected),\n/* harmony export */   isWalletInfoInjectable: () => (/* reexport safe */ _tonconnect_ui__WEBPACK_IMPORTED_MODULE_2__.isWalletInfoInjectable),\n/* harmony export */   isWalletInfoInjected: () => (/* reexport safe */ _tonconnect_ui__WEBPACK_IMPORTED_MODULE_2__.isWalletInfoInjected),\n/* harmony export */   isWalletInfoRemote: () => (/* reexport safe */ _tonconnect_ui__WEBPACK_IMPORTED_MODULE_2__.isWalletInfoRemote),\n/* harmony export */   toUserFriendlyAddress: () => (/* reexport safe */ _tonconnect_ui__WEBPACK_IMPORTED_MODULE_2__.toUserFriendlyAddress),\n/* harmony export */   useIsConnectionRestored: () => (/* binding */ useIsConnectionRestored),\n/* harmony export */   useTonAddress: () => (/* binding */ useTonAddress),\n/* harmony export */   useTonConnectModal: () => (/* binding */ useTonConnectModal),\n/* harmony export */   useTonConnectUI: () => (/* binding */ useTonConnectUI),\n/* harmony export */   useTonWallet: () => (/* binding */ useTonWallet)\n/* harmony export */ });\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-runtime */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react-jsx-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var _tonconnect_ui__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @tonconnect/ui */ \"(ssr)/./node_modules/@tonconnect/ui/lib/index.mjs\");\nvar __defProp = Object.defineProperty;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp.call(b, prop))\n      __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols)\n    for (var prop of __getOwnPropSymbols(b)) {\n      if (__propIsEnum.call(b, prop))\n        __defNormalProp(a, prop, b[prop]);\n    }\n  return a;\n};\nvar __objRest = (source, exclude) => {\n  var target = {};\n  for (var prop in source)\n    if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0)\n      target[prop] = source[prop];\n  if (source != null && __getOwnPropSymbols)\n    for (var prop of __getOwnPropSymbols(source)) {\n      if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop))\n        target[prop] = source[prop];\n    }\n  return target;\n};\n\n\n\n\nfunction isClientSide() {\n  return typeof window !== \"undefined\";\n}\nfunction isServerSide() {\n  return !isClientSide();\n}\nconst TonConnectUIContext = (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)(null);\nlet tonConnectUI = null;\nconst TonConnectUIProvider = (_a) => {\n  var _b = _a, {\n    children\n  } = _b, options = __objRest(_b, [\n    \"children\"\n  ]);\n  if (isClientSide() && !tonConnectUI) {\n    tonConnectUI = new _tonconnect_ui__WEBPACK_IMPORTED_MODULE_2__.TonConnectUI(options);\n  }\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(TonConnectUIContext.Provider, { value: tonConnectUI, children });\n};\nconst TonConnectUIProvider$1 = (0,react__WEBPACK_IMPORTED_MODULE_1__.memo)(TonConnectUIProvider);\nclass TonConnectUIReactError extends _tonconnect_ui__WEBPACK_IMPORTED_MODULE_2__.TonConnectUIError {\n  constructor(...args) {\n    super(...args);\n    Object.setPrototypeOf(this, TonConnectUIReactError.prototype);\n  }\n}\nclass TonConnectProviderNotSetError extends TonConnectUIReactError {\n  constructor(...args) {\n    super(...args);\n    Object.setPrototypeOf(this, TonConnectProviderNotSetError.prototype);\n  }\n}\nfunction checkProvider(provider) {\n  if (!provider) {\n    throw new TonConnectProviderNotSetError(\n      \"You should add <TonConnectUIProvider> on the top of the app to use TonConnect\"\n    );\n  }\n  return true;\n}\nfunction useTonConnectUI() {\n  const tonConnectUI2 = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(TonConnectUIContext);\n  const setOptions = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(\n    (options) => {\n      if (tonConnectUI2) {\n        tonConnectUI2.uiOptions = options;\n      }\n    },\n    [tonConnectUI2]\n  );\n  if (isServerSide()) {\n    return [null, () => {\n    }];\n  }\n  checkProvider(tonConnectUI2);\n  return [tonConnectUI2, setOptions];\n}\nconst buttonRootId = \"ton-connect-button\";\nconst TonConnectButton = ({ className, style }) => {\n  const [_, setOptions] = useTonConnectUI();\n  (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n    setOptions({ buttonRootId });\n    return () => setOptions({ buttonRootId: null });\n  }, [setOptions]);\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"div\",\n    {\n      id: buttonRootId,\n      className,\n      style: __spreadValues({ width: \"fit-content\" }, style)\n    }\n  );\n};\nconst TonConnectButton$1 = (0,react__WEBPACK_IMPORTED_MODULE_1__.memo)(TonConnectButton);\nfunction useTonWallet() {\n  const [tonConnectUI2] = useTonConnectUI();\n  const [wallet, setWallet] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\n    (tonConnectUI2 == null ? void 0 : tonConnectUI2.wallet) || null\n  );\n  (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n    if (tonConnectUI2) {\n      setWallet(tonConnectUI2.wallet);\n      return tonConnectUI2.onStatusChange((value) => {\n        setWallet(value);\n      });\n    }\n  }, [tonConnectUI2]);\n  return wallet;\n}\nfunction useTonAddress(userFriendly = true) {\n  const wallet = useTonWallet();\n  return (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(() => {\n    if (wallet) {\n      return userFriendly ? (0,_tonconnect_ui__WEBPACK_IMPORTED_MODULE_2__.toUserFriendlyAddress)(\n        wallet.account.address,\n        wallet.account.chain === _tonconnect_ui__WEBPACK_IMPORTED_MODULE_2__.CHAIN.TESTNET\n      ) : wallet.account.address;\n    } else {\n      return \"\";\n    }\n  }, [wallet, userFriendly, wallet == null ? void 0 : wallet.account.address, wallet == null ? void 0 : wallet.account.chain]);\n}\nfunction useTonConnectModal() {\n  const [tonConnectUI2] = useTonConnectUI();\n  const [state, setState] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)((tonConnectUI2 == null ? void 0 : tonConnectUI2.modal.state) || null);\n  (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n    if (tonConnectUI2) {\n      setState(tonConnectUI2.modal.state);\n      return tonConnectUI2.onModalStateChange((value) => {\n        setState(value);\n      });\n    }\n  }, [tonConnectUI2]);\n  return {\n    state,\n    open: () => tonConnectUI2 == null ? void 0 : tonConnectUI2.modal.open(),\n    close: () => tonConnectUI2 == null ? void 0 : tonConnectUI2.modal.close()\n  };\n}\nfunction useIsConnectionRestored() {\n  const [restored, setRestored] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n  const [tonConnectUI2] = useTonConnectUI();\n  (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n    if (tonConnectUI2) {\n      tonConnectUI2.connectionRestored.then(() => setRestored(true));\n    }\n  }, [tonConnectUI2]);\n  return restored;\n}\n\n//# sourceMappingURL=index.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHRvbmNvbm5lY3QvdWktcmVhY3QvbGliL2luZGV4Lm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOEVBQThFLDZEQUE2RDtBQUMzSTtBQUNBLCtCQUErQjtBQUMvQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDd0M7QUFDMkQ7QUFDSjtBQUNoRTtBQUMvQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0QkFBNEIsb0RBQWE7QUFDekM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCLHdEQUFZO0FBQ25DO0FBQ0EseUJBQXlCLHNEQUFHLGlDQUFpQywrQkFBK0I7QUFDNUY7QUFDQSwrQkFBK0IsMkNBQUk7QUFDbkMscUNBQXFDLDZEQUFpQjtBQUN0RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLGlEQUFVO0FBQ2xDLHFCQUFxQixrREFBVztBQUNoQztBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNEJBQTRCLGtCQUFrQjtBQUM5QztBQUNBLEVBQUUsZ0RBQVM7QUFDWCxpQkFBaUIsY0FBYztBQUMvQiw4QkFBOEIsb0JBQW9CO0FBQ2xELEdBQUc7QUFDSCx5QkFBeUIsc0RBQUc7QUFDNUI7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4QkFBOEIsc0JBQXNCO0FBQ3BEO0FBQ0E7QUFDQTtBQUNBLDJCQUEyQiwyQ0FBSTtBQUMvQjtBQUNBO0FBQ0EsOEJBQThCLCtDQUFRO0FBQ3RDO0FBQ0E7QUFDQSxFQUFFLGdEQUFTO0FBQ1g7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTLDhDQUFPO0FBQ2hCO0FBQ0EsNEJBQTRCLHFFQUFxQjtBQUNqRDtBQUNBLGlDQUFpQyxpREFBSztBQUN0QztBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBLDRCQUE0QiwrQ0FBUTtBQUNwQyxFQUFFLGdEQUFTO0FBQ1g7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQ0FBa0MsK0NBQVE7QUFDMUM7QUFDQSxFQUFFLGdEQUFTO0FBQ1g7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFZRTtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbmV4dGpzLXRlbXBsYXRlLy4vbm9kZV9tb2R1bGVzL0B0b25jb25uZWN0L3VpLXJlYWN0L2xpYi9pbmRleC5tanM/MzAyNiJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgX19kZWZQcm9wID0gT2JqZWN0LmRlZmluZVByb3BlcnR5O1xudmFyIF9fZ2V0T3duUHJvcFN5bWJvbHMgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzO1xudmFyIF9faGFzT3duUHJvcCA9IE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHk7XG52YXIgX19wcm9wSXNFbnVtID0gT2JqZWN0LnByb3RvdHlwZS5wcm9wZXJ0eUlzRW51bWVyYWJsZTtcbnZhciBfX2RlZk5vcm1hbFByb3AgPSAob2JqLCBrZXksIHZhbHVlKSA9PiBrZXkgaW4gb2JqID8gX19kZWZQcm9wKG9iaiwga2V5LCB7IGVudW1lcmFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSwgd3JpdGFibGU6IHRydWUsIHZhbHVlIH0pIDogb2JqW2tleV0gPSB2YWx1ZTtcbnZhciBfX3NwcmVhZFZhbHVlcyA9IChhLCBiKSA9PiB7XG4gIGZvciAodmFyIHByb3AgaW4gYiB8fCAoYiA9IHt9KSlcbiAgICBpZiAoX19oYXNPd25Qcm9wLmNhbGwoYiwgcHJvcCkpXG4gICAgICBfX2RlZk5vcm1hbFByb3AoYSwgcHJvcCwgYltwcm9wXSk7XG4gIGlmIChfX2dldE93blByb3BTeW1ib2xzKVxuICAgIGZvciAodmFyIHByb3Agb2YgX19nZXRPd25Qcm9wU3ltYm9scyhiKSkge1xuICAgICAgaWYgKF9fcHJvcElzRW51bS5jYWxsKGIsIHByb3ApKVxuICAgICAgICBfX2RlZk5vcm1hbFByb3AoYSwgcHJvcCwgYltwcm9wXSk7XG4gICAgfVxuICByZXR1cm4gYTtcbn07XG52YXIgX19vYmpSZXN0ID0gKHNvdXJjZSwgZXhjbHVkZSkgPT4ge1xuICB2YXIgdGFyZ2V0ID0ge307XG4gIGZvciAodmFyIHByb3AgaW4gc291cmNlKVxuICAgIGlmIChfX2hhc093blByb3AuY2FsbChzb3VyY2UsIHByb3ApICYmIGV4Y2x1ZGUuaW5kZXhPZihwcm9wKSA8IDApXG4gICAgICB0YXJnZXRbcHJvcF0gPSBzb3VyY2VbcHJvcF07XG4gIGlmIChzb3VyY2UgIT0gbnVsbCAmJiBfX2dldE93blByb3BTeW1ib2xzKVxuICAgIGZvciAodmFyIHByb3Agb2YgX19nZXRPd25Qcm9wU3ltYm9scyhzb3VyY2UpKSB7XG4gICAgICBpZiAoZXhjbHVkZS5pbmRleE9mKHByb3ApIDwgMCAmJiBfX3Byb3BJc0VudW0uY2FsbChzb3VyY2UsIHByb3ApKVxuICAgICAgICB0YXJnZXRbcHJvcF0gPSBzb3VyY2VbcHJvcF07XG4gICAgfVxuICByZXR1cm4gdGFyZ2V0O1xufTtcbmltcG9ydCB7IGpzeCB9IGZyb20gXCJyZWFjdC9qc3gtcnVudGltZVwiO1xuaW1wb3J0IHsgY3JlYXRlQ29udGV4dCwgbWVtbywgdXNlQ29udGV4dCwgdXNlQ2FsbGJhY2ssIHVzZUVmZmVjdCwgdXNlU3RhdGUsIHVzZU1lbW8gfSBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCB7IFRvbkNvbm5lY3RVSSwgVG9uQ29ubmVjdFVJRXJyb3IsIHRvVXNlckZyaWVuZGx5QWRkcmVzcywgQ0hBSU4gfSBmcm9tIFwiQHRvbmNvbm5lY3QvdWlcIjtcbmV4cG9ydCAqIGZyb20gXCJAdG9uY29ubmVjdC91aVwiO1xuZnVuY3Rpb24gaXNDbGllbnRTaWRlKCkge1xuICByZXR1cm4gdHlwZW9mIHdpbmRvdyAhPT0gXCJ1bmRlZmluZWRcIjtcbn1cbmZ1bmN0aW9uIGlzU2VydmVyU2lkZSgpIHtcbiAgcmV0dXJuICFpc0NsaWVudFNpZGUoKTtcbn1cbmNvbnN0IFRvbkNvbm5lY3RVSUNvbnRleHQgPSBjcmVhdGVDb250ZXh0KG51bGwpO1xubGV0IHRvbkNvbm5lY3RVSSA9IG51bGw7XG5jb25zdCBUb25Db25uZWN0VUlQcm92aWRlciA9IChfYSkgPT4ge1xuICB2YXIgX2IgPSBfYSwge1xuICAgIGNoaWxkcmVuXG4gIH0gPSBfYiwgb3B0aW9ucyA9IF9fb2JqUmVzdChfYiwgW1xuICAgIFwiY2hpbGRyZW5cIlxuICBdKTtcbiAgaWYgKGlzQ2xpZW50U2lkZSgpICYmICF0b25Db25uZWN0VUkpIHtcbiAgICB0b25Db25uZWN0VUkgPSBuZXcgVG9uQ29ubmVjdFVJKG9wdGlvbnMpO1xuICB9XG4gIHJldHVybiAvKiBAX19QVVJFX18gKi8ganN4KFRvbkNvbm5lY3RVSUNvbnRleHQuUHJvdmlkZXIsIHsgdmFsdWU6IHRvbkNvbm5lY3RVSSwgY2hpbGRyZW4gfSk7XG59O1xuY29uc3QgVG9uQ29ubmVjdFVJUHJvdmlkZXIkMSA9IG1lbW8oVG9uQ29ubmVjdFVJUHJvdmlkZXIpO1xuY2xhc3MgVG9uQ29ubmVjdFVJUmVhY3RFcnJvciBleHRlbmRzIFRvbkNvbm5lY3RVSUVycm9yIHtcbiAgY29uc3RydWN0b3IoLi4uYXJncykge1xuICAgIHN1cGVyKC4uLmFyZ3MpO1xuICAgIE9iamVjdC5zZXRQcm90b3R5cGVPZih0aGlzLCBUb25Db25uZWN0VUlSZWFjdEVycm9yLnByb3RvdHlwZSk7XG4gIH1cbn1cbmNsYXNzIFRvbkNvbm5lY3RQcm92aWRlck5vdFNldEVycm9yIGV4dGVuZHMgVG9uQ29ubmVjdFVJUmVhY3RFcnJvciB7XG4gIGNvbnN0cnVjdG9yKC4uLmFyZ3MpIHtcbiAgICBzdXBlciguLi5hcmdzKTtcbiAgICBPYmplY3Quc2V0UHJvdG90eXBlT2YodGhpcywgVG9uQ29ubmVjdFByb3ZpZGVyTm90U2V0RXJyb3IucHJvdG90eXBlKTtcbiAgfVxufVxuZnVuY3Rpb24gY2hlY2tQcm92aWRlcihwcm92aWRlcikge1xuICBpZiAoIXByb3ZpZGVyKSB7XG4gICAgdGhyb3cgbmV3IFRvbkNvbm5lY3RQcm92aWRlck5vdFNldEVycm9yKFxuICAgICAgXCJZb3Ugc2hvdWxkIGFkZCA8VG9uQ29ubmVjdFVJUHJvdmlkZXI+IG9uIHRoZSB0b3Agb2YgdGhlIGFwcCB0byB1c2UgVG9uQ29ubmVjdFwiXG4gICAgKTtcbiAgfVxuICByZXR1cm4gdHJ1ZTtcbn1cbmZ1bmN0aW9uIHVzZVRvbkNvbm5lY3RVSSgpIHtcbiAgY29uc3QgdG9uQ29ubmVjdFVJMiA9IHVzZUNvbnRleHQoVG9uQ29ubmVjdFVJQ29udGV4dCk7XG4gIGNvbnN0IHNldE9wdGlvbnMgPSB1c2VDYWxsYmFjayhcbiAgICAob3B0aW9ucykgPT4ge1xuICAgICAgaWYgKHRvbkNvbm5lY3RVSTIpIHtcbiAgICAgICAgdG9uQ29ubmVjdFVJMi51aU9wdGlvbnMgPSBvcHRpb25zO1xuICAgICAgfVxuICAgIH0sXG4gICAgW3RvbkNvbm5lY3RVSTJdXG4gICk7XG4gIGlmIChpc1NlcnZlclNpZGUoKSkge1xuICAgIHJldHVybiBbbnVsbCwgKCkgPT4ge1xuICAgIH1dO1xuICB9XG4gIGNoZWNrUHJvdmlkZXIodG9uQ29ubmVjdFVJMik7XG4gIHJldHVybiBbdG9uQ29ubmVjdFVJMiwgc2V0T3B0aW9uc107XG59XG5jb25zdCBidXR0b25Sb290SWQgPSBcInRvbi1jb25uZWN0LWJ1dHRvblwiO1xuY29uc3QgVG9uQ29ubmVjdEJ1dHRvbiA9ICh7IGNsYXNzTmFtZSwgc3R5bGUgfSkgPT4ge1xuICBjb25zdCBbXywgc2V0T3B0aW9uc10gPSB1c2VUb25Db25uZWN0VUkoKTtcbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBzZXRPcHRpb25zKHsgYnV0dG9uUm9vdElkIH0pO1xuICAgIHJldHVybiAoKSA9PiBzZXRPcHRpb25zKHsgYnV0dG9uUm9vdElkOiBudWxsIH0pO1xuICB9LCBbc2V0T3B0aW9uc10pO1xuICByZXR1cm4gLyogQF9fUFVSRV9fICovIGpzeChcbiAgICBcImRpdlwiLFxuICAgIHtcbiAgICAgIGlkOiBidXR0b25Sb290SWQsXG4gICAgICBjbGFzc05hbWUsXG4gICAgICBzdHlsZTogX19zcHJlYWRWYWx1ZXMoeyB3aWR0aDogXCJmaXQtY29udGVudFwiIH0sIHN0eWxlKVxuICAgIH1cbiAgKTtcbn07XG5jb25zdCBUb25Db25uZWN0QnV0dG9uJDEgPSBtZW1vKFRvbkNvbm5lY3RCdXR0b24pO1xuZnVuY3Rpb24gdXNlVG9uV2FsbGV0KCkge1xuICBjb25zdCBbdG9uQ29ubmVjdFVJMl0gPSB1c2VUb25Db25uZWN0VUkoKTtcbiAgY29uc3QgW3dhbGxldCwgc2V0V2FsbGV0XSA9IHVzZVN0YXRlKFxuICAgICh0b25Db25uZWN0VUkyID09IG51bGwgPyB2b2lkIDAgOiB0b25Db25uZWN0VUkyLndhbGxldCkgfHwgbnVsbFxuICApO1xuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIGlmICh0b25Db25uZWN0VUkyKSB7XG4gICAgICBzZXRXYWxsZXQodG9uQ29ubmVjdFVJMi53YWxsZXQpO1xuICAgICAgcmV0dXJuIHRvbkNvbm5lY3RVSTIub25TdGF0dXNDaGFuZ2UoKHZhbHVlKSA9PiB7XG4gICAgICAgIHNldFdhbGxldCh2YWx1ZSk7XG4gICAgICB9KTtcbiAgICB9XG4gIH0sIFt0b25Db25uZWN0VUkyXSk7XG4gIHJldHVybiB3YWxsZXQ7XG59XG5mdW5jdGlvbiB1c2VUb25BZGRyZXNzKHVzZXJGcmllbmRseSA9IHRydWUpIHtcbiAgY29uc3Qgd2FsbGV0ID0gdXNlVG9uV2FsbGV0KCk7XG4gIHJldHVybiB1c2VNZW1vKCgpID0+IHtcbiAgICBpZiAod2FsbGV0KSB7XG4gICAgICByZXR1cm4gdXNlckZyaWVuZGx5ID8gdG9Vc2VyRnJpZW5kbHlBZGRyZXNzKFxuICAgICAgICB3YWxsZXQuYWNjb3VudC5hZGRyZXNzLFxuICAgICAgICB3YWxsZXQuYWNjb3VudC5jaGFpbiA9PT0gQ0hBSU4uVEVTVE5FVFxuICAgICAgKSA6IHdhbGxldC5hY2NvdW50LmFkZHJlc3M7XG4gICAgfSBlbHNlIHtcbiAgICAgIHJldHVybiBcIlwiO1xuICAgIH1cbiAgfSwgW3dhbGxldCwgdXNlckZyaWVuZGx5LCB3YWxsZXQgPT0gbnVsbCA/IHZvaWQgMCA6IHdhbGxldC5hY2NvdW50LmFkZHJlc3MsIHdhbGxldCA9PSBudWxsID8gdm9pZCAwIDogd2FsbGV0LmFjY291bnQuY2hhaW5dKTtcbn1cbmZ1bmN0aW9uIHVzZVRvbkNvbm5lY3RNb2RhbCgpIHtcbiAgY29uc3QgW3RvbkNvbm5lY3RVSTJdID0gdXNlVG9uQ29ubmVjdFVJKCk7XG4gIGNvbnN0IFtzdGF0ZSwgc2V0U3RhdGVdID0gdXNlU3RhdGUoKHRvbkNvbm5lY3RVSTIgPT0gbnVsbCA/IHZvaWQgMCA6IHRvbkNvbm5lY3RVSTIubW9kYWwuc3RhdGUpIHx8IG51bGwpO1xuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIGlmICh0b25Db25uZWN0VUkyKSB7XG4gICAgICBzZXRTdGF0ZSh0b25Db25uZWN0VUkyLm1vZGFsLnN0YXRlKTtcbiAgICAgIHJldHVybiB0b25Db25uZWN0VUkyLm9uTW9kYWxTdGF0ZUNoYW5nZSgodmFsdWUpID0+IHtcbiAgICAgICAgc2V0U3RhdGUodmFsdWUpO1xuICAgICAgfSk7XG4gICAgfVxuICB9LCBbdG9uQ29ubmVjdFVJMl0pO1xuICByZXR1cm4ge1xuICAgIHN0YXRlLFxuICAgIG9wZW46ICgpID0+IHRvbkNvbm5lY3RVSTIgPT0gbnVsbCA/IHZvaWQgMCA6IHRvbkNvbm5lY3RVSTIubW9kYWwub3BlbigpLFxuICAgIGNsb3NlOiAoKSA9PiB0b25Db25uZWN0VUkyID09IG51bGwgPyB2b2lkIDAgOiB0b25Db25uZWN0VUkyLm1vZGFsLmNsb3NlKClcbiAgfTtcbn1cbmZ1bmN0aW9uIHVzZUlzQ29ubmVjdGlvblJlc3RvcmVkKCkge1xuICBjb25zdCBbcmVzdG9yZWQsIHNldFJlc3RvcmVkXSA9IHVzZVN0YXRlKGZhbHNlKTtcbiAgY29uc3QgW3RvbkNvbm5lY3RVSTJdID0gdXNlVG9uQ29ubmVjdFVJKCk7XG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgaWYgKHRvbkNvbm5lY3RVSTIpIHtcbiAgICAgIHRvbkNvbm5lY3RVSTIuY29ubmVjdGlvblJlc3RvcmVkLnRoZW4oKCkgPT4gc2V0UmVzdG9yZWQodHJ1ZSkpO1xuICAgIH1cbiAgfSwgW3RvbkNvbm5lY3RVSTJdKTtcbiAgcmV0dXJuIHJlc3RvcmVkO1xufVxuZXhwb3J0IHtcbiAgVG9uQ29ubmVjdEJ1dHRvbiQxIGFzIFRvbkNvbm5lY3RCdXR0b24sXG4gIFRvbkNvbm5lY3RQcm92aWRlck5vdFNldEVycm9yLFxuICBUb25Db25uZWN0VUlDb250ZXh0LFxuICBUb25Db25uZWN0VUlQcm92aWRlciQxIGFzIFRvbkNvbm5lY3RVSVByb3ZpZGVyLFxuICBUb25Db25uZWN0VUlSZWFjdEVycm9yLFxuICB1c2VJc0Nvbm5lY3Rpb25SZXN0b3JlZCxcbiAgdXNlVG9uQWRkcmVzcyxcbiAgdXNlVG9uQ29ubmVjdE1vZGFsLFxuICB1c2VUb25Db25uZWN0VUksXG4gIHVzZVRvbldhbGxldFxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4Lm1qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@tonconnect/ui-react/lib/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@tonconnect/ui/lib/index.mjs":
/*!***************************************************!*\
  !*** ./node_modules/@tonconnect/ui/lib/index.mjs ***!
  \***************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BadRequestError: () => (/* reexport safe */ _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.BadRequestError),\n/* harmony export */   BrowserEventDispatcher: () => (/* reexport safe */ _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.BrowserEventDispatcher),\n/* harmony export */   CHAIN: () => (/* reexport safe */ _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.CHAIN),\n/* harmony export */   CONNECT_EVENT_ERROR_CODES: () => (/* reexport safe */ _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.CONNECT_EVENT_ERROR_CODES),\n/* harmony export */   CONNECT_ITEM_ERROR_CODES: () => (/* reexport safe */ _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.CONNECT_ITEM_ERROR_CODES),\n/* harmony export */   FetchWalletsError: () => (/* reexport safe */ _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.FetchWalletsError),\n/* harmony export */   LocalstorageNotFoundError: () => (/* reexport safe */ _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.LocalstorageNotFoundError),\n/* harmony export */   ParseHexError: () => (/* reexport safe */ _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.ParseHexError),\n/* harmony export */   SEND_TRANSACTION_ERROR_CODES: () => (/* reexport safe */ _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.SEND_TRANSACTION_ERROR_CODES),\n/* harmony export */   THEME: () => (/* binding */ THEME),\n/* harmony export */   TonConnect: () => (/* reexport safe */ _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.TonConnect),\n/* harmony export */   TonConnectError: () => (/* reexport safe */ _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.TonConnectError),\n/* harmony export */   TonConnectUI: () => (/* binding */ TonConnectUI),\n/* harmony export */   TonConnectUIError: () => (/* binding */ TonConnectUIError),\n/* harmony export */   UnknownAppError: () => (/* reexport safe */ _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.UnknownAppError),\n/* harmony export */   UnknownError: () => (/* reexport safe */ _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.UnknownError),\n/* harmony export */   UserRejectsError: () => (/* reexport safe */ _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.UserRejectsError),\n/* harmony export */   WalletAlreadyConnectedError: () => (/* reexport safe */ _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.WalletAlreadyConnectedError),\n/* harmony export */   WalletMissingRequiredFeaturesError: () => (/* reexport safe */ _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.WalletMissingRequiredFeaturesError),\n/* harmony export */   WalletNotConnectedError: () => (/* reexport safe */ _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.WalletNotConnectedError),\n/* harmony export */   WalletNotInjectedError: () => (/* reexport safe */ _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.WalletNotInjectedError),\n/* harmony export */   WalletNotSupportFeatureError: () => (/* reexport safe */ _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.WalletNotSupportFeatureError),\n/* harmony export */   WalletsListManager: () => (/* reexport safe */ _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.WalletsListManager),\n/* harmony export */   WrongAddressError: () => (/* reexport safe */ _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.WrongAddressError),\n/* harmony export */   checkRequiredWalletFeatures: () => (/* reexport safe */ _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.checkRequiredWalletFeatures),\n/* harmony export */   createConnectionCompletedEvent: () => (/* reexport safe */ _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.createConnectionCompletedEvent),\n/* harmony export */   createConnectionErrorEvent: () => (/* reexport safe */ _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.createConnectionErrorEvent),\n/* harmony export */   createConnectionRestoringCompletedEvent: () => (/* reexport safe */ _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.createConnectionRestoringCompletedEvent),\n/* harmony export */   createConnectionRestoringErrorEvent: () => (/* reexport safe */ _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.createConnectionRestoringErrorEvent),\n/* harmony export */   createConnectionRestoringStartedEvent: () => (/* reexport safe */ _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.createConnectionRestoringStartedEvent),\n/* harmony export */   createConnectionStartedEvent: () => (/* reexport safe */ _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.createConnectionStartedEvent),\n/* harmony export */   createDisconnectionEvent: () => (/* reexport safe */ _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.createDisconnectionEvent),\n/* harmony export */   createRequestVersionEvent: () => (/* reexport safe */ _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.createRequestVersionEvent),\n/* harmony export */   createResponseVersionEvent: () => (/* reexport safe */ _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.createResponseVersionEvent),\n/* harmony export */   createTransactionSentForSignatureEvent: () => (/* reexport safe */ _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.createTransactionSentForSignatureEvent),\n/* harmony export */   createTransactionSignedEvent: () => (/* reexport safe */ _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.createTransactionSignedEvent),\n/* harmony export */   createTransactionSigningFailedEvent: () => (/* reexport safe */ _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.createTransactionSigningFailedEvent),\n/* harmony export */   createVersionInfo: () => (/* reexport safe */ _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.createVersionInfo),\n/* harmony export */   encodeTelegramUrlParameters: () => (/* reexport safe */ _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.encodeTelegramUrlParameters),\n/* harmony export */   isTelegramUrl: () => (/* reexport safe */ _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.isTelegramUrl),\n/* harmony export */   isWalletInfoCurrentlyEmbedded: () => (/* reexport safe */ _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.isWalletInfoCurrentlyEmbedded),\n/* harmony export */   isWalletInfoCurrentlyInjected: () => (/* reexport safe */ _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.isWalletInfoCurrentlyInjected),\n/* harmony export */   isWalletInfoInjectable: () => (/* reexport safe */ _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.isWalletInfoInjectable),\n/* harmony export */   isWalletInfoInjected: () => (/* reexport safe */ _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.isWalletInfoInjected),\n/* harmony export */   isWalletInfoRemote: () => (/* reexport safe */ _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.isWalletInfoRemote),\n/* harmony export */   toUserFriendlyAddress: () => (/* reexport safe */ _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.toUserFriendlyAddress)\n/* harmony export */ });\n/* harmony import */ var _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tonconnect/sdk */ \"(ssr)/./node_modules/@tonconnect/sdk/lib/esm/index.mjs\");\n/* harmony import */ var ua_parser_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ua-parser-js */ \"(ssr)/./node_modules/ua-parser-js/src/ua-parser.js\");\n/* harmony import */ var deepmerge__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! deepmerge */ \"(ssr)/./node_modules/deepmerge/dist/cjs.js\");\n/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! classnames */ \"(ssr)/./node_modules/classnames/index.js\");\nvar __defProp = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues = (a2, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp.call(b, prop))\n      __defNormalProp(a2, prop, b[prop]);\n  if (__getOwnPropSymbols)\n    for (var prop of __getOwnPropSymbols(b)) {\n      if (__propIsEnum.call(b, prop))\n        __defNormalProp(a2, prop, b[prop]);\n    }\n  return a2;\n};\nvar __spreadProps = (a2, b) => __defProps(a2, __getOwnPropDescs(b));\nvar __publicField = (obj, key, value) => {\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n  return value;\n};\nvar __async = (__this, __arguments, generator) => {\n  return new Promise((resolve, reject) => {\n    var fulfilled = (value) => {\n      try {\n        step(generator.next(value));\n      } catch (e2) {\n        reject(e2);\n      }\n    };\n    var rejected = (value) => {\n      try {\n        step(generator.throw(value));\n      } catch (e2) {\n        reject(e2);\n      }\n    };\n    var step = (x) => x.done ? resolve(x.value) : Promise.resolve(x.value).then(fulfilled, rejected);\n    step((generator = generator.apply(__this, __arguments)).next());\n  });\n};\nvar _a, _b, _c, _d, _e, _f, _g, _h;\n\n\n\n\n\nconst sharedConfig = {};\nfunction setHydrateContext(context) {\n  sharedConfig.context = context;\n}\nconst equalFn = (a2, b) => a2 === b;\nconst $PROXY = Symbol(\"solid-proxy\");\nconst $TRACK = Symbol(\"solid-track\");\nconst signalOptions = {\n  equals: equalFn\n};\nlet runEffects = runQueue;\nconst STALE = 1;\nconst PENDING = 2;\nconst UNOWNED = {\n  owned: null,\n  cleanups: null,\n  context: null,\n  owner: null\n};\nconst NO_INIT = {};\nvar Owner = null;\nlet Transition$1 = null;\nlet Listener = null;\nlet Updates = null;\nlet Effects = null;\nlet ExecCount = 0;\nfunction createRoot(fn, detachedOwner) {\n  const listener = Listener, owner = Owner, unowned = fn.length === 0, root = unowned ? UNOWNED : {\n    owned: null,\n    cleanups: null,\n    context: null,\n    owner: detachedOwner === void 0 ? owner : detachedOwner\n  }, updateFn = unowned ? fn : () => fn(() => untrack(() => cleanNode(root)));\n  Owner = root;\n  Listener = null;\n  try {\n    return runUpdates(updateFn, true);\n  } finally {\n    Listener = listener;\n    Owner = owner;\n  }\n}\nfunction createSignal(value, options) {\n  options = options ? Object.assign({}, signalOptions, options) : signalOptions;\n  const s2 = {\n    value,\n    observers: null,\n    observerSlots: null,\n    comparator: options.equals || void 0\n  };\n  const setter = (value2) => {\n    if (typeof value2 === \"function\") {\n      value2 = value2(s2.value);\n    }\n    return writeSignal(s2, value2);\n  };\n  return [readSignal.bind(s2), setter];\n}\nfunction createComputed(fn, value, options) {\n  const c2 = createComputation(fn, value, true, STALE);\n  updateComputation(c2);\n}\nfunction createRenderEffect(fn, value, options) {\n  const c2 = createComputation(fn, value, false, STALE);\n  updateComputation(c2);\n}\nfunction createEffect(fn, value, options) {\n  runEffects = runUserEffects;\n  const c2 = createComputation(fn, value, false, STALE);\n  c2.user = true;\n  Effects ? Effects.push(c2) : updateComputation(c2);\n}\nfunction createMemo(fn, value, options) {\n  options = options ? Object.assign({}, signalOptions, options) : signalOptions;\n  const c2 = createComputation(fn, value, true, 0);\n  c2.observers = null;\n  c2.observerSlots = null;\n  c2.comparator = options.equals || void 0;\n  updateComputation(c2);\n  return readSignal.bind(c2);\n}\nfunction createResource(pSource, pFetcher, pOptions) {\n  let source;\n  let fetcher;\n  let options;\n  if (arguments.length === 2 && typeof pFetcher === \"object\" || arguments.length === 1) {\n    source = true;\n    fetcher = pSource;\n    options = pFetcher || {};\n  } else {\n    source = pSource;\n    fetcher = pFetcher;\n    options = pOptions || {};\n  }\n  let pr = null, initP = NO_INIT, id = null, scheduled = false, resolved = \"initialValue\" in options, dynamic = typeof source === \"function\" && createMemo(source);\n  const contexts = /* @__PURE__ */ new Set(), [value, setValue] = (options.storage || createSignal)(options.initialValue), [error, setError] = createSignal(void 0), [track, trigger] = createSignal(void 0, {\n    equals: false\n  }), [state, setState] = createSignal(resolved ? \"ready\" : \"unresolved\");\n  if (sharedConfig.context) {\n    id = `${sharedConfig.context.id}${sharedConfig.context.count++}`;\n    let v;\n    if (options.ssrLoadFrom === \"initial\")\n      initP = options.initialValue;\n    else if (sharedConfig.load && (v = sharedConfig.load(id)))\n      initP = v[0];\n  }\n  function loadEnd(p2, v, error2, key) {\n    if (pr === p2) {\n      pr = null;\n      resolved = true;\n      if ((p2 === initP || v === initP) && options.onHydrated)\n        queueMicrotask(() => options.onHydrated(key, {\n          value: v\n        }));\n      initP = NO_INIT;\n      completeLoad(v, error2);\n    }\n    return v;\n  }\n  function completeLoad(v, err) {\n    runUpdates(() => {\n      if (err === void 0)\n        setValue(() => v);\n      setState(err !== void 0 ? \"errored\" : \"ready\");\n      setError(err);\n      for (const c2 of contexts.keys())\n        c2.decrement();\n      contexts.clear();\n    }, false);\n  }\n  function read() {\n    const c2 = SuspenseContext, v = value(), err = error();\n    if (err !== void 0 && !pr)\n      throw err;\n    if (Listener && !Listener.user && c2) {\n      createComputed(() => {\n        track();\n        if (pr) {\n          if (c2.resolved)\n            ;\n          else if (!contexts.has(c2)) {\n            c2.increment();\n            contexts.add(c2);\n          }\n        }\n      });\n    }\n    return v;\n  }\n  function load(refetching = true) {\n    if (refetching !== false && scheduled)\n      return;\n    scheduled = false;\n    const lookup2 = dynamic ? dynamic() : source;\n    if (lookup2 == null || lookup2 === false) {\n      loadEnd(pr, untrack(value));\n      return;\n    }\n    const p2 = initP !== NO_INIT ? initP : untrack(() => fetcher(lookup2, {\n      value: value(),\n      refetching\n    }));\n    if (typeof p2 !== \"object\" || !(p2 && \"then\" in p2)) {\n      loadEnd(pr, p2, void 0, lookup2);\n      return p2;\n    }\n    pr = p2;\n    scheduled = true;\n    queueMicrotask(() => scheduled = false);\n    runUpdates(() => {\n      setState(resolved ? \"refreshing\" : \"pending\");\n      trigger();\n    }, false);\n    return p2.then((v) => loadEnd(p2, v, void 0, lookup2), (e2) => loadEnd(p2, void 0, castError(e2), lookup2));\n  }\n  Object.defineProperties(read, {\n    state: {\n      get: () => state()\n    },\n    error: {\n      get: () => error()\n    },\n    loading: {\n      get() {\n        const s2 = state();\n        return s2 === \"pending\" || s2 === \"refreshing\";\n      }\n    },\n    latest: {\n      get() {\n        if (!resolved)\n          return read();\n        const err = error();\n        if (err && !pr)\n          throw err;\n        return value();\n      }\n    }\n  });\n  if (dynamic)\n    createComputed(() => load(false));\n  else\n    load(false);\n  return [read, {\n    refetch: load,\n    mutate: setValue\n  }];\n}\nfunction batch(fn) {\n  return runUpdates(fn, false);\n}\nfunction untrack(fn) {\n  if (Listener === null)\n    return fn();\n  const listener = Listener;\n  Listener = null;\n  try {\n    return fn();\n  } finally {\n    Listener = listener;\n  }\n}\nfunction on(deps, fn, options) {\n  const isArray = Array.isArray(deps);\n  let prevInput;\n  let defer = options && options.defer;\n  return (prevValue) => {\n    let input;\n    if (isArray) {\n      input = Array(deps.length);\n      for (let i2 = 0; i2 < deps.length; i2++)\n        input[i2] = deps[i2]();\n    } else\n      input = deps();\n    if (defer) {\n      defer = false;\n      return void 0;\n    }\n    const result = untrack(() => fn(input, prevInput, prevValue));\n    prevInput = input;\n    return result;\n  };\n}\nfunction onMount(fn) {\n  createEffect(() => untrack(fn));\n}\nfunction onCleanup(fn) {\n  if (Owner === null)\n    ;\n  else if (Owner.cleanups === null)\n    Owner.cleanups = [fn];\n  else\n    Owner.cleanups.push(fn);\n  return fn;\n}\nfunction getListener() {\n  return Listener;\n}\nfunction getOwner() {\n  return Owner;\n}\nfunction createContext(defaultValue, options) {\n  const id = Symbol(\"context\");\n  return {\n    id,\n    Provider: createProvider(id),\n    defaultValue\n  };\n}\nfunction useContext(context) {\n  let ctx;\n  return (ctx = lookup(Owner, context.id)) !== void 0 ? ctx : context.defaultValue;\n}\nfunction children(fn) {\n  const children2 = createMemo(fn);\n  const memo = createMemo(() => resolveChildren(children2()));\n  memo.toArray = () => {\n    const c2 = memo();\n    return Array.isArray(c2) ? c2 : c2 != null ? [c2] : [];\n  };\n  return memo;\n}\nlet SuspenseContext;\nfunction readSignal() {\n  const runningTransition = Transition$1;\n  if (this.sources && (this.state || runningTransition)) {\n    if (this.state === STALE || runningTransition)\n      updateComputation(this);\n    else {\n      const updates = Updates;\n      Updates = null;\n      runUpdates(() => lookUpstream(this), false);\n      Updates = updates;\n    }\n  }\n  if (Listener) {\n    const sSlot = this.observers ? this.observers.length : 0;\n    if (!Listener.sources) {\n      Listener.sources = [this];\n      Listener.sourceSlots = [sSlot];\n    } else {\n      Listener.sources.push(this);\n      Listener.sourceSlots.push(sSlot);\n    }\n    if (!this.observers) {\n      this.observers = [Listener];\n      this.observerSlots = [Listener.sources.length - 1];\n    } else {\n      this.observers.push(Listener);\n      this.observerSlots.push(Listener.sources.length - 1);\n    }\n  }\n  return this.value;\n}\nfunction writeSignal(node, value, isComp) {\n  let current = node.value;\n  if (!node.comparator || !node.comparator(current, value)) {\n    node.value = value;\n    if (node.observers && node.observers.length) {\n      runUpdates(() => {\n        for (let i2 = 0; i2 < node.observers.length; i2 += 1) {\n          const o2 = node.observers[i2];\n          const TransitionRunning = Transition$1 && Transition$1.running;\n          if (TransitionRunning && Transition$1.disposed.has(o2))\n            ;\n          if (TransitionRunning && !o2.tState || !TransitionRunning && !o2.state) {\n            if (o2.pure)\n              Updates.push(o2);\n            else\n              Effects.push(o2);\n            if (o2.observers)\n              markDownstream(o2);\n          }\n          if (TransitionRunning)\n            ;\n          else\n            o2.state = STALE;\n        }\n        if (Updates.length > 1e6) {\n          Updates = [];\n          if (false)\n            {}\n          throw new Error();\n        }\n      }, false);\n    }\n  }\n  return value;\n}\nfunction updateComputation(node) {\n  if (!node.fn)\n    return;\n  cleanNode(node);\n  const owner = Owner, listener = Listener, time = ExecCount;\n  Listener = Owner = node;\n  runComputation(node, node.value, time);\n  Listener = listener;\n  Owner = owner;\n}\nfunction runComputation(node, value, time) {\n  let nextValue;\n  try {\n    nextValue = node.fn(value);\n  } catch (err) {\n    if (node.pure) {\n      {\n        node.state = STALE;\n        node.owned && node.owned.forEach(cleanNode);\n        node.owned = null;\n      }\n    }\n    handleError(err);\n  }\n  if (!node.updatedAt || node.updatedAt <= time) {\n    if (node.updatedAt != null && \"observers\" in node) {\n      writeSignal(node, nextValue);\n    } else\n      node.value = nextValue;\n    node.updatedAt = time;\n  }\n}\nfunction createComputation(fn, init, pure, state = STALE, options) {\n  const c2 = {\n    fn,\n    state,\n    updatedAt: null,\n    owned: null,\n    sources: null,\n    sourceSlots: null,\n    cleanups: null,\n    value: init,\n    owner: Owner,\n    context: null,\n    pure\n  };\n  if (Owner === null)\n    ;\n  else if (Owner !== UNOWNED) {\n    {\n      if (!Owner.owned)\n        Owner.owned = [c2];\n      else\n        Owner.owned.push(c2);\n    }\n  }\n  return c2;\n}\nfunction runTop(node) {\n  const runningTransition = Transition$1;\n  if (node.state === 0 || runningTransition)\n    return;\n  if (node.state === PENDING || runningTransition)\n    return lookUpstream(node);\n  if (node.suspense && untrack(node.suspense.inFallback))\n    return node.suspense.effects.push(node);\n  const ancestors = [node];\n  while ((node = node.owner) && (!node.updatedAt || node.updatedAt < ExecCount)) {\n    if (node.state || runningTransition)\n      ancestors.push(node);\n  }\n  for (let i2 = ancestors.length - 1; i2 >= 0; i2--) {\n    node = ancestors[i2];\n    if (node.state === STALE || runningTransition) {\n      updateComputation(node);\n    } else if (node.state === PENDING || runningTransition) {\n      const updates = Updates;\n      Updates = null;\n      runUpdates(() => lookUpstream(node, ancestors[0]), false);\n      Updates = updates;\n    }\n  }\n}\nfunction runUpdates(fn, init) {\n  if (Updates)\n    return fn();\n  let wait = false;\n  if (!init)\n    Updates = [];\n  if (Effects)\n    wait = true;\n  else\n    Effects = [];\n  ExecCount++;\n  try {\n    const res = fn();\n    completeUpdates(wait);\n    return res;\n  } catch (err) {\n    if (!wait)\n      Effects = null;\n    Updates = null;\n    handleError(err);\n  }\n}\nfunction completeUpdates(wait) {\n  if (Updates) {\n    runQueue(Updates);\n    Updates = null;\n  }\n  if (wait)\n    return;\n  const e2 = Effects;\n  Effects = null;\n  if (e2.length)\n    runUpdates(() => runEffects(e2), false);\n}\nfunction runQueue(queue) {\n  for (let i2 = 0; i2 < queue.length; i2++)\n    runTop(queue[i2]);\n}\nfunction runUserEffects(queue) {\n  let i2, userLength = 0;\n  for (i2 = 0; i2 < queue.length; i2++) {\n    const e2 = queue[i2];\n    if (!e2.user)\n      runTop(e2);\n    else\n      queue[userLength++] = e2;\n  }\n  if (sharedConfig.context)\n    setHydrateContext();\n  for (i2 = 0; i2 < userLength; i2++)\n    runTop(queue[i2]);\n}\nfunction lookUpstream(node, ignore) {\n  const runningTransition = Transition$1;\n  node.state = 0;\n  for (let i2 = 0; i2 < node.sources.length; i2 += 1) {\n    const source = node.sources[i2];\n    if (source.sources) {\n      if (source.state === STALE || runningTransition) {\n        if (source !== ignore)\n          runTop(source);\n      } else if (source.state === PENDING || runningTransition)\n        lookUpstream(source, ignore);\n    }\n  }\n}\nfunction markDownstream(node) {\n  const runningTransition = Transition$1;\n  for (let i2 = 0; i2 < node.observers.length; i2 += 1) {\n    const o2 = node.observers[i2];\n    if (!o2.state || runningTransition) {\n      o2.state = PENDING;\n      if (o2.pure)\n        Updates.push(o2);\n      else\n        Effects.push(o2);\n      o2.observers && markDownstream(o2);\n    }\n  }\n}\nfunction cleanNode(node) {\n  let i2;\n  if (node.sources) {\n    while (node.sources.length) {\n      const source = node.sources.pop(), index = node.sourceSlots.pop(), obs = source.observers;\n      if (obs && obs.length) {\n        const n2 = obs.pop(), s2 = source.observerSlots.pop();\n        if (index < obs.length) {\n          n2.sourceSlots[s2] = index;\n          obs[index] = n2;\n          source.observerSlots[index] = s2;\n        }\n      }\n    }\n  }\n  if (node.owned) {\n    for (i2 = 0; i2 < node.owned.length; i2++)\n      cleanNode(node.owned[i2]);\n    node.owned = null;\n  }\n  if (node.cleanups) {\n    for (i2 = 0; i2 < node.cleanups.length; i2++)\n      node.cleanups[i2]();\n    node.cleanups = null;\n  }\n  node.state = 0;\n  node.context = null;\n}\nfunction castError(err) {\n  if (err instanceof Error || typeof err === \"string\")\n    return err;\n  return new Error(\"Unknown error\");\n}\nfunction handleError(err) {\n  err = castError(err);\n  throw err;\n}\nfunction lookup(owner, key) {\n  return owner ? owner.context && owner.context[key] !== void 0 ? owner.context[key] : lookup(owner.owner, key) : void 0;\n}\nfunction resolveChildren(children2) {\n  if (typeof children2 === \"function\" && !children2.length)\n    return resolveChildren(children2());\n  if (Array.isArray(children2)) {\n    const results = [];\n    for (let i2 = 0; i2 < children2.length; i2++) {\n      const result = resolveChildren(children2[i2]);\n      Array.isArray(result) ? results.push.apply(results, result) : results.push(result);\n    }\n    return results;\n  }\n  return children2;\n}\nfunction createProvider(id, options) {\n  return function provider(props) {\n    let res;\n    createRenderEffect(() => res = untrack(() => {\n      Owner.context = {\n        [id]: props.value\n      };\n      return children(() => props.children);\n    }), void 0);\n    return res;\n  };\n}\nconst FALLBACK = Symbol(\"fallback\");\nfunction dispose(d) {\n  for (let i2 = 0; i2 < d.length; i2++)\n    d[i2]();\n}\nfunction mapArray(list, mapFn, options = {}) {\n  let items = [], mapped = [], disposers = [], len = 0, indexes = mapFn.length > 1 ? [] : null;\n  onCleanup(() => dispose(disposers));\n  return () => {\n    let newItems = list() || [], i2, j;\n    newItems[$TRACK];\n    return untrack(() => {\n      let newLen = newItems.length, newIndices, newIndicesNext, temp, tempdisposers, tempIndexes, start, end, newEnd, item;\n      if (newLen === 0) {\n        if (len !== 0) {\n          dispose(disposers);\n          disposers = [];\n          items = [];\n          mapped = [];\n          len = 0;\n          indexes && (indexes = []);\n        }\n        if (options.fallback) {\n          items = [FALLBACK];\n          mapped[0] = createRoot((disposer) => {\n            disposers[0] = disposer;\n            return options.fallback();\n          });\n          len = 1;\n        }\n      } else if (len === 0) {\n        mapped = new Array(newLen);\n        for (j = 0; j < newLen; j++) {\n          items[j] = newItems[j];\n          mapped[j] = createRoot(mapper);\n        }\n        len = newLen;\n      } else {\n        temp = new Array(newLen);\n        tempdisposers = new Array(newLen);\n        indexes && (tempIndexes = new Array(newLen));\n        for (start = 0, end = Math.min(len, newLen); start < end && items[start] === newItems[start]; start++)\n          ;\n        for (end = len - 1, newEnd = newLen - 1; end >= start && newEnd >= start && items[end] === newItems[newEnd]; end--, newEnd--) {\n          temp[newEnd] = mapped[end];\n          tempdisposers[newEnd] = disposers[end];\n          indexes && (tempIndexes[newEnd] = indexes[end]);\n        }\n        newIndices = /* @__PURE__ */ new Map();\n        newIndicesNext = new Array(newEnd + 1);\n        for (j = newEnd; j >= start; j--) {\n          item = newItems[j];\n          i2 = newIndices.get(item);\n          newIndicesNext[j] = i2 === void 0 ? -1 : i2;\n          newIndices.set(item, j);\n        }\n        for (i2 = start; i2 <= end; i2++) {\n          item = items[i2];\n          j = newIndices.get(item);\n          if (j !== void 0 && j !== -1) {\n            temp[j] = mapped[i2];\n            tempdisposers[j] = disposers[i2];\n            indexes && (tempIndexes[j] = indexes[i2]);\n            j = newIndicesNext[j];\n            newIndices.set(item, j);\n          } else\n            disposers[i2]();\n        }\n        for (j = start; j < newLen; j++) {\n          if (j in temp) {\n            mapped[j] = temp[j];\n            disposers[j] = tempdisposers[j];\n            if (indexes) {\n              indexes[j] = tempIndexes[j];\n              indexes[j](j);\n            }\n          } else\n            mapped[j] = createRoot(mapper);\n        }\n        mapped = mapped.slice(0, len = newLen);\n        items = newItems.slice(0);\n      }\n      return mapped;\n    });\n    function mapper(disposer) {\n      disposers[j] = disposer;\n      if (indexes) {\n        const [s2, set] = createSignal(j);\n        indexes[j] = set;\n        return mapFn(newItems[j], s2);\n      }\n      return mapFn(newItems[j]);\n    }\n  };\n}\nfunction createComponent(Comp, props) {\n  return untrack(() => Comp(props || {}));\n}\nfunction trueFn() {\n  return true;\n}\nconst propTraps = {\n  get(_, property, receiver) {\n    if (property === $PROXY)\n      return receiver;\n    return _.get(property);\n  },\n  has(_, property) {\n    if (property === $PROXY)\n      return true;\n    return _.has(property);\n  },\n  set: trueFn,\n  deleteProperty: trueFn,\n  getOwnPropertyDescriptor(_, property) {\n    return {\n      configurable: true,\n      enumerable: true,\n      get() {\n        return _.get(property);\n      },\n      set: trueFn,\n      deleteProperty: trueFn\n    };\n  },\n  ownKeys(_) {\n    return _.keys();\n  }\n};\nfunction resolveSource(s2) {\n  return !(s2 = typeof s2 === \"function\" ? s2() : s2) ? {} : s2;\n}\nfunction mergeProps(...sources) {\n  let proxy = false;\n  for (let i2 = 0; i2 < sources.length; i2++) {\n    const s2 = sources[i2];\n    proxy = proxy || !!s2 && $PROXY in s2;\n    sources[i2] = typeof s2 === \"function\" ? (proxy = true, createMemo(s2)) : s2;\n  }\n  if (proxy) {\n    return new Proxy({\n      get(property) {\n        for (let i2 = sources.length - 1; i2 >= 0; i2--) {\n          const v = resolveSource(sources[i2])[property];\n          if (v !== void 0)\n            return v;\n        }\n      },\n      has(property) {\n        for (let i2 = sources.length - 1; i2 >= 0; i2--) {\n          if (property in resolveSource(sources[i2]))\n            return true;\n        }\n        return false;\n      },\n      keys() {\n        const keys = [];\n        for (let i2 = 0; i2 < sources.length; i2++)\n          keys.push(...Object.keys(resolveSource(sources[i2])));\n        return [...new Set(keys)];\n      }\n    }, propTraps);\n  }\n  const target = {};\n  for (let i2 = sources.length - 1; i2 >= 0; i2--) {\n    if (sources[i2]) {\n      const descriptors = Object.getOwnPropertyDescriptors(sources[i2]);\n      for (const key in descriptors) {\n        if (key in target)\n          continue;\n        Object.defineProperty(target, key, {\n          enumerable: true,\n          get() {\n            for (let i3 = sources.length - 1; i3 >= 0; i3--) {\n              const v = (sources[i3] || {})[key];\n              if (v !== void 0)\n                return v;\n            }\n          }\n        });\n      }\n    }\n  }\n  return target;\n}\nfunction splitProps(props, ...keys) {\n  const blocked = new Set(keys.flat());\n  if ($PROXY in props) {\n    const res = keys.map((k) => {\n      return new Proxy({\n        get(property) {\n          return k.includes(property) ? props[property] : void 0;\n        },\n        has(property) {\n          return k.includes(property) && property in props;\n        },\n        keys() {\n          return k.filter((property) => property in props);\n        }\n      }, propTraps);\n    });\n    res.push(new Proxy({\n      get(property) {\n        return blocked.has(property) ? void 0 : props[property];\n      },\n      has(property) {\n        return blocked.has(property) ? false : property in props;\n      },\n      keys() {\n        return Object.keys(props).filter((k) => !blocked.has(k));\n      }\n    }, propTraps));\n    return res;\n  }\n  const descriptors = Object.getOwnPropertyDescriptors(props);\n  keys.push(Object.keys(descriptors).filter((k) => !blocked.has(k)));\n  return keys.map((k) => {\n    const clone = {};\n    for (let i2 = 0; i2 < k.length; i2++) {\n      const key = k[i2];\n      if (!(key in props))\n        continue;\n      Object.defineProperty(clone, key, descriptors[key] ? descriptors[key] : {\n        get() {\n          return props[key];\n        },\n        set() {\n          return true;\n        },\n        enumerable: true\n      });\n    }\n    return clone;\n  });\n}\nfunction For(props) {\n  const fallback = \"fallback\" in props && {\n    fallback: () => props.fallback\n  };\n  return createMemo(mapArray(() => props.each, props.children, fallback || void 0));\n}\nfunction Show(props) {\n  let strictEqual = false;\n  const keyed = props.keyed;\n  const condition = createMemo(() => props.when, void 0, {\n    equals: (a2, b) => strictEqual ? a2 === b : !a2 === !b\n  });\n  return createMemo(() => {\n    const c2 = condition();\n    if (c2) {\n      const child = props.children;\n      const fn = typeof child === \"function\" && child.length > 0;\n      strictEqual = keyed || fn;\n      return fn ? untrack(() => child(c2)) : child;\n    }\n    return props.fallback;\n  }, void 0, void 0);\n}\nfunction Switch(props) {\n  let strictEqual = false;\n  let keyed = false;\n  const equals = (a2, b) => a2[0] === b[0] && (strictEqual ? a2[1] === b[1] : !a2[1] === !b[1]) && a2[2] === b[2];\n  const conditions = children(() => props.children), evalConditions = createMemo(() => {\n    let conds = conditions();\n    if (!Array.isArray(conds))\n      conds = [conds];\n    for (let i2 = 0; i2 < conds.length; i2++) {\n      const c2 = conds[i2].when;\n      if (c2) {\n        keyed = !!conds[i2].keyed;\n        return [i2, c2, conds[i2]];\n      }\n    }\n    return [-1];\n  }, void 0, {\n    equals\n  });\n  return createMemo(() => {\n    const [index, when, cond] = evalConditions();\n    if (index < 0)\n      return props.fallback;\n    const c2 = cond.children;\n    const fn = typeof c2 === \"function\" && c2.length > 0;\n    strictEqual = keyed || fn;\n    return fn ? untrack(() => c2(when)) : c2;\n  }, void 0, void 0);\n}\nfunction Match(props) {\n  return props;\n}\nconst booleans = [\"allowfullscreen\", \"async\", \"autofocus\", \"autoplay\", \"checked\", \"controls\", \"default\", \"disabled\", \"formnovalidate\", \"hidden\", \"indeterminate\", \"ismap\", \"loop\", \"multiple\", \"muted\", \"nomodule\", \"novalidate\", \"open\", \"playsinline\", \"readonly\", \"required\", \"reversed\", \"seamless\", \"selected\"];\nconst Properties = /* @__PURE__ */ new Set([\"className\", \"value\", \"readOnly\", \"formNoValidate\", \"isMap\", \"noModule\", \"playsInline\", ...booleans]);\nconst ChildProperties = /* @__PURE__ */ new Set([\"innerHTML\", \"textContent\", \"innerText\", \"children\"]);\nconst Aliases = /* @__PURE__ */ Object.assign(/* @__PURE__ */ Object.create(null), {\n  className: \"class\",\n  htmlFor: \"for\"\n});\nconst PropAliases = /* @__PURE__ */ Object.assign(/* @__PURE__ */ Object.create(null), {\n  class: \"className\",\n  formnovalidate: \"formNoValidate\",\n  ismap: \"isMap\",\n  nomodule: \"noModule\",\n  playsinline: \"playsInline\",\n  readonly: \"readOnly\"\n});\nconst DelegatedEvents = /* @__PURE__ */ new Set([\"beforeinput\", \"click\", \"dblclick\", \"contextmenu\", \"focusin\", \"focusout\", \"input\", \"keydown\", \"keyup\", \"mousedown\", \"mousemove\", \"mouseout\", \"mouseover\", \"mouseup\", \"pointerdown\", \"pointermove\", \"pointerout\", \"pointerover\", \"pointerup\", \"touchend\", \"touchmove\", \"touchstart\"]);\nconst SVGElements = /* @__PURE__ */ new Set([\n  \"altGlyph\",\n  \"altGlyphDef\",\n  \"altGlyphItem\",\n  \"animate\",\n  \"animateColor\",\n  \"animateMotion\",\n  \"animateTransform\",\n  \"circle\",\n  \"clipPath\",\n  \"color-profile\",\n  \"cursor\",\n  \"defs\",\n  \"desc\",\n  \"ellipse\",\n  \"feBlend\",\n  \"feColorMatrix\",\n  \"feComponentTransfer\",\n  \"feComposite\",\n  \"feConvolveMatrix\",\n  \"feDiffuseLighting\",\n  \"feDisplacementMap\",\n  \"feDistantLight\",\n  \"feFlood\",\n  \"feFuncA\",\n  \"feFuncB\",\n  \"feFuncG\",\n  \"feFuncR\",\n  \"feGaussianBlur\",\n  \"feImage\",\n  \"feMerge\",\n  \"feMergeNode\",\n  \"feMorphology\",\n  \"feOffset\",\n  \"fePointLight\",\n  \"feSpecularLighting\",\n  \"feSpotLight\",\n  \"feTile\",\n  \"feTurbulence\",\n  \"filter\",\n  \"font\",\n  \"font-face\",\n  \"font-face-format\",\n  \"font-face-name\",\n  \"font-face-src\",\n  \"font-face-uri\",\n  \"foreignObject\",\n  \"g\",\n  \"glyph\",\n  \"glyphRef\",\n  \"hkern\",\n  \"image\",\n  \"line\",\n  \"linearGradient\",\n  \"marker\",\n  \"mask\",\n  \"metadata\",\n  \"missing-glyph\",\n  \"mpath\",\n  \"path\",\n  \"pattern\",\n  \"polygon\",\n  \"polyline\",\n  \"radialGradient\",\n  \"rect\",\n  \"set\",\n  \"stop\",\n  \"svg\",\n  \"switch\",\n  \"symbol\",\n  \"text\",\n  \"textPath\",\n  \"tref\",\n  \"tspan\",\n  \"use\",\n  \"view\",\n  \"vkern\"\n]);\nconst SVGNamespace = {\n  xlink: \"http://www.w3.org/1999/xlink\",\n  xml: \"http://www.w3.org/XML/1998/namespace\"\n};\nfunction reconcileArrays(parentNode, a2, b) {\n  let bLength = b.length, aEnd = a2.length, bEnd = bLength, aStart = 0, bStart = 0, after = a2[aEnd - 1].nextSibling, map = null;\n  while (aStart < aEnd || bStart < bEnd) {\n    if (a2[aStart] === b[bStart]) {\n      aStart++;\n      bStart++;\n      continue;\n    }\n    while (a2[aEnd - 1] === b[bEnd - 1]) {\n      aEnd--;\n      bEnd--;\n    }\n    if (aEnd === aStart) {\n      const node = bEnd < bLength ? bStart ? b[bStart - 1].nextSibling : b[bEnd - bStart] : after;\n      while (bStart < bEnd)\n        parentNode.insertBefore(b[bStart++], node);\n    } else if (bEnd === bStart) {\n      while (aStart < aEnd) {\n        if (!map || !map.has(a2[aStart]))\n          a2[aStart].remove();\n        aStart++;\n      }\n    } else if (a2[aStart] === b[bEnd - 1] && b[bStart] === a2[aEnd - 1]) {\n      const node = a2[--aEnd].nextSibling;\n      parentNode.insertBefore(b[bStart++], a2[aStart++].nextSibling);\n      parentNode.insertBefore(b[--bEnd], node);\n      a2[aEnd] = b[bEnd];\n    } else {\n      if (!map) {\n        map = /* @__PURE__ */ new Map();\n        let i2 = bStart;\n        while (i2 < bEnd)\n          map.set(b[i2], i2++);\n      }\n      const index = map.get(a2[aStart]);\n      if (index != null) {\n        if (bStart < index && index < bEnd) {\n          let i2 = aStart, sequence = 1, t2;\n          while (++i2 < aEnd && i2 < bEnd) {\n            if ((t2 = map.get(a2[i2])) == null || t2 !== index + sequence)\n              break;\n            sequence++;\n          }\n          if (sequence > index - bStart) {\n            const node = a2[aStart];\n            while (bStart < index)\n              parentNode.insertBefore(b[bStart++], node);\n          } else\n            parentNode.replaceChild(b[bStart++], a2[aStart++]);\n        } else\n          aStart++;\n      } else\n        a2[aStart++].remove();\n    }\n  }\n}\nconst $$EVENTS = \"_$DX_DELEGATE\";\nfunction render(code, element, init, options = {}) {\n  let disposer;\n  createRoot((dispose2) => {\n    disposer = dispose2;\n    element === document ? code() : insert(element, code(), element.firstChild ? null : void 0, init);\n  }, options.owner);\n  return () => {\n    disposer();\n    element.textContent = \"\";\n  };\n}\nfunction template$1(html, check, isSVG) {\n  if (typeof window === 'undefined') {\n    return null;\n  }\n\n  const t2 = document.createElement(\"template\");\n  t2.innerHTML = html;\n  let node = t2.content.firstChild;\n  if (isSVG)\n    node = node.firstChild;\n  return node;\n}\nfunction delegateEvents(eventNames, document2 = window.document) {\n  const e2 = document2[$$EVENTS] || (document2[$$EVENTS] = /* @__PURE__ */ new Set());\n  for (let i2 = 0, l2 = eventNames.length; i2 < l2; i2++) {\n    const name = eventNames[i2];\n    if (!e2.has(name)) {\n      e2.add(name);\n      document2.addEventListener(name, eventHandler);\n    }\n  }\n}\nfunction setAttribute(node, name, value) {\n  if (value == null)\n    node.removeAttribute(name);\n  else\n    node.setAttribute(name, value);\n}\nfunction setAttributeNS(node, namespace, name, value) {\n  if (value == null)\n    node.removeAttributeNS(namespace, name);\n  else\n    node.setAttributeNS(namespace, name, value);\n}\nfunction className(node, value) {\n  if (value == null)\n    node.removeAttribute(\"class\");\n  else\n    node.className = value;\n}\nfunction addEventListener(node, name, handler, delegate) {\n  if (delegate) {\n    if (Array.isArray(handler)) {\n      node[`$$${name}`] = handler[0];\n      node[`$$${name}Data`] = handler[1];\n    } else\n      node[`$$${name}`] = handler;\n  } else if (Array.isArray(handler)) {\n    const handlerFn = handler[0];\n    node.addEventListener(name, handler[0] = (e2) => handlerFn.call(node, handler[1], e2));\n  } else\n    node.addEventListener(name, handler);\n}\nfunction classList(node, value, prev = {}) {\n  const classKeys = Object.keys(value || {}), prevKeys = Object.keys(prev);\n  let i2, len;\n  for (i2 = 0, len = prevKeys.length; i2 < len; i2++) {\n    const key = prevKeys[i2];\n    if (!key || key === \"undefined\" || value[key])\n      continue;\n    toggleClassKey(node, key, false);\n    delete prev[key];\n  }\n  for (i2 = 0, len = classKeys.length; i2 < len; i2++) {\n    const key = classKeys[i2], classValue = !!value[key];\n    if (!key || key === \"undefined\" || prev[key] === classValue || !classValue)\n      continue;\n    toggleClassKey(node, key, true);\n    prev[key] = classValue;\n  }\n  return prev;\n}\nfunction style(node, value, prev) {\n  if (!value)\n    return prev ? setAttribute(node, \"style\") : value;\n  const nodeStyle = node.style;\n  if (typeof value === \"string\")\n    return nodeStyle.cssText = value;\n  typeof prev === \"string\" && (nodeStyle.cssText = prev = void 0);\n  prev || (prev = {});\n  value || (value = {});\n  let v, s2;\n  for (s2 in prev) {\n    value[s2] == null && nodeStyle.removeProperty(s2);\n    delete prev[s2];\n  }\n  for (s2 in value) {\n    v = value[s2];\n    if (v !== prev[s2]) {\n      nodeStyle.setProperty(s2, v);\n      prev[s2] = v;\n    }\n  }\n  return prev;\n}\nfunction spread(node, props = {}, isSVG, skipChildren) {\n  const prevProps = {};\n  if (!skipChildren) {\n    createRenderEffect(() => prevProps.children = insertExpression(node, props.children, prevProps.children));\n  }\n  createRenderEffect(() => props.ref && props.ref(node));\n  createRenderEffect(() => assign(node, props, isSVG, true, prevProps, true));\n  return prevProps;\n}\nfunction use(fn, element, arg) {\n  return untrack(() => fn(element, arg));\n}\nfunction insert(parent, accessor, marker, initial) {\n  if (marker !== void 0 && !initial)\n    initial = [];\n  if (typeof accessor !== \"function\")\n    return insertExpression(parent, accessor, initial, marker);\n  createRenderEffect((current) => insertExpression(parent, accessor(), current, marker), initial);\n}\nfunction assign(node, props, isSVG, skipChildren, prevProps = {}, skipRef = false) {\n  props || (props = {});\n  for (const prop in prevProps) {\n    if (!(prop in props)) {\n      if (prop === \"children\")\n        continue;\n      prevProps[prop] = assignProp(node, prop, null, prevProps[prop], isSVG, skipRef);\n    }\n  }\n  for (const prop in props) {\n    if (prop === \"children\") {\n      if (!skipChildren)\n        insertExpression(node, props.children);\n      continue;\n    }\n    const value = props[prop];\n    prevProps[prop] = assignProp(node, prop, value, prevProps[prop], isSVG, skipRef);\n  }\n}\nfunction getNextElement(template2) {\n  let node, key;\n  if (!sharedConfig.context || !(node = sharedConfig.registry.get(key = getHydrationKey()))) {\n    return template2.cloneNode(true);\n  }\n  if (sharedConfig.completed)\n    sharedConfig.completed.add(node);\n  sharedConfig.registry.delete(key);\n  return node;\n}\nfunction toPropertyName(name) {\n  return name.toLowerCase().replace(/-([a-z])/g, (_, w) => w.toUpperCase());\n}\nfunction toggleClassKey(node, key, value) {\n  const classNames = key.trim().split(/\\s+/);\n  for (let i2 = 0, nameLen = classNames.length; i2 < nameLen; i2++)\n    node.classList.toggle(classNames[i2], value);\n}\nfunction assignProp(node, prop, value, prev, isSVG, skipRef) {\n  let isCE, isProp, isChildProp;\n  if (prop === \"style\")\n    return style(node, value, prev);\n  if (prop === \"classList\")\n    return classList(node, value, prev);\n  if (value === prev)\n    return prev;\n  if (prop === \"ref\") {\n    if (!skipRef)\n      value(node);\n  } else if (prop.slice(0, 3) === \"on:\") {\n    const e2 = prop.slice(3);\n    prev && node.removeEventListener(e2, prev);\n    value && node.addEventListener(e2, value);\n  } else if (prop.slice(0, 10) === \"oncapture:\") {\n    const e2 = prop.slice(10);\n    prev && node.removeEventListener(e2, prev, true);\n    value && node.addEventListener(e2, value, true);\n  } else if (prop.slice(0, 2) === \"on\") {\n    const name = prop.slice(2).toLowerCase();\n    const delegate = DelegatedEvents.has(name);\n    if (!delegate && prev) {\n      const h2 = Array.isArray(prev) ? prev[0] : prev;\n      node.removeEventListener(name, h2);\n    }\n    if (delegate || value) {\n      addEventListener(node, name, value, delegate);\n      delegate && delegateEvents([name]);\n    }\n  } else if ((isChildProp = ChildProperties.has(prop)) || !isSVG && (PropAliases[prop] || (isProp = Properties.has(prop))) || (isCE = node.nodeName.includes(\"-\"))) {\n    if (prop === \"class\" || prop === \"className\")\n      className(node, value);\n    else if (isCE && !isProp && !isChildProp)\n      node[toPropertyName(prop)] = value;\n    else\n      node[PropAliases[prop] || prop] = value;\n  } else {\n    const ns = isSVG && prop.indexOf(\":\") > -1 && SVGNamespace[prop.split(\":\")[0]];\n    if (ns)\n      setAttributeNS(node, ns, prop, value);\n    else\n      setAttribute(node, Aliases[prop] || prop, value);\n  }\n  return value;\n}\nfunction eventHandler(e2) {\n  const key = `$$${e2.type}`;\n  let node = e2.composedPath && e2.composedPath()[0] || e2.target;\n  if (e2.target !== node) {\n    Object.defineProperty(e2, \"target\", {\n      configurable: true,\n      value: node\n    });\n  }\n  Object.defineProperty(e2, \"currentTarget\", {\n    configurable: true,\n    get() {\n      return node || document;\n    }\n  });\n  if (sharedConfig.registry && !sharedConfig.done) {\n    sharedConfig.done = true;\n    document.querySelectorAll(\"[id^=pl-]\").forEach((elem) => {\n      while (elem && elem.nodeType !== 8 && elem.nodeValue !== \"pl-\" + e2) {\n        let x = elem.nextSibling;\n        elem.remove();\n        elem = x;\n      }\n      elem && elem.remove();\n    });\n  }\n  while (node) {\n    const handler = node[key];\n    if (handler && !node.disabled) {\n      const data = node[`${key}Data`];\n      data !== void 0 ? handler.call(node, data, e2) : handler.call(node, e2);\n      if (e2.cancelBubble)\n        return;\n    }\n    node = node._$host || node.parentNode || node.host;\n  }\n}\nfunction insertExpression(parent, value, current, marker, unwrapArray) {\n  if (sharedConfig.context && !current)\n    current = [...parent.childNodes];\n  while (typeof current === \"function\")\n    current = current();\n  if (value === current)\n    return current;\n  const t2 = typeof value, multi = marker !== void 0;\n  parent = multi && current[0] && current[0].parentNode || parent;\n  if (t2 === \"string\" || t2 === \"number\") {\n    if (sharedConfig.context)\n      return current;\n    if (t2 === \"number\")\n      value = value.toString();\n    if (multi) {\n      let node = current[0];\n      if (node && node.nodeType === 3) {\n        node.data = value;\n      } else\n        node = document.createTextNode(value);\n      current = cleanChildren(parent, current, marker, node);\n    } else {\n      if (current !== \"\" && typeof current === \"string\") {\n        current = parent.firstChild.data = value;\n      } else\n        current = parent.textContent = value;\n    }\n  } else if (value == null || t2 === \"boolean\") {\n    if (sharedConfig.context)\n      return current;\n    current = cleanChildren(parent, current, marker);\n  } else if (t2 === \"function\") {\n    createRenderEffect(() => {\n      let v = value();\n      while (typeof v === \"function\")\n        v = v();\n      current = insertExpression(parent, v, current, marker);\n    });\n    return () => current;\n  } else if (Array.isArray(value)) {\n    const array = [];\n    const currentArray = current && Array.isArray(current);\n    if (normalizeIncomingArray(array, value, current, unwrapArray)) {\n      createRenderEffect(() => current = insertExpression(parent, array, current, marker, true));\n      return () => current;\n    }\n    if (sharedConfig.context) {\n      if (!array.length)\n        return current;\n      for (let i2 = 0; i2 < array.length; i2++) {\n        if (array[i2].parentNode)\n          return current = array;\n      }\n    }\n    if (array.length === 0) {\n      current = cleanChildren(parent, current, marker);\n      if (multi)\n        return current;\n    } else if (currentArray) {\n      if (current.length === 0) {\n        appendNodes(parent, array, marker);\n      } else\n        reconcileArrays(parent, current, array);\n    } else {\n      current && cleanChildren(parent);\n      appendNodes(parent, array);\n    }\n    current = array;\n  } else if (value instanceof Node) {\n    if (sharedConfig.context && value.parentNode)\n      return current = multi ? [value] : value;\n    if (Array.isArray(current)) {\n      if (multi)\n        return current = cleanChildren(parent, current, marker, value);\n      cleanChildren(parent, current, null, value);\n    } else if (current == null || current === \"\" || !parent.firstChild) {\n      parent.appendChild(value);\n    } else\n      parent.replaceChild(value, parent.firstChild);\n    current = value;\n  } else\n    ;\n  return current;\n}\nfunction normalizeIncomingArray(normalized, array, current, unwrap2) {\n  let dynamic = false;\n  for (let i2 = 0, len = array.length; i2 < len; i2++) {\n    let item = array[i2], prev = current && current[i2];\n    if (item instanceof Node) {\n      normalized.push(item);\n    } else if (item == null || item === true || item === false)\n      ;\n    else if (Array.isArray(item)) {\n      dynamic = normalizeIncomingArray(normalized, item, prev) || dynamic;\n    } else if (typeof item === \"function\") {\n      if (unwrap2) {\n        while (typeof item === \"function\")\n          item = item();\n        dynamic = normalizeIncomingArray(normalized, Array.isArray(item) ? item : [item], Array.isArray(prev) ? prev : [prev]) || dynamic;\n      } else {\n        normalized.push(item);\n        dynamic = true;\n      }\n    } else {\n      const value = String(item);\n      if (prev && prev.nodeType === 3 && prev.data === value) {\n        normalized.push(prev);\n      } else\n        normalized.push(document.createTextNode(value));\n    }\n  }\n  return dynamic;\n}\nfunction appendNodes(parent, array, marker = null) {\n  for (let i2 = 0, len = array.length; i2 < len; i2++)\n    parent.insertBefore(array[i2], marker);\n}\nfunction cleanChildren(parent, current, marker, replacement) {\n  if (marker === void 0)\n    return parent.textContent = \"\";\n  const node = replacement || document.createTextNode(\"\");\n  if (current.length) {\n    let inserted = false;\n    for (let i2 = current.length - 1; i2 >= 0; i2--) {\n      const el = current[i2];\n      if (node !== el) {\n        const isParent = el.parentNode === parent;\n        if (!inserted && !i2)\n          isParent ? parent.replaceChild(node, el) : parent.insertBefore(node, marker);\n        else\n          isParent && el.remove();\n      } else\n        inserted = true;\n    }\n  } else\n    parent.insertBefore(node, marker);\n  return [node];\n}\nfunction getHydrationKey() {\n  const hydrate = sharedConfig.context;\n  return `${hydrate.id}${hydrate.count++}`;\n}\nconst SVG_NAMESPACE = \"http://www.w3.org/2000/svg\";\nfunction createElement(tagName, isSVG = false) {\n  return isSVG ? document.createElementNS(SVG_NAMESPACE, tagName) : document.createElement(tagName);\n}\nfunction Portal(props) {\n  const {\n    useShadow\n  } = props, marker = document.createTextNode(\"\"), mount = props.mount || document.body;\n  function renderPortal() {\n    if (sharedConfig.context) {\n      const [s2, set] = createSignal(false);\n      queueMicrotask(() => set(true));\n      return () => s2() && props.children;\n    } else\n      return () => props.children;\n  }\n  if (mount instanceof HTMLHeadElement) {\n    const [clean, setClean] = createSignal(false);\n    const cleanup = () => setClean(true);\n    createRoot((dispose2) => insert(mount, () => !clean() ? renderPortal()() : dispose2(), null));\n    onCleanup(() => {\n      if (sharedConfig.context)\n        queueMicrotask(cleanup);\n      else\n        cleanup();\n    });\n  } else {\n    const container = createElement(props.isSVG ? \"g\" : \"div\", props.isSVG), renderRoot = useShadow && container.attachShadow ? container.attachShadow({\n      mode: \"open\"\n    }) : container;\n    Object.defineProperty(container, \"_$host\", {\n      get() {\n        return marker.parentNode;\n      },\n      configurable: true\n    });\n    insert(renderRoot, renderPortal());\n    mount.appendChild(container);\n    props.ref && props.ref(container);\n    onCleanup(() => mount.removeChild(container));\n  }\n  return marker;\n}\nfunction Dynamic(props) {\n  const [p2, others] = splitProps(props, [\"component\"]);\n  const cached = createMemo(() => p2.component);\n  return createMemo(() => {\n    const component = cached();\n    switch (typeof component) {\n      case \"function\":\n        return untrack(() => component(others));\n      case \"string\":\n        const isSvg = SVGElements.has(component);\n        const el = sharedConfig.context ? getNextElement() : createElement(component, isSvg);\n        spread(el, others, isSvg);\n        return el;\n    }\n  });\n}\nvar THEME = /* @__PURE__ */ ((THEME2) => {\n  THEME2[\"DARK\"] = \"DARK\";\n  THEME2[\"LIGHT\"] = \"LIGHT\";\n  return THEME2;\n})(THEME || {});\nlet e = { data: \"\" }, t = (t2) => \"object\" == typeof window ? ((t2 ? t2.querySelector(\"#_goober\") : window._goober) || Object.assign((t2 || document.head).appendChild(document.createElement(\"style\")), { innerHTML: \" \", id: \"_goober\" })).firstChild : t2 || e, l = /(?:([\\u0080-\\uFFFF\\w-%@]+) *:? *([^{;]+?);|([^;}{]*?) *{)|(}\\s*)/g, a = /\\/\\*[^]*?\\*\\/|  +/g, n = /\\n+/g, o = (e2, t2) => {\n  let r = \"\", l2 = \"\", a2 = \"\";\n  for (let n2 in e2) {\n    let c2 = e2[n2];\n    \"@\" == n2[0] ? \"i\" == n2[1] ? r = n2 + \" \" + c2 + \";\" : l2 += \"f\" == n2[1] ? o(c2, n2) : n2 + \"{\" + o(c2, \"k\" == n2[1] ? \"\" : t2) + \"}\" : \"object\" == typeof c2 ? l2 += o(c2, t2 ? t2.replace(/([^,])+/g, (e3) => n2.replace(/(^:.*)|([^,])+/g, (t3) => /&/.test(t3) ? t3.replace(/&/g, e3) : e3 ? e3 + \" \" + t3 : t3)) : n2) : null != c2 && (n2 = /^--/.test(n2) ? n2 : n2.replace(/[A-Z]/g, \"-$&\").toLowerCase(), a2 += o.p ? o.p(n2, c2) : n2 + \":\" + c2 + \";\");\n  }\n  return r + (t2 && a2 ? t2 + \"{\" + a2 + \"}\" : a2) + l2;\n}, c = {}, s = (e2) => {\n  if (\"object\" == typeof e2) {\n    let t2 = \"\";\n    for (let r in e2)\n      t2 += r + s(e2[r]);\n    return t2;\n  }\n  return e2;\n}, i = (e2, t2, r, i2, p2) => {\n  let u2 = s(e2), d = c[u2] || (c[u2] = ((e3) => {\n    let t3 = 0, r2 = 11;\n    for (; t3 < e3.length; )\n      r2 = 101 * r2 + e3.charCodeAt(t3++) >>> 0;\n    return \"go\" + r2;\n  })(u2));\n  if (!c[d]) {\n    let t3 = u2 !== e2 ? e2 : ((e3) => {\n      let t4, r2, o2 = [{}];\n      for (; t4 = l.exec(e3.replace(a, \"\")); )\n        t4[4] ? o2.shift() : t4[3] ? (r2 = t4[3].replace(n, \" \").trim(), o2.unshift(o2[0][r2] = o2[0][r2] || {})) : o2[0][t4[1]] = t4[2].replace(n, \" \").trim();\n      return o2[0];\n    })(e2);\n    c[d] = o(p2 ? { [\"@keyframes \" + d]: t3 } : t3, r ? \"\" : \".\" + d);\n  }\n  let f = r && c.g ? c.g : null;\n  return r && (c.g = c[d]), ((e3, t3, r2, l2) => {\n    l2 ? t3.data = t3.data.replace(l2, e3) : -1 === t3.data.indexOf(e3) && (t3.data = r2 ? e3 + t3.data : t3.data + e3);\n  })(c[d], t2, i2, f), d;\n}, p = (e2, t2, r) => e2.reduce((e3, l2, a2) => {\n  let n2 = t2[a2];\n  if (n2 && n2.call) {\n    let e4 = n2(r), t3 = e4 && e4.props && e4.props.className || /^go/.test(e4) && e4;\n    n2 = t3 ? \".\" + t3 : e4 && \"object\" == typeof e4 ? e4.props ? \"\" : o(e4, \"\") : false === e4 ? \"\" : e4;\n  }\n  return e3 + l2 + (null == n2 ? \"\" : n2);\n}, \"\");\nfunction u(e2) {\n  let r = this || {}, l2 = e2.call ? e2(r.p) : e2;\n  return i(l2.unshift ? l2.raw ? p(l2, [].slice.call(arguments, 1), r.p) : l2.reduce((e3, t2) => Object.assign(e3, t2 && t2.call ? t2(r.p) : t2), {}) : l2, t(r.target), r.g, r.o, r.k);\n}\nu.bind({ g: 1 });\nlet h = u.bind({ k: 1 });\nconst ThemeContext = createContext();\nfunction ThemeProvider(props) {\n  return createComponent(ThemeContext.Provider, {\n    value: props.theme,\n    get children() {\n      return props.children;\n    }\n  });\n}\nfunction useTheme() {\n  return useContext(ThemeContext);\n}\nfunction makeStyled(tag) {\n  let _ctx = this || {};\n  return (...args) => {\n    const Styled = (props) => {\n      const theme = useContext(ThemeContext);\n      const withTheme = mergeProps(props, { theme });\n      const clone = mergeProps(withTheme, {\n        get class() {\n          const pClass = withTheme.class, append = \"class\" in withTheme && /^go[0-9]+/.test(pClass);\n          let className2 = u.apply(\n            { target: _ctx.target, o: append, p: withTheme, g: _ctx.g },\n            args\n          );\n          return [pClass, className2].filter(Boolean).join(\" \");\n        }\n      });\n      const [local, newProps] = splitProps(clone, [\"as\", \"theme\"]);\n      const htmlProps = newProps;\n      const createTag = local.as || tag;\n      let el;\n      if (typeof createTag === \"function\") {\n        el = createTag(htmlProps);\n      } else {\n        {\n          if (_ctx.g == 1) {\n            el = document.createElement(createTag);\n            spread(el, htmlProps);\n          } else {\n            el = Dynamic(mergeProps({ component: createTag }, htmlProps));\n          }\n        }\n      }\n      return el;\n    };\n    Styled.class = (props) => {\n      return untrack(() => {\n        return u.apply({ target: _ctx.target, p: props, g: _ctx.g }, args);\n      });\n    };\n    return Styled;\n  };\n}\nconst styled = new Proxy(makeStyled, {\n  get(target, tag) {\n    return target(tag);\n  }\n});\nfunction createGlobalStyles() {\n  const fn = makeStyled.call({ g: 1 }, \"div\").apply(null, arguments);\n  return function GlobalStyles2(props) {\n    fn(props);\n    return null;\n  };\n}\nconst globalStylesTag = \"tc-root\";\nconst disableScrollClass = \"tc-disable-scroll\";\nconst usingMouseClass = \"tc-using-mouse\";\nconst GlobalStyles = () => {\n  document.body.addEventListener(\"mousedown\", () => document.body.classList.add(usingMouseClass));\n  document.body.addEventListener(\"keydown\", (event) => {\n    if (event.key === \"Tab\") {\n      document.body.classList.remove(usingMouseClass);\n    }\n  });\n  const Styles = createGlobalStyles`\n    ${globalStylesTag} * {\n        margin: 0;\n        padding: 0;\n        box-sizing: border-box;\n        \n        font-family: -apple-system, BlinkMacSystemFont, 'Roboto', 'Helvetica Neue', Arial, Tahoma, Verdana, sans-serif;\n        -webkit-font-smoothing: antialiased;\n        -moz-osx-font-smoothing: grayscale;        \n        -webkit-tap-highlight-color: transparent;\n    }\n    \n    ${globalStylesTag} img {\n      -webkit-user-select: none;\n      -webkit-touch-callout: none;\n    }   \n \n    ${globalStylesTag} *:focus {\n        outline: #08f auto 2px;\n    }\n    \n    ${globalStylesTag} li {\n        list-style: none;\n    }\n    \n    ${globalStylesTag} button {\n        outline: none;\n    }\n    \n    body.${disableScrollClass} {\n        position: fixed; \n        overflow-y: scroll;\n        right: 0;\n        left: 0;\n    }\n    \n    body.${usingMouseClass} ${globalStylesTag} *:focus {\n        outline: none;\n    }\n`;\n  return createComponent(Styles, {});\n};\nfunction hexToRgb(hex) {\n  if (hex[0] === \"#\") {\n    hex = hex.slice(1);\n  }\n  const bigint = parseInt(hex, 16);\n  const r = bigint >> 16 & 255;\n  const g = bigint >> 8 & 255;\n  const b = bigint & 255;\n  return [r, g, b].join(\",\");\n}\nfunction rgba(color, opacity) {\n  if (color[0] === \"#\") {\n    color = hexToRgb(color);\n  }\n  return `rgba(${color}, ${opacity})`;\n}\nfunction toPx(value) {\n  return value.toString() + \"px\";\n}\nconst _InMemoryStorage = class {\n  constructor() {\n    __publicField(this, \"storage\", {});\n  }\n  static getInstance() {\n    if (!_InMemoryStorage.instance) {\n      _InMemoryStorage.instance = new _InMemoryStorage();\n    }\n    return _InMemoryStorage.instance;\n  }\n  get length() {\n    return Object.keys(this.storage).length;\n  }\n  clear() {\n    this.storage = {};\n  }\n  getItem(key) {\n    var _a2;\n    return (_a2 = this.storage[key]) != null ? _a2 : null;\n  }\n  key(index) {\n    var _a2;\n    const keys = Object.keys(this.storage);\n    if (index < 0 || index >= keys.length) {\n      return null;\n    }\n    return (_a2 = keys[index]) != null ? _a2 : null;\n  }\n  removeItem(key) {\n    delete this.storage[key];\n  }\n  setItem(key, value) {\n    this.storage[key] = value;\n  }\n};\nlet InMemoryStorage = _InMemoryStorage;\n__publicField(InMemoryStorage, \"instance\");\nclass TonConnectUIError extends _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.TonConnectError {\n  constructor(...args) {\n    super(...args);\n    Object.setPrototypeOf(this, TonConnectUIError.prototype);\n  }\n}\nfunction logDebug(...args) {\n  {\n    try {\n      console.debug(\"[TON_CONNECT_UI]\", ...args);\n    } catch (e2) {\n    }\n  }\n}\nfunction logError(...args) {\n  {\n    try {\n      console.error(\"[TON_CONNECT_UI]\", ...args);\n    } catch (e2) {\n    }\n  }\n}\nfunction logWarning(...args) {\n  {\n    try {\n      console.warn(\"[TON_CONNECT_UI]\", ...args);\n    } catch (e2) {\n    }\n  }\n}\nfunction openLink(href, target = \"_self\") {\n  logDebug(\"openLink\", href, target);\n  window.open(href, target, \"noopener noreferrer\");\n}\nfunction openLinkBlank(href) {\n  openLink(href, \"_blank\");\n}\nfunction openDeeplinkWithFallback(href, fallback) {\n  const doFallback = () => {\n    if (isBrowser(\"safari\") || isOS(\"android\") && isBrowser(\"firefox\")) {\n      return;\n    }\n    fallback();\n  };\n  const fallbackTimeout = setTimeout(() => doFallback(), 200);\n  window.addEventListener(\"blur\", () => clearTimeout(fallbackTimeout), { once: true });\n  openLink(href, \"_self\");\n}\nfunction getSystemTheme() {\n  if (window.matchMedia && window.matchMedia(\"(prefers-color-scheme: light)\").matches) {\n    return THEME.LIGHT;\n  }\n  return THEME.DARK;\n}\nfunction subscribeToThemeChange(callback) {\n  const handler = (event) => callback(event.matches ? THEME.DARK : THEME.LIGHT);\n  window.matchMedia(\"(prefers-color-scheme: dark)\").addEventListener(\"change\", handler);\n  return () => window.matchMedia(\"(prefers-color-scheme: dark)\").removeEventListener(\"change\", handler);\n}\nfunction disableScroll() {\n  if (document.documentElement.scrollHeight === document.documentElement.clientHeight) {\n    return;\n  }\n  document.body.style.top = toPx(-document.documentElement.scrollTop);\n  document.body.classList.add(disableScrollClass);\n}\nfunction enableScroll() {\n  document.body.classList.remove(disableScrollClass);\n  document.documentElement.scrollTo({ top: -parseFloat(getComputedStyle(document.body).top) });\n  document.body.style.top = \"auto\";\n}\nfunction fixMobileSafariActiveTransition() {\n  if (!document.body.hasAttribute(\"ontouchstart\")) {\n    document.body.setAttribute(\"ontouchstart\", \"\");\n  }\n}\nfunction defineStylesRoot() {\n  customElements.define(globalStylesTag, class TcRootElement extends HTMLElement {\n  });\n}\nfunction createMacrotask(callback) {\n  return __async(this, null, function* () {\n    yield new Promise((resolve) => requestAnimationFrame(resolve));\n    callback();\n  });\n}\nfunction createMacrotaskAsync(callback) {\n  return __async(this, null, function* () {\n    yield new Promise((resolve) => requestAnimationFrame(resolve));\n    return callback();\n  });\n}\nfunction preloadImages(images) {\n  if (document.readyState !== \"complete\") {\n    window.addEventListener(\"load\", () => createMacrotask(() => preloadImages(images)), {\n      once: true\n    });\n  } else {\n    images.forEach((img) => {\n      const node = new window.Image();\n      node.src = img;\n    });\n  }\n}\nfunction getWindow$1() {\n  if (typeof window !== \"undefined\") {\n    return window;\n  }\n  return void 0;\n}\nfunction tryGetLocalStorage() {\n  if (isLocalStorageAvailable()) {\n    return localStorage;\n  }\n  if (isNodeJs()) {\n    throw new TonConnectUIError(\n      \"`localStorage` is unavailable, but it is required for TonConnect. For more details, see https://github.com/ton-connect/sdk/tree/main/packages/sdk#init-connector\"\n    );\n  }\n  return InMemoryStorage.getInstance();\n}\nfunction isLocalStorageAvailable() {\n  try {\n    return typeof localStorage !== \"undefined\";\n  } catch (e2) {\n    return false;\n  }\n}\nfunction isNodeJs() {\n  return typeof process !== \"undefined\" && process.versions != null && process.versions.node != null;\n}\nfunction getUserAgent() {\n  var _a2, _b2, _c2;\n  const results = new ua_parser_js__WEBPACK_IMPORTED_MODULE_1__().getResult();\n  const osName = (_a2 = results.os.name) == null ? void 0 : _a2.toLowerCase();\n  const deviceModel = (_b2 = results.device.model) == null ? void 0 : _b2.toLowerCase();\n  let os;\n  switch (true) {\n    case deviceModel === \"ipad\":\n      os = \"ipad\";\n      break;\n    case osName === \"ios\":\n      os = \"ios\";\n      break;\n    case osName === \"android\":\n      os = \"android\";\n      break;\n    case osName === \"mac os\":\n      os = \"macos\";\n      break;\n    case osName === \"linux\":\n      os = \"linux\";\n      break;\n    case (osName == null ? void 0 : osName.includes(\"windows\")):\n      os = \"windows\";\n      break;\n  }\n  const browserName = (_c2 = results.browser.name) == null ? void 0 : _c2.toLowerCase();\n  let browser;\n  switch (true) {\n    case browserName === \"chrome\":\n      browser = \"chrome\";\n      break;\n    case browserName === \"firefox\":\n      browser = \"firefox\";\n      break;\n    case (browserName == null ? void 0 : browserName.includes(\"safari\")):\n      browser = \"safari\";\n      break;\n    case (browserName == null ? void 0 : browserName.includes(\"opera\")):\n      browser = \"opera\";\n      break;\n  }\n  return {\n    os,\n    browser\n  };\n}\nfunction isOS(...os) {\n  return os.includes(getUserAgent().os);\n}\nfunction isBrowser(...browser) {\n  return browser.includes(getUserAgent().browser);\n}\nfunction toDeeplink(universalLink, deeplink) {\n  const url = new URL(universalLink);\n  return deeplink + url.search;\n}\nclass WalletInfoStorage {\n  constructor() {\n    __publicField(this, \"localStorage\");\n    __publicField(this, \"storageKey\", \"ton-connect-ui_wallet-info\");\n    this.localStorage = tryGetLocalStorage();\n  }\n  setWalletInfo(walletInfo) {\n    this.localStorage.setItem(this.storageKey, JSON.stringify(walletInfo));\n  }\n  getWalletInfo() {\n    const walletInfoString = this.localStorage.getItem(this.storageKey);\n    if (!walletInfoString) {\n      return null;\n    }\n    return JSON.parse(walletInfoString);\n  }\n  removeWalletInfo() {\n    this.localStorage.removeItem(this.storageKey);\n  }\n}\nclass PreferredWalletStorage {\n  constructor() {\n    __publicField(this, \"localStorage\");\n    __publicField(this, \"storageKey\", \"ton-connect-ui_preferred-wallet\");\n    this.localStorage = tryGetLocalStorage();\n  }\n  setPreferredWalletAppName(name) {\n    this.localStorage.setItem(this.storageKey, name);\n  }\n  getPreferredWalletAppName() {\n    return this.localStorage.getItem(this.storageKey) || void 0;\n  }\n}\nclass LastSelectedWalletInfoStorage {\n  constructor() {\n    __publicField(this, \"localStorage\");\n    __publicField(this, \"storageKey\", \"ton-connect-ui_last-selected-wallet-info\");\n    this.localStorage = tryGetLocalStorage();\n  }\n  setLastSelectedWalletInfo(walletInfo) {\n    this.localStorage.setItem(this.storageKey, JSON.stringify(walletInfo));\n  }\n  getLastSelectedWalletInfo() {\n    const walletInfoString = this.localStorage.getItem(this.storageKey);\n    if (!walletInfoString) {\n      return null;\n    }\n    return JSON.parse(walletInfoString);\n  }\n  removeLastSelectedWalletInfo() {\n    this.localStorage.removeItem(this.storageKey);\n  }\n}\nconst [walletsModalState, setWalletsModalState] = createSignal({\n  status: \"closed\",\n  closeReason: null\n});\nconst getWalletsModalIsOpened = createMemo(() => walletsModalState().status === \"opened\");\nconst [singleWalletModalState, setSingleWalletModalState] = createSignal({\n  status: \"closed\",\n  closeReason: null\n});\nconst getSingleWalletModalIsOpened = createMemo(\n  () => singleWalletModalState().status === \"opened\"\n);\nconst getSingleWalletModalWalletInfo = createMemo(() => {\n  const state = singleWalletModalState();\n  if (state.status === \"opened\") {\n    return state.walletInfo;\n  }\n  return null;\n});\nlet lastSelectedWalletInfoStorage = typeof window !== \"undefined\" ? new LastSelectedWalletInfoStorage() : void 0;\nconst [lastSelectedWalletInfo, _setLastSelectedWalletInfo] = createSignal((lastSelectedWalletInfoStorage == null ? void 0 : lastSelectedWalletInfoStorage.getLastSelectedWalletInfo()) || null);\nconst setLastSelectedWalletInfo = (walletInfo) => {\n  if (!lastSelectedWalletInfoStorage) {\n    lastSelectedWalletInfoStorage = new LastSelectedWalletInfoStorage();\n  }\n  if (walletInfo) {\n    lastSelectedWalletInfoStorage.setLastSelectedWalletInfo(walletInfo);\n  } else {\n    lastSelectedWalletInfoStorage.removeLastSelectedWalletInfo();\n  }\n  _setLastSelectedWalletInfo(walletInfo);\n};\nconst [action, setAction] = createSignal(null);\nconst common$1 = {\n  close: \"Close\",\n  openWallet: \"Open wallet\",\n  copyLink: \"Copy Link\",\n  linkCopied: \"Link Copied\",\n  copied: \"Copied\",\n  yourWallet: \"Your Wallet\",\n  retry: \"Retry\",\n  get: \"GET\",\n  mobile: \"Mobile\",\n  browserExtension: \"Browser Extension\",\n  desktop: \"Desktop\"\n};\nconst button$1 = {\n  connectWallet: \"Connect Wallet\",\n  dropdown: {\n    copy: \"Copy address\",\n    copied: \"Address copied!\",\n    disconnect: \"Disconnect\"\n  }\n};\nconst notifications$1 = {\n  confirm: {\n    header: \"Open {{ name }} to\\xA0confirm the\\xA0transaction.\"\n  },\n  transactionSent: {\n    header: \"Transaction sent\",\n    text: \"Your transaction\\xA0will be\\xA0processed in\\xA0a\\xA0few seconds.\"\n  },\n  transactionCanceled: {\n    header: \"Transaction canceled\",\n    text: \"There will be no changes to\\xA0your account.\"\n  }\n};\nconst walletItem$1 = {\n  walletOn: \"Wallet in\",\n  recent: \"Recent\",\n  installed: \"Installed\",\n  popular: \"Popular\"\n};\nconst walletModal$1 = {\n  loading: \"Loading wallets\",\n  wallets: \"Wallets\",\n  mobileUniversalModal: {\n    connectYourWallet: \"Connect your TON\\xA0wallet\",\n    openWalletOnTelegramOrSelect: \"Use Wallet in Telegram or choose other application\",\n    openWalletOnTelegram: \"Connect Wallet in Telegram\",\n    chooseOtherApplication: \"Choose other application\",\n    openLink: \"Open Link\",\n    scan: \"Scan with your mobile\\xA0wallet\"\n  },\n  desktopUniversalModal: {\n    connectYourWallet: \"Connect your TON wallet\",\n    scan: \"Scan with your mobile wallet\",\n    availableWallets: \"Available wallets\"\n  },\n  mobileConnectionModal: {\n    showQR: \"Show QR Code\",\n    scanQR: \"Scan the\\xA0QR code below with your phone\\u2019s\\xA0or\\xA0{{ name }}\\u2019s camera\",\n    missingFeatures: \"Please update {{ name }}, your version does not support required features for this dApp\",\n    notSupportedWallet: \"{{ name }} doesn\\u2019t support the requested action. Please connect another wallet that supports it\",\n    continueIn: \"Continue in {{ name }}\\u2026\",\n    updateWallet: \"Update {{ name }}\",\n    chooseAnotherWallet: \"Choose Another Wallet\",\n    connectionDeclined: \"Connection declined\"\n  },\n  desktopConnectionModal: {\n    scanQR: \"Scan the\\xA0QR code below with your phone\\u2019s\\xA0or\\xA0{{ name }}\\u2019s camera\",\n    continueInExtension: \"Continue in\\xA0{{ name }} browser extension\\u2026\",\n    dontHaveExtension: \"Seems you don't have installed {{ name }}\\xA0browser\\xA0extension\",\n    missingFeatures: \"Please update {{ name }}, your version does not support required features for this dApp\",\n    notSupportedWallet: \"{{ name }} doesn\\u2019t support the requested action. Please connect another wallet that supports it\",\n    getWallet: \"Get {{ name }}\",\n    updateWallet: \"Update {{ name }}\",\n    chooseAnotherWallet: \"Choose Another Wallet\",\n    continueOnDesktop: \"Continue in\\xA0{{ name }} on desktop\\u2026\",\n    openWalletOnTelegram: \"Connect Wallet in Telegram on desktop\",\n    connectionDeclined: \"Connection declined\"\n  },\n  infoModal: {\n    whatIsAWallet: \"What is a wallet\",\n    secureDigitalAssets: \"Secure digital assets storage\",\n    walletProtects: \"A wallet protects and manages your digital assets\\xA0including TON, tokens and collectables.\",\n    controlIdentity: \"Control your Web3 identity\",\n    manageIdentity: \"Manage your digital identity and access decentralized applications with ease. Maintain control over your data and engage securely in\\xA0the\\xA0blockchain ecosystem.\",\n    effortlessCryptoTransactions: \"Effortless crypto transactions\",\n    easilySend: \"Easily send, receive, monitor your cryptocurrencies.\\xA0Streamline your operations with\\xA0decentralized applications.\",\n    getAWallet: \"Get a Wallet\"\n  },\n  allWallets: {\n    walletsBelowNotSupported: \"The wallets below don\\u2019t support all features of\\xA0the connected service. You can use your recovery phrase in one of the supported wallets above.\",\n    walletNotSupportService: \"{{ name }} doesn\\u2019t support connected service\"\n  }\n};\nconst actionModal$1 = {\n  confirmTransaction: {\n    header: \"Confirm the\\xA0transaction in\\xA0{{ name }}\",\n    text: \"It will only take a\\xA0moment.\"\n  },\n  transactionSent: \"$notifications.transactionSent\",\n  transactionCanceled: \"$notifications.transactionCanceled\"\n};\nconst en = {\n  common: common$1,\n  button: button$1,\n  notifications: notifications$1,\n  walletItem: walletItem$1,\n  walletModal: walletModal$1,\n  actionModal: actionModal$1\n};\nconst common = {\n  close: \"\\u0417\\u0430\\u043A\\u0440\\u044B\\u0442\\u044C\",\n  openWallet: \"\\u041E\\u0442\\u043A\\u0440\\u044B\\u0442\\u044C \\u043A\\u043E\\u0448\\u0435\\u043B\\u0451\\u043A\",\n  copyLink: \"\\u0421\\u043A\\u043E\\u043F\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\",\n  linkCopied: \"\\u0421\\u0441\\u044B\\u043B\\u043A\\u0430 \\u0441\\u043A\\u043E\\u043F\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u0430\",\n  copied: \"\\u0421\\u043A\\u043E\\u043F\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u043E\",\n  yourWallet: \"\\u0412\\u0430\\u0448 \\u043A\\u043E\\u0448\\u0435\\u043B\\u0451\\u043A\",\n  retry: \"\\u041F\\u043E\\u0432\\u0442\\u043E\\u0440\\u0438\\u0442\\u044C\",\n  get: \"\\u0421\\u043A\\u0430\\u0447\\u0430\\u0442\\u044C\",\n  mobile: \"\\u041C\\u043E\\u0431\\u0438\\u043B\\u044C\\u043D\\u044B\\u0439\",\n  browserExtension: \"\\u0420\\u0430\\u0441\\u0448\\u0438\\u0440\\u0435\\u043D\\u0438\\u0435\",\n  desktop: \"\\u0414\\u0435\\u0441\\u043A\\u0442\\u043E\\u043F\"\n};\nconst button = {\n  connectWallet: \"\\u041F\\u043E\\u0434\\u043A\\u043B\\u044E\\u0447\\u0438\\u0442\\u044C \\u043A\\u043E\\u0448\\u0435\\u043B\\u0451\\u043A\",\n  dropdown: {\n    copy: \"\\u0421\\u043A\\u043E\\u043F\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C \\u0430\\u0434\\u0440\\u0435\\u0441\",\n    copied: \"\\u0410\\u0434\\u0440\\u0435\\u0441 \\u0441\\u043A\\u043E\\u043F\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D!\",\n    disconnect: \"\\u041E\\u0442\\u043A\\u043B\\u044E\\u0447\\u0438\\u0442\\u044C \\u043A\\u043E\\u0448\\u0435\\u043B\\u0451\\u043A\"\n  }\n};\nconst notifications = {\n  confirm: {\n    header: \"\\u041E\\u0442\\u043A\\u0440\\u043E\\u0439\\u0442\\u0435 {{ name }}, \\u0447\\u0442\\u043E\\u0431\\u044B\\xA0\\u043F\\u043E\\u0434\\u0442\\u0432\\u0435\\u0440\\u0434\\u0438\\u0442\\u044C \\u0442\\u0440\\u0430\\u043D\\u0437\\u0430\\u043A\\u0446\\u0438\\u044E.\"\n  },\n  transactionSent: {\n    header: \"\\u0422\\u0440\\u0430\\u043D\\u0437\\u0430\\u043A\\u0446\\u0438\\u044F \\u043E\\u0442\\u043F\\u0440\\u0430\\u0432\\u043B\\u0435\\u043D\\u0430\",\n    text: \"\\u0412\\u0430\\u0448\\u0430 \\u0442\\u0440\\u0430\\u043D\\u0437\\u0430\\u043A\\u0446\\u0438\\u044F\\xA0\\u0431\\u0443\\u0434\\u0435\\u0442 \\u043E\\u0431\\u0440\\u0430\\u0431\\u043E\\u0442\\u0430\\u043D\\u0430 \\u0447\\u0435\\u0440\\u0435\\u0437\\xA0\\u043D\\u0435\\u0441\\u043A\\u043E\\u043B\\u044C\\u043A\\u043E \\u0441\\u0435\\u043A\\u0443\\u043D\\u0434.\"\n  },\n  transactionCanceled: {\n    header: \"\\u0422\\u0440\\u0430\\u043D\\u0437\\u0430\\u043A\\u0446\\u0438\\u044F \\u043E\\u0442\\u043C\\u0435\\u043D\\u0435\\u043D\\u0430\",\n    text: \"\\u0421\\u043E\\u0441\\u0442\\u043E\\u044F\\u043D\\u0438\\u0435 \\u0432\\u0430\\u0448\\u0435\\u0433\\u043E \\u0441\\u0447\\u0451\\u0442\\u0430 \\u043D\\u0435\\xA0\\u0438\\u0437\\u043C\\u0435\\u043D\\u0438\\u0442\\u0441\\u044F.\"\n  }\n};\nconst walletItem = {\n  walletOn: \"Wallet \\u0432\",\n  recent: \"\\u041D\\u0435\\u0434\\u0430\\u0432\\u043D\\u0438\\u0439\",\n  installed: \"\\u0423\\u0441\\u0442\\u0430\\u043D\\u043E\\u0432\\u043B\\u0435\\u043D\",\n  popular: \"\\u041F\\u043E\\u043F\\u0443\\u043B\\u044F\\u0440\\u0435\\u043D\"\n};\nconst walletModal = {\n  loading: \"\\u041A\\u043E\\u0448\\u0435\\u043B\\u044C\\u043A\\u0438 \\u0437\\u0430\\u0433\\u0440\\u0443\\u0436\\u0430\\u044E\\u0442\\u0441\\u044F\",\n  wallets: \"\\u041A\\u043E\\u0448\\u0435\\u043B\\u044C\\u043A\\u0438\",\n  mobileUniversalModal: {\n    connectYourWallet: \"\\u041F\\u043E\\u0434\\u043A\\u043B\\u044E\\u0447\\u0438\\u0442\\u0435 TON\\xA0\\u043A\\u043E\\u0448\\u0435\\u043B\\u0451\\u043A\",\n    openWalletOnTelegramOrSelect: \"\\u041F\\u043E\\u0434\\u043A\\u043B\\u044E\\u0447\\u0438\\u0442\\u0435 Wallet \\u0432\\xA0Telegram \\u0438\\u043B\\u0438\\xA0\\u0432\\u044B\\u0431\\u0435\\u0440\\u0435\\u0442\\u0435 \\u0434\\u0440\\u0443\\u0433\\u043E\\u0435 \\u043F\\u0440\\u0438\\u043B\\u043E\\u0436\\u0435\\u043D\\u0438\\u0435\",\n    openWalletOnTelegram: \"\\u041E\\u0442\\u043A\\u0440\\u044B\\u0442\\u044C Wallet \\u0432 Telegram\",\n    chooseOtherApplication: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0434\\u0440\\u0443\\u0433\\u043E\\u0435 \\u043F\\u0440\\u0438\\u043B\\u043E\\u0436\\u0435\\u043D\\u0438\\u0435\",\n    openLink: \"\\u041E\\u0442\\u043A\\u0440\\u044B\\u0442\\u044C\",\n    scan: \"\\u041E\\u0442\\u0441\\u043A\\u0430\\u043D\\u0438\\u0440\\u0443\\u0439\\u0442\\u0435 \\u043A\\u0430\\u043C\\u0435\\u0440\\u043E\\u0439 \\u0432\\u0430\\u0448\\u0435\\u0433\\u043E\\xA0\\u0442\\u0435\\u043B\\u0435\\u0444\\u043E\\u043D\\u0430\"\n  },\n  desktopUniversalModal: {\n    connectYourWallet: \"\\u041F\\u043E\\u0434\\u043A\\u043B\\u044E\\u0447\\u0438\\u0442\\u0435 TON \\u043A\\u043E\\u0448\\u0435\\u043B\\u0451\\u043A\",\n    scan: \"\\u041E\\u0442\\u0441\\u043A\\u0430\\u043D\\u0438\\u0440\\u0443\\u0439\\u0442\\u0435 QR-\\u043A\\u043E\\u0434 \\u043A\\u0430\\u043C\\u0435\\u0440\\u043E\\u0439 \\u0432\\u0430\\u0448\\u0435\\u0433\\u043E\\xA0\\u0442\\u0435\\u043B\\u0435\\u0444\\u043E\\u043D\\u0430\",\n    availableWallets: \"\\u0414\\u043E\\u0441\\u0442\\u0443\\u043F\\u043D\\u044B\\u0435 \\u043A\\u043E\\u0448\\u0435\\u043B\\u044C\\u043A\\u0438\"\n  },\n  mobileConnectionModal: {\n    showQR: \"\\u041F\\u043E\\u043A\\u0430\\u0437\\u0430\\u0442\\u044C QR-\\u043A\\u043E\\u0434\",\n    scanQR: \"\\u041E\\u0442\\u0441\\u043A\\u0430\\u043D\\u0438\\u0440\\u0443\\u0439\\u0442\\u0435 QR-\\u043A\\u043E\\u0434 \\u043D\\u0438\\u0436\\u0435 \\u043A\\u0430\\u043C\\u0435\\u0440\\u043E\\u0439 \\u0432\\xA0\\u043F\\u0440\\u0438\\u043B\\u043E\\u0436\\u0435\\u043D\\u0438\\u0438 {{ name }}, \\u0438\\u043B\\u0438\\xA0\\u043A\\u0430\\u043C\\u0435\\u0440\\u043E\\u0439 \\u0442\\u0435\\u043B\\u0435\\u0444\\u043E\\u043D\\u0430\",\n    missingFeatures: \"\\u041E\\u0431\\u043D\\u043E\\u0432\\u0438\\u0442\\u0435 {{ name }}, \\u0432\\u0430\\u0448\\u0430 \\u0432\\u0435\\u0440\\u0441\\u0438\\u044F \\u043D\\u0435 \\u043F\\u043E\\u0434\\u0434\\u0435\\u0440\\u0436\\u0438\\u0432\\u0430\\u0435\\u0442 \\u043D\\u0435\\u043E\\u0431\\u0445\\u043E\\u0434\\u0438\\u043C\\u044B\\u0435 \\u0444\\u0443\\u043D\\u043A\\u0446\\u0438\\u0438 \\u0434\\u043B\\u044F \\u044D\\u0442\\u043E\\u0433\\u043E dApp\",\n    notSupportedWallet: \"{{ name }} \\u043D\\u0435 \\u043F\\u043E\\u0434\\u0434\\u0435\\u0440\\u0436\\u0438\\u0432\\u0430\\u0435\\u0442 \\u0437\\u0430\\u043F\\u0440\\u043E\\u0448\\u0435\\u043D\\u043D\\u043E\\u0435 \\u0434\\u0435\\u0439\\u0441\\u0442\\u0432\\u0438\\u0435. \\u041F\\u043E\\u0436\\u0430\\u043B\\u0443\\u0439\\u0441\\u0442\\u0430, \\u043F\\u043E\\u0434\\u043A\\u043B\\u044E\\u0447\\u0438\\u0442\\u0435 \\u0434\\u0440\\u0443\\u0433\\u043E\\u0439 \\u043A\\u043E\\u0448\\u0435\\u043B\\u0451\\u043A, \\u043A\\u043E\\u0442\\u043E\\u0440\\u044B\\u0439 \\u043F\\u043E\\u0434\\u0434\\u0435\\u0440\\u0436\\u0438\\u0432\\u0430\\u0435\\u0442 \\u044D\\u0442\\u043E\",\n    continueIn: \"\\u041F\\u0440\\u043E\\u0434\\u043E\\u043B\\u0436\\u0438\\u0442\\u0435 \\u0432 {{ name }}\\u2026\",\n    updateWallet: \"\\u041E\\u0431\\u043D\\u043E\\u0432\\u0438\\u0442\\u044C {{ name }}\",\n    chooseAnotherWallet: \"\\u0412\\u044B\\u0431\\u0440\\u0430\\u0442\\u044C \\u0434\\u0440\\u0443\\u0433\\u043E\\u0439 \\u043A\\u043E\\u0448\\u0435\\u043B\\u0451\\u043A\",\n    connectionDeclined: \"\\u041F\\u043E\\u0434\\u043A\\u043B\\u044E\\u0447\\u0435\\u043D\\u0438\\u0435 \\u043E\\u0442\\u043A\\u043B\\u043E\\u043D\\u0435\\u043D\\u043E\"\n  },\n  desktopConnectionModal: {\n    scanQR: \"\\u041E\\u0442\\u0441\\u043A\\u0430\\u043D\\u0438\\u0440\\u0443\\u0439\\u0442\\u0435 QR-\\u043A\\u043E\\u0434 \\u043D\\u0438\\u0436\\u0435 \\u043A\\u0430\\u043C\\u0435\\u0440\\u043E\\u0439 \\u0432\\xA0\\u043F\\u0440\\u0438\\u043B\\u043E\\u0436\\u0435\\u043D\\u0438\\u0438 {{ name }}, \\u0438\\u043B\\u0438\\xA0\\u043A\\u0430\\u043C\\u0435\\u0440\\u043E\\u0439 \\u0442\\u0435\\u043B\\u0435\\u0444\\u043E\\u043D\\u0430\",\n    continueInExtension: \"\\u041E\\u0442\\u043A\\u0440\\u043E\\u0439\\u0442\\u0435 \\u0431\\u0440\\u0430\\u0443\\u0437\\u0435\\u0440\\u043D\\u043E\\u0435 \\u0440\\u0430\\u0441\\u0448\\u0438\\u0440\\u0435\\u043D\\u0438\\u0435 {{ name }}\",\n    dontHaveExtension: \"\\u041F\\u043E\\u0445\\u043E\\u0436\\u0435, \\u0443 \\u0432\\u0430\\u0441 \\u043D\\u0435\\xA0\\u0443\\u0441\\u0442\\u0430\\u043D\\u043E\\u0432\\u043B\\u0435\\u043D\\u043E \\u0431\\u0440\\u0430\\u0443\\u0437\\u0435\\u0440\\u043D\\u043E\\u0435\\xA0\\u0440\\u0430\\u0441\\u0448\\u0438\\u0440\\u0435\\u043D\\u0438\\u0435\\xA0{{ name }}\",\n    missingFeatures: \"\\u041E\\u0431\\u043D\\u043E\\u0432\\u0438\\u0442\\u0435 {{ name }}, \\u0432\\u0430\\u0448\\u0430 \\u0432\\u0435\\u0440\\u0441\\u0438\\u044F \\u043D\\u0435 \\u043F\\u043E\\u0434\\u0434\\u0435\\u0440\\u0436\\u0438\\u0432\\u0430\\u0435\\u0442 \\u043D\\u0435\\u043E\\u0431\\u0445\\u043E\\u0434\\u0438\\u043C\\u044B\\u0435 \\u0444\\u0443\\u043D\\u043A\\u0446\\u0438\\u0438 \\u0434\\u043B\\u044F \\u044D\\u0442\\u043E\\u0433\\u043E dApp\",\n    notSupportedWallet: \"{{ name }} \\u043D\\u0435 \\u043F\\u043E\\u0434\\u0434\\u0435\\u0440\\u0436\\u0438\\u0432\\u0430\\u0435\\u0442 \\u0437\\u0430\\u043F\\u0440\\u043E\\u0448\\u0435\\u043D\\u043D\\u043E\\u0435 \\u0434\\u0435\\u0439\\u0441\\u0442\\u0432\\u0438\\u0435. \\u041F\\u043E\\u0436\\u0430\\u043B\\u0443\\u0439\\u0441\\u0442\\u0430, \\u043F\\u043E\\u0434\\u043A\\u043B\\u044E\\u0447\\u0438\\u0442\\u0435 \\u0434\\u0440\\u0443\\u0433\\u043E\\u0439 \\u043A\\u043E\\u0448\\u0435\\u043B\\u0451\\u043A, \\u043A\\u043E\\u0442\\u043E\\u0440\\u044B\\u0439 \\u043F\\u043E\\u0434\\u0434\\u0435\\u0440\\u0436\\u0438\\u0432\\u0430\\u0435\\u0442 \\u044D\\u0442\\u043E\",\n    getWallet: \"\\u0421\\u043A\\u0430\\u0447\\u0430\\u0442\\u044C {{ name }}\",\n    updateWallet: \"\\u041E\\u0431\\u043D\\u043E\\u0432\\u0438\\u0442\\u044C {{ name }}\",\n    chooseAnotherWallet: \"\\u0412\\u044B\\u0431\\u0440\\u0430\\u0442\\u044C \\u0434\\u0440\\u0443\\u0433\\u043E\\u0439 \\u043A\\u043E\\u0448\\u0435\\u043B\\u0451\\u043A\",\n    continueOnDesktop: \"\\u041E\\u0442\\u043A\\u0440\\u043E\\u0439\\u0442\\u0435 {{ name }} \\u043D\\u0430\\xA0\\u043A\\u043E\\u043C\\u043F\\u044C\\u044E\\u0442\\u0435\\u0440\\u0435\\u2026\",\n    openWalletOnTelegram: \"\\u041E\\u0442\\u043A\\u0440\\u044B\\u0442\\u044C Wallet \\u0432\\xA0Telegram\",\n    connectionDeclined: \"\\u041F\\u043E\\u0434\\u043A\\u043B\\u044E\\u0447\\u0435\\u043D\\u0438\\u0435 \\u043E\\u0442\\u043A\\u043B\\u043E\\u043D\\u0435\\u043D\\u043E\"\n  },\n  infoModal: {\n    whatIsAWallet: \"\\u0427\\u0442\\u043E \\u0442\\u0430\\u043A\\u043E\\u0435 \\u043A\\u043E\\u0448\\u0435\\u043B\\u0451\\u043A?\",\n    secureDigitalAssets: \"\\u041D\\u0430\\u0434\\u0435\\u0436\\u043D\\u043E\\u0435 \\u0445\\u0440\\u0430\\u043D\\u0438\\u043B\\u0438\\u0449\\u0435 \\u0446\\u0438\\u0444\\u0440\\u043E\\u0432\\u044B\\u0445 \\u0430\\u043A\\u0442\\u0438\\u0432\\u043E\\u0432\",\n    walletProtects: \"\\u041A\\u043E\\u0448\\u0435\\u043B\\u0451\\u043A \\u0437\\u0430\\u0449\\u0438\\u0449\\u0430\\u0435\\u0442 \\u0432\\u0430\\u0448\\u0438 \\u0446\\u0438\\u0444\\u0440\\u043E\\u0432\\u044B\\u0435 \\u0430\\u043A\\u0442\\u0438\\u0432\\u044B, \\u0432\\u043A\\u043B\\u044E\\u0447\\u0430\\u044F TON, \\u0442\\u043E\\u043A\\u0435\\u043D\\u044B \\u0438\\xA0\\u043F\\u0440\\u0435\\u0434\\u043C\\u0435\\u0442\\u044B \\u043A\\u043E\\u043B\\u043B\\u0435\\u043A\\u0446\\u0438\\u043E\\u043D\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u0438\\u044F, \\u0438\\xA0\\u0443\\u043F\\u0440\\u0430\\u0432\\u043B\\u044F\\u0435\\u0442 \\u0438\\u043C\\u0438.\",\n    controlIdentity: \"\\u041A\\u043E\\u043D\\u0442\\u0440\\u043E\\u043B\\u044C \\u0441\\u0432\\u043E\\u0435\\u0439 \\u043B\\u0438\\u0447\\u043D\\u043E\\u0441\\u0442\\u0438 Web3\",\n    manageIdentity: \"\\u0423\\u043F\\u0440\\u0430\\u0432\\u043B\\u044F\\u0439\\u0442\\u0435 \\u0441\\u0432\\u043E\\u0435\\u0439 \\u0446\\u0438\\u0444\\u0440\\u043E\\u0432\\u043E\\u0439 \\u0438\\u0434\\u0435\\u043D\\u0442\\u0438\\u0444\\u0438\\u043A\\u0430\\u0446\\u0438\\u0435\\u0439 \\u0438\\xA0\\u0441\\xA0\\u043B\\u0435\\u0433\\u043A\\u043E\\u0441\\u0442\\u044C\\u044E \\u043F\\u043E\\u043B\\u0443\\u0447\\u0430\\u0439\\u0442\\u0435 \\u0434\\u043E\\u0441\\u0442\\u0443\\u043F \\u043A\\xA0\\u0434\\u0435\\u0446\\u0435\\u043D\\u0442\\u0440\\u0430\\u043B\\u0438\\u0437\\u043E\\u0432\\u0430\\u043D\\u043D\\u044B\\u043C \\u043F\\u0440\\u0438\\u043B\\u043E\\u0436\\u0435\\u043D\\u0438\\u044F\\u043C. \\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u044F\\u0439\\u0442\\u0435 \\u043A\\u043E\\u043D\\u0442\\u0440\\u043E\\u043B\\u044C \\u043D\\u0430\\u0434\\xA0\\u0441\\u0432\\u043E\\u0438\\u043C\\u0438 \\u0434\\u0430\\u043D\\u043D\\u044B\\u043C\\u0438 \\u0438\\xA0\\u0431\\u0435\\u0437\\u043E\\u043F\\u0430\\u0441\\u043D\\u043E \\u0443\\u0447\\u0430\\u0441\\u0442\\u0432\\u0443\\u0439\\u0442\\u0435 \\u0432\\xA0\\u044D\\u043A\\u043E\\u0441\\u0438\\u0441\\u0442\\u0435\\u043C\\u0435\\xA0\\u0431\\u043B\\u043E\\u043A\\u0447\\u0435\\u0439\\u043D\\u0430.\",\n    effortlessCryptoTransactions: \"\\u041F\\u0440\\u043E\\u0441\\u0442\\u044B\\u0435 \\u043A\\u0440\\u0438\\u043F\\u0442\\u043E\\u0442\\u0440\\u0430\\u043D\\u0437\\u0430\\u043A\\u0446\\u0438\\u0438\",\n    easilySend: \"\\u041B\\u0435\\u0433\\u043A\\u043E \\u043E\\u0442\\u043F\\u0440\\u0430\\u0432\\u043B\\u044F\\u0439\\u0442\\u0435, \\u043F\\u043E\\u043B\\u0443\\u0447\\u0430\\u0439\\u0442\\u0435 \\u0438\\xA0\\u043E\\u0442\\u0441\\u043B\\u0435\\u0436\\u0438\\u0432\\u0430\\u0439\\u0442\\u0435 \\u0441\\u0432\\u043E\\u0438 \\u043A\\u0440\\u0438\\u043F\\u0442\\u043E\\u0432\\u0430\\u043B\\u044E\\u0442\\u044B. \\u041E\\u043F\\u0442\\u0438\\u043C\\u0438\\u0437\\u0438\\u0440\\u0443\\u0439\\u0442\\u0435 \\u0441\\u0432\\u043E\\u0438 \\u043E\\u043F\\u0435\\u0440\\u0430\\u0446\\u0438\\u0438 \\u0441\\xA0\\u043F\\u043E\\u043C\\u043E\\u0449\\u044C\\u044E \\u0434\\u0435\\u0446\\u0435\\u043D\\u0442\\u0440\\u0430\\u043B\\u0438\\u0437\\u043E\\u0432\\u0430\\u043D\\u043D\\u044B\\u0445 \\u043F\\u0440\\u0438\\u043B\\u043E\\u0436\\u0435\\u043D\\u0438\\u0439.\",\n    getAWallet: \"\\u0421\\u043A\\u0430\\u0447\\u0430\\u0442\\u044C \\u043A\\u043E\\u0448\\u0435\\u043B\\u0451\\u043A\"\n  },\n  allWallets: {\n    walletsBelowNotSupported: \"\\u041A\\u043E\\u0448\\u0435\\u043B\\u044C\\u043A\\u0438 \\u043D\\u0438\\u0436\\u0435 \\u043D\\u0435 \\u043F\\u043E\\u0434\\u0434\\u0435\\u0440\\u0436\\u0438\\u0432\\u0430\\u044E\\u0442 \\u0432\\u0441\\u0435 \\u0444\\u0443\\u043D\\u043A\\u0446\\u0438\\u0438 \\u043F\\u043E\\u0434\\u043A\\u043B\\u044E\\u0447\\u0451\\u043D\\u043D\\u043E\\u0433\\u043E \\u0441\\u0435\\u0440\\u0432\\u0438\\u0441\\u0430. \\u0412\\u044B \\u043C\\u043E\\u0436\\u0435\\u0442\\u0435 \\u0438\\u0441\\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u044C \\u0441\\u0432\\u043E\\u044E \\u0444\\u0440\\u0430\\u0437\\u0443 \\u0432\\u043E\\u0441\\u0441\\u0442\\u0430\\u043D\\u043E\\u0432\\u043B\\u0435\\u043D\\u0438\\u044F \\u0432 \\u043E\\u0434\\u043D\\u043E\\u043C \\u0438\\u0437 \\u043F\\u043E\\u0434\\u0434\\u0435\\u0440\\u0436\\u0438\\u0432\\u0430\\u0435\\u043C\\u044B\\u0445 \\u0432\\u044B\\u0448\\u0435 \\u043A\\u043E\\u0448\\u0435\\u043B\\u044C\\u043A\\u043E\\u0432.\",\n    walletNotSupportService: \"{{ name }} \\u043D\\u0435 \\u043F\\u043E\\u0434\\u0434\\u0435\\u0440\\u0436\\u0438\\u0432\\u0430\\u0435\\u0442 \\u043F\\u043E\\u0434\\u043A\\u043B\\u044E\\u0447\\u0451\\u043D\\u043D\\u044B\\u0439 \\u0441\\u0435\\u0440\\u0432\\u0438\\u0441\"\n  }\n};\nconst actionModal = {\n  confirmTransaction: {\n    header: \"\\u041F\\u043E\\u0434\\u0442\\u0432\\u0435\\u0440\\u0434\\u0438\\u0442\\u0435 \\u0434\\u0435\\u0439\\u0441\\u0442\\u0432\\u0438\\u0435 \\u0432\\xA0{{ name }}\",\n    text: \"\\u042D\\u0442\\u043E \\u0437\\u0430\\u0439\\u043C\\u0435\\u0442 \\u043F\\u0430\\u0440\\u0443 \\u0441\\u0435\\u043A\\u0443\\u043D\\u0434.\"\n  },\n  transactionSent: \"$notifications.transactionSent\",\n  transactionCanceled: \"$notifications.transactionCanceled\"\n};\nconst ru = {\n  common,\n  button,\n  notifications,\n  walletItem,\n  walletModal,\n  actionModal\n};\nconst i18nDictionary = {\n  en: parseDictionary(en),\n  ru: parseDictionary(ru)\n};\nfunction parseDictionary(dictionary) {\n  const refSymbol = \"$\";\n  const iterate = (subDictionary) => {\n    Object.entries(subDictionary).forEach(([key, value]) => {\n      if (typeof value === \"object\" && value) {\n        return iterate(value);\n      }\n      if (typeof value === \"string\") {\n        if (value[0] === refSymbol) {\n          const path = value.slice(1).split(\".\");\n          let obj = dictionary;\n          path.forEach((item) => {\n            if (item in obj) {\n              obj = obj[item];\n            } else {\n              throw new Error(\n                `Cannot parse translations: there is no property ${item} in translation`\n              );\n            }\n          });\n          subDictionary[key] = obj;\n        }\n        if (value.slice(0, 2) === `\\\\${refSymbol}`) {\n          subDictionary[key] = value.slice(1);\n        }\n      }\n    });\n  };\n  iterate(dictionary);\n  return dictionary;\n}\nconst ConnectorContext = createContext();\nconst $RAW = Symbol(\"store-raw\"), $NODE = Symbol(\"store-node\"), $NAME = Symbol(\"store-name\");\nfunction wrap$1(value, name) {\n  let p2 = value[$PROXY];\n  if (!p2) {\n    Object.defineProperty(value, $PROXY, {\n      value: p2 = new Proxy(value, proxyTraps$1)\n    });\n    if (!Array.isArray(value)) {\n      const keys = Object.keys(value), desc = Object.getOwnPropertyDescriptors(value);\n      for (let i2 = 0, l2 = keys.length; i2 < l2; i2++) {\n        const prop = keys[i2];\n        if (desc[prop].get) {\n          Object.defineProperty(value, prop, {\n            enumerable: desc[prop].enumerable,\n            get: desc[prop].get.bind(p2)\n          });\n        }\n      }\n    }\n  }\n  return p2;\n}\nfunction isWrappable(obj) {\n  let proto;\n  return obj != null && typeof obj === \"object\" && (obj[$PROXY] || !(proto = Object.getPrototypeOf(obj)) || proto === Object.prototype || Array.isArray(obj));\n}\nfunction unwrap(item, set = /* @__PURE__ */ new Set()) {\n  let result, unwrapped, v, prop;\n  if (result = item != null && item[$RAW])\n    return result;\n  if (!isWrappable(item) || set.has(item))\n    return item;\n  if (Array.isArray(item)) {\n    if (Object.isFrozen(item))\n      item = item.slice(0);\n    else\n      set.add(item);\n    for (let i2 = 0, l2 = item.length; i2 < l2; i2++) {\n      v = item[i2];\n      if ((unwrapped = unwrap(v, set)) !== v)\n        item[i2] = unwrapped;\n    }\n  } else {\n    if (Object.isFrozen(item))\n      item = Object.assign({}, item);\n    else\n      set.add(item);\n    const keys = Object.keys(item), desc = Object.getOwnPropertyDescriptors(item);\n    for (let i2 = 0, l2 = keys.length; i2 < l2; i2++) {\n      prop = keys[i2];\n      if (desc[prop].get)\n        continue;\n      v = item[prop];\n      if ((unwrapped = unwrap(v, set)) !== v)\n        item[prop] = unwrapped;\n    }\n  }\n  return item;\n}\nfunction getDataNodes(target) {\n  let nodes = target[$NODE];\n  if (!nodes)\n    Object.defineProperty(target, $NODE, {\n      value: nodes = {}\n    });\n  return nodes;\n}\nfunction getDataNode(nodes, property, value) {\n  return nodes[property] || (nodes[property] = createDataNode(value));\n}\nfunction proxyDescriptor$1(target, property) {\n  const desc = Reflect.getOwnPropertyDescriptor(target, property);\n  if (!desc || desc.get || !desc.configurable || property === $PROXY || property === $NODE || property === $NAME)\n    return desc;\n  delete desc.value;\n  delete desc.writable;\n  desc.get = () => target[$PROXY][property];\n  return desc;\n}\nfunction trackSelf(target) {\n  if (getListener()) {\n    const nodes = getDataNodes(target);\n    (nodes._ || (nodes._ = createDataNode()))();\n  }\n}\nfunction ownKeys(target) {\n  trackSelf(target);\n  return Reflect.ownKeys(target);\n}\nfunction createDataNode(value) {\n  const [s2, set] = createSignal(value, {\n    equals: false,\n    internal: true\n  });\n  s2.$ = set;\n  return s2;\n}\nconst proxyTraps$1 = {\n  get(target, property, receiver) {\n    if (property === $RAW)\n      return target;\n    if (property === $PROXY)\n      return receiver;\n    if (property === $TRACK) {\n      trackSelf(target);\n      return receiver;\n    }\n    const nodes = getDataNodes(target);\n    const tracked = nodes.hasOwnProperty(property);\n    let value = tracked ? nodes[property]() : target[property];\n    if (property === $NODE || property === \"__proto__\")\n      return value;\n    if (!tracked) {\n      const desc = Object.getOwnPropertyDescriptor(target, property);\n      if (getListener() && (typeof value !== \"function\" || target.hasOwnProperty(property)) && !(desc && desc.get))\n        value = getDataNode(nodes, property, value)();\n    }\n    return isWrappable(value) ? wrap$1(value) : value;\n  },\n  has(target, property) {\n    if (property === $RAW || property === $PROXY || property === $TRACK || property === $NODE || property === \"__proto__\")\n      return true;\n    this.get(target, property, target);\n    return property in target;\n  },\n  set() {\n    return true;\n  },\n  deleteProperty() {\n    return true;\n  },\n  ownKeys,\n  getOwnPropertyDescriptor: proxyDescriptor$1\n};\nfunction setProperty(state, property, value, deleting = false) {\n  if (!deleting && state[property] === value)\n    return;\n  const prev = state[property], len = state.length;\n  if (value === void 0)\n    delete state[property];\n  else\n    state[property] = value;\n  let nodes = getDataNodes(state), node;\n  if (node = getDataNode(nodes, property, prev))\n    node.$(() => value);\n  if (Array.isArray(state) && state.length !== len)\n    (node = getDataNode(nodes, \"length\", len)) && node.$(state.length);\n  (node = nodes._) && node.$();\n}\nfunction mergeStoreNode(state, value) {\n  const keys = Object.keys(value);\n  for (let i2 = 0; i2 < keys.length; i2 += 1) {\n    const key = keys[i2];\n    setProperty(state, key, value[key]);\n  }\n}\nfunction updateArray(current, next) {\n  if (typeof next === \"function\")\n    next = next(current);\n  next = unwrap(next);\n  if (Array.isArray(next)) {\n    if (current === next)\n      return;\n    let i2 = 0, len = next.length;\n    for (; i2 < len; i2++) {\n      const value = next[i2];\n      if (current[i2] !== value)\n        setProperty(current, i2, value);\n    }\n    setProperty(current, \"length\", len);\n  } else\n    mergeStoreNode(current, next);\n}\nfunction updatePath(current, path, traversed = []) {\n  let part, prev = current;\n  if (path.length > 1) {\n    part = path.shift();\n    const partType = typeof part, isArray = Array.isArray(current);\n    if (Array.isArray(part)) {\n      for (let i2 = 0; i2 < part.length; i2++) {\n        updatePath(current, [part[i2]].concat(path), traversed);\n      }\n      return;\n    } else if (isArray && partType === \"function\") {\n      for (let i2 = 0; i2 < current.length; i2++) {\n        if (part(current[i2], i2))\n          updatePath(current, [i2].concat(path), traversed);\n      }\n      return;\n    } else if (isArray && partType === \"object\") {\n      const {\n        from = 0,\n        to = current.length - 1,\n        by = 1\n      } = part;\n      for (let i2 = from; i2 <= to; i2 += by) {\n        updatePath(current, [i2].concat(path), traversed);\n      }\n      return;\n    } else if (path.length > 1) {\n      updatePath(current[part], path, [part].concat(traversed));\n      return;\n    }\n    prev = current[part];\n    traversed = [part].concat(traversed);\n  }\n  let value = path[0];\n  if (typeof value === \"function\") {\n    value = value(prev, traversed);\n    if (value === prev)\n      return;\n  }\n  if (part === void 0 && value == void 0)\n    return;\n  value = unwrap(value);\n  if (part === void 0 || isWrappable(prev) && isWrappable(value) && !Array.isArray(value)) {\n    mergeStoreNode(prev, value);\n  } else\n    setProperty(current, part, value);\n}\nfunction createStore(...[store, options]) {\n  const unwrappedStore = unwrap(store || {});\n  const isArray = Array.isArray(unwrappedStore);\n  const wrappedStore = wrap$1(unwrappedStore);\n  function setStore(...args) {\n    batch(() => {\n      isArray && args.length === 1 ? updateArray(unwrappedStore, args[0]) : updatePath(unwrappedStore, args);\n    });\n  }\n  return [wrappedStore, setStore];\n}\nconst defaultLightColorsSet = {\n  constant: {\n    black: \"#000000\",\n    white: \"#FFFFFF\"\n  },\n  connectButton: {\n    background: \"#0098EA\",\n    foreground: \"#FFFFFF\"\n  },\n  accent: \"#0098EA\",\n  telegramButton: \"#0098EA\",\n  icon: {\n    primary: \"#0F0F0F\",\n    secondary: \"#7A8999\",\n    tertiary: \"#C1CAD2\",\n    success: \"#29CC6A\",\n    error: \"#F5A73B\"\n  },\n  background: {\n    primary: \"#FFFFFF\",\n    secondary: \"#F1F3F5\",\n    segment: \"#FFFFFF\",\n    tint: \"#F1F3F5\",\n    qr: \"#F1F3F5\"\n  },\n  text: {\n    primary: \"#0F0F0F\",\n    secondary: \"#6A7785\"\n  }\n};\nconst defaultDarkColorsSet = {\n  constant: {\n    black: \"#000000\",\n    white: \"#FFFFFF\"\n  },\n  connectButton: {\n    background: \"#0098EA\",\n    foreground: \"#FFFFFF\"\n  },\n  accent: \"#E5E5EA\",\n  telegramButton: \"#31A6F5\",\n  icon: {\n    primary: \"#E5E5EA\",\n    secondary: \"#909099\",\n    tertiary: \"#434347\",\n    success: \"#29CC6A\",\n    error: \"#F5A73B\"\n  },\n  background: {\n    primary: \"#121214\",\n    secondary: \"#18181A\",\n    segment: \"#262629\",\n    tint: \"#222224\",\n    qr: \"#FFFFFF\"\n  },\n  text: {\n    primary: \"#E5E5EA\",\n    secondary: \"#7D7D85\"\n  }\n};\n/*!\n * is-plain-object <https://github.com/jonschlinkert/is-plain-object>\n *\n * Copyright (c) 2014-2017, Jon Schlinkert.\n * Released under the MIT License.\n */\nfunction isObject(o2) {\n  return Object.prototype.toString.call(o2) === \"[object Object]\";\n}\nfunction isPlainObject(o2) {\n  var ctor, prot;\n  if (isObject(o2) === false)\n    return false;\n  ctor = o2.constructor;\n  if (ctor === void 0)\n    return true;\n  prot = ctor.prototype;\n  if (isObject(prot) === false)\n    return false;\n  if (prot.hasOwnProperty(\"isPrototypeOf\") === false) {\n    return false;\n  }\n  return true;\n}\nfunction mergeOptions(options, defaultOptions) {\n  if (!options) {\n    return defaultOptions;\n  }\n  const overwriteMerge = (_, sourceArray, __) => sourceArray;\n  return deepmerge__WEBPACK_IMPORTED_MODULE_2__(defaultOptions, options, {\n    arrayMerge: overwriteMerge,\n    isMergeableObject: isPlainObject\n  });\n}\nconst [themeState, setThemeState] = createStore({\n  theme: THEME.LIGHT,\n  colors: defaultLightColorsSet,\n  borderRadius: \"m\"\n});\nconst themeColorsMappingDefault = {\n  [THEME.LIGHT]: defaultLightColorsSet,\n  [THEME.DARK]: defaultDarkColorsSet\n};\nconst themeCustomColors = {\n  [THEME.LIGHT]: void 0,\n  [THEME.DARK]: void 0\n};\nfunction setTheme(theme, colorsSet) {\n  if (colorsSet) {\n    themeCustomColors[THEME.DARK] = mergeOptions(\n      colorsSet[THEME.DARK],\n      themeCustomColors[THEME.DARK]\n    );\n    themeCustomColors[THEME.LIGHT] = mergeOptions(\n      colorsSet[THEME.LIGHT],\n      themeCustomColors[THEME.LIGHT]\n    );\n  }\n  setThemeState({\n    theme,\n    colors: mergeOptions(themeCustomColors[theme], themeColorsMappingDefault[theme])\n  });\n}\nfunction setBorderRadius(borderRadius) {\n  setThemeState({ borderRadius });\n}\nfunction setColors(colorsSet) {\n  themeCustomColors[THEME.DARK] = mergeOptions(\n    colorsSet[THEME.DARK],\n    themeCustomColors[THEME.DARK]\n  );\n  themeCustomColors[THEME.LIGHT] = mergeOptions(\n    colorsSet[THEME.LIGHT],\n    themeCustomColors[THEME.LIGHT]\n  );\n  setThemeState((state) => ({\n    colors: mergeOptions(\n      themeCustomColors[state.theme],\n      themeColorsMappingDefault[state.theme]\n    )\n  }));\n}\nconst ImagePlaceholder = styled.div`\n    background-color: ${(props) => props.theme.colors.background.secondary};\n`;\nconst Image = (props) => {\n  let imgRef;\n  const [image, setImage] = createSignal(null);\n  createEffect(() => {\n    const img = new window.Image();\n    img.src = props.src;\n    img.alt = props.alt || \"\";\n    img.setAttribute(\"draggable\", \"false\");\n    if (props.class) {\n      img.classList.add(props.class);\n    }\n    if (img.complete) {\n      return setImage(img);\n    }\n    img.addEventListener(\"load\", () => setImage(img));\n    return () => img.removeEventListener(\"load\", () => setImage(img));\n  });\n  return [createComponent(Show, {\n    get when() {\n      return image();\n    },\n    get children() {\n      return image();\n    }\n  }), createComponent(Show, {\n    get when() {\n      return !image();\n    },\n    get children() {\n      return createComponent(ImagePlaceholder, {\n        get [\"class\"]() {\n          return props.class;\n        },\n        ref(r$) {\n          const _ref$ = imgRef;\n          typeof _ref$ === \"function\" ? _ref$(r$) : imgRef = r$;\n        }\n      });\n    }\n  })];\n};\nlet initParams = {};\ntry {\n  let locationHash = location.hash.toString();\n  initParams = urlParseHashParams(locationHash);\n} catch (e2) {\n}\nlet tmaPlatform = \"unknown\";\nif (initParams == null ? void 0 : initParams.tgWebAppPlatform) {\n  tmaPlatform = (_a = initParams.tgWebAppPlatform) != null ? _a : \"unknown\";\n}\nif (tmaPlatform === \"unknown\") {\n  const window2 = getWindow$1();\n  tmaPlatform = (_d = (_c = (_b = window2 == null ? void 0 : window2.Telegram) == null ? void 0 : _b.WebApp) == null ? void 0 : _c.platform) != null ? _d : \"unknown\";\n}\nlet webAppVersion = \"6.0\";\nif (initParams == null ? void 0 : initParams.tgWebAppVersion) {\n  webAppVersion = initParams.tgWebAppVersion;\n}\nif (!webAppVersion) {\n  const window2 = getWindow$1();\n  webAppVersion = (_g = (_f = (_e = window2 == null ? void 0 : window2.Telegram) == null ? void 0 : _e.WebApp) == null ? void 0 : _f.version) != null ? _g : \"6.0\";\n}\nfunction isTmaPlatform(...platforms) {\n  return platforms.includes(tmaPlatform);\n}\nfunction isInTMA() {\n  var _a2;\n  return tmaPlatform !== \"unknown\" || !!((_a2 = getWindow$1()) == null ? void 0 : _a2.TelegramWebviewProxy);\n}\nfunction isInTelegramBrowser() {\n  var _a2;\n  const isTelegramWebview = !!((_a2 = getWindow$1()) == null ? void 0 : _a2.TelegramWebview);\n  return (isInTMA() || isTelegramWebview) && tmaPlatform === \"unknown\";\n}\nfunction sendExpand() {\n  postEvent(\"web_app_expand\", {});\n}\nfunction sendOpenTelegramLink(link, fallback) {\n  const url = new URL(link);\n  if (url.protocol !== \"http:\" && url.protocol !== \"https:\") {\n    if (fallback) {\n      return fallback();\n    }\n    throw new TonConnectUIError(`Url protocol is not supported: ${url}`);\n  }\n  if (url.hostname !== \"t.me\") {\n    if (fallback) {\n      return fallback();\n    }\n    throw new TonConnectUIError(`Url host is not supported: ${url}`);\n  }\n  const pathFull = url.pathname + url.search;\n  if (isIframe() || versionAtLeast(\"6.1\")) {\n    postEvent(\"web_app_open_tg_link\", { path_full: pathFull });\n  } else {\n    openLinkBlank(\"https://t.me\" + pathFull);\n  }\n}\nfunction isIframe() {\n  try {\n    const window2 = getWindow$1();\n    if (!window2) {\n      return false;\n    }\n    return window2.parent != null && window2 !== window2.parent;\n  } catch (e2) {\n    return false;\n  }\n}\nfunction postEvent(eventType, eventData) {\n  try {\n    const window2 = getWindow$1();\n    if (!window2) {\n      throw new TonConnectUIError(`Can't post event to parent window: window is not defined`);\n    }\n    if (window2.TelegramWebviewProxy !== void 0) {\n      logDebug(\"postEvent\", eventType, eventData);\n      window2.TelegramWebviewProxy.postEvent(eventType, JSON.stringify(eventData));\n    } else if (window2.external && \"notify\" in window2.external) {\n      logDebug(\"postEvent\", eventType, eventData);\n      window2.external.notify(JSON.stringify({ eventType, eventData }));\n    } else if (isIframe()) {\n      const trustedTarget = \"*\";\n      const message = JSON.stringify({ eventType, eventData });\n      logDebug(\"postEvent\", eventType, eventData);\n      window2.parent.postMessage(message, trustedTarget);\n    } else {\n      throw new TonConnectUIError(`Can't post event to TMA`);\n    }\n  } catch (e2) {\n    logError(`Can't post event to parent window: ${e2}`);\n  }\n}\nfunction urlParseHashParams(locationHash) {\n  locationHash = locationHash.replace(/^#/, \"\");\n  let params = {};\n  if (!locationHash.length) {\n    return params;\n  }\n  if (locationHash.indexOf(\"=\") < 0 && locationHash.indexOf(\"?\") < 0) {\n    params._path = urlSafeDecode(locationHash);\n    return params;\n  }\n  let qIndex = locationHash.indexOf(\"?\");\n  if (qIndex >= 0) {\n    let pathParam = locationHash.substr(0, qIndex);\n    params._path = urlSafeDecode(pathParam);\n    locationHash = locationHash.substr(qIndex + 1);\n  }\n  let query_params = urlParseQueryString(locationHash);\n  for (let k in query_params) {\n    params[k] = query_params[k];\n  }\n  return params;\n}\nfunction urlSafeDecode(urlencoded) {\n  try {\n    urlencoded = urlencoded.replace(/\\+/g, \"%20\");\n    return decodeURIComponent(urlencoded);\n  } catch (e2) {\n    return urlencoded;\n  }\n}\nfunction urlParseQueryString(queryString) {\n  let params = {};\n  if (!queryString.length) {\n    return params;\n  }\n  let queryStringParams = queryString.split(\"&\");\n  let i2, param, paramName, paramValue;\n  for (i2 = 0; i2 < queryStringParams.length; i2++) {\n    param = queryStringParams[i2].split(\"=\");\n    paramName = urlSafeDecode(param[0]);\n    paramValue = param[1] == null ? null : urlSafeDecode(param[1]);\n    params[paramName] = paramValue;\n  }\n  return params;\n}\nfunction versionCompare(v1, v2) {\n  if (typeof v1 !== \"string\")\n    v1 = \"\";\n  if (typeof v2 !== \"string\")\n    v2 = \"\";\n  let v1List = v1.replace(/^\\s+|\\s+$/g, \"\").split(\".\");\n  let v2List = v2.replace(/^\\s+|\\s+$/g, \"\").split(\".\");\n  let a2, i2, p1, p2;\n  a2 = Math.max(v1List.length, v2List.length);\n  for (i2 = 0; i2 < a2; i2++) {\n    p1 = parseInt(v1List[i2]) || 0;\n    p2 = parseInt(v2List[i2]) || 0;\n    if (p1 === p2)\n      continue;\n    if (p1 > p2)\n      return 1;\n    return -1;\n  }\n  return 0;\n}\nfunction versionAtLeast(ver) {\n  return versionCompare(webAppVersion, ver) >= 0;\n}\nconst maxWidth = {\n  mobile: 440,\n  tablet: 1020\n};\nfunction isDevice(device) {\n  const window2 = getWindow$1();\n  if (!window2) {\n    return device === \"desktop\";\n  }\n  if (isTmaPlatform(\"weba\")) {\n    return true;\n  }\n  const width = window2.innerWidth;\n  switch (device) {\n    case \"desktop\":\n      return width > maxWidth.tablet;\n    case \"tablet\":\n      return width > maxWidth.mobile;\n    default:\n    case \"mobile\":\n      return width <= maxWidth.mobile || isOS(\"ios\", \"android\", \"ipad\");\n  }\n}\nfunction media(device) {\n  switch (device) {\n    case \"mobile\":\n      return `@media (max-width: ${maxWidth.mobile}px)`;\n    case \"tablet\":\n      return `@media (max-width: ${maxWidth.tablet}px) (min-width: ${maxWidth.mobile}px)`;\n    default:\n    case \"desktop\":\n      return `@media (min-width: ${maxWidth.tablet}px)`;\n  }\n}\nconst mediaTouch = \"@media (hover: none)\";\nconst mediaNotTouch = \"@media not all and (hover: none)\";\nconst borders$5 = {\n  m: \"100vh\",\n  s: \"8px\",\n  none: \"0\"\n};\nconst scaleValues = {\n  s: 0.02,\n  m: 0.04\n};\nconst ButtonStyled$1 = styled.button`\n    display: ${(props) => props.leftIcon || props.rightIcon ? \"flex\" : \"inline-block\"};\n    gap: ${(props) => props.leftIcon || props.rightIcon ? \"6px\" : \"unset\"};\n    align-items: ${(props) => props.leftIcon || props.rightIcon ? \"center\" : \"unset\"};\n    justify-content: ${(props) => props.leftIcon || props.rightIcon ? \"space-between\" : \"unset\"};\n    background-color: ${(props) => props.appearance === \"flat\" ? \"transparent\" : props.appearance === \"secondary\" ? props.theme.colors.background.tint : rgba(props.theme.colors.accent, 0.12)};\n    color: ${(props) => props.appearance === \"secondary\" ? props.theme.colors.text.primary : props.theme.colors.accent};\n\n    padding: ${(props) => props.appearance === \"flat\" ? \"0\" : \"9px 16px\"};\n    padding-left: ${(props) => props.leftIcon && props.appearance !== \"flat\" ? \"12px\" : \"16px\"};\n    padding-right: ${(props) => props.rightIcon && props.appearance !== \"flat\" ? \"12px\" : \"16px\"};\n    border: none;\n    border-radius: ${(props) => borders$5[props.theme.borderRadius]};\n    cursor: ${(props) => props.disabled ? \"not-allowed\" : \"pointer\"};\n\n    font-size: 14px;\n    font-weight: 510;\n    line-height: 18px;\n\n    transition: transform 0.125s ease-in-out;\n\n    ${mediaNotTouch} {\n        &:hover {\n            transform: ${(props) => props.disabled ? \"unset\" : `scale(${1 + scaleValues[props.scale]})`};\n        }\n    }\n\n    &:active {\n        transform: ${(props) => props.disabled ? \"unset\" : `scale(${1 - scaleValues[props.scale]})`};\n    }\n\n    ${mediaTouch} {\n        &:active {\n            transform: ${(props) => props.disabled ? \"unset\" : `scale(${1 - scaleValues[props.scale] * 2})`};\n        }\n    }\n`;\nfunction useDataAttributes(props) {\n  const keys = untrack(() => Object.keys(props).filter((key) => key.startsWith(\"data-\")));\n  const [dataAttrs] = splitProps(props, keys);\n  return dataAttrs;\n}\nconst Button = (props) => {\n  const dataAttrs = useDataAttributes(props);\n  return createComponent(ButtonStyled$1, mergeProps({\n    get appearance() {\n      return props.appearance || \"primary\";\n    },\n    get [\"class\"]() {\n      return props.class;\n    },\n    onClick: (e2) => {\n      var _a2;\n      return (_a2 = props.onClick) == null ? void 0 : _a2.call(props, e2);\n    },\n    onMouseEnter: (e2) => {\n      var _a2;\n      return (_a2 = props.onMouseEnter) == null ? void 0 : _a2.call(props, e2);\n    },\n    onMouseLeave: (e2) => {\n      var _a2;\n      return (_a2 = props.onMouseLeave) == null ? void 0 : _a2.call(props, e2);\n    },\n    ref(r$) {\n      const _ref$ = props.ref;\n      typeof _ref$ === \"function\" ? _ref$(r$) : props.ref = r$;\n    },\n    get disabled() {\n      return props.disabled;\n    },\n    get scale() {\n      return props.scale || \"m\";\n    },\n    get leftIcon() {\n      return !!props.leftIcon;\n    },\n    get rightIcon() {\n      return !!props.rightIcon;\n    },\n    \"data-tc-button\": \"true\"\n  }, dataAttrs, {\n    get children() {\n      return [createMemo(() => props.leftIcon), createMemo(() => props.children), createMemo(() => props.rightIcon)];\n    }\n  }));\n};\nfunction nextFrame(fn) {\n  requestAnimationFrame(() => {\n    requestAnimationFrame(fn);\n  });\n}\nconst Transition = (props) => {\n  let el;\n  let first = true;\n  const [s1, set1] = createSignal();\n  const [s2, set2] = createSignal();\n  const resolved = children(() => props.children);\n  const {\n    onBeforeEnter,\n    onEnter,\n    onAfterEnter,\n    onBeforeExit,\n    onExit,\n    onAfterExit\n  } = props;\n  const classnames = createMemo(() => {\n    const name = props.name || \"s\";\n    return {\n      enterActiveClass: props.enterActiveClass || name + \"-enter-active\",\n      enterClass: props.enterClass || name + \"-enter\",\n      enterToClass: props.enterToClass || name + \"-enter-to\",\n      exitActiveClass: props.exitActiveClass || name + \"-exit-active\",\n      exitClass: props.exitClass || name + \"-exit\",\n      exitToClass: props.exitToClass || name + \"-exit-to\"\n    };\n  });\n  function enterTransition(el2, prev) {\n    if (!first || props.appear) {\n      let endTransition = function(e2) {\n        if (el2 && (!e2 || e2.target === el2)) {\n          el2.removeEventListener(\"transitionend\", endTransition);\n          el2.removeEventListener(\"animationend\", endTransition);\n          el2.classList.remove(...enterActiveClasses);\n          el2.classList.remove(...enterToClasses);\n          batch(() => {\n            s1() !== el2 && set1(el2);\n            s2() === el2 && set2(void 0);\n          });\n          onAfterEnter && onAfterEnter(el2);\n          if (props.mode === \"inout\")\n            exitTransition(el2, prev);\n        }\n      };\n      const enterClasses = classnames().enterClass.split(\" \");\n      const enterActiveClasses = classnames().enterActiveClass.split(\" \");\n      const enterToClasses = classnames().enterToClass.split(\" \");\n      onBeforeEnter && onBeforeEnter(el2);\n      el2.classList.add(...enterClasses);\n      el2.classList.add(...enterActiveClasses);\n      nextFrame(() => {\n        el2.classList.remove(...enterClasses);\n        el2.classList.add(...enterToClasses);\n        onEnter && onEnter(el2, () => endTransition());\n        if (!onEnter || onEnter.length < 2) {\n          el2.addEventListener(\"transitionend\", endTransition);\n          el2.addEventListener(\"animationend\", endTransition);\n        }\n      });\n    }\n    prev && !props.mode ? set2(el2) : set1(el2);\n  }\n  function exitTransition(el2, prev) {\n    const exitClasses = classnames().exitClass.split(\" \");\n    const exitActiveClasses = classnames().exitActiveClass.split(\" \");\n    const exitToClasses = classnames().exitToClass.split(\" \");\n    if (!prev.parentNode)\n      return endTransition();\n    onBeforeExit && onBeforeExit(prev);\n    prev.classList.add(...exitClasses);\n    prev.classList.add(...exitActiveClasses);\n    nextFrame(() => {\n      prev.classList.remove(...exitClasses);\n      prev.classList.add(...exitToClasses);\n    });\n    onExit && onExit(prev, () => endTransition());\n    if (!onExit || onExit.length < 2) {\n      prev.addEventListener(\"transitionend\", endTransition);\n      prev.addEventListener(\"animationend\", endTransition);\n    }\n    function endTransition(e2) {\n      if (!e2 || e2.target === prev) {\n        prev.removeEventListener(\"transitionend\", endTransition);\n        prev.removeEventListener(\"animationend\", endTransition);\n        prev.classList.remove(...exitActiveClasses);\n        prev.classList.remove(...exitToClasses);\n        s1() === prev && set1(void 0);\n        onAfterExit && onAfterExit(prev);\n        if (props.mode === \"outin\")\n          enterTransition(el2, prev);\n      }\n    }\n  }\n  createComputed((prev) => {\n    el = resolved();\n    while (typeof el === \"function\")\n      el = el();\n    return untrack(() => {\n      if (el && el !== prev) {\n        if (props.mode !== \"outin\")\n          enterTransition(el, prev);\n        else if (first)\n          set1(el);\n      }\n      if (prev && prev !== el && props.mode !== \"inout\")\n        exitTransition(el, prev);\n      first = false;\n      return el;\n    });\n  });\n  return [s1, s2];\n};\nfunction getRect(element) {\n  const {\n    top,\n    bottom,\n    left,\n    right,\n    width,\n    height\n  } = element.getBoundingClientRect();\n  const parentRect = element.parentNode.getBoundingClientRect();\n  return {\n    top: top - parentRect.top,\n    bottom,\n    left: left - parentRect.left,\n    right,\n    width,\n    height\n  };\n}\nconst TransitionGroup = (props) => {\n  const resolved = children(() => props.children);\n  const classnames = createMemo(() => {\n    const name = props.name || \"s\";\n    return {\n      enterActiveClass: props.enterActiveClass || name + \"-enter-active\",\n      enterClass: props.enterClass || name + \"-enter\",\n      enterToClass: props.enterToClass || name + \"-enter-to\",\n      exitActiveClass: props.exitActiveClass || name + \"-exit-active\",\n      exitClass: props.exitClass || name + \"-exit\",\n      exitToClass: props.exitToClass || name + \"-exit-to\",\n      moveClass: props.moveClass || name + \"-move\"\n    };\n  });\n  const {\n    onBeforeEnter,\n    onEnter,\n    onAfterEnter,\n    onBeforeExit,\n    onExit,\n    onAfterExit\n  } = props;\n  const [combined, setCombined] = createSignal();\n  let p2 = [];\n  let first = true;\n  createComputed(() => {\n    const c2 = resolved();\n    const comb = [...c2];\n    const next = new Set(c2);\n    const prev = new Set(p2);\n    const enterClasses = classnames().enterClass.split(\" \");\n    const enterActiveClasses = classnames().enterActiveClass.split(\" \");\n    const enterToClasses = classnames().enterToClass.split(\" \");\n    const exitClasses = classnames().exitClass.split(\" \");\n    const exitActiveClasses = classnames().exitActiveClass.split(\" \");\n    const exitToClasses = classnames().exitToClass.split(\" \");\n    for (let i2 = 0; i2 < c2.length; i2++) {\n      const el = c2[i2];\n      if (!first && !prev.has(el)) {\n        let endTransition = function(e2) {\n          if (el && (!e2 || e2.target === el)) {\n            el.removeEventListener(\"transitionend\", endTransition);\n            el.removeEventListener(\"animationend\", endTransition);\n            el.classList.remove(...enterActiveClasses);\n            el.classList.remove(...enterToClasses);\n            onAfterEnter && onAfterEnter(el);\n          }\n        };\n        onBeforeEnter && onBeforeEnter(el);\n        el.classList.add(...enterClasses);\n        el.classList.add(...enterActiveClasses);\n        nextFrame(() => {\n          el.classList.remove(...enterClasses);\n          el.classList.add(...enterToClasses);\n          onEnter && onEnter(el, () => endTransition());\n          if (!onEnter || onEnter.length < 2) {\n            el.addEventListener(\"transitionend\", endTransition);\n            el.addEventListener(\"animationend\", endTransition);\n          }\n        });\n      }\n    }\n    for (let i2 = 0; i2 < p2.length; i2++) {\n      const old = p2[i2];\n      if (!next.has(old) && old.parentNode) {\n        let endTransition = function(e2) {\n          if (!e2 || e2.target === old) {\n            old.removeEventListener(\"transitionend\", endTransition);\n            old.removeEventListener(\"animationend\", endTransition);\n            old.classList.remove(...exitActiveClasses);\n            old.classList.remove(...exitToClasses);\n            onAfterExit && onAfterExit(old);\n            p2 = p2.filter((i3) => i3 !== old);\n            setCombined(p2);\n          }\n        };\n        comb.splice(i2, 0, old);\n        onBeforeExit && onBeforeExit(old);\n        old.classList.add(...exitClasses);\n        old.classList.add(...exitActiveClasses);\n        nextFrame(() => {\n          old.classList.remove(...exitClasses);\n          old.classList.add(...exitToClasses);\n        });\n        onExit && onExit(old, () => endTransition());\n        if (!onExit || onExit.length < 2) {\n          old.addEventListener(\"transitionend\", endTransition);\n          old.addEventListener(\"animationend\", endTransition);\n        }\n      }\n    }\n    p2 = comb;\n    setCombined(comb);\n  });\n  createEffect((nodes) => {\n    const c2 = combined();\n    c2.forEach((child) => {\n      let n2;\n      if (!(n2 = nodes.get(child))) {\n        nodes.set(child, n2 = {\n          pos: getRect(child),\n          new: !first\n        });\n      } else if (n2.new) {\n        n2.new = false;\n        n2.newPos = getRect(child);\n      }\n      if (n2.new) {\n        child.addEventListener(\"transitionend\", () => {\n          n2.new = false;\n          child.parentNode && (n2.newPos = getRect(child));\n        }, {\n          once: true\n        });\n      }\n      n2.newPos && (n2.pos = n2.newPos);\n      n2.newPos = getRect(child);\n    });\n    if (first) {\n      first = false;\n      return nodes;\n    }\n    c2.forEach((child) => {\n      const c3 = nodes.get(child);\n      const oldPos = c3.pos;\n      const newPos = c3.newPos;\n      const dx = oldPos.left - newPos.left;\n      const dy = oldPos.top - newPos.top;\n      if (dx || dy) {\n        c3.moved = true;\n        const s2 = child.style;\n        s2.transform = `translate(${dx}px,${dy}px)`;\n        s2.transitionDuration = \"0s\";\n      }\n    });\n    document.body.offsetHeight;\n    c2.forEach((child) => {\n      const c3 = nodes.get(child);\n      if (c3.moved) {\n        let endTransition = function(e2) {\n          if (e2 && e2.target !== child || !child.parentNode)\n            return;\n          if (!e2 || /transform$/.test(e2.propertyName)) {\n            child.removeEventListener(\"transitionend\", endTransition);\n            child.classList.remove(...moveClasses);\n          }\n        };\n        c3.moved = false;\n        const s2 = child.style;\n        const moveClasses = classnames().moveClass.split(\" \");\n        child.classList.add(...moveClasses);\n        s2.transform = s2.transitionDuration = \"\";\n        child.addEventListener(\"transitionend\", endTransition);\n      }\n    });\n    return nodes;\n  }, /* @__PURE__ */ new Map());\n  return combined;\n};\nfunction clickOutside$1(el, accessor) {\n  const onClick = (e2) => {\n    var _a2;\n    return !el.contains(e2.target) && ((_a2 = accessor()) == null ? void 0 : _a2());\n  };\n  document.body.addEventListener(\"click\", onClick);\n  onCleanup(() => document.body.removeEventListener(\"click\", onClick));\n}\nfunction escPressed(_, accessor) {\n  const onKeyPress = (e2) => {\n    var _a2, _b2;\n    if (e2.key === \"Escape\") {\n      (_a2 = document.activeElement) == null ? void 0 : _a2.blur();\n      (_b2 = accessor()) == null ? void 0 : _b2();\n    }\n  };\n  document.body.addEventListener(\"keydown\", onKeyPress);\n  onCleanup(() => document.body.removeEventListener(\"keydown\", onKeyPress));\n}\nfunction androidBackHandler$1(_, config) {\n  const {\n    isEnabled,\n    onClose\n  } = config();\n  if (!isEnabled) {\n    return;\n  }\n  const userOSIsAndroid = getUserAgent().os === \"android\";\n  if (!userOSIsAndroid) {\n    return;\n  }\n  window.history.pushState(ROUTE_STATE, \"\");\n  const popstateHandler = (event) => {\n    event.preventDefault();\n    onClose();\n  };\n  window.addEventListener(\"popstate\", popstateHandler, {\n    once: true\n  });\n  onCleanup(() => {\n    window.removeEventListener(\"popstate\", popstateHandler);\n    createMacrotask(() => {\n      var _a2;\n      if (((_a2 = window.history.state) == null ? void 0 : _a2[ROUTE_STATE_KEY]) === true) {\n        window.history.back();\n      }\n    });\n  });\n}\nconst ROUTE_STATE_KEY = \"androidBackHandler\";\nconst ROUTE_STATE = {\n  [ROUTE_STATE_KEY]: true\n};\nconst _tmpl$$v = /* @__PURE__ */ template$1(`<svg><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M10.2122 14.3407C10.5384 14.0854 10.5959 13.614 10.3406 13.2878L6.20237 8.00003L10.3406 2.71227C10.5959 2.38607 10.5384 1.91469 10.2122 1.6594C9.88604 1.40412 9.41465 1.46161 9.15937 1.7878L4.65937 7.5378C4.44688 7.80932 4.44688 8.19074 4.65937 8.46226L9.15937 14.2123C9.41465 14.5385 9.88604 14.5959 10.2122 14.3407Z\"></path></svg>`, 4, true);\nconst rotationDegrees = {\n  left: 0,\n  top: 90,\n  right: 180,\n  bottom: 270\n};\nconst ArrowIcon = (props) => {\n  const theme = useTheme();\n  const fill = () => props.fill || theme.colors.icon.secondary;\n  const direction = () => props.direction || \"left\";\n  const Svg = styled(\"svg\")`\n        transform: rotate(${(props2) => rotationDegrees[props2.svgDirection]}deg);\n        transition: transform 0.1s ease-in-out;\n    `;\n  return createComponent(Svg, {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: \"16\",\n    height: \"16\",\n    viewBox: \"0 0 16 16\",\n    fill: \"none\",\n    get svgDirection() {\n      return direction();\n    },\n    get children() {\n      const _el$ = _tmpl$$v.cloneNode(true);\n      createRenderEffect(() => setAttribute(_el$, \"fill\", fill()));\n      return _el$;\n    }\n  });\n};\nconst _tmpl$$u = /* @__PURE__ */ template$1(`<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M2.71966 2.71968C3.01255 2.42678 3.48743 2.42677 3.78032 2.71966L8.00002 6.93925L12.2197 2.71967C12.5126 2.42677 12.9874 2.42678 13.2803 2.71967C13.5732 3.01257 13.5732 3.48744 13.2803 3.78033L9.06068 7.99991L13.2803 12.2197C13.5732 12.5126 13.5732 12.9874 13.2803 13.2803C12.9874 13.5732 12.5126 13.5732 12.2197 13.2803L8.00002 9.06057L3.78033 13.2803C3.48744 13.5732 3.01257 13.5732 2.71967 13.2803C2.42678 12.9874 2.42677 12.5126 2.71967 12.2197L6.93936 7.99991L2.71968 3.78034C2.42678 3.48745 2.42677 3.01257 2.71966 2.71968Z\"></path></svg>`);\nconst CloseIcon = (props) => {\n  const theme = useTheme();\n  const fill = () => props.fill || theme.colors.icon.secondary;\n  return (() => {\n    const _el$ = _tmpl$$u.cloneNode(true), _el$2 = _el$.firstChild;\n    createRenderEffect(() => setAttribute(_el$2, \"fill\", fill()));\n    return _el$;\n  })();\n};\nconst IconButtonStyled = styled.button`\n    padding: 0;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: 32px;\n    height: 32px;\n    border-radius: 50%;\n    background-color: ${(props) => props.theme.colors.background.tint};\n    border: none;\n    cursor: pointer;\n\n    transition: transform 0.125s ease-in-out;\n\n    ${mediaNotTouch} {\n        &:hover {\n            transform: scale(1.04);\n        }\n    }\n\n    &:active {\n        transform: scale(0.96);\n    }\n\n    ${mediaTouch} {\n        &:active {\n            transform: scale(0.92);\n        }\n    }\n`;\nconst IconButton = (props) => {\n  const dataAttrs = useDataAttributes(props);\n  const icon = () => props.icon || \"close\";\n  return createComponent(IconButtonStyled, mergeProps({\n    get [\"class\"]() {\n      return props.class;\n    },\n    onClick: () => props.onClick(),\n    \"data-tc-icon-button\": \"true\"\n  }, dataAttrs, {\n    get children() {\n      return [createComponent(Show, {\n        get when() {\n          return !!props.children;\n        },\n        get children() {\n          return props.children;\n        }\n      }), createComponent(Show, {\n        get when() {\n          return !props.children;\n        },\n        get children() {\n          return createComponent(Switch, {\n            get children() {\n              return [createComponent(Match, {\n                get when() {\n                  return icon() === \"close\";\n                },\n                get children() {\n                  return createComponent(CloseIcon, {\n                    get fill() {\n                      return props.fill;\n                    }\n                  });\n                }\n              }), createComponent(Match, {\n                get when() {\n                  return icon() === \"arrow\";\n                },\n                get children() {\n                  return createComponent(ArrowIcon, {\n                    get fill() {\n                      return props.fill;\n                    }\n                  });\n                }\n              }), createComponent(Match, {\n                get when() {\n                  return icon() === \"question\";\n                },\n                get children() {\n                  return createComponent(QuestionIcon, {\n                    get fill() {\n                      return props.fill;\n                    }\n                  });\n                }\n              }), createComponent(Match, {\n                get when() {\n                  return typeof icon() !== \"string\";\n                },\n                get children() {\n                  return icon();\n                }\n              })];\n            }\n          });\n        }\n      })];\n    }\n  }));\n};\nconst borders$4 = {\n  m: \"24px\",\n  s: \"16px\",\n  none: \"0\"\n};\nconst ModalBackgroundStyled = styled.div`\n    display: flex;\n    position: fixed;\n    z-index: 1000;\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 100%;\n    background-color: rgba(0, 0, 0, 0.4);\n    padding: 20px 0;\n    overflow-y: auto;\n\n    ${media(\"mobile\")} {\n        padding-bottom: 0;\n    }\n`;\nconst ModalWrapperClass = u`\n    box-shadow: 0 4px 16px rgba(0, 0, 0, 0.08), 0 16px 64px rgba(0, 0, 0, 0.16);\n    width: fit-content;\n    margin: auto;\n\n    ${media(\"mobile\")} {\n        width: 100%;\n        height: fit-content;\n        margin: auto 0 0 0;\n    }\n`;\nconst ModalBodyStyled = styled.div`\n    position: relative;\n    min-height: 100px;\n    width: 416px;\n    padding: 44px 56px 24px;\n\n    box-shadow: 0 2px 8px 0 rgba(0, 0, 0, 0.04);\n\n    background-color: ${(props) => props.theme.colors.background.primary};\n    border-radius: ${(props) => borders$4[props.theme.borderRadius]};\n\n    ${media(\"mobile\")} {\n        width: 100%;\n    }\n`;\nconst CloseButtonStyled = styled(IconButton)`\n    position: absolute;\n    right: 16px;\n    top: 16px;\n`;\nconst ModalFooterStyled = styled.div`\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: 16px 16px 16px 18px;\n    border-radius: 0 0 ${(props) => borders$4[props.theme.borderRadius]}\n        ${(props) => borders$4[props.theme.borderRadius]};\n`;\nconst QuestionButtonStyled = styled(IconButton)`\n    background-color: ${(props) => rgba(props.theme.colors.icon.secondary, 0.12)};\n`;\nclass AnimationTimelineNoop {\n  constructor() {\n    __publicField(this, \"currentTime\", 0);\n  }\n}\nconst _AnimationNoop = class {\n  constructor() {\n    __publicField(this, \"currentTime\", 0);\n    __publicField(this, \"playbackRate\", 1);\n    __publicField(this, \"startTime\", null);\n    __publicField(this, \"timeline\", new AnimationTimelineNoop());\n    __publicField(this, \"finished\", Promise.resolve(this));\n    __publicField(this, \"effect\", null);\n    __publicField(this, \"id\", \"\");\n    __publicField(this, \"pending\", false);\n    __publicField(this, \"playState\", \"finished\");\n    __publicField(this, \"replaceState\", \"active\");\n    __publicField(this, \"ready\", Promise.resolve(this));\n    __publicField(this, \"oncancel\", null);\n    __publicField(this, \"onfinish\", null);\n    __publicField(this, \"onremove\", null);\n  }\n  static create() {\n    if (!_AnimationNoop._instance) {\n      logWarning(\n        \"Animation is not supported in this environment: please consider using the `web-animations-js` polyfill to provide a fallback implementation of the Web Animations API.\"\n      );\n      _AnimationNoop._instance = new _AnimationNoop();\n    }\n    return _AnimationNoop._instance;\n  }\n  cancel() {\n  }\n  finish() {\n  }\n  pause() {\n  }\n  play() {\n  }\n  reverse() {\n  }\n  addEventListener(_type, _listener, _options) {\n  }\n  dispatchEvent(_event) {\n    return false;\n  }\n  removeEventListener(_type, _callback, _options) {\n  }\n  updatePlaybackRate(_playbackRate) {\n  }\n  commitStyles() {\n  }\n  persist() {\n  }\n};\nlet AnimationNoop = _AnimationNoop;\n__publicField(AnimationNoop, \"_instance\", null);\nfunction animate(element, keyframes, options) {\n  if (\"animate\" in element) {\n    return element.animate(keyframes, options);\n  }\n  return AnimationNoop.create();\n}\nconst _tmpl$$t = /* @__PURE__ */ template$1(`<div></div>`);\nconst clickOutside = clickOutside$1;\nconst keyPressed = escPressed;\nconst androidBackHandler = androidBackHandler$1;\nconst Modal = (props) => {\n  const theme = useTheme();\n  const dataAttrs = useDataAttributes(props);\n  createEffect(() => {\n    if (props.opened) {\n      disableScroll();\n    } else {\n      enableScroll();\n    }\n  });\n  return createComponent(Transition, {\n    onBeforeEnter: (el) => {\n      const duration = isDevice(\"mobile\") ? 200 : 100;\n      animate(el, [{\n        opacity: 0\n      }, {\n        opacity: 1\n      }], {\n        duration\n      });\n      if (isDevice(\"mobile\")) {\n        animate(el.firstElementChild, [{\n          transform: \"translateY(390px)\"\n        }, {\n          transform: \"translateY(0)\"\n        }], {\n          duration\n        });\n      }\n    },\n    onExit: (el, done) => {\n      const duration = isDevice(\"mobile\") ? 200 : 100;\n      const backgroundAnimation = animate(el, [{\n        opacity: 1\n      }, {\n        opacity: 0\n      }], {\n        duration\n      });\n      if (isDevice(\"mobile\")) {\n        const contentAnimation = animate(el.firstElementChild, [{\n          transform: \"translateY(0)\"\n        }, {\n          transform: \"translateY(390px)\"\n        }], {\n          duration\n        });\n        Promise.all([backgroundAnimation.finished, contentAnimation.finished]).then(done);\n      } else {\n        backgroundAnimation.finished.then(done);\n      }\n    },\n    get children() {\n      return createComponent(Show, {\n        get when() {\n          return props.opened;\n        },\n        get children() {\n          return createComponent(ModalBackgroundStyled, mergeProps({\n            \"data-tc-modal\": \"true\"\n          }, dataAttrs, {\n            get children() {\n              const _el$ = _tmpl$$t.cloneNode(true);\n              use(androidBackHandler, _el$, () => ({\n                isEnabled: props.enableAndroidBackHandler,\n                onClose: () => props.onClose()\n              }));\n              use(keyPressed, _el$, () => () => props.onClose());\n              use(clickOutside, _el$, () => () => props.onClose());\n              insert(_el$, createComponent(ModalBodyStyled, {\n                get [\"class\"]() {\n                  return props.class;\n                },\n                get children() {\n                  return [createComponent(CloseButtonStyled, {\n                    icon: \"close\",\n                    onClick: () => props.onClose()\n                  }), createMemo(() => props.children)];\n                }\n              }), null);\n              insert(_el$, createComponent(Show, {\n                get when() {\n                  return props.onClickQuestion;\n                },\n                get children() {\n                  return createComponent(ModalFooterStyled, {\n                    get children() {\n                      return [createComponent(TonConnectBrand, {}), createComponent(QuestionButtonStyled, {\n                        get onClick() {\n                          return props.onClickQuestion;\n                        },\n                        icon: \"question\"\n                      })];\n                    }\n                  });\n                }\n              }), null);\n              createRenderEffect(() => className(_el$, classnames__WEBPACK_IMPORTED_MODULE_3__(ModalWrapperClass, u`\n                                border-radius: ${borders$4[theme.borderRadius]};\n                                background-color: ${theme.colors.background.tint};\n\n                                ${media(\"mobile\")} {\n                                    border-radius: ${borders$4[theme.borderRadius]}\n                                        ${borders$4[theme.borderRadius]} 0 0;\n                                }\n                            `)));\n              return _el$;\n            }\n          }));\n        }\n      });\n    }\n  });\n};\nconst wrapperBorderRadius = {\n  m: \"22px\",\n  s: \"12px\",\n  none: \"0\"\n};\nconst sliderBorderRadius = {\n  m: \"18px\",\n  s: \"8px\",\n  none: \"0\"\n};\nconst TabBarStyled = styled.div`\n    display: grid;\n    grid-template: 1fr / 1fr 1fr;\n    width: fit-content;\n    justify-items: center;\n    gap: 4px;\n\n    position: relative;\n    padding: 4px;\n    border-radius: ${(props) => wrapperBorderRadius[props.theme.borderRadius]};\n\n    background-color: ${(props) => props.theme.colors.background.secondary};\n`;\nconst SliderStyled = styled.div`\n    position: absolute;\n    top: 4px;\n    left: 4px;\n\n    height: calc(100% - 8px);\n    width: calc(50% - 4px);\n\n    border-radius: ${(props) => sliderBorderRadius[props.theme.borderRadius]};\n    background-color: ${(props) => props.theme.colors.background.segment};\n\n    transform: ${(props) => props.right ? \"translateX(100%)\" : \"translateX(0)\"};\n\n    transition: transform 0.13s ease-in-out;\n`;\nconst InputStyled = styled.input`\n    display: none;\n`;\nconst LabelStyled = styled.label`\n    padding: 9px 12px;\n    z-index: 1;\n\n    cursor: ${(props) => props.isActive ? \"default\" : \"pointer\"};\n\n    transition: transform 0.13s ease-in-out;\n\n    &:hover {\n        transform: ${(props) => props.isActive ? \"none\" : \"scale(1.025)\"};\n    }\n\n    > * {\n        ${(props) => !props.isActive ? `color: ${props.theme.colors.text.secondary};` : \"\"}\n    }\n`;\nconst TabBar = (props) => {\n  const groupName = \"tabBar\" + Math.floor(Math.random() * 1e4);\n  return createComponent(TabBarStyled, {\n    get [\"class\"]() {\n      return props.class;\n    },\n    \"data-tc-tab-bar\": \"true\",\n    get children() {\n      return [createComponent(SliderStyled, {\n        get right() {\n          return props.selectedTabIndex === 1;\n        }\n      }), createComponent(LabelStyled, {\n        get isActive() {\n          return props.selectedTabIndex === 0;\n        },\n        get children() {\n          return [createComponent(InputStyled, {\n            type: \"radio\",\n            name: groupName,\n            get checked() {\n              return props.selectedTabIndex === 0;\n            },\n            onInput: () => {\n              var _a2;\n              return (_a2 = props.onSelectedTabIndexChange) == null ? void 0 : _a2.call(props, 0);\n            }\n          }), createMemo(() => props.tab1)];\n        }\n      }), createComponent(LabelStyled, {\n        get isActive() {\n          return props.selectedTabIndex === 1;\n        },\n        get children() {\n          return [createComponent(InputStyled, {\n            type: \"radio\",\n            get checked() {\n              return props.selectedTabIndex === 1;\n            },\n            name: groupName,\n            onInput: () => {\n              var _a2;\n              return (_a2 = props.onSelectedTabIndexChange) == null ? void 0 : _a2.call(props, 1);\n            }\n          }), createMemo(() => props.tab2)];\n        }\n      })];\n    }\n  });\n};\nconst backgroundBorders = {\n  m: \"16px\",\n  s: \"12px\",\n  none: \"0\"\n};\nconst imageBorders = {\n  m: \"12px\",\n  s: \"8px\",\n  none: \"0\"\n};\nconst qrNormalSize = 256;\nconst imgSizeDefault = 60;\nconst picSizeDefault = 48;\nconst qrPaddingTop = 24;\nconst CopyIconButton = styled.div`\n    width: 52px;\n    height: 52px;\n    background: transparent;\n    position: absolute;\n    right: 0;\n    bottom: 0;\n\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    transition: transform 0.125s ease-in-out;\n`;\nconst QrCodeBackground = styled.button`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    position: relative;\n    background-color: ${(props) => props.theme.colors.background.qr};\n    border-radius: ${(props) => backgroundBorders[props.theme.borderRadius]};\n    padding: ${toPx(qrPaddingTop)} 0;\n    height: ${toPx(qrNormalSize + qrPaddingTop * 2)};\n    width: 100%;\n\n    overflow: hidden;\n    cursor: pointer;\n    border: none;\n\n    ${mediaNotTouch} {\n        &:hover {\n            ${CopyIconButton.class} {\n                transform: scale(1.04);\n            }\n        }\n    }\n\n    &:active {\n        ${CopyIconButton.class} {\n            transform: scale(0.96);\n        }\n    }\n\n    ${mediaTouch} {\n        &:active {\n            ${CopyIconButton.class} {\n                transform: scale(0.92);\n            }\n        }\n    }\n`;\nconst QrCodeWrapper$2 = styled.div`\n    position: relative;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    margin: 0 auto;\n\n    > div:first-child {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n    }\n\n    rect {\n        fill: transparent;\n    }\n\n    path {\n        fill: ${(props) => props.theme.colors.constant.black};\n    }\n`;\nconst ImageBackground = styled.div`\n    position: absolute;\n    width: ${toPx(imgSizeDefault)};\n    height: ${toPx(imgSizeDefault)};\n    background: ${(props) => props.theme.colors.background.qr};\n\n    display: flex;\n    align-items: center;\n    justify-content: center;\n`;\nconst ImageStyled$3 = styled(Image)`\n    width: ${(props) => toPx(props.size)};\n    height: ${(props) => toPx(props.size)};\n    border-radius: ${(props) => imageBorders[props.theme.borderRadius]};\n    background-color: ${(props) => props.theme.colors.background.qr};\n`;\nconst CopiedBoxStyled = styled.div`\n    position: absolute;\n    bottom: 14px;\n    left: 50%;\n    transform: translate(-50%, 0);\n\n    display: flex;\n    gap: 6px;\n    align-items: center;\n    border-radius: 18px;\n    min-width: 126px;\n    padding: 9px 16px 9px 10px;\n\n    filter: drop-shadow(0px 2px 8px rgba(0, 0, 0, 0.08));\n    background-color: ${(props) => props.theme.colors.background.segment};\n`;\nvar qrcode$1 = { exports: {} };\n(function(module, exports) {\n  var qrcode2 = function() {\n    var qrcode3 = function(typeNumber, errorCorrectionLevel) {\n      var PAD0 = 236;\n      var PAD1 = 17;\n      var _typeNumber = typeNumber;\n      var _errorCorrectionLevel = QRErrorCorrectionLevel[errorCorrectionLevel];\n      var _modules = null;\n      var _moduleCount = 0;\n      var _dataCache = null;\n      var _dataList = [];\n      var _this = {};\n      var makeImpl = function(test, maskPattern) {\n        _moduleCount = _typeNumber * 4 + 17;\n        _modules = function(moduleCount) {\n          var modules = new Array(moduleCount);\n          for (var row = 0; row < moduleCount; row += 1) {\n            modules[row] = new Array(moduleCount);\n            for (var col = 0; col < moduleCount; col += 1) {\n              modules[row][col] = null;\n            }\n          }\n          return modules;\n        }(_moduleCount);\n        setupPositionProbePattern(0, 0);\n        setupPositionProbePattern(_moduleCount - 7, 0);\n        setupPositionProbePattern(0, _moduleCount - 7);\n        setupPositionAdjustPattern();\n        setupTimingPattern();\n        setupTypeInfo(test, maskPattern);\n        if (_typeNumber >= 7) {\n          setupTypeNumber(test);\n        }\n        if (_dataCache == null) {\n          _dataCache = createData(_typeNumber, _errorCorrectionLevel, _dataList);\n        }\n        mapData(_dataCache, maskPattern);\n      };\n      var setupPositionProbePattern = function(row, col) {\n        for (var r = -1; r <= 7; r += 1) {\n          if (row + r <= -1 || _moduleCount <= row + r)\n            continue;\n          for (var c2 = -1; c2 <= 7; c2 += 1) {\n            if (col + c2 <= -1 || _moduleCount <= col + c2)\n              continue;\n            if (0 <= r && r <= 6 && (c2 == 0 || c2 == 6) || 0 <= c2 && c2 <= 6 && (r == 0 || r == 6) || 2 <= r && r <= 4 && 2 <= c2 && c2 <= 4) {\n              _modules[row + r][col + c2] = true;\n            } else {\n              _modules[row + r][col + c2] = false;\n            }\n          }\n        }\n      };\n      var getBestMaskPattern = function() {\n        var minLostPoint = 0;\n        var pattern = 0;\n        for (var i2 = 0; i2 < 8; i2 += 1) {\n          makeImpl(true, i2);\n          var lostPoint = QRUtil.getLostPoint(_this);\n          if (i2 == 0 || minLostPoint > lostPoint) {\n            minLostPoint = lostPoint;\n            pattern = i2;\n          }\n        }\n        return pattern;\n      };\n      var setupTimingPattern = function() {\n        for (var r = 8; r < _moduleCount - 8; r += 1) {\n          if (_modules[r][6] != null) {\n            continue;\n          }\n          _modules[r][6] = r % 2 == 0;\n        }\n        for (var c2 = 8; c2 < _moduleCount - 8; c2 += 1) {\n          if (_modules[6][c2] != null) {\n            continue;\n          }\n          _modules[6][c2] = c2 % 2 == 0;\n        }\n      };\n      var setupPositionAdjustPattern = function() {\n        var pos = QRUtil.getPatternPosition(_typeNumber);\n        for (var i2 = 0; i2 < pos.length; i2 += 1) {\n          for (var j = 0; j < pos.length; j += 1) {\n            var row = pos[i2];\n            var col = pos[j];\n            if (_modules[row][col] != null) {\n              continue;\n            }\n            for (var r = -2; r <= 2; r += 1) {\n              for (var c2 = -2; c2 <= 2; c2 += 1) {\n                if (r == -2 || r == 2 || c2 == -2 || c2 == 2 || r == 0 && c2 == 0) {\n                  _modules[row + r][col + c2] = true;\n                } else {\n                  _modules[row + r][col + c2] = false;\n                }\n              }\n            }\n          }\n        }\n      };\n      var setupTypeNumber = function(test) {\n        var bits = QRUtil.getBCHTypeNumber(_typeNumber);\n        for (var i2 = 0; i2 < 18; i2 += 1) {\n          var mod = !test && (bits >> i2 & 1) == 1;\n          _modules[Math.floor(i2 / 3)][i2 % 3 + _moduleCount - 8 - 3] = mod;\n        }\n        for (var i2 = 0; i2 < 18; i2 += 1) {\n          var mod = !test && (bits >> i2 & 1) == 1;\n          _modules[i2 % 3 + _moduleCount - 8 - 3][Math.floor(i2 / 3)] = mod;\n        }\n      };\n      var setupTypeInfo = function(test, maskPattern) {\n        var data = _errorCorrectionLevel << 3 | maskPattern;\n        var bits = QRUtil.getBCHTypeInfo(data);\n        for (var i2 = 0; i2 < 15; i2 += 1) {\n          var mod = !test && (bits >> i2 & 1) == 1;\n          if (i2 < 6) {\n            _modules[i2][8] = mod;\n          } else if (i2 < 8) {\n            _modules[i2 + 1][8] = mod;\n          } else {\n            _modules[_moduleCount - 15 + i2][8] = mod;\n          }\n        }\n        for (var i2 = 0; i2 < 15; i2 += 1) {\n          var mod = !test && (bits >> i2 & 1) == 1;\n          if (i2 < 8) {\n            _modules[8][_moduleCount - i2 - 1] = mod;\n          } else if (i2 < 9) {\n            _modules[8][15 - i2 - 1 + 1] = mod;\n          } else {\n            _modules[8][15 - i2 - 1] = mod;\n          }\n        }\n        _modules[_moduleCount - 8][8] = !test;\n      };\n      var mapData = function(data, maskPattern) {\n        var inc = -1;\n        var row = _moduleCount - 1;\n        var bitIndex = 7;\n        var byteIndex = 0;\n        var maskFunc = QRUtil.getMaskFunction(maskPattern);\n        for (var col = _moduleCount - 1; col > 0; col -= 2) {\n          if (col == 6)\n            col -= 1;\n          while (true) {\n            for (var c2 = 0; c2 < 2; c2 += 1) {\n              if (_modules[row][col - c2] == null) {\n                var dark = false;\n                if (byteIndex < data.length) {\n                  dark = (data[byteIndex] >>> bitIndex & 1) == 1;\n                }\n                var mask = maskFunc(row, col - c2);\n                if (mask) {\n                  dark = !dark;\n                }\n                _modules[row][col - c2] = dark;\n                bitIndex -= 1;\n                if (bitIndex == -1) {\n                  byteIndex += 1;\n                  bitIndex = 7;\n                }\n              }\n            }\n            row += inc;\n            if (row < 0 || _moduleCount <= row) {\n              row -= inc;\n              inc = -inc;\n              break;\n            }\n          }\n        }\n      };\n      var createBytes = function(buffer, rsBlocks) {\n        var offset = 0;\n        var maxDcCount = 0;\n        var maxEcCount = 0;\n        var dcdata = new Array(rsBlocks.length);\n        var ecdata = new Array(rsBlocks.length);\n        for (var r = 0; r < rsBlocks.length; r += 1) {\n          var dcCount = rsBlocks[r].dataCount;\n          var ecCount = rsBlocks[r].totalCount - dcCount;\n          maxDcCount = Math.max(maxDcCount, dcCount);\n          maxEcCount = Math.max(maxEcCount, ecCount);\n          dcdata[r] = new Array(dcCount);\n          for (var i2 = 0; i2 < dcdata[r].length; i2 += 1) {\n            dcdata[r][i2] = 255 & buffer.getBuffer()[i2 + offset];\n          }\n          offset += dcCount;\n          var rsPoly = QRUtil.getErrorCorrectPolynomial(ecCount);\n          var rawPoly = qrPolynomial(dcdata[r], rsPoly.getLength() - 1);\n          var modPoly = rawPoly.mod(rsPoly);\n          ecdata[r] = new Array(rsPoly.getLength() - 1);\n          for (var i2 = 0; i2 < ecdata[r].length; i2 += 1) {\n            var modIndex = i2 + modPoly.getLength() - ecdata[r].length;\n            ecdata[r][i2] = modIndex >= 0 ? modPoly.getAt(modIndex) : 0;\n          }\n        }\n        var totalCodeCount = 0;\n        for (var i2 = 0; i2 < rsBlocks.length; i2 += 1) {\n          totalCodeCount += rsBlocks[i2].totalCount;\n        }\n        var data = new Array(totalCodeCount);\n        var index = 0;\n        for (var i2 = 0; i2 < maxDcCount; i2 += 1) {\n          for (var r = 0; r < rsBlocks.length; r += 1) {\n            if (i2 < dcdata[r].length) {\n              data[index] = dcdata[r][i2];\n              index += 1;\n            }\n          }\n        }\n        for (var i2 = 0; i2 < maxEcCount; i2 += 1) {\n          for (var r = 0; r < rsBlocks.length; r += 1) {\n            if (i2 < ecdata[r].length) {\n              data[index] = ecdata[r][i2];\n              index += 1;\n            }\n          }\n        }\n        return data;\n      };\n      var createData = function(typeNumber2, errorCorrectionLevel2, dataList) {\n        var rsBlocks = QRRSBlock.getRSBlocks(typeNumber2, errorCorrectionLevel2);\n        var buffer = qrBitBuffer();\n        for (var i2 = 0; i2 < dataList.length; i2 += 1) {\n          var data = dataList[i2];\n          buffer.put(data.getMode(), 4);\n          buffer.put(data.getLength(), QRUtil.getLengthInBits(data.getMode(), typeNumber2));\n          data.write(buffer);\n        }\n        var totalDataCount = 0;\n        for (var i2 = 0; i2 < rsBlocks.length; i2 += 1) {\n          totalDataCount += rsBlocks[i2].dataCount;\n        }\n        if (buffer.getLengthInBits() > totalDataCount * 8) {\n          throw \"code length overflow. (\" + buffer.getLengthInBits() + \">\" + totalDataCount * 8 + \")\";\n        }\n        if (buffer.getLengthInBits() + 4 <= totalDataCount * 8) {\n          buffer.put(0, 4);\n        }\n        while (buffer.getLengthInBits() % 8 != 0) {\n          buffer.putBit(false);\n        }\n        while (true) {\n          if (buffer.getLengthInBits() >= totalDataCount * 8) {\n            break;\n          }\n          buffer.put(PAD0, 8);\n          if (buffer.getLengthInBits() >= totalDataCount * 8) {\n            break;\n          }\n          buffer.put(PAD1, 8);\n        }\n        return createBytes(buffer, rsBlocks);\n      };\n      _this.addData = function(data, mode) {\n        mode = mode || \"Byte\";\n        var newData = null;\n        switch (mode) {\n          case \"Numeric\":\n            newData = qrNumber(data);\n            break;\n          case \"Alphanumeric\":\n            newData = qrAlphaNum(data);\n            break;\n          case \"Byte\":\n            newData = qr8BitByte(data);\n            break;\n          case \"Kanji\":\n            newData = qrKanji(data);\n            break;\n          default:\n            throw \"mode:\" + mode;\n        }\n        _dataList.push(newData);\n        _dataCache = null;\n      };\n      _this.isDark = function(row, col) {\n        if (row < 0 || _moduleCount <= row || col < 0 || _moduleCount <= col) {\n          throw row + \",\" + col;\n        }\n        return _modules[row][col];\n      };\n      _this.getModuleCount = function() {\n        return _moduleCount;\n      };\n      _this.make = function() {\n        if (_typeNumber < 1) {\n          var typeNumber2 = 1;\n          for (; typeNumber2 < 40; typeNumber2++) {\n            var rsBlocks = QRRSBlock.getRSBlocks(typeNumber2, _errorCorrectionLevel);\n            var buffer = qrBitBuffer();\n            for (var i2 = 0; i2 < _dataList.length; i2++) {\n              var data = _dataList[i2];\n              buffer.put(data.getMode(), 4);\n              buffer.put(data.getLength(), QRUtil.getLengthInBits(data.getMode(), typeNumber2));\n              data.write(buffer);\n            }\n            var totalDataCount = 0;\n            for (var i2 = 0; i2 < rsBlocks.length; i2++) {\n              totalDataCount += rsBlocks[i2].dataCount;\n            }\n            if (buffer.getLengthInBits() <= totalDataCount * 8) {\n              break;\n            }\n          }\n          _typeNumber = typeNumber2;\n        }\n        makeImpl(false, getBestMaskPattern());\n      };\n      _this.createTableTag = function(cellSize, margin) {\n        cellSize = cellSize || 2;\n        margin = typeof margin == \"undefined\" ? cellSize * 4 : margin;\n        var qrHtml = \"\";\n        qrHtml += '<table style=\"';\n        qrHtml += \" border-width: 0px; border-style: none;\";\n        qrHtml += \" border-collapse: collapse;\";\n        qrHtml += \" padding: 0px; margin: \" + margin + \"px;\";\n        qrHtml += '\">';\n        qrHtml += \"<tbody>\";\n        for (var r = 0; r < _this.getModuleCount(); r += 1) {\n          qrHtml += \"<tr>\";\n          for (var c2 = 0; c2 < _this.getModuleCount(); c2 += 1) {\n            qrHtml += '<td style=\"';\n            qrHtml += \" border-width: 0px; border-style: none;\";\n            qrHtml += \" border-collapse: collapse;\";\n            qrHtml += \" padding: 0px; margin: 0px;\";\n            qrHtml += \" width: \" + cellSize + \"px;\";\n            qrHtml += \" height: \" + cellSize + \"px;\";\n            qrHtml += \" background-color: \";\n            qrHtml += _this.isDark(r, c2) ? \"#000000\" : \"#ffffff\";\n            qrHtml += \";\";\n            qrHtml += '\"/>';\n          }\n          qrHtml += \"</tr>\";\n        }\n        qrHtml += \"</tbody>\";\n        qrHtml += \"</table>\";\n        return qrHtml;\n      };\n      _this.createSvgTag = function(cellSize, margin, alt, title) {\n        var opts = {};\n        if (typeof arguments[0] == \"object\") {\n          opts = arguments[0];\n          cellSize = opts.cellSize;\n          margin = opts.margin;\n          alt = opts.alt;\n          title = opts.title;\n        }\n        cellSize = cellSize || 2;\n        margin = typeof margin == \"undefined\" ? cellSize * 4 : margin;\n        alt = typeof alt === \"string\" ? { text: alt } : alt || {};\n        alt.text = alt.text || null;\n        alt.id = alt.text ? alt.id || \"qrcode-description\" : null;\n        title = typeof title === \"string\" ? { text: title } : title || {};\n        title.text = title.text || null;\n        title.id = title.text ? title.id || \"qrcode-title\" : null;\n        var size = _this.getModuleCount() * cellSize + margin * 2;\n        var c2, mc, r, mr, qrSvg = \"\", rect;\n        rect = \"l\" + cellSize + \",0 0,\" + cellSize + \" -\" + cellSize + \",0 0,-\" + cellSize + \"z \";\n        qrSvg += '<svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"';\n        qrSvg += !opts.scalable ? ' width=\"' + size + 'px\" height=\"' + size + 'px\"' : \"\";\n        qrSvg += ' viewBox=\"0 0 ' + size + \" \" + size + '\" ';\n        qrSvg += ' preserveAspectRatio=\"xMinYMin meet\"';\n        qrSvg += title.text || alt.text ? ' role=\"img\" aria-labelledby=\"' + escapeXml([title.id, alt.id].join(\" \").trim()) + '\"' : \"\";\n        qrSvg += \">\";\n        qrSvg += title.text ? '<title id=\"' + escapeXml(title.id) + '\">' + escapeXml(title.text) + \"</title>\" : \"\";\n        qrSvg += alt.text ? '<description id=\"' + escapeXml(alt.id) + '\">' + escapeXml(alt.text) + \"</description>\" : \"\";\n        qrSvg += '<rect width=\"100%\" height=\"100%\" fill=\"white\" cx=\"0\" cy=\"0\"/>';\n        qrSvg += '<path d=\"';\n        for (r = 0; r < _this.getModuleCount(); r += 1) {\n          mr = r * cellSize + margin;\n          for (c2 = 0; c2 < _this.getModuleCount(); c2 += 1) {\n            if (_this.isDark(r, c2)) {\n              mc = c2 * cellSize + margin;\n              qrSvg += \"M\" + mc + \",\" + mr + rect;\n            }\n          }\n        }\n        qrSvg += '\" stroke=\"transparent\" fill=\"black\"/>';\n        qrSvg += \"</svg>\";\n        return qrSvg;\n      };\n      _this.createDataURL = function(cellSize, margin) {\n        cellSize = cellSize || 2;\n        margin = typeof margin == \"undefined\" ? cellSize * 4 : margin;\n        var size = _this.getModuleCount() * cellSize + margin * 2;\n        var min2 = margin;\n        var max2 = size - margin;\n        return createDataURL(size, size, function(x, y) {\n          if (min2 <= x && x < max2 && min2 <= y && y < max2) {\n            var c2 = Math.floor((x - min2) / cellSize);\n            var r = Math.floor((y - min2) / cellSize);\n            return _this.isDark(r, c2) ? 0 : 1;\n          } else {\n            return 1;\n          }\n        });\n      };\n      _this.createImgTag = function(cellSize, margin, alt) {\n        cellSize = cellSize || 2;\n        margin = typeof margin == \"undefined\" ? cellSize * 4 : margin;\n        var size = _this.getModuleCount() * cellSize + margin * 2;\n        var img = \"\";\n        img += \"<img\";\n        img += ' src=\"';\n        img += _this.createDataURL(cellSize, margin);\n        img += '\"';\n        img += ' width=\"';\n        img += size;\n        img += '\"';\n        img += ' height=\"';\n        img += size;\n        img += '\"';\n        if (alt) {\n          img += ' alt=\"';\n          img += escapeXml(alt);\n          img += '\"';\n        }\n        img += \"/>\";\n        return img;\n      };\n      var escapeXml = function(s2) {\n        var escaped = \"\";\n        for (var i2 = 0; i2 < s2.length; i2 += 1) {\n          var c2 = s2.charAt(i2);\n          switch (c2) {\n            case \"<\":\n              escaped += \"&lt;\";\n              break;\n            case \">\":\n              escaped += \"&gt;\";\n              break;\n            case \"&\":\n              escaped += \"&amp;\";\n              break;\n            case '\"':\n              escaped += \"&quot;\";\n              break;\n            default:\n              escaped += c2;\n              break;\n          }\n        }\n        return escaped;\n      };\n      var _createHalfASCII = function(margin) {\n        var cellSize = 1;\n        margin = typeof margin == \"undefined\" ? cellSize * 2 : margin;\n        var size = _this.getModuleCount() * cellSize + margin * 2;\n        var min2 = margin;\n        var max2 = size - margin;\n        var y, x, r1, r2, p2;\n        var blocks = {\n          \"\\u2588\\u2588\": \"\\u2588\",\n          \"\\u2588 \": \"\\u2580\",\n          \" \\u2588\": \"\\u2584\",\n          \"  \": \" \"\n        };\n        var blocksLastLineNoMargin = {\n          \"\\u2588\\u2588\": \"\\u2580\",\n          \"\\u2588 \": \"\\u2580\",\n          \" \\u2588\": \" \",\n          \"  \": \" \"\n        };\n        var ascii = \"\";\n        for (y = 0; y < size; y += 2) {\n          r1 = Math.floor((y - min2) / cellSize);\n          r2 = Math.floor((y + 1 - min2) / cellSize);\n          for (x = 0; x < size; x += 1) {\n            p2 = \"\\u2588\";\n            if (min2 <= x && x < max2 && min2 <= y && y < max2 && _this.isDark(r1, Math.floor((x - min2) / cellSize))) {\n              p2 = \" \";\n            }\n            if (min2 <= x && x < max2 && min2 <= y + 1 && y + 1 < max2 && _this.isDark(r2, Math.floor((x - min2) / cellSize))) {\n              p2 += \" \";\n            } else {\n              p2 += \"\\u2588\";\n            }\n            ascii += margin < 1 && y + 1 >= max2 ? blocksLastLineNoMargin[p2] : blocks[p2];\n          }\n          ascii += \"\\n\";\n        }\n        if (size % 2 && margin > 0) {\n          return ascii.substring(0, ascii.length - size - 1) + Array(size + 1).join(\"\\u2580\");\n        }\n        return ascii.substring(0, ascii.length - 1);\n      };\n      _this.createASCII = function(cellSize, margin) {\n        cellSize = cellSize || 1;\n        if (cellSize < 2) {\n          return _createHalfASCII(margin);\n        }\n        cellSize -= 1;\n        margin = typeof margin == \"undefined\" ? cellSize * 2 : margin;\n        var size = _this.getModuleCount() * cellSize + margin * 2;\n        var min2 = margin;\n        var max2 = size - margin;\n        var y, x, r, p2;\n        var white = Array(cellSize + 1).join(\"\\u2588\\u2588\");\n        var black = Array(cellSize + 1).join(\"  \");\n        var ascii = \"\";\n        var line = \"\";\n        for (y = 0; y < size; y += 1) {\n          r = Math.floor((y - min2) / cellSize);\n          line = \"\";\n          for (x = 0; x < size; x += 1) {\n            p2 = 1;\n            if (min2 <= x && x < max2 && min2 <= y && y < max2 && _this.isDark(r, Math.floor((x - min2) / cellSize))) {\n              p2 = 0;\n            }\n            line += p2 ? white : black;\n          }\n          for (r = 0; r < cellSize; r += 1) {\n            ascii += line + \"\\n\";\n          }\n        }\n        return ascii.substring(0, ascii.length - 1);\n      };\n      _this.renderTo2dContext = function(context, cellSize) {\n        cellSize = cellSize || 2;\n        var length = _this.getModuleCount();\n        for (var row = 0; row < length; row++) {\n          for (var col = 0; col < length; col++) {\n            context.fillStyle = _this.isDark(row, col) ? \"black\" : \"white\";\n            context.fillRect(row * cellSize, col * cellSize, cellSize, cellSize);\n          }\n        }\n      };\n      return _this;\n    };\n    qrcode3.stringToBytesFuncs = {\n      \"default\": function(s2) {\n        var bytes = [];\n        for (var i2 = 0; i2 < s2.length; i2 += 1) {\n          var c2 = s2.charCodeAt(i2);\n          bytes.push(c2 & 255);\n        }\n        return bytes;\n      }\n    };\n    qrcode3.stringToBytes = qrcode3.stringToBytesFuncs[\"default\"];\n    qrcode3.createStringToBytes = function(unicodeData, numChars) {\n      var unicodeMap = function() {\n        var bin = base64DecodeInputStream(unicodeData);\n        var read = function() {\n          var b = bin.read();\n          if (b == -1)\n            throw \"eof\";\n          return b;\n        };\n        var count = 0;\n        var unicodeMap2 = {};\n        while (true) {\n          var b0 = bin.read();\n          if (b0 == -1)\n            break;\n          var b1 = read();\n          var b2 = read();\n          var b3 = read();\n          var k = String.fromCharCode(b0 << 8 | b1);\n          var v = b2 << 8 | b3;\n          unicodeMap2[k] = v;\n          count += 1;\n        }\n        if (count != numChars) {\n          throw count + \" != \" + numChars;\n        }\n        return unicodeMap2;\n      }();\n      var unknownChar = \"?\".charCodeAt(0);\n      return function(s2) {\n        var bytes = [];\n        for (var i2 = 0; i2 < s2.length; i2 += 1) {\n          var c2 = s2.charCodeAt(i2);\n          if (c2 < 128) {\n            bytes.push(c2);\n          } else {\n            var b = unicodeMap[s2.charAt(i2)];\n            if (typeof b == \"number\") {\n              if ((b & 255) == b) {\n                bytes.push(b);\n              } else {\n                bytes.push(b >>> 8);\n                bytes.push(b & 255);\n              }\n            } else {\n              bytes.push(unknownChar);\n            }\n          }\n        }\n        return bytes;\n      };\n    };\n    var QRMode = {\n      MODE_NUMBER: 1 << 0,\n      MODE_ALPHA_NUM: 1 << 1,\n      MODE_8BIT_BYTE: 1 << 2,\n      MODE_KANJI: 1 << 3\n    };\n    var QRErrorCorrectionLevel = {\n      L: 1,\n      M: 0,\n      Q: 3,\n      H: 2\n    };\n    var QRMaskPattern = {\n      PATTERN000: 0,\n      PATTERN001: 1,\n      PATTERN010: 2,\n      PATTERN011: 3,\n      PATTERN100: 4,\n      PATTERN101: 5,\n      PATTERN110: 6,\n      PATTERN111: 7\n    };\n    var QRUtil = function() {\n      var PATTERN_POSITION_TABLE = [\n        [],\n        [6, 18],\n        [6, 22],\n        [6, 26],\n        [6, 30],\n        [6, 34],\n        [6, 22, 38],\n        [6, 24, 42],\n        [6, 26, 46],\n        [6, 28, 50],\n        [6, 30, 54],\n        [6, 32, 58],\n        [6, 34, 62],\n        [6, 26, 46, 66],\n        [6, 26, 48, 70],\n        [6, 26, 50, 74],\n        [6, 30, 54, 78],\n        [6, 30, 56, 82],\n        [6, 30, 58, 86],\n        [6, 34, 62, 90],\n        [6, 28, 50, 72, 94],\n        [6, 26, 50, 74, 98],\n        [6, 30, 54, 78, 102],\n        [6, 28, 54, 80, 106],\n        [6, 32, 58, 84, 110],\n        [6, 30, 58, 86, 114],\n        [6, 34, 62, 90, 118],\n        [6, 26, 50, 74, 98, 122],\n        [6, 30, 54, 78, 102, 126],\n        [6, 26, 52, 78, 104, 130],\n        [6, 30, 56, 82, 108, 134],\n        [6, 34, 60, 86, 112, 138],\n        [6, 30, 58, 86, 114, 142],\n        [6, 34, 62, 90, 118, 146],\n        [6, 30, 54, 78, 102, 126, 150],\n        [6, 24, 50, 76, 102, 128, 154],\n        [6, 28, 54, 80, 106, 132, 158],\n        [6, 32, 58, 84, 110, 136, 162],\n        [6, 26, 54, 82, 110, 138, 166],\n        [6, 30, 58, 86, 114, 142, 170]\n      ];\n      var G15 = 1 << 10 | 1 << 8 | 1 << 5 | 1 << 4 | 1 << 2 | 1 << 1 | 1 << 0;\n      var G18 = 1 << 12 | 1 << 11 | 1 << 10 | 1 << 9 | 1 << 8 | 1 << 5 | 1 << 2 | 1 << 0;\n      var G15_MASK = 1 << 14 | 1 << 12 | 1 << 10 | 1 << 4 | 1 << 1;\n      var _this = {};\n      var getBCHDigit = function(data) {\n        var digit = 0;\n        while (data != 0) {\n          digit += 1;\n          data >>>= 1;\n        }\n        return digit;\n      };\n      _this.getBCHTypeInfo = function(data) {\n        var d = data << 10;\n        while (getBCHDigit(d) - getBCHDigit(G15) >= 0) {\n          d ^= G15 << getBCHDigit(d) - getBCHDigit(G15);\n        }\n        return (data << 10 | d) ^ G15_MASK;\n      };\n      _this.getBCHTypeNumber = function(data) {\n        var d = data << 12;\n        while (getBCHDigit(d) - getBCHDigit(G18) >= 0) {\n          d ^= G18 << getBCHDigit(d) - getBCHDigit(G18);\n        }\n        return data << 12 | d;\n      };\n      _this.getPatternPosition = function(typeNumber) {\n        return PATTERN_POSITION_TABLE[typeNumber - 1];\n      };\n      _this.getMaskFunction = function(maskPattern) {\n        switch (maskPattern) {\n          case QRMaskPattern.PATTERN000:\n            return function(i2, j) {\n              return (i2 + j) % 2 == 0;\n            };\n          case QRMaskPattern.PATTERN001:\n            return function(i2, j) {\n              return i2 % 2 == 0;\n            };\n          case QRMaskPattern.PATTERN010:\n            return function(i2, j) {\n              return j % 3 == 0;\n            };\n          case QRMaskPattern.PATTERN011:\n            return function(i2, j) {\n              return (i2 + j) % 3 == 0;\n            };\n          case QRMaskPattern.PATTERN100:\n            return function(i2, j) {\n              return (Math.floor(i2 / 2) + Math.floor(j / 3)) % 2 == 0;\n            };\n          case QRMaskPattern.PATTERN101:\n            return function(i2, j) {\n              return i2 * j % 2 + i2 * j % 3 == 0;\n            };\n          case QRMaskPattern.PATTERN110:\n            return function(i2, j) {\n              return (i2 * j % 2 + i2 * j % 3) % 2 == 0;\n            };\n          case QRMaskPattern.PATTERN111:\n            return function(i2, j) {\n              return (i2 * j % 3 + (i2 + j) % 2) % 2 == 0;\n            };\n          default:\n            throw \"bad maskPattern:\" + maskPattern;\n        }\n      };\n      _this.getErrorCorrectPolynomial = function(errorCorrectLength) {\n        var a2 = qrPolynomial([1], 0);\n        for (var i2 = 0; i2 < errorCorrectLength; i2 += 1) {\n          a2 = a2.multiply(qrPolynomial([1, QRMath.gexp(i2)], 0));\n        }\n        return a2;\n      };\n      _this.getLengthInBits = function(mode, type) {\n        if (1 <= type && type < 10) {\n          switch (mode) {\n            case QRMode.MODE_NUMBER:\n              return 10;\n            case QRMode.MODE_ALPHA_NUM:\n              return 9;\n            case QRMode.MODE_8BIT_BYTE:\n              return 8;\n            case QRMode.MODE_KANJI:\n              return 8;\n            default:\n              throw \"mode:\" + mode;\n          }\n        } else if (type < 27) {\n          switch (mode) {\n            case QRMode.MODE_NUMBER:\n              return 12;\n            case QRMode.MODE_ALPHA_NUM:\n              return 11;\n            case QRMode.MODE_8BIT_BYTE:\n              return 16;\n            case QRMode.MODE_KANJI:\n              return 10;\n            default:\n              throw \"mode:\" + mode;\n          }\n        } else if (type < 41) {\n          switch (mode) {\n            case QRMode.MODE_NUMBER:\n              return 14;\n            case QRMode.MODE_ALPHA_NUM:\n              return 13;\n            case QRMode.MODE_8BIT_BYTE:\n              return 16;\n            case QRMode.MODE_KANJI:\n              return 12;\n            default:\n              throw \"mode:\" + mode;\n          }\n        } else {\n          throw \"type:\" + type;\n        }\n      };\n      _this.getLostPoint = function(qrcode4) {\n        var moduleCount = qrcode4.getModuleCount();\n        var lostPoint = 0;\n        for (var row = 0; row < moduleCount; row += 1) {\n          for (var col = 0; col < moduleCount; col += 1) {\n            var sameCount = 0;\n            var dark = qrcode4.isDark(row, col);\n            for (var r = -1; r <= 1; r += 1) {\n              if (row + r < 0 || moduleCount <= row + r) {\n                continue;\n              }\n              for (var c2 = -1; c2 <= 1; c2 += 1) {\n                if (col + c2 < 0 || moduleCount <= col + c2) {\n                  continue;\n                }\n                if (r == 0 && c2 == 0) {\n                  continue;\n                }\n                if (dark == qrcode4.isDark(row + r, col + c2)) {\n                  sameCount += 1;\n                }\n              }\n            }\n            if (sameCount > 5) {\n              lostPoint += 3 + sameCount - 5;\n            }\n          }\n        }\n        for (var row = 0; row < moduleCount - 1; row += 1) {\n          for (var col = 0; col < moduleCount - 1; col += 1) {\n            var count = 0;\n            if (qrcode4.isDark(row, col))\n              count += 1;\n            if (qrcode4.isDark(row + 1, col))\n              count += 1;\n            if (qrcode4.isDark(row, col + 1))\n              count += 1;\n            if (qrcode4.isDark(row + 1, col + 1))\n              count += 1;\n            if (count == 0 || count == 4) {\n              lostPoint += 3;\n            }\n          }\n        }\n        for (var row = 0; row < moduleCount; row += 1) {\n          for (var col = 0; col < moduleCount - 6; col += 1) {\n            if (qrcode4.isDark(row, col) && !qrcode4.isDark(row, col + 1) && qrcode4.isDark(row, col + 2) && qrcode4.isDark(row, col + 3) && qrcode4.isDark(row, col + 4) && !qrcode4.isDark(row, col + 5) && qrcode4.isDark(row, col + 6)) {\n              lostPoint += 40;\n            }\n          }\n        }\n        for (var col = 0; col < moduleCount; col += 1) {\n          for (var row = 0; row < moduleCount - 6; row += 1) {\n            if (qrcode4.isDark(row, col) && !qrcode4.isDark(row + 1, col) && qrcode4.isDark(row + 2, col) && qrcode4.isDark(row + 3, col) && qrcode4.isDark(row + 4, col) && !qrcode4.isDark(row + 5, col) && qrcode4.isDark(row + 6, col)) {\n              lostPoint += 40;\n            }\n          }\n        }\n        var darkCount = 0;\n        for (var col = 0; col < moduleCount; col += 1) {\n          for (var row = 0; row < moduleCount; row += 1) {\n            if (qrcode4.isDark(row, col)) {\n              darkCount += 1;\n            }\n          }\n        }\n        var ratio = Math.abs(100 * darkCount / moduleCount / moduleCount - 50) / 5;\n        lostPoint += ratio * 10;\n        return lostPoint;\n      };\n      return _this;\n    }();\n    var QRMath = function() {\n      var EXP_TABLE = new Array(256);\n      var LOG_TABLE = new Array(256);\n      for (var i2 = 0; i2 < 8; i2 += 1) {\n        EXP_TABLE[i2] = 1 << i2;\n      }\n      for (var i2 = 8; i2 < 256; i2 += 1) {\n        EXP_TABLE[i2] = EXP_TABLE[i2 - 4] ^ EXP_TABLE[i2 - 5] ^ EXP_TABLE[i2 - 6] ^ EXP_TABLE[i2 - 8];\n      }\n      for (var i2 = 0; i2 < 255; i2 += 1) {\n        LOG_TABLE[EXP_TABLE[i2]] = i2;\n      }\n      var _this = {};\n      _this.glog = function(n2) {\n        if (n2 < 1) {\n          throw \"glog(\" + n2 + \")\";\n        }\n        return LOG_TABLE[n2];\n      };\n      _this.gexp = function(n2) {\n        while (n2 < 0) {\n          n2 += 255;\n        }\n        while (n2 >= 256) {\n          n2 -= 255;\n        }\n        return EXP_TABLE[n2];\n      };\n      return _this;\n    }();\n    function qrPolynomial(num, shift) {\n      if (typeof num.length == \"undefined\") {\n        throw num.length + \"/\" + shift;\n      }\n      var _num = function() {\n        var offset = 0;\n        while (offset < num.length && num[offset] == 0) {\n          offset += 1;\n        }\n        var _num2 = new Array(num.length - offset + shift);\n        for (var i2 = 0; i2 < num.length - offset; i2 += 1) {\n          _num2[i2] = num[i2 + offset];\n        }\n        return _num2;\n      }();\n      var _this = {};\n      _this.getAt = function(index) {\n        return _num[index];\n      };\n      _this.getLength = function() {\n        return _num.length;\n      };\n      _this.multiply = function(e2) {\n        var num2 = new Array(_this.getLength() + e2.getLength() - 1);\n        for (var i2 = 0; i2 < _this.getLength(); i2 += 1) {\n          for (var j = 0; j < e2.getLength(); j += 1) {\n            num2[i2 + j] ^= QRMath.gexp(QRMath.glog(_this.getAt(i2)) + QRMath.glog(e2.getAt(j)));\n          }\n        }\n        return qrPolynomial(num2, 0);\n      };\n      _this.mod = function(e2) {\n        if (_this.getLength() - e2.getLength() < 0) {\n          return _this;\n        }\n        var ratio = QRMath.glog(_this.getAt(0)) - QRMath.glog(e2.getAt(0));\n        var num2 = new Array(_this.getLength());\n        for (var i2 = 0; i2 < _this.getLength(); i2 += 1) {\n          num2[i2] = _this.getAt(i2);\n        }\n        for (var i2 = 0; i2 < e2.getLength(); i2 += 1) {\n          num2[i2] ^= QRMath.gexp(QRMath.glog(e2.getAt(i2)) + ratio);\n        }\n        return qrPolynomial(num2, 0).mod(e2);\n      };\n      return _this;\n    }\n    var QRRSBlock = function() {\n      var RS_BLOCK_TABLE = [\n        [1, 26, 19],\n        [1, 26, 16],\n        [1, 26, 13],\n        [1, 26, 9],\n        [1, 44, 34],\n        [1, 44, 28],\n        [1, 44, 22],\n        [1, 44, 16],\n        [1, 70, 55],\n        [1, 70, 44],\n        [2, 35, 17],\n        [2, 35, 13],\n        [1, 100, 80],\n        [2, 50, 32],\n        [2, 50, 24],\n        [4, 25, 9],\n        [1, 134, 108],\n        [2, 67, 43],\n        [2, 33, 15, 2, 34, 16],\n        [2, 33, 11, 2, 34, 12],\n        [2, 86, 68],\n        [4, 43, 27],\n        [4, 43, 19],\n        [4, 43, 15],\n        [2, 98, 78],\n        [4, 49, 31],\n        [2, 32, 14, 4, 33, 15],\n        [4, 39, 13, 1, 40, 14],\n        [2, 121, 97],\n        [2, 60, 38, 2, 61, 39],\n        [4, 40, 18, 2, 41, 19],\n        [4, 40, 14, 2, 41, 15],\n        [2, 146, 116],\n        [3, 58, 36, 2, 59, 37],\n        [4, 36, 16, 4, 37, 17],\n        [4, 36, 12, 4, 37, 13],\n        [2, 86, 68, 2, 87, 69],\n        [4, 69, 43, 1, 70, 44],\n        [6, 43, 19, 2, 44, 20],\n        [6, 43, 15, 2, 44, 16],\n        [4, 101, 81],\n        [1, 80, 50, 4, 81, 51],\n        [4, 50, 22, 4, 51, 23],\n        [3, 36, 12, 8, 37, 13],\n        [2, 116, 92, 2, 117, 93],\n        [6, 58, 36, 2, 59, 37],\n        [4, 46, 20, 6, 47, 21],\n        [7, 42, 14, 4, 43, 15],\n        [4, 133, 107],\n        [8, 59, 37, 1, 60, 38],\n        [8, 44, 20, 4, 45, 21],\n        [12, 33, 11, 4, 34, 12],\n        [3, 145, 115, 1, 146, 116],\n        [4, 64, 40, 5, 65, 41],\n        [11, 36, 16, 5, 37, 17],\n        [11, 36, 12, 5, 37, 13],\n        [5, 109, 87, 1, 110, 88],\n        [5, 65, 41, 5, 66, 42],\n        [5, 54, 24, 7, 55, 25],\n        [11, 36, 12, 7, 37, 13],\n        [5, 122, 98, 1, 123, 99],\n        [7, 73, 45, 3, 74, 46],\n        [15, 43, 19, 2, 44, 20],\n        [3, 45, 15, 13, 46, 16],\n        [1, 135, 107, 5, 136, 108],\n        [10, 74, 46, 1, 75, 47],\n        [1, 50, 22, 15, 51, 23],\n        [2, 42, 14, 17, 43, 15],\n        [5, 150, 120, 1, 151, 121],\n        [9, 69, 43, 4, 70, 44],\n        [17, 50, 22, 1, 51, 23],\n        [2, 42, 14, 19, 43, 15],\n        [3, 141, 113, 4, 142, 114],\n        [3, 70, 44, 11, 71, 45],\n        [17, 47, 21, 4, 48, 22],\n        [9, 39, 13, 16, 40, 14],\n        [3, 135, 107, 5, 136, 108],\n        [3, 67, 41, 13, 68, 42],\n        [15, 54, 24, 5, 55, 25],\n        [15, 43, 15, 10, 44, 16],\n        [4, 144, 116, 4, 145, 117],\n        [17, 68, 42],\n        [17, 50, 22, 6, 51, 23],\n        [19, 46, 16, 6, 47, 17],\n        [2, 139, 111, 7, 140, 112],\n        [17, 74, 46],\n        [7, 54, 24, 16, 55, 25],\n        [34, 37, 13],\n        [4, 151, 121, 5, 152, 122],\n        [4, 75, 47, 14, 76, 48],\n        [11, 54, 24, 14, 55, 25],\n        [16, 45, 15, 14, 46, 16],\n        [6, 147, 117, 4, 148, 118],\n        [6, 73, 45, 14, 74, 46],\n        [11, 54, 24, 16, 55, 25],\n        [30, 46, 16, 2, 47, 17],\n        [8, 132, 106, 4, 133, 107],\n        [8, 75, 47, 13, 76, 48],\n        [7, 54, 24, 22, 55, 25],\n        [22, 45, 15, 13, 46, 16],\n        [10, 142, 114, 2, 143, 115],\n        [19, 74, 46, 4, 75, 47],\n        [28, 50, 22, 6, 51, 23],\n        [33, 46, 16, 4, 47, 17],\n        [8, 152, 122, 4, 153, 123],\n        [22, 73, 45, 3, 74, 46],\n        [8, 53, 23, 26, 54, 24],\n        [12, 45, 15, 28, 46, 16],\n        [3, 147, 117, 10, 148, 118],\n        [3, 73, 45, 23, 74, 46],\n        [4, 54, 24, 31, 55, 25],\n        [11, 45, 15, 31, 46, 16],\n        [7, 146, 116, 7, 147, 117],\n        [21, 73, 45, 7, 74, 46],\n        [1, 53, 23, 37, 54, 24],\n        [19, 45, 15, 26, 46, 16],\n        [5, 145, 115, 10, 146, 116],\n        [19, 75, 47, 10, 76, 48],\n        [15, 54, 24, 25, 55, 25],\n        [23, 45, 15, 25, 46, 16],\n        [13, 145, 115, 3, 146, 116],\n        [2, 74, 46, 29, 75, 47],\n        [42, 54, 24, 1, 55, 25],\n        [23, 45, 15, 28, 46, 16],\n        [17, 145, 115],\n        [10, 74, 46, 23, 75, 47],\n        [10, 54, 24, 35, 55, 25],\n        [19, 45, 15, 35, 46, 16],\n        [17, 145, 115, 1, 146, 116],\n        [14, 74, 46, 21, 75, 47],\n        [29, 54, 24, 19, 55, 25],\n        [11, 45, 15, 46, 46, 16],\n        [13, 145, 115, 6, 146, 116],\n        [14, 74, 46, 23, 75, 47],\n        [44, 54, 24, 7, 55, 25],\n        [59, 46, 16, 1, 47, 17],\n        [12, 151, 121, 7, 152, 122],\n        [12, 75, 47, 26, 76, 48],\n        [39, 54, 24, 14, 55, 25],\n        [22, 45, 15, 41, 46, 16],\n        [6, 151, 121, 14, 152, 122],\n        [6, 75, 47, 34, 76, 48],\n        [46, 54, 24, 10, 55, 25],\n        [2, 45, 15, 64, 46, 16],\n        [17, 152, 122, 4, 153, 123],\n        [29, 74, 46, 14, 75, 47],\n        [49, 54, 24, 10, 55, 25],\n        [24, 45, 15, 46, 46, 16],\n        [4, 152, 122, 18, 153, 123],\n        [13, 74, 46, 32, 75, 47],\n        [48, 54, 24, 14, 55, 25],\n        [42, 45, 15, 32, 46, 16],\n        [20, 147, 117, 4, 148, 118],\n        [40, 75, 47, 7, 76, 48],\n        [43, 54, 24, 22, 55, 25],\n        [10, 45, 15, 67, 46, 16],\n        [19, 148, 118, 6, 149, 119],\n        [18, 75, 47, 31, 76, 48],\n        [34, 54, 24, 34, 55, 25],\n        [20, 45, 15, 61, 46, 16]\n      ];\n      var qrRSBlock = function(totalCount, dataCount) {\n        var _this2 = {};\n        _this2.totalCount = totalCount;\n        _this2.dataCount = dataCount;\n        return _this2;\n      };\n      var _this = {};\n      var getRsBlockTable = function(typeNumber, errorCorrectionLevel) {\n        switch (errorCorrectionLevel) {\n          case QRErrorCorrectionLevel.L:\n            return RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 0];\n          case QRErrorCorrectionLevel.M:\n            return RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 1];\n          case QRErrorCorrectionLevel.Q:\n            return RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 2];\n          case QRErrorCorrectionLevel.H:\n            return RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 3];\n          default:\n            return void 0;\n        }\n      };\n      _this.getRSBlocks = function(typeNumber, errorCorrectionLevel) {\n        var rsBlock = getRsBlockTable(typeNumber, errorCorrectionLevel);\n        if (typeof rsBlock == \"undefined\") {\n          throw \"bad rs block @ typeNumber:\" + typeNumber + \"/errorCorrectionLevel:\" + errorCorrectionLevel;\n        }\n        var length = rsBlock.length / 3;\n        var list = [];\n        for (var i2 = 0; i2 < length; i2 += 1) {\n          var count = rsBlock[i2 * 3 + 0];\n          var totalCount = rsBlock[i2 * 3 + 1];\n          var dataCount = rsBlock[i2 * 3 + 2];\n          for (var j = 0; j < count; j += 1) {\n            list.push(qrRSBlock(totalCount, dataCount));\n          }\n        }\n        return list;\n      };\n      return _this;\n    }();\n    var qrBitBuffer = function() {\n      var _buffer = [];\n      var _length = 0;\n      var _this = {};\n      _this.getBuffer = function() {\n        return _buffer;\n      };\n      _this.getAt = function(index) {\n        var bufIndex = Math.floor(index / 8);\n        return (_buffer[bufIndex] >>> 7 - index % 8 & 1) == 1;\n      };\n      _this.put = function(num, length) {\n        for (var i2 = 0; i2 < length; i2 += 1) {\n          _this.putBit((num >>> length - i2 - 1 & 1) == 1);\n        }\n      };\n      _this.getLengthInBits = function() {\n        return _length;\n      };\n      _this.putBit = function(bit) {\n        var bufIndex = Math.floor(_length / 8);\n        if (_buffer.length <= bufIndex) {\n          _buffer.push(0);\n        }\n        if (bit) {\n          _buffer[bufIndex] |= 128 >>> _length % 8;\n        }\n        _length += 1;\n      };\n      return _this;\n    };\n    var qrNumber = function(data) {\n      var _mode = QRMode.MODE_NUMBER;\n      var _data = data;\n      var _this = {};\n      _this.getMode = function() {\n        return _mode;\n      };\n      _this.getLength = function(buffer) {\n        return _data.length;\n      };\n      _this.write = function(buffer) {\n        var data2 = _data;\n        var i2 = 0;\n        while (i2 + 2 < data2.length) {\n          buffer.put(strToNum(data2.substring(i2, i2 + 3)), 10);\n          i2 += 3;\n        }\n        if (i2 < data2.length) {\n          if (data2.length - i2 == 1) {\n            buffer.put(strToNum(data2.substring(i2, i2 + 1)), 4);\n          } else if (data2.length - i2 == 2) {\n            buffer.put(strToNum(data2.substring(i2, i2 + 2)), 7);\n          }\n        }\n      };\n      var strToNum = function(s2) {\n        var num = 0;\n        for (var i2 = 0; i2 < s2.length; i2 += 1) {\n          num = num * 10 + chatToNum(s2.charAt(i2));\n        }\n        return num;\n      };\n      var chatToNum = function(c2) {\n        if (\"0\" <= c2 && c2 <= \"9\") {\n          return c2.charCodeAt(0) - \"0\".charCodeAt(0);\n        }\n        throw \"illegal char :\" + c2;\n      };\n      return _this;\n    };\n    var qrAlphaNum = function(data) {\n      var _mode = QRMode.MODE_ALPHA_NUM;\n      var _data = data;\n      var _this = {};\n      _this.getMode = function() {\n        return _mode;\n      };\n      _this.getLength = function(buffer) {\n        return _data.length;\n      };\n      _this.write = function(buffer) {\n        var s2 = _data;\n        var i2 = 0;\n        while (i2 + 1 < s2.length) {\n          buffer.put(\n            getCode(s2.charAt(i2)) * 45 + getCode(s2.charAt(i2 + 1)),\n            11\n          );\n          i2 += 2;\n        }\n        if (i2 < s2.length) {\n          buffer.put(getCode(s2.charAt(i2)), 6);\n        }\n      };\n      var getCode = function(c2) {\n        if (\"0\" <= c2 && c2 <= \"9\") {\n          return c2.charCodeAt(0) - \"0\".charCodeAt(0);\n        } else if (\"A\" <= c2 && c2 <= \"Z\") {\n          return c2.charCodeAt(0) - \"A\".charCodeAt(0) + 10;\n        } else {\n          switch (c2) {\n            case \" \":\n              return 36;\n            case \"$\":\n              return 37;\n            case \"%\":\n              return 38;\n            case \"*\":\n              return 39;\n            case \"+\":\n              return 40;\n            case \"-\":\n              return 41;\n            case \".\":\n              return 42;\n            case \"/\":\n              return 43;\n            case \":\":\n              return 44;\n            default:\n              throw \"illegal char :\" + c2;\n          }\n        }\n      };\n      return _this;\n    };\n    var qr8BitByte = function(data) {\n      var _mode = QRMode.MODE_8BIT_BYTE;\n      var _bytes = qrcode3.stringToBytes(data);\n      var _this = {};\n      _this.getMode = function() {\n        return _mode;\n      };\n      _this.getLength = function(buffer) {\n        return _bytes.length;\n      };\n      _this.write = function(buffer) {\n        for (var i2 = 0; i2 < _bytes.length; i2 += 1) {\n          buffer.put(_bytes[i2], 8);\n        }\n      };\n      return _this;\n    };\n    var qrKanji = function(data) {\n      var _mode = QRMode.MODE_KANJI;\n      var stringToBytes = qrcode3.stringToBytesFuncs[\"SJIS\"];\n      if (!stringToBytes) {\n        throw \"sjis not supported.\";\n      }\n      !function(c2, code) {\n        var test = stringToBytes(c2);\n        if (test.length != 2 || (test[0] << 8 | test[1]) != code) {\n          throw \"sjis not supported.\";\n        }\n      }(\"\\u53CB\", 38726);\n      var _bytes = stringToBytes(data);\n      var _this = {};\n      _this.getMode = function() {\n        return _mode;\n      };\n      _this.getLength = function(buffer) {\n        return ~~(_bytes.length / 2);\n      };\n      _this.write = function(buffer) {\n        var data2 = _bytes;\n        var i2 = 0;\n        while (i2 + 1 < data2.length) {\n          var c2 = (255 & data2[i2]) << 8 | 255 & data2[i2 + 1];\n          if (33088 <= c2 && c2 <= 40956) {\n            c2 -= 33088;\n          } else if (57408 <= c2 && c2 <= 60351) {\n            c2 -= 49472;\n          } else {\n            throw \"illegal char at \" + (i2 + 1) + \"/\" + c2;\n          }\n          c2 = (c2 >>> 8 & 255) * 192 + (c2 & 255);\n          buffer.put(c2, 13);\n          i2 += 2;\n        }\n        if (i2 < data2.length) {\n          throw \"illegal char at \" + (i2 + 1);\n        }\n      };\n      return _this;\n    };\n    var byteArrayOutputStream = function() {\n      var _bytes = [];\n      var _this = {};\n      _this.writeByte = function(b) {\n        _bytes.push(b & 255);\n      };\n      _this.writeShort = function(i2) {\n        _this.writeByte(i2);\n        _this.writeByte(i2 >>> 8);\n      };\n      _this.writeBytes = function(b, off, len) {\n        off = off || 0;\n        len = len || b.length;\n        for (var i2 = 0; i2 < len; i2 += 1) {\n          _this.writeByte(b[i2 + off]);\n        }\n      };\n      _this.writeString = function(s2) {\n        for (var i2 = 0; i2 < s2.length; i2 += 1) {\n          _this.writeByte(s2.charCodeAt(i2));\n        }\n      };\n      _this.toByteArray = function() {\n        return _bytes;\n      };\n      _this.toString = function() {\n        var s2 = \"\";\n        s2 += \"[\";\n        for (var i2 = 0; i2 < _bytes.length; i2 += 1) {\n          if (i2 > 0) {\n            s2 += \",\";\n          }\n          s2 += _bytes[i2];\n        }\n        s2 += \"]\";\n        return s2;\n      };\n      return _this;\n    };\n    var base64EncodeOutputStream = function() {\n      var _buffer = 0;\n      var _buflen = 0;\n      var _length = 0;\n      var _base64 = \"\";\n      var _this = {};\n      var writeEncoded = function(b) {\n        _base64 += String.fromCharCode(encode(b & 63));\n      };\n      var encode = function(n2) {\n        if (n2 < 0)\n          ;\n        else if (n2 < 26) {\n          return 65 + n2;\n        } else if (n2 < 52) {\n          return 97 + (n2 - 26);\n        } else if (n2 < 62) {\n          return 48 + (n2 - 52);\n        } else if (n2 == 62) {\n          return 43;\n        } else if (n2 == 63) {\n          return 47;\n        }\n        throw \"n:\" + n2;\n      };\n      _this.writeByte = function(n2) {\n        _buffer = _buffer << 8 | n2 & 255;\n        _buflen += 8;\n        _length += 1;\n        while (_buflen >= 6) {\n          writeEncoded(_buffer >>> _buflen - 6);\n          _buflen -= 6;\n        }\n      };\n      _this.flush = function() {\n        if (_buflen > 0) {\n          writeEncoded(_buffer << 6 - _buflen);\n          _buffer = 0;\n          _buflen = 0;\n        }\n        if (_length % 3 != 0) {\n          var padlen = 3 - _length % 3;\n          for (var i2 = 0; i2 < padlen; i2 += 1) {\n            _base64 += \"=\";\n          }\n        }\n      };\n      _this.toString = function() {\n        return _base64;\n      };\n      return _this;\n    };\n    var base64DecodeInputStream = function(str) {\n      var _str = str;\n      var _pos = 0;\n      var _buffer = 0;\n      var _buflen = 0;\n      var _this = {};\n      _this.read = function() {\n        while (_buflen < 8) {\n          if (_pos >= _str.length) {\n            if (_buflen == 0) {\n              return -1;\n            }\n            throw \"unexpected end of file./\" + _buflen;\n          }\n          var c2 = _str.charAt(_pos);\n          _pos += 1;\n          if (c2 == \"=\") {\n            _buflen = 0;\n            return -1;\n          } else if (c2.match(/^\\s$/)) {\n            continue;\n          }\n          _buffer = _buffer << 6 | decode(c2.charCodeAt(0));\n          _buflen += 6;\n        }\n        var n2 = _buffer >>> _buflen - 8 & 255;\n        _buflen -= 8;\n        return n2;\n      };\n      var decode = function(c2) {\n        if (65 <= c2 && c2 <= 90) {\n          return c2 - 65;\n        } else if (97 <= c2 && c2 <= 122) {\n          return c2 - 97 + 26;\n        } else if (48 <= c2 && c2 <= 57) {\n          return c2 - 48 + 52;\n        } else if (c2 == 43) {\n          return 62;\n        } else if (c2 == 47) {\n          return 63;\n        } else {\n          throw \"c:\" + c2;\n        }\n      };\n      return _this;\n    };\n    var gifImage = function(width, height) {\n      var _width = width;\n      var _height = height;\n      var _data = new Array(width * height);\n      var _this = {};\n      _this.setPixel = function(x, y, pixel) {\n        _data[y * _width + x] = pixel;\n      };\n      _this.write = function(out) {\n        out.writeString(\"GIF87a\");\n        out.writeShort(_width);\n        out.writeShort(_height);\n        out.writeByte(128);\n        out.writeByte(0);\n        out.writeByte(0);\n        out.writeByte(0);\n        out.writeByte(0);\n        out.writeByte(0);\n        out.writeByte(255);\n        out.writeByte(255);\n        out.writeByte(255);\n        out.writeString(\",\");\n        out.writeShort(0);\n        out.writeShort(0);\n        out.writeShort(_width);\n        out.writeShort(_height);\n        out.writeByte(0);\n        var lzwMinCodeSize = 2;\n        var raster = getLZWRaster(lzwMinCodeSize);\n        out.writeByte(lzwMinCodeSize);\n        var offset = 0;\n        while (raster.length - offset > 255) {\n          out.writeByte(255);\n          out.writeBytes(raster, offset, 255);\n          offset += 255;\n        }\n        out.writeByte(raster.length - offset);\n        out.writeBytes(raster, offset, raster.length - offset);\n        out.writeByte(0);\n        out.writeString(\";\");\n      };\n      var bitOutputStream = function(out) {\n        var _out = out;\n        var _bitLength = 0;\n        var _bitBuffer = 0;\n        var _this2 = {};\n        _this2.write = function(data, length) {\n          if (data >>> length != 0) {\n            throw \"length over\";\n          }\n          while (_bitLength + length >= 8) {\n            _out.writeByte(255 & (data << _bitLength | _bitBuffer));\n            length -= 8 - _bitLength;\n            data >>>= 8 - _bitLength;\n            _bitBuffer = 0;\n            _bitLength = 0;\n          }\n          _bitBuffer = data << _bitLength | _bitBuffer;\n          _bitLength = _bitLength + length;\n        };\n        _this2.flush = function() {\n          if (_bitLength > 0) {\n            _out.writeByte(_bitBuffer);\n          }\n        };\n        return _this2;\n      };\n      var getLZWRaster = function(lzwMinCodeSize) {\n        var clearCode = 1 << lzwMinCodeSize;\n        var endCode = (1 << lzwMinCodeSize) + 1;\n        var bitLength = lzwMinCodeSize + 1;\n        var table = lzwTable();\n        for (var i2 = 0; i2 < clearCode; i2 += 1) {\n          table.add(String.fromCharCode(i2));\n        }\n        table.add(String.fromCharCode(clearCode));\n        table.add(String.fromCharCode(endCode));\n        var byteOut = byteArrayOutputStream();\n        var bitOut = bitOutputStream(byteOut);\n        bitOut.write(clearCode, bitLength);\n        var dataIndex = 0;\n        var s2 = String.fromCharCode(_data[dataIndex]);\n        dataIndex += 1;\n        while (dataIndex < _data.length) {\n          var c2 = String.fromCharCode(_data[dataIndex]);\n          dataIndex += 1;\n          if (table.contains(s2 + c2)) {\n            s2 = s2 + c2;\n          } else {\n            bitOut.write(table.indexOf(s2), bitLength);\n            if (table.size() < 4095) {\n              if (table.size() == 1 << bitLength) {\n                bitLength += 1;\n              }\n              table.add(s2 + c2);\n            }\n            s2 = c2;\n          }\n        }\n        bitOut.write(table.indexOf(s2), bitLength);\n        bitOut.write(endCode, bitLength);\n        bitOut.flush();\n        return byteOut.toByteArray();\n      };\n      var lzwTable = function() {\n        var _map = {};\n        var _size = 0;\n        var _this2 = {};\n        _this2.add = function(key) {\n          if (_this2.contains(key)) {\n            throw \"dup key:\" + key;\n          }\n          _map[key] = _size;\n          _size += 1;\n        };\n        _this2.size = function() {\n          return _size;\n        };\n        _this2.indexOf = function(key) {\n          return _map[key];\n        };\n        _this2.contains = function(key) {\n          return typeof _map[key] != \"undefined\";\n        };\n        return _this2;\n      };\n      return _this;\n    };\n    var createDataURL = function(width, height, getPixel) {\n      var gif = gifImage(width, height);\n      for (var y = 0; y < height; y += 1) {\n        for (var x = 0; x < width; x += 1) {\n          gif.setPixel(x, y, getPixel(x, y));\n        }\n      }\n      var b = byteArrayOutputStream();\n      gif.write(b);\n      var base64 = base64EncodeOutputStream();\n      var bytes = b.toByteArray();\n      for (var i2 = 0; i2 < bytes.length; i2 += 1) {\n        base64.writeByte(bytes[i2]);\n      }\n      base64.flush();\n      return \"data:image/gif;base64,\" + base64;\n    };\n    return qrcode3;\n  }();\n  !function() {\n    qrcode2.stringToBytesFuncs[\"UTF-8\"] = function(s2) {\n      function toUTF8Array(str) {\n        var utf8 = [];\n        for (var i2 = 0; i2 < str.length; i2++) {\n          var charcode = str.charCodeAt(i2);\n          if (charcode < 128)\n            utf8.push(charcode);\n          else if (charcode < 2048) {\n            utf8.push(\n              192 | charcode >> 6,\n              128 | charcode & 63\n            );\n          } else if (charcode < 55296 || charcode >= 57344) {\n            utf8.push(\n              224 | charcode >> 12,\n              128 | charcode >> 6 & 63,\n              128 | charcode & 63\n            );\n          } else {\n            i2++;\n            charcode = 65536 + ((charcode & 1023) << 10 | str.charCodeAt(i2) & 1023);\n            utf8.push(\n              240 | charcode >> 18,\n              128 | charcode >> 12 & 63,\n              128 | charcode >> 6 & 63,\n              128 | charcode & 63\n            );\n          }\n        }\n        return utf8;\n      }\n      return toUTF8Array(s2);\n    };\n  }();\n  (function(factory) {\n    {\n      module.exports = factory();\n    }\n  })(function() {\n    return qrcode2;\n  });\n})(qrcode$1);\nconst qrcode = qrcode$1.exports;\nfunction copyToClipboard(text) {\n  return __async(this, null, function* () {\n    try {\n      if (!(navigator == null ? void 0 : navigator.clipboard)) {\n        throw new TonConnectUIError(\"Clipboard API not available\");\n      }\n      return yield navigator.clipboard.writeText(text);\n    } catch (e2) {\n    }\n    fallbackCopyTextToClipboard(text);\n  });\n}\nfunction fallbackCopyTextToClipboard(text) {\n  const textArea = document.createElement(\"textarea\");\n  textArea.value = text;\n  textArea.style.top = \"0\";\n  textArea.style.left = \"0\";\n  textArea.style.position = \"fixed\";\n  document.body.appendChild(textArea);\n  textArea.focus();\n  textArea.select();\n  try {\n    document.execCommand(\"copy\");\n  } finally {\n    document.body.removeChild(textArea);\n  }\n}\nconst _tmpl$$s = /* @__PURE__ */ template$1(`<div></div>`);\nconst QRCode = (props) => {\n  let qrCodeCanvasRef;\n  let qrCodeWrapperRef;\n  let imageRef;\n  const [copyButtonOpened, setCopyButtonOpened] = createSignal(false);\n  const [picSize, setPicSize] = createSignal(picSizeDefault);\n  createEffect(() => {\n    const errorCorrectionLevel = \"L\";\n    const cellSize = 4;\n    const qr = qrcode(0, errorCorrectionLevel);\n    qr.addData(props.sourceUrl);\n    qr.make();\n    qrCodeCanvasRef.innerHTML = qr.createSvgTag(cellSize, 0);\n    const qrSize = qrCodeCanvasRef.firstElementChild.clientWidth;\n    const scale = Math.round(qrNormalSize / qrSize * 1e5) / 1e5;\n    if (imageRef) {\n      const imgSize = Math.ceil(imgSizeDefault / (scale * cellSize)) * cellSize;\n      const imgOffset = toPx(Math.ceil((qrSize - imgSize) / (2 * cellSize)) * cellSize);\n      imageRef.style.top = imgOffset;\n      imageRef.style.left = imgOffset;\n      imageRef.style.height = toPx(imgSize);\n      imageRef.style.width = toPx(imgSize);\n      setPicSize(Math.round(picSizeDefault / scale));\n    }\n    qrCodeWrapperRef.style.transform = `scale(${scale})`;\n  });\n  let timeoutId = null;\n  const onCopyClick = () => {\n    setCopyButtonOpened(true);\n    copyToClipboard(props.sourceUrl);\n    if (timeoutId != null) {\n      clearTimeout(timeoutId);\n    }\n    timeoutId = setTimeout(() => setCopyButtonOpened(false), 1500);\n  };\n  return createComponent(QrCodeBackground, {\n    get [\"class\"]() {\n      return props.class;\n    },\n    onClick: onCopyClick,\n    get children() {\n      return [createComponent(QrCodeWrapper$2, {\n        ref(r$) {\n          const _ref$ = qrCodeWrapperRef;\n          typeof _ref$ === \"function\" ? _ref$(r$) : qrCodeWrapperRef = r$;\n        },\n        get children() {\n          return [(() => {\n            const _el$ = _tmpl$$s.cloneNode(true);\n            const _ref$2 = qrCodeCanvasRef;\n            typeof _ref$2 === \"function\" ? use(_ref$2, _el$) : qrCodeCanvasRef = _el$;\n            return _el$;\n          })(), createComponent(Show, {\n            get when() {\n              return props.imageUrl;\n            },\n            get children() {\n              return createComponent(ImageBackground, {\n                ref(r$) {\n                  const _ref$3 = imageRef;\n                  typeof _ref$3 === \"function\" ? _ref$3(r$) : imageRef = r$;\n                },\n                get children() {\n                  return createComponent(ImageStyled$3, {\n                    get src() {\n                      return props.imageUrl;\n                    },\n                    alt: \"\",\n                    get size() {\n                      return picSize();\n                    }\n                  });\n                }\n              });\n            }\n          })];\n        }\n      }), createComponent(Transition, {\n        onBeforeEnter: (el) => {\n          animate(el, [{\n            opacity: 0,\n            transform: \"translate(-50%, 44px)\"\n          }, {\n            opacity: 1,\n            transform: \"translate(-50%, 0)\"\n          }], {\n            duration: 150,\n            easing: \"ease-out\"\n          });\n        },\n        onExit: (el, done) => {\n          animate(el, [{\n            opacity: 1,\n            transform: \"translate(-50%, 0)\"\n          }, {\n            opacity: 0,\n            transform: \"translate(-50%, 44px)\"\n          }], {\n            duration: 150,\n            easing: \"ease-out\"\n          }).finished.then(() => {\n            done();\n          });\n        },\n        get children() {\n          return createComponent(Show, {\n            get when() {\n              return copyButtonOpened() && !props.disableCopy;\n            },\n            get children() {\n              return createComponent(CopiedBoxStyled, {\n                get children() {\n                  return [createComponent(SuccessIcon, {\n                    size: \"xs\"\n                  }), createComponent(Text, {\n                    translationKey: \"common.linkCopied\",\n                    children: \"Link Copied\"\n                  })];\n                }\n              });\n            }\n          });\n        }\n      }), createComponent(Show, {\n        get when() {\n          return !props.disableCopy;\n        },\n        get children() {\n          return createComponent(CopyIconButton, {\n            get children() {\n              return createComponent(CopyLightIcon, {});\n            }\n          });\n        }\n      })];\n    }\n  });\n};\nvar deepReadObject = (obj, path, defaultValue) => {\n  const value = path.trim().split(\".\").reduce((a2, b) => a2 ? a2[b] : void 0, obj);\n  return value !== void 0 ? value : defaultValue;\n};\nvar template = (str, params, reg = /{{(.*?)}}/g) => str.replace(reg, (_, key) => deepReadObject(params, key, \"\"));\nvar createI18nContext = (init = {}, lang = navigator.language in init ? navigator.language : Object.keys(init)[0]) => {\n  const [locale, setLocale] = createSignal(lang);\n  const [dict, setDict] = createStore(init);\n  const translate = (key, params, defaultValue) => {\n    const val = deepReadObject(dict[locale()], key, defaultValue || \"\");\n    if (typeof val === \"function\")\n      return val(params);\n    if (typeof val === \"string\")\n      return template(val, params || {});\n    return val;\n  };\n  const actions = {\n    add(lang2, table) {\n      setDict(lang2, (t2) => Object.assign(t2 || {}, table));\n    },\n    locale: (lang2) => lang2 ? setLocale(lang2) : locale(),\n    dict: (lang2) => deepReadObject(dict, lang2)\n  };\n  return [translate, actions];\n};\nvar I18nContext = createContext({});\nvar useI18n = () => useContext(I18nContext);\nconst TextStyled$3 = styled.div`\n    font-style: normal;\n    font-weight: ${(props) => props.fontWeight};\n    font-size: ${(props) => props.fontSize};\n    line-height: ${(props) => props.lineHeight};\n\n    color: ${(props) => props.color};\n`;\nconst Text = (inputs) => {\n  const theme = useTheme();\n  const [t2] = useI18n();\n  let textRef;\n  const color = () => inputs.color || theme.colors.text.primary;\n  const props = mergeProps({\n    fontSize: \"14px\",\n    fontWeight: \"510\",\n    lineHeight: \"130%\"\n  }, inputs);\n  createEffect(() => {\n    if (!textRef) {\n      return;\n    }\n    if (props.cursor === \"unset\") {\n      return;\n    }\n    if (getComputedStyle(textRef).cursor !== \"pointer\") {\n      textRef.style.cursor = \"default\";\n    }\n  });\n  return createComponent(TextStyled$3, {\n    get fontSize() {\n      return props.fontSize;\n    },\n    get fontWeight() {\n      return props.fontWeight;\n    },\n    get lineHeight() {\n      return props.lineHeight;\n    },\n    get color() {\n      return color();\n    },\n    get [\"class\"]() {\n      return props.class;\n    },\n    ref(r$) {\n      const _ref$ = textRef;\n      typeof _ref$ === \"function\" ? _ref$(r$) : textRef = r$;\n    },\n    \"data-tc-text\": \"true\",\n    get children() {\n      var _a2;\n      return createMemo(() => !!props.translationKey)() ? t2(props.translationKey, props.translationValues, (_a2 = props.children) == null ? void 0 : _a2.toString()) : props.children;\n    }\n  });\n};\nconst ImageContainer = styled.div`\n    position: relative;\n\n    &::after {\n        content: '';\n        display: block;\n        position: absolute;\n        top: 0;\n        bottom: 0;\n        left: 0;\n        right: 0;\n        border: 0.5px solid rgba(0, 0, 0, 0.08);\n        border-radius: inherit;\n    }\n`;\nconst ImageStyled$2 = styled(Image)`\n    width: 100%;\n    height: 100%;\n    border-radius: inherit;\n`;\nconst WalletImage = (props) => {\n  return createComponent(ImageContainer, {\n    get [\"class\"]() {\n      return props.class;\n    },\n    get children() {\n      return [createComponent(ImageStyled$2, {\n        get src() {\n          return props.src;\n        }\n      }), createMemo(() => props.badge)];\n    }\n  });\n};\nconst borders$3 = {\n  m: \"16px\",\n  s: \"12px\",\n  none: \"0\"\n};\nconst badgeBorders = {\n  m: \"6px\",\n  s: \"6px\",\n  none: \"0\"\n};\nconst WalletUlContainer = styled.ul`\n    display: flex;\n    gap: 0;\n    width: 100%;\n    overflow-x: auto;\n    padding: 8px 12px 16px 12px;\n    margin: 0;\n    list-style: none;\n    flex-wrap: nowrap;\n\n    &&::-webkit-scrollbar {\n        display: none;\n    }\n    -ms-overflow-style: none;\n    scrollbar-width: none;\n\n    > li {\n        display: flex;\n        flex: 1;\n        min-width: 78px;\n        height: fit-content;\n    }\n\n    > li > button {\n        width: 100%;\n    }\n`;\nconst WalletItemStyled = styled.button`\n    position: relative;\n    cursor: pointer;\n    border: none;\n    background-color: unset;\n    padding: 8px 4px;\n    width: 100%;\n    min-width: 78px;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n\n    transition: transform 0.125s ease-in-out;\n\n    ${mediaNotTouch} {\n        &:hover {\n            transform: scale(1.04);\n        }\n    }\n\n    &:active {\n        transform: scale(0.96);\n    }\n\n    ${mediaTouch} {\n        &:active {\n            transform: scale(0.92);\n        }\n    }\n`;\nconst ImageStyled$1 = styled(WalletImage)`\n    width: 60px;\n    height: 60px;\n    border-radius: ${(props) => borders$3[props.theme.borderRadius]};\n    margin-bottom: 8px;\n    position: relative;\n`;\nconst BadgeStyled = styled(Image)`\n    position: absolute;\n    right: -6px;\n    bottom: -6px;\n    width: 24px;\n    height: 24px;\n    border-radius: ${(props) => badgeBorders[props.theme.borderRadius]};\n    box-shadow: 0 2px 8px 0 rgba(0, 0, 0, 0.08);\n`;\nconst StyledText = styled(Text)`\n    max-width: 90px;\n    font-weight: 510;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n    overflow: hidden;\n\n    ${media(\"mobile\")} {\n        max-width: 80px;\n    }\n`;\nconst StyledSecondLine = styled(Text)`\n    font-weight: ${(props) => props.colorPrimary ? \"510\" : \"400\"};\n    max-width: 90px;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n    overflow: hidden;\n    color: ${(props) => props.colorPrimary ? props.theme.colors.text.primary : props.theme.colors.text.secondary};\n\n    ${media(\"mobile\")} {\n        max-width: 80px;\n    }\n`;\nconst _tmpl$$r = /* @__PURE__ */ template$1(`<div></div>`);\nconst WalletItem = (props) => {\n  let ctxRef = null;\n  const adjustLetterSpacing = () => {\n    const name = ctxRef == null ? void 0 : ctxRef.querySelector(\"div\");\n    if (name && name.scrollWidth > name.clientWidth) {\n      let spacing = 0;\n      const minSpacing = -0.4;\n      const step = 0.05;\n      while (name.scrollWidth > name.clientWidth && spacing >= minSpacing) {\n        spacing -= step;\n        name.style.letterSpacing = `${spacing}px`;\n      }\n      if (spacing !== 0) {\n        spacing -= step;\n        name.style.letterSpacing = `${spacing}px`;\n      }\n    }\n  };\n  onMount(() => adjustLetterSpacing());\n  createEffect(() => {\n    adjustLetterSpacing();\n  });\n  return createComponent(WalletItemStyled, {\n    get [\"class\"]() {\n      return props.class;\n    },\n    onClick: () => props.onClick(),\n    \"data-tc-wallet-item\": \"true\",\n    get children() {\n      return [createMemo(() => createMemo(() => typeof props.icon === \"string\")() ? createComponent(ImageStyled$1, {\n        get src() {\n          return props.icon;\n        },\n        get badge() {\n          return createMemo(() => !!props.badgeUrl)() && createComponent(BadgeStyled, {\n            get src() {\n              return props.badgeUrl;\n            }\n          });\n        }\n      }) : props.icon), (() => {\n        const _el$ = _tmpl$$r.cloneNode(true);\n        use((el) => ctxRef = el, _el$);\n        insert(_el$, createComponent(StyledText, {\n          get children() {\n            return props.name;\n          }\n        }));\n        return _el$;\n      })(), createMemo(() => createMemo(() => !!props.secondLine)() && createComponent(StyledSecondLine, {\n        get colorPrimary() {\n          var _a2;\n          return (_a2 = props.secondLineColorPrimary) != null ? _a2 : true;\n        },\n        get children() {\n          return props.secondLine;\n        }\n      }))];\n    }\n  });\n};\nconst H1Styled$9 = styled.h1`\n    font-style: normal;\n    font-weight: 590;\n    font-size: 20px;\n    line-height: 28px;\n\n    text-align: center;\n\n    color: ${(props) => props.theme.colors.text.primary};\n\n    margin-top: 0;\n    margin-bottom: 0;\n\n    cursor: default;\n`;\nconst H1 = (props) => {\n  const [t2] = useI18n();\n  return createComponent(H1Styled$9, {\n    get [\"class\"]() {\n      return props.class;\n    },\n    \"data-tc-h1\": \"true\",\n    get children() {\n      var _a2;\n      return createMemo(() => !!props.translationKey)() ? t2(props.translationKey, props.translationValues, (_a2 = props.children) == null ? void 0 : _a2.toString()) : props.children;\n    }\n  });\n};\nconst H2Styled$5 = styled.h2`\n    font-style: normal;\n    font-weight: 400;\n    font-size: 16px;\n    line-height: 22px;\n\n    text-align: center;\n\n    color: ${(props) => props.theme.colors.text.secondary};\n\n    margin-top: 0;\n    margin-bottom: 32px;\n\n    cursor: default;\n`;\nconst H2 = (props) => {\n  const [t2] = useI18n();\n  return createComponent(H2Styled$5, {\n    get [\"class\"]() {\n      return props.class;\n    },\n    \"data-tc-h2\": \"true\",\n    get children() {\n      var _a2;\n      return createMemo(() => !!props.translationKey)() ? t2(props.translationKey, props.translationValues, (_a2 = props.children) == null ? void 0 : _a2.toString()) : props.children;\n    }\n  });\n};\nconst H3Styled$1 = styled.h3`\n    font-style: normal;\n    font-weight: 510;\n    font-size: 16px;\n    line-height: 20px;\n\n    color: ${(props) => props.theme.colors.text.primary};\n\n    margin-top: 0;\n    margin-bottom: 0;\n\n    cursor: default;\n`;\nconst H3 = (props) => {\n  const [t2] = useI18n();\n  return createComponent(H3Styled$1, {\n    \"data-tc-h3\": \"true\",\n    get [\"class\"]() {\n      return props.class;\n    },\n    get children() {\n      var _a2;\n      return createMemo(() => !!props.translationKey)() ? t2(props.translationKey, props.translationValues, (_a2 = props.children) == null ? void 0 : _a2.toString()) : props.children;\n    }\n  });\n};\nconst _tmpl$$q = /* @__PURE__ */ template$1(`<svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M14.1839 17.7069C13.6405 18.6507 13.3688 19.1226 13.0591 19.348C12.4278 19.8074 11.5723 19.8074 10.941 19.348C10.6312 19.1226 10.3595 18.6507 9.81613 17.7069L5.52066 10.2464C4.76864 8.94024 4.39263 8.28717 4.33762 7.75894C4.2255 6.68236 4.81894 5.65591 5.80788 5.21589C6.29309 5 7.04667 5 8.55383 5H15.4462C16.9534 5 17.7069 5 18.1922 5.21589C19.1811 5.65591 19.7745 6.68236 19.6624 7.75894C19.6074 8.28717 19.2314 8.94024 18.4794 10.2464L14.1839 17.7069ZM11.1 16.3412L6.56139 8.48002C6.31995 8.06185 6.19924 7.85276 6.18146 7.68365C6.14523 7.33896 6.33507 7.01015 6.65169 6.86919C6.80703 6.80002 7.04847 6.80002 7.53133 6.80002H7.53134L11.1 6.80002V16.3412ZM12.9 16.3412L17.4387 8.48002C17.6801 8.06185 17.8008 7.85276 17.8186 7.68365C17.8548 7.33896 17.665 7.01015 17.3484 6.86919C17.193 6.80002 16.9516 6.80002 16.4687 6.80002L12.9 6.80002V16.3412Z\"></path></svg>`);\nconst TonIcon = (props) => {\n  const theme = useTheme();\n  const fill = () => props.fill || theme.colors.icon.primary;\n  return (() => {\n    const _el$ = _tmpl$$q.cloneNode(true), _el$2 = _el$.firstChild;\n    createRenderEffect(() => setAttribute(_el$2, \"fill\", fill()));\n    return _el$;\n  })();\n};\nconst _tmpl$$p = /* @__PURE__ */ template$1(`<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\"><g clip-path=\"url(#clip0_3783_2045)\"><circle cx=\"8\" cy=\"8.00098\" r=\"8\"></circle><path d=\"M4.75 8.50098L7 10.751L11.75 6.00098\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path></g><defs><clipPath id=\"clip0_3783_2045\"><rect width=\"16\" height=\"16\" fill=\"white\" transform=\"translate(0 0.000976562)\"></rect></clipPath></defs></svg>`), _tmpl$2$4 = /* @__PURE__ */ template$1(`<svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><circle cx=\"12\" cy=\"12\" r=\"11\"></circle><path d=\"M17.1364 9.6364C17.4879 9.28493 17.4879 8.71508 17.1364 8.36361C16.7849 8.01214 16.2151 8.01214 15.8636 8.36361L10 14.2272L8.1364 12.3636C7.78493 12.0121 7.21508 12.0121 6.86361 12.3636C6.51214 12.7151 6.51214 13.2849 6.86361 13.6364L9.36361 16.1364C9.71508 16.4879 10.2849 16.4879 10.6364 16.1364L17.1364 9.6364Z\"></path></svg>`), _tmpl$3$2 = /* @__PURE__ */ template$1(`<svg width=\"72\" height=\"72\" viewBox=\"0 0 72 72\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><circle cx=\"36\" cy=\"36\" r=\"33\"></circle><path d=\"M50.9142 28.4142C51.6953 27.6332 51.6953 26.3668 50.9142 25.5858C50.1332 24.8047 48.8668 24.8047 48.0858 25.5858L30 43.6716L23.9142 37.5858C23.1332 36.8047 21.8668 36.8047 21.0858 37.5858C20.3047 38.3668 20.3047 39.6332 21.0858 40.4142L28.5858 47.9142C29.3668 48.6953 30.6332 48.6953 31.4142 47.9142L50.9142 28.4142Z\"></path></svg>`);\nconst SuccessIcon = (props) => {\n  const theme = useTheme();\n  const size = () => props.size || \"s\";\n  const fill = () => props.fill || theme.colors.icon.success;\n  return createMemo((() => {\n    const _c$ = createMemo(() => size() === \"xs\");\n    return () => _c$() ? (() => {\n      const _el$ = _tmpl$$p.cloneNode(true), _el$2 = _el$.firstChild, _el$3 = _el$2.firstChild, _el$4 = _el$3.nextSibling;\n      createRenderEffect((_p$) => {\n        const _v$ = props.class, _v$2 = fill(), _v$3 = theme.colors.constant.white;\n        _v$ !== _p$._v$ && setAttribute(_el$, \"class\", _p$._v$ = _v$);\n        _v$2 !== _p$._v$2 && setAttribute(_el$3, \"fill\", _p$._v$2 = _v$2);\n        _v$3 !== _p$._v$3 && setAttribute(_el$4, \"stroke\", _p$._v$3 = _v$3);\n        return _p$;\n      }, {\n        _v$: void 0,\n        _v$2: void 0,\n        _v$3: void 0\n      });\n      return _el$;\n    })() : (() => {\n      const _c$2 = createMemo(() => size() === \"s\");\n      return () => _c$2() ? (() => {\n        const _el$5 = _tmpl$2$4.cloneNode(true), _el$6 = _el$5.firstChild, _el$7 = _el$6.nextSibling;\n        createRenderEffect((_p$) => {\n          const _v$4 = props.class, _v$5 = fill(), _v$6 = theme.colors.constant.white;\n          _v$4 !== _p$._v$4 && setAttribute(_el$5, \"class\", _p$._v$4 = _v$4);\n          _v$5 !== _p$._v$5 && setAttribute(_el$6, \"fill\", _p$._v$5 = _v$5);\n          _v$6 !== _p$._v$6 && setAttribute(_el$7, \"fill\", _p$._v$6 = _v$6);\n          return _p$;\n        }, {\n          _v$4: void 0,\n          _v$5: void 0,\n          _v$6: void 0\n        });\n        return _el$5;\n      })() : (() => {\n        const _el$8 = _tmpl$3$2.cloneNode(true), _el$9 = _el$8.firstChild, _el$10 = _el$9.nextSibling;\n        createRenderEffect((_p$) => {\n          const _v$7 = props.class, _v$8 = fill(), _v$9 = theme.colors.constant.white;\n          _v$7 !== _p$._v$7 && setAttribute(_el$8, \"class\", _p$._v$7 = _v$7);\n          _v$8 !== _p$._v$8 && setAttribute(_el$9, \"fill\", _p$._v$8 = _v$8);\n          _v$9 !== _p$._v$9 && setAttribute(_el$10, \"fill\", _p$._v$9 = _v$9);\n          return _p$;\n        }, {\n          _v$7: void 0,\n          _v$8: void 0,\n          _v$9: void 0\n        });\n        return _el$8;\n      })();\n    })();\n  })());\n};\nconst _tmpl$$o = /* @__PURE__ */ template$1(`<svg width=\"72\" height=\"72\" viewBox=\"0 0 72 72\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><circle cx=\"36\" cy=\"36\" r=\"33\"></circle><path d=\"M24.0858 26.9142C23.3047 26.1332 23.3047 24.8668 24.0858 24.0858C24.8668 23.3047 26.1332 23.3047 26.9142 24.0858L36 33.1716L45.0858 24.0858C45.8668 23.3047 47.1332 23.3047 47.9142 24.0858C48.6953 24.8668 48.6953 26.1332 47.9142 26.9142L38.8284 36L47.9142 45.0858C48.6953 45.8668 48.6953 47.1332 47.9142 47.9142C47.1332 48.6953 45.8668 48.6953 45.0858 47.9142L36 38.8284L26.9142 47.9142C26.1332 48.6953 24.8668 48.6953 24.0858 47.9142C23.3047 47.1332 23.3047 45.8668 24.0858 45.0858L33.1716 36L24.0858 26.9142Z\"></path></svg>`), _tmpl$2$3 = /* @__PURE__ */ template$1(`<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"48\" height=\"48\" viewBox=\"0 0 48 48\" fill=\"none\"><circle cx=\"24\" cy=\"24.001\" r=\"22\"></circle><path d=\"M24 24.001L31.5 16.501M24 24.001L16.5 16.501M24 24.001L16.5 31.501M24 24.001L31.5 31.501\" stroke-width=\"3\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path></svg>`), _tmpl$3$1 = /* @__PURE__ */ template$1(`<svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><circle cx=\"12\" cy=\"12\" r=\"11\"></circle><path d=\"M7.86361 9.1364C7.51214 8.78493 7.51214 8.21508 7.86361 7.86361C8.21508 7.51214 8.78493 7.51214 9.1364 7.86361L12 10.7272L14.8636 7.86361C15.2151 7.51214 15.7849 7.51214 16.1364 7.86361C16.4879 8.21508 16.4879 8.78493 16.1364 9.1364L13.2728 12L16.1364 14.8636C16.4879 15.2151 16.4879 15.7849 16.1364 16.1364C15.7849 16.4879 15.2151 16.4879 14.8636 16.1364L12 13.2728L9.1364 16.1364C8.78493 16.4879 8.21508 16.4879 7.86361 16.1364C7.51214 15.7849 7.51214 15.2151 7.86361 14.8636L10.7272 12L7.86361 9.1364Z\"></path></svg>`);\nconst ErrorIcon = (props) => {\n  const theme = useTheme();\n  const size = () => props.size || \"m\";\n  const fill = () => props.fill || theme.colors.icon.error;\n  return createMemo((() => {\n    const _c$ = createMemo(() => size() === \"m\");\n    return () => _c$() ? (() => {\n      const _el$ = _tmpl$$o.cloneNode(true), _el$2 = _el$.firstChild, _el$3 = _el$2.nextSibling;\n      createRenderEffect((_p$) => {\n        const _v$ = props.class, _v$2 = fill(), _v$3 = theme.colors.constant.white;\n        _v$ !== _p$._v$ && setAttribute(_el$, \"class\", _p$._v$ = _v$);\n        _v$2 !== _p$._v$2 && setAttribute(_el$2, \"fill\", _p$._v$2 = _v$2);\n        _v$3 !== _p$._v$3 && setAttribute(_el$3, \"fill\", _p$._v$3 = _v$3);\n        return _p$;\n      }, {\n        _v$: void 0,\n        _v$2: void 0,\n        _v$3: void 0\n      });\n      return _el$;\n    })() : (() => {\n      const _c$2 = createMemo(() => size() === \"s\");\n      return () => _c$2() ? (() => {\n        const _el$4 = _tmpl$2$3.cloneNode(true), _el$5 = _el$4.firstChild, _el$6 = _el$5.nextSibling;\n        createRenderEffect((_p$) => {\n          const _v$4 = props.class, _v$5 = fill(), _v$6 = theme.colors.constant.white;\n          _v$4 !== _p$._v$4 && setAttribute(_el$4, \"class\", _p$._v$4 = _v$4);\n          _v$5 !== _p$._v$5 && setAttribute(_el$5, \"fill\", _p$._v$5 = _v$5);\n          _v$6 !== _p$._v$6 && setAttribute(_el$6, \"stroke\", _p$._v$6 = _v$6);\n          return _p$;\n        }, {\n          _v$4: void 0,\n          _v$5: void 0,\n          _v$6: void 0\n        });\n        return _el$4;\n      })() : (() => {\n        const _el$7 = _tmpl$3$1.cloneNode(true), _el$8 = _el$7.firstChild, _el$9 = _el$8.nextSibling;\n        createRenderEffect((_p$) => {\n          const _v$7 = props.class, _v$8 = fill(), _v$9 = theme.colors.constant.white;\n          _v$7 !== _p$._v$7 && setAttribute(_el$7, \"class\", _p$._v$7 = _v$7);\n          _v$8 !== _p$._v$8 && setAttribute(_el$8, \"fill\", _p$._v$8 = _v$8);\n          _v$9 !== _p$._v$9 && setAttribute(_el$9, \"fill\", _p$._v$9 = _v$9);\n          return _p$;\n        }, {\n          _v$7: void 0,\n          _v$8: void 0,\n          _v$9: void 0\n        });\n        return _el$7;\n      })();\n    })();\n  })());\n};\nconst _tmpl$$n = /* @__PURE__ */ template$1(`<svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M15.55 5.85123C18.9459 7.81184 20.1094 12.1541 18.1488 15.55C16.1882 18.9459 11.8459 20.1094 8.44998 18.1488C8.01952 17.9003 7.46909 18.0478 7.22056 18.4782C6.97203 18.9087 7.11952 19.4591 7.54998 19.7076C11.8068 22.1653 17.2499 20.7068 19.7076 16.45C22.1653 12.1932 20.7068 6.75005 16.45 4.29239C12.1932 1.83472 6.75003 3.29321 4.29236 7.55001C4.04383 7.98047 4.19132 8.53091 4.62178 8.77943C5.05224 9.02796 5.60268 8.88048 5.8512 8.45001C7.81181 5.05413 12.1541 3.89062 15.55 5.85123Z\"></path></svg>`), _tmpl$2$2 = /* @__PURE__ */ template$1(`<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"44\" height=\"44\" viewBox=\"0 0 44 44\" fill=\"none\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M22 2.99951C11.5066 2.99951 3 11.5061 3 21.9995C3 32.4929 11.5066 40.9995 22 40.9995C22.8284 40.9995 23.5 41.6711 23.5 42.4995C23.5 43.3279 22.8284 43.9995 22 43.9995C9.84974 43.9995 0 34.1498 0 21.9995C0 9.84925 9.84974 -0.000488281 22 -0.000488281C34.1503 -0.000488281 44 9.84925 44 21.9995C44 22.8279 43.3284 23.4995 42.5 23.4995C41.6716 23.4995 41 22.8279 41 21.9995C41 11.5061 32.4934 2.99951 22 2.99951Z\"></path></svg>`), _tmpl$3 = /* @__PURE__ */ template$1(`<svg width=\"72\" height=\"72\" viewBox=\"0 0 72 72\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M24 56.7846C35.479 63.412 50.1572 59.479 56.7846 47.9999C63.412 36.5209 59.479 21.8427 48 15.2153C36.521 8.58791 21.8428 12.5209 15.2154 23.9999\" stroke-width=\"4\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path></svg>`);\nconst LoaderIcon = (props) => {\n  const theme = useTheme();\n  const size = () => props.size || \"xs\";\n  const fill = () => props.fill || theme.colors.icon.tertiary;\n  const rotateAnimation = h`\n        0% {\n          transform: rotate(0deg);\n        }\n        100% {\n          transform: rotate(360deg);\n        }\n    `;\n  const svgClass = u`\n        animation: ${rotateAnimation} 1s linear infinite;\n    `;\n  return createMemo((() => {\n    const _c$ = createMemo(() => size() === \"xs\");\n    return () => _c$() ? (() => {\n      const _el$ = _tmpl$$n.cloneNode(true), _el$2 = _el$.firstChild;\n      createRenderEffect((_p$) => {\n        const _v$ = classnames__WEBPACK_IMPORTED_MODULE_3__(svgClass, props.class), _v$2 = fill();\n        _v$ !== _p$._v$ && setAttribute(_el$, \"class\", _p$._v$ = _v$);\n        _v$2 !== _p$._v$2 && setAttribute(_el$2, \"fill\", _p$._v$2 = _v$2);\n        return _p$;\n      }, {\n        _v$: void 0,\n        _v$2: void 0\n      });\n      return _el$;\n    })() : (() => {\n      const _c$2 = createMemo(() => size() === \"s\");\n      return () => _c$2() ? (() => {\n        const _el$3 = _tmpl$2$2.cloneNode(true), _el$4 = _el$3.firstChild;\n        createRenderEffect((_p$) => {\n          const _v$3 = classnames__WEBPACK_IMPORTED_MODULE_3__(svgClass, props.class), _v$4 = fill();\n          _v$3 !== _p$._v$3 && setAttribute(_el$3, \"class\", _p$._v$3 = _v$3);\n          _v$4 !== _p$._v$4 && setAttribute(_el$4, \"fill\", _p$._v$4 = _v$4);\n          return _p$;\n        }, {\n          _v$3: void 0,\n          _v$4: void 0\n        });\n        return _el$3;\n      })() : (() => {\n        const _el$5 = _tmpl$3.cloneNode(true), _el$6 = _el$5.firstChild;\n        createRenderEffect((_p$) => {\n          const _v$5 = classnames__WEBPACK_IMPORTED_MODULE_3__(svgClass, props.class), _v$6 = fill();\n          _v$5 !== _p$._v$5 && setAttribute(_el$5, \"class\", _p$._v$5 = _v$5);\n          _v$6 !== _p$._v$6 && setAttribute(_el$6, \"stroke\", _p$._v$6 = _v$6);\n          return _p$;\n        }, {\n          _v$5: void 0,\n          _v$6: void 0\n        });\n        return _el$5;\n      })();\n    })();\n  })());\n};\nconst _tmpl$$m = /* @__PURE__ */ template$1(`<svg width=\"158\" height=\"28\" viewBox=\"0 0 158 28\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M28 14.001C28 21.733 21.732 28.001 14 28.001C6.26801 28.001 0 21.733 0 14.001C0 6.26899 6.26801 0.000976562 14 0.000976562C21.732 0.000976562 28 6.26899 28 14.001ZM9.21931 8.00098H18.7801H18.7813C20.538 8.00098 21.6522 9.89966 20.7691 11.4302L14.8672 21.6576C14.4822 22.3254 13.5172 22.3254 13.1322 21.6576L7.23158 11.4302C6.34721 9.89726 7.4614 8.00098 9.21931 8.00098ZM13.1262 18.5882V9.74806H9.21811C8.78976 9.74806 8.53708 10.2029 8.74163 10.5578L11.8423 16.1035L13.1262 18.5882ZM16.1559 16.1047L19.2554 10.5566C19.4599 10.2017 19.2073 9.74685 18.7789 9.74685H14.8709V18.5906L16.1559 16.1047Z\" fill=\"#0098EA\"></path><path d=\"M18.7802 8.00098H9.21936C7.46145 8.00098 6.34727 9.89726 7.23164 11.4302L13.1322 21.6576C13.5173 22.3254 14.4823 22.3254 14.8673 21.6576L20.7691 11.4302C21.6523 9.89966 20.5381 8.00098 18.7814 8.00098H18.7802ZM13.1274 18.5906L11.8424 16.1035L8.74168 10.5578C8.53714 10.2029 8.78981 9.74806 9.21816 9.74806H13.1262V18.5918L13.1274 18.5906ZM19.2555 10.5566L16.156 16.1047L14.8709 18.5906V9.74685H18.779C19.2073 9.74685 19.46 10.2017 19.2555 10.5566Z\" fill=\"white\"></path><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M51.7483 22.1967C55.7182 22.1967 58.9609 18.954 58.9609 14.9841C58.9609 11.0142 55.7182 7.77148 51.7483 7.77148C47.7588 7.77148 44.5357 11.0142 44.5357 14.9841C44.5357 18.954 47.7588 22.1967 51.7483 22.1967ZM51.7483 19.1702C49.4686 19.1702 47.6802 17.2442 47.6802 14.9841C47.6802 12.724 49.4686 10.798 51.7483 10.798C54.0084 10.798 55.7968 12.724 55.7968 14.9841C55.7968 17.2442 54.0084 19.1702 51.7483 19.1702ZM37.0698 21.9609H40.2142V10.9946H44.2843V8.00732H33V10.9946H37.0698V21.9609ZM69.9379 8.00732H73.0823V21.9609H70.3899L63.59 13.3333V21.9609H60.4652V8.00732H63.1576L69.9379 16.6153V8.00732ZM79.2259 14.9887C79.2259 10.9202 82.351 7.77539 86.4982 7.77539C89.8592 7.77539 92.5519 9.95709 93.2202 12.6891H90.7437C90.154 11.0971 88.4637 9.9964 86.4982 9.9964C83.5893 9.9964 81.5452 12.1781 81.5452 14.9887C81.5452 17.7994 83.5893 19.9811 86.4982 19.9811C88.4637 19.9811 90.154 18.8804 90.7437 17.2884H93.2202C92.5519 20.0204 89.8592 22.2021 86.4982 22.2021C82.351 22.2021 79.2259 19.0573 79.2259 14.9887ZM104.584 17.0525C104.584 19.9025 102.343 22.1628 99.4342 22.1628C96.5253 22.1628 94.2846 19.9025 94.2846 17.0525C94.2846 14.2025 96.5253 11.9422 99.4342 11.9422C102.343 11.9422 104.584 14.2025 104.584 17.0525ZM96.4663 17.0525C96.4663 18.8018 97.6849 20.158 99.4342 20.158C101.164 20.158 102.382 18.8018 102.382 17.0525C102.382 15.3032 101.164 13.947 99.4342 13.947C97.6849 13.947 96.4663 15.3032 96.4663 17.0525ZM108.626 12.1388H106.463V21.9662H108.626V17.1311C108.626 15.0281 109.726 13.9077 111.161 13.9077C112.419 13.9077 113.205 14.8512 113.205 16.4039V21.9662H115.367V16.0501C115.367 13.5539 113.893 11.9422 111.613 11.9422C110.335 11.9422 109.215 12.4926 108.626 13.4753V12.1388ZM117.839 12.1388H120.001V13.4753C120.59 12.4926 121.711 11.9422 122.988 11.9422C125.268 11.9422 126.742 13.5539 126.742 16.0501V21.9662H124.58V16.4039C124.58 14.8512 123.794 13.9077 122.536 13.9077C121.101 13.9077 120.001 15.0281 120.001 17.1311V21.9662H117.839V12.1388ZM133.558 22.1628C136.054 22.1628 137.823 20.728 138.373 18.8804H136.113C135.661 19.8238 134.717 20.2563 133.636 20.2563C131.887 20.2563 130.747 19.077 130.668 17.5832H138.491C138.688 14.2419 136.585 11.9422 133.577 11.9422C130.551 11.9422 128.526 14.1436 128.526 17.0525C128.526 20.0007 130.629 22.1628 133.558 22.1628ZM130.747 16.0501C131.042 14.5367 132.162 13.7505 133.518 13.7505C134.717 13.7505 135.838 14.4581 136.172 16.0501H130.747ZM149.851 18.3694C149.32 20.5511 147.453 22.1628 144.859 22.1628C141.871 22.1628 139.709 19.8828 139.709 17.0525C139.709 14.2222 141.871 11.9422 144.859 11.9422C147.453 11.9422 149.32 13.5539 149.851 15.7356H147.571C147.178 14.6743 146.215 13.9077 144.859 13.9077C143.109 13.9077 141.91 15.2246 141.91 17.0525C141.91 18.8804 143.109 20.1973 144.859 20.1973C146.215 20.1973 147.178 19.4307 147.571 18.3694H149.851ZM155.75 22.0645C156.418 22.0645 156.929 21.9859 157.362 21.8483V19.9221C157.047 20.0401 156.615 20.1187 156.202 20.1187C155.082 20.1187 154.551 19.6666 154.551 18.448V14.065H157.362V12.1388H154.551V9.40675H152.389V12.1388H150.345V14.065H152.389V18.8018C152.389 21.0228 153.863 22.0645 155.75 22.0645Z\"></path></svg>`);\nconst TonConnectBrand = () => {\n  const theme = useTheme();\n  const fill = () => theme.theme === THEME.DARK ? theme.colors.constant.white : theme.colors.constant.black;\n  return (() => {\n    const _el$ = _tmpl$$m.cloneNode(true), _el$2 = _el$.firstChild, _el$3 = _el$2.nextSibling, _el$4 = _el$3.nextSibling;\n    createRenderEffect(() => setAttribute(_el$4, \"fill\", fill()));\n    return _el$;\n  })();\n};\nconst _tmpl$$l = /* @__PURE__ */ template$1(`<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M5.56608 4.42584C5.82527 3.32158 6.8176 2.5 8.00001 2.5C9.38072 2.5 10.5 3.61929 10.5 5C10.5 5.63026 10.3391 6.0386 10.1264 6.34455C9.90018 6.66993 9.58561 6.92478 9.18864 7.20877C9.12579 7.25372 9.05873 7.30025 8.9887 7.34883C8.27392 7.84472 7.25001 8.55507 7.25001 10V10.25C7.25001 10.6642 7.5858 11 8.00001 11C8.41422 11 8.75001 10.6642 8.75001 10.25V10C8.75001 9.36502 9.10777 9.1096 9.94554 8.51149L10.0614 8.42873C10.4769 8.13147 10.9748 7.75194 11.358 7.20076C11.7547 6.63015 12 5.91973 12 5C12 2.79086 10.2091 1 8.00001 1C6.10564 1 4.5205 2.31615 4.10577 4.08308C4.01112 4.48634 4.26129 4.88997 4.66454 4.98462C5.0678 5.07927 5.47143 4.8291 5.56608 4.42584ZM8.00001 15C8.60752 15 9.10001 14.5075 9.10001 13.9C9.10001 13.2925 8.60752 12.8 8.00001 12.8C7.39249 12.8 6.90001 13.2925 6.90001 13.9C6.90001 14.5075 7.39249 15 8.00001 15Z\"></path></svg>`);\nconst QuestionIcon = (props) => {\n  const theme = useTheme();\n  const fill = () => props.fill || theme.colors.icon.secondary;\n  return (() => {\n    const _el$ = _tmpl$$l.cloneNode(true), _el$2 = _el$.firstChild;\n    createRenderEffect(() => setAttribute(_el$2, \"fill\", fill()));\n    return _el$;\n  })();\n};\nconst _tmpl$$k = /* @__PURE__ */ template$1(`<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M9.98156 8.75C9.84854 11.4328 9.01206 13.5 8 13.5C6.98794 13.5 6.15146 11.4328 6.01844 8.75H9.98156ZM11.4832 8.75C11.4217 10.1155 11.1929 11.3869 10.8239 12.4017C10.7734 12.5405 10.7188 12.6789 10.6595 12.8154C12.1454 11.993 13.2103 10.5029 13.4493 8.75H11.4832ZM13.4493 7.25H11.4832C11.4217 5.88453 11.1929 4.61314 10.8239 3.5983C10.7734 3.4595 10.7188 3.32111 10.6595 3.18459C12.1454 4.00697 13.2103 5.49709 13.4493 7.25ZM9.98156 7.25H6.01844C6.15144 4.56764 6.98769 2.50062 7.99955 2.5H8C9.01206 2.5 9.84854 4.56724 9.98156 7.25ZM4.51678 7.25C4.57826 5.88453 4.80706 4.61314 5.1761 3.5983C5.22657 3.4595 5.28124 3.32111 5.3405 3.18459C3.85463 4.00697 2.78972 5.49709 2.55071 7.25H4.51678ZM2.55071 8.75C2.78972 10.5029 3.85463 11.993 5.3405 12.8154C5.28124 12.6789 5.22657 12.5405 5.1761 12.4017C4.80706 11.3869 4.57826 10.1155 4.51678 8.75H2.55071ZM15 8C15 11.866 11.866 15 8 15C4.13401 15 1 11.866 1 8C1 4.13401 4.13401 1 8 1C11.866 1 15 4.13401 15 8Z\"></path></svg>`);\nconst BrowserIcon = (props) => {\n  const theme = useTheme();\n  const fill = () => props.fill || theme.colors.icon.primary;\n  return (() => {\n    const _el$ = _tmpl$$k.cloneNode(true), _el$2 = _el$.firstChild;\n    createRenderEffect(() => setAttribute(_el$2, \"fill\", fill()));\n    return _el$;\n  })();\n};\nconst _tmpl$$j = /* @__PURE__ */ template$1(`<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M2.5 4.8C2.5 3.11984 2.5 2.27976 2.82698 1.63803C3.1146 1.07354 3.57354 0.614601 4.13803 0.32698C4.77976 0 5.61984 0 7.3 0H8.7C10.3802 0 11.2202 0 11.862 0.32698C12.4265 0.614601 12.8854 1.07354 13.173 1.63803C13.5 2.27976 13.5 3.11984 13.5 4.8V11.2C13.5 12.8802 13.5 13.7202 13.173 14.362C12.8854 14.9265 12.4265 15.3854 11.862 15.673C11.2202 16 10.3802 16 8.7 16H7.3C5.61984 16 4.77976 16 4.13803 15.673C3.57354 15.3854 3.1146 14.9265 2.82698 14.362C2.5 13.7202 2.5 12.8802 2.5 11.2V4.8ZM4 3.9C4 3.05992 4 2.63988 4.16349 2.31901C4.3073 2.03677 4.53677 1.8073 4.81901 1.66349C5.13988 1.5 5.55992 1.5 6.4 1.5H9.6C10.4401 1.5 10.8601 1.5 11.181 1.66349C11.4632 1.8073 11.6927 2.03677 11.8365 2.31901C12 2.63988 12 3.05992 12 3.9V12.1C12 12.9401 12 13.3601 11.8365 13.681C11.6927 13.9632 11.4632 14.1927 11.181 14.3365C10.8601 14.5 10.4401 14.5 9.6 14.5H6.4C5.55992 14.5 5.13988 14.5 4.81901 14.3365C4.53677 14.1927 4.3073 13.9632 4.16349 13.681C4 13.3601 4 12.9401 4 12.1V3.9ZM7 2.5C6.58579 2.5 6.25 2.83579 6.25 3.25C6.25 3.66421 6.58579 4 7 4H9C9.41421 4 9.75 3.66421 9.75 3.25C9.75 2.83579 9.41421 2.5 9 2.5H7Z\"></path></svg>`);\nconst MobileIcon = (props) => {\n  const theme = useTheme();\n  const fill = () => props.fill || theme.colors.icon.primary;\n  return (() => {\n    const _el$ = _tmpl$$j.cloneNode(true), _el$2 = _el$.firstChild;\n    createRenderEffect(() => setAttribute(_el$2, \"fill\", fill()));\n    return _el$;\n  })();\n};\nconst _tmpl$$i = /* @__PURE__ */ template$1(`<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M1.5 6.8C1.5 5.11984 1.5 4.27976 1.82698 3.63803C2.1146 3.07354 2.57354 2.6146 3.13803 2.32698C3.77976 2 4.61984 2 6.3 2H9.7C11.3802 2 12.2202 2 12.862 2.32698C13.4265 2.6146 13.8854 3.07354 14.173 3.63803C14.5 4.27976 14.5 5.11984 14.5 6.8V11.5H15.25C15.6642 11.5 16 11.8358 16 12.25C16 12.6642 15.6642 13 15.25 13H0.75C0.335786 13 0 12.6642 0 12.25C0 11.8358 0.335786 11.5 0.75 11.5H1.5V6.8ZM3 11.5H13V5.9C13 5.05992 13 4.63988 12.8365 4.31901C12.6927 4.03677 12.4632 3.8073 12.181 3.66349C11.8601 3.5 11.4401 3.5 10.6 3.5H5.4C4.55992 3.5 4.13988 3.5 3.81901 3.66349C3.53677 3.8073 3.3073 4.03677 3.16349 4.31901C3 4.63988 3 5.05992 3 5.9V11.5Z\"></path></svg>`);\nconst DesktopIcon = (props) => {\n  const theme = useTheme();\n  const fill = () => props.fill || theme.colors.icon.primary;\n  return (() => {\n    const _el$ = _tmpl$$i.cloneNode(true), _el$2 = _el$.firstChild;\n    createRenderEffect(() => setAttribute(_el$2, \"fill\", fill()));\n    return _el$;\n  })();\n};\nconst _tmpl$$h = /* @__PURE__ */ template$1(`<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"17\" height=\"16\" viewBox=\"0 0 17 16\" fill=\"none\"><g clip-path=\"url(#clip0_3676_1603)\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M15.5 1.25049C15.5 0.836275 15.1642 0.500488 14.75 0.500488C14.3358 0.500488 14 0.836275 14 1.25049V3.67012C12.7187 2.04487 10.7318 1.00049 8.5 1.00049C4.63401 1.00049 1.5 4.1345 1.5 8.00049C1.5 11.8665 4.63401 15.0005 8.5 15.0005C11.6844 15.0005 14.3703 12.8748 15.2199 9.96661C15.3361 9.56902 15.1079 9.15254 14.7103 9.03638C14.3127 8.92023 13.8962 9.14838 13.7801 9.54597C13.1123 11.8319 11 13.5005 8.5 13.5005C5.46243 13.5005 3 11.0381 3 8.00049C3 4.96292 5.46243 2.50049 8.5 2.50049C10.321 2.50049 11.9363 3.3855 12.9377 4.75049H10.5C10.0858 4.75049 9.75 5.08627 9.75 5.50049C9.75 5.9147 10.0858 6.25049 10.5 6.25049H14.75C15.1642 6.25049 15.5 5.9147 15.5 5.50049V1.25049Z\"></path></g><defs><clipPath id=\"clip0_3676_1603\"><rect width=\"16\" height=\"16\" fill=\"white\" transform=\"translate(0.5 0.000488281)\"></rect></clipPath></defs></svg>`);\nconst RetryIcon = (props) => {\n  const theme = useTheme();\n  const fill = () => props.fill || theme.colors.accent;\n  return (() => {\n    const _el$ = _tmpl$$h.cloneNode(true), _el$2 = _el$.firstChild, _el$3 = _el$2.firstChild;\n    createRenderEffect(() => setAttribute(_el$3, \"fill\", fill()));\n    return _el$;\n  })();\n};\nconst _tmpl$$g = /* @__PURE__ */ template$1(`<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M13 4.06119V6.75053C13 7.16474 13.3358 7.50053 13.75 7.50053C14.1642 7.50053 14.5 7.16474 14.5 6.75053V2.75053L14.5 2.72807C14.5001 2.63191 14.5003 2.49627 14.4842 2.37627C14.4638 2.22503 14.4063 1.99261 14.2071 1.79342C14.0079 1.59423 13.7755 1.5367 13.6243 1.51637C13.5043 1.50023 13.3686 1.50039 13.2725 1.50051L13.25 1.50053H9.25C8.83579 1.50053 8.5 1.83631 8.5 2.25053C8.5 2.66474 8.83579 3.00053 9.25 3.00053H11.9393L7.21967 7.7202C6.92678 8.01309 6.92678 8.48796 7.21967 8.78086C7.51256 9.07375 7.98744 9.07375 8.28033 8.78086L13 4.06119ZM5.85 1.50053H5.81903H5.81899C5.21528 1.50052 4.71702 1.50051 4.31113 1.53367C3.88956 1.56812 3.50203 1.64204 3.13803 1.82751C2.57354 2.11513 2.1146 2.57407 1.82698 3.13856C1.64151 3.50256 1.56759 3.89009 1.53315 4.31166C1.49998 4.71755 1.49999 5.21581 1.5 5.81953V5.81955V5.85053V10.1505V10.1815V10.1815C1.49999 10.7852 1.49998 11.2835 1.53315 11.6894C1.56759 12.111 1.64151 12.4985 1.82698 12.8625C2.1146 13.427 2.57354 13.8859 3.13803 14.1735C3.50203 14.359 3.88956 14.4329 4.31113 14.4674C4.71702 14.5005 5.21527 14.5005 5.81897 14.5005H5.81901H5.85H10.15H10.181H10.181C10.7847 14.5005 11.283 14.5005 11.6889 14.4674C12.1104 14.4329 12.498 14.359 12.862 14.1735C13.4265 13.8859 13.8854 13.427 14.173 12.8625C14.3585 12.4985 14.4324 12.111 14.4669 11.6894C14.5 11.2835 14.5 10.7853 14.5 10.1816V10.1815V10.1505V9.75053C14.5 9.33631 14.1642 9.00053 13.75 9.00053C13.3358 9.00053 13 9.33631 13 9.75053V10.1505C13 10.793 12.9994 11.2297 12.9718 11.5672C12.945 11.8961 12.8963 12.0642 12.8365 12.1815C12.6927 12.4638 12.4632 12.6932 12.181 12.837C12.0637 12.8968 11.8955 12.9455 11.5667 12.9724C11.2292 12.9999 10.7924 13.0005 10.15 13.0005H5.85C5.20757 13.0005 4.77085 12.9999 4.43328 12.9724C4.10447 12.9455 3.93632 12.8968 3.81902 12.837C3.53677 12.6932 3.3073 12.4638 3.16349 12.1815C3.10372 12.0642 3.05503 11.8961 3.02816 11.5672C3.00058 11.2297 3 10.793 3 10.1505V5.85053C3 5.20809 3.00058 4.77137 3.02816 4.43381C3.05503 4.10499 3.10372 3.93684 3.16349 3.81954C3.3073 3.5373 3.53677 3.30783 3.81902 3.16402C3.93632 3.10425 4.10447 3.05556 4.43328 3.02869C4.77085 3.00111 5.20757 3.00053 5.85 3.00053H6.25C6.66422 3.00053 7 2.66474 7 2.25053C7 1.83631 6.66422 1.50053 6.25 1.50053H5.85Z\"></path></svg>`);\nconst LinkIcon = (props) => {\n  const theme = useTheme();\n  const fill = () => props.fill || theme.colors.accent;\n  return (() => {\n    const _el$ = _tmpl$$g.cloneNode(true), _el$2 = _el$.firstChild;\n    createRenderEffect(() => setAttribute(_el$2, \"fill\", fill()));\n    return _el$;\n  })();\n};\nconst _tmpl$$f = /* @__PURE__ */ template$1(`<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"17\" height=\"16\" viewBox=\"0 0 17 16\" fill=\"none\"><g clip-path=\"url(#clip0_3676_1274)\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M1.82698 2.63901C1.5 3.28074 1.5 4.12082 1.5 5.80098V8.80098V9.00098V10.201C1.5 11.8811 1.5 12.7212 1.82698 13.3629C2.1146 13.9274 2.57354 14.3864 3.13803 14.674C3.77976 15.001 4.61984 15.001 6.3 15.001H11.7C13.3802 15.001 14.2202 15.001 14.862 14.674C15.4265 14.3864 15.8854 13.9274 16.173 13.3629C16.5 12.7212 16.5 11.8811 16.5 10.201V8.80098C16.5 7.12082 16.5 6.28074 16.173 5.63901C15.8854 5.07452 15.4265 4.61558 14.862 4.32796C14.743 4.26733 14.6172 4.21795 14.4805 4.17772C14.4501 3.49449 14.3722 3.02994 14.173 2.63901C13.8854 2.07452 13.4265 1.61558 12.862 1.32796C12.2202 1.00098 11.3802 1.00098 9.7 1.00098H6.3C4.61984 1.00098 3.77976 1.00098 3.13803 1.32796C2.57354 1.61558 2.1146 2.07452 1.82698 2.63901ZM12.9861 4.00942C12.9684 3.7108 12.9281 3.49982 12.8365 3.31999C12.6927 3.03775 12.4632 2.80828 12.181 2.66447C11.8601 2.50098 11.4401 2.50098 10.6 2.50098H5.4C4.55992 2.50098 4.13988 2.50098 3.81901 2.66447C3.53677 2.80828 3.3073 3.03775 3.16349 3.31999C3.03615 3.56991 3.00799 3.88 3.00177 4.40188C3.04646 4.37612 3.09189 4.35146 3.13803 4.32796C3.77976 4.00098 4.61984 4.00098 6.3 4.00098H11.7C12.1966 4.00098 12.6197 4.00098 12.9861 4.00942ZM3 7.90098V8.10098C3 8.47468 3 8.76527 3.01439 9.00098H3V11.101C3 11.9411 3 12.3611 3.16349 12.682C3.3073 12.9642 3.53677 13.1937 3.81901 13.3375C4.13988 13.501 4.55992 13.501 5.4 13.501H12.6C13.4401 13.501 13.8601 13.501 14.181 13.3375C14.4632 13.1937 14.6927 12.9642 14.8365 12.682C15 12.3611 15 11.9411 15 11.101V7.90098C15 7.0609 15 6.64086 14.8365 6.31999C14.6927 6.03775 14.4632 5.80828 14.181 5.66447C13.8601 5.50098 13.4401 5.50098 12.6 5.50098H5.4C4.55992 5.50098 4.13988 5.50098 3.81901 5.66447C3.53677 5.80828 3.3073 6.03775 3.16349 6.31999C3 6.64086 3 7.0609 3 7.90098ZM10.5 9.75098C10.5 9.33676 10.8358 9.00098 11.25 9.00098H12.75C13.1642 9.00098 13.5 9.33676 13.5 9.75098C13.5 10.1652 13.1642 10.501 12.75 10.501H11.25C10.8358 10.501 10.5 10.1652 10.5 9.75098Z\"></path></g><defs><clipPath id=\"clip0_3676_1274\"><rect width=\"16\" height=\"16\" fill=\"white\" transform=\"translate(0.5 0.000976562)\"></rect></clipPath></defs></svg>`);\nconst WalletIcon = (props) => {\n  const theme = useTheme();\n  const fill = () => props.fill || theme.colors.accent;\n  return (() => {\n    const _el$ = _tmpl$$f.cloneNode(true), _el$2 = _el$.firstChild, _el$3 = _el$2.firstChild;\n    createRenderEffect(() => setAttribute(_el$3, \"fill\", fill()));\n    return _el$;\n  })();\n};\nconst _tmpl$$e = /* @__PURE__ */ template$1(`<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"48\" height=\"48\" viewBox=\"0 0 48 48\" fill=\"none\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M39.6319 16.8719C38.3212 16.2041 36.7002 16.0478 34 16.0112V11C34 5.47715 29.5228 1 24 1C18.4772 1 14 5.47715 14 11V16.0112C11.2998 16.0478 9.6788 16.2041 8.36808 16.8719C6.86278 17.6389 5.63893 18.8628 4.87195 20.3681C4 22.0794 4 24.3196 4 28.8V32.2C4 36.6804 4 38.9206 4.87195 40.6319C5.63893 42.1372 6.86278 43.3611 8.36808 44.1281C10.0794 45 12.3196 45 16.8 45H31.2C35.6804 45 37.9206 45 39.6319 44.1281C41.1372 43.3611 42.3611 42.1372 43.1281 40.6319C44 38.9206 44 36.6804 44 32.2V28.8C44 24.3196 44 22.0794 43.1281 20.3681C42.3611 18.8628 41.1372 17.6389 39.6319 16.8719ZM31 11V16H17V11C17 7.13401 20.134 4 24 4C27.866 4 31 7.13401 31 11ZM7.54497 21.73C7 22.7996 7 24.1997 7 27V34C7 36.8003 7 38.2004 7.54497 39.27C8.02433 40.2108 8.78924 40.9757 9.73005 41.455C10.7996 42 12.1997 42 15 42H33C35.8003 42 37.2004 42 38.27 41.455C39.2108 40.9757 39.9757 40.2108 40.455 39.27C41 38.2004 41 36.8003 41 34V27C41 24.1997 41 22.7996 40.455 21.73C39.9757 20.7892 39.2108 20.0243 38.27 19.545C37.2004 19 35.8003 19 33 19H15C12.1997 19 10.7996 19 9.73005 19.545C8.78924 20.0243 8.02433 20.7892 7.54497 21.73ZM24 24C23.1716 24 22.5 24.6716 22.5 25.5V29.5C22.5 30.3284 23.1716 31 24 31C24.8284 31 25.5 30.3284 25.5 29.5V25.5C25.5 24.6716 24.8284 24 24 24Z\"></path></svg>`);\nconst SecurityIcon = (props) => {\n  const theme = useTheme();\n  const fill = () => props.fill || theme.colors.icon.secondary;\n  return (() => {\n    const _el$ = _tmpl$$e.cloneNode(true), _el$2 = _el$.firstChild;\n    createRenderEffect((_p$) => {\n      const _v$ = props.class, _v$2 = fill();\n      _v$ !== _p$._v$ && setAttribute(_el$, \"class\", _p$._v$ = _v$);\n      _v$2 !== _p$._v$2 && setAttribute(_el$2, \"fill\", _p$._v$2 = _v$2);\n      return _p$;\n    }, {\n      _v$: void 0,\n      _v$2: void 0\n    });\n    return _el$;\n  })();\n};\nconst _tmpl$$d = /* @__PURE__ */ template$1(`<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"48\" height=\"48\" viewBox=\"0 0 48 48\" fill=\"none\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M37.485 37.3849C40.894 33.9506 43 29.2212 43 24C43 13.5066 34.4934 5 24 5C13.5066 5 5 13.5066 5 24C5 29.2213 7.1061 33.9507 10.5151 37.385C13.3583 32.9438 18.3354 30 24.0001 30C29.6647 30 34.6418 32.9437 37.485 37.3849ZM35.1809 39.3635C32.9143 35.5532 28.7554 33 24.0001 33C19.2448 33 15.0858 35.5533 12.8193 39.3636C15.9564 41.6506 19.8206 43 24 43C28.1795 43 32.0437 41.6505 35.1809 39.3635ZM24 46C36.1503 46 46 36.1503 46 24C46 11.8497 36.1503 2 24 2C11.8497 2 2 11.8497 2 24C2 36.1503 11.8497 46 24 46ZM24 24C26.7614 24 29 21.7614 29 19C29 16.2386 26.7614 14 24 14C21.2386 14 19 16.2386 19 19C19 21.7614 21.2386 24 24 24ZM24 27C28.4183 27 32 23.4183 32 19C32 14.5817 28.4183 11 24 11C19.5817 11 16 14.5817 16 19C16 23.4183 19.5817 27 24 27Z\"></path></svg>`);\nconst PersonalityIcon = (props) => {\n  const theme = useTheme();\n  const fill = () => props.fill || theme.colors.icon.secondary;\n  return (() => {\n    const _el$ = _tmpl$$d.cloneNode(true), _el$2 = _el$.firstChild;\n    createRenderEffect((_p$) => {\n      const _v$ = props.class, _v$2 = fill();\n      _v$ !== _p$._v$ && setAttribute(_el$, \"class\", _p$._v$ = _v$);\n      _v$2 !== _p$._v$2 && setAttribute(_el$2, \"fill\", _p$._v$2 = _v$2);\n      return _p$;\n    }, {\n      _v$: void 0,\n      _v$2: void 0\n    });\n    return _el$;\n  })();\n};\nconst _tmpl$$c = /* @__PURE__ */ template$1(`<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"48\" height=\"48\" viewBox=\"0 0 48 48\" fill=\"none\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M34.5607 4.43934C33.9749 3.85355 33.0251 3.85355 32.4393 4.43934C31.8536 5.02513 31.8536 5.97487 32.4393 6.56066L37.8787 12H10.5C9.67157 12 9 12.6716 9 13.5C9 14.3284 9.67157 15 10.5 15H37.8787L32.4393 20.4393C31.8536 21.0251 31.8536 21.9749 32.4393 22.5607C33.0251 23.1464 33.9749 23.1464 34.5607 22.5607L42.5607 14.5607C43.1464 13.9749 43.1464 13.0251 42.5607 12.4393L34.5607 4.43934ZM13.4393 25.4393C14.0251 24.8536 14.9749 24.8536 15.5607 25.4393C16.1464 26.0251 16.1464 26.9749 15.5607 27.5607L10.1213 33H37.5C38.3284 33 39 33.6716 39 34.5C39 35.3284 38.3284 36 37.5 36H10.1213L15.5607 41.4393C16.1464 42.0251 16.1464 42.9749 15.5607 43.5607C14.9749 44.1464 14.0251 44.1464 13.4393 43.5607L5.43934 35.5607C4.85355 34.9749 4.85355 34.0251 5.43934 33.4393L13.4393 25.4393Z\"></path></svg>`);\nconst SwapIcon = (props) => {\n  const theme = useTheme();\n  const fill = () => props.fill || theme.colors.icon.secondary;\n  return (() => {\n    const _el$ = _tmpl$$c.cloneNode(true), _el$2 = _el$.firstChild;\n    createRenderEffect((_p$) => {\n      const _v$ = props.class, _v$2 = fill();\n      _v$ !== _p$._v$ && setAttribute(_el$, \"class\", _p$._v$ = _v$);\n      _v$2 !== _p$._v$2 && setAttribute(_el$2, \"fill\", _p$._v$2 = _v$2);\n      return _p$;\n    }, {\n      _v$: void 0,\n      _v$2: void 0\n    });\n    return _el$;\n  })();\n};\nconst _tmpl$$b = /* @__PURE__ */ template$1(`<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"28\" height=\"28\" viewBox=\"0 0 28 28\" fill=\"none\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M1.75 12.002C1.75 9.20169 1.75 7.80156 2.29497 6.732C2.77433 5.79119 3.53924 5.02629 4.48005 4.54692C5.54961 4.00195 6.94974 4.00195 9.75 4.00195H17.25C20.0503 4.00195 21.4504 4.00195 22.52 4.54692C23.4608 5.02629 24.2257 5.79119 24.705 6.732C24.8256 6.96861 24.9195 7.2214 24.9926 7.50195H21.5C19.6377 7.50195 18.7065 7.50195 17.9609 7.77334C16.711 8.22828 15.7263 9.21291 15.2714 10.4629C15 11.2085 15 12.1396 15 14.002C15 15.8643 15 16.7954 15.2714 17.541C15.7263 18.791 16.711 19.7756 17.9609 20.2306C18.7065 20.502 19.6377 20.502 21.5 20.502H24.9926C24.9195 20.7825 24.8256 21.0353 24.705 21.2719C24.2257 22.2127 23.4608 22.9776 22.52 23.457C21.4504 24.002 20.0503 24.002 17.25 24.002H9.75C6.94974 24.002 5.54961 24.002 4.48005 23.457C3.53924 22.9776 2.77433 22.2127 2.29497 21.2719C1.75 20.2023 1.75 18.8022 1.75 16.002V12.002ZM16.4999 13.802C16.4999 12.1218 16.4999 11.2817 16.8269 10.64C17.1145 10.0755 17.5735 9.61656 18.138 9.32894C18.7797 9.00196 19.6198 9.00196 21.2999 9.00196H23.1999C24.8801 9.00196 25.7202 9.00196 26.3619 9.32894C26.9264 9.61656 27.3853 10.0755 27.673 10.64C27.9999 11.2817 27.9999 12.1218 27.9999 13.802V14.202C27.9999 15.8821 27.9999 16.7222 27.673 17.3639C27.3853 17.9284 26.9264 18.3874 26.3619 18.675C25.7202 19.002 24.8801 19.002 23.1999 19.002H21.2999C19.6198 19.002 18.7797 19.002 18.138 18.675C17.5735 18.3874 17.1145 17.9284 16.8269 17.3639C16.4999 16.7222 16.4999 15.8821 16.4999 14.202V13.802ZM22.4999 14.002C22.4999 14.9685 21.7164 15.752 20.7499 15.752C19.7834 15.752 18.9999 14.9685 18.9999 14.002C18.9999 13.0355 19.7834 12.252 20.7499 12.252C21.7164 12.252 22.4999 13.0355 22.4999 14.002Z\"></path></svg>`);\nconst AtWalletIcon = (props) => {\n  const theme = useTheme();\n  const fill = () => props.fill || theme.colors.constant.white;\n  return (() => {\n    const _el$ = _tmpl$$b.cloneNode(true), _el$2 = _el$.firstChild;\n    createRenderEffect((_p$) => {\n      const _v$ = props.class, _v$2 = fill();\n      _v$ !== _p$._v$ && setAttribute(_el$, \"class\", _p$._v$ = _v$);\n      _v$2 !== _p$._v$2 && setAttribute(_el$2, \"fill\", _p$._v$2 = _v$2);\n      return _p$;\n    }, {\n      _v$: void 0,\n      _v$2: void 0\n    });\n    return _el$;\n  })();\n};\nconst _tmpl$$a = /* @__PURE__ */ template$1(`<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"28\" height=\"28\" viewBox=\"0 0 28 28\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M10.0001 10.0001C10.0016 8.02333 10.0267 6.98719 10.436 6.18404C10.8195 5.43139 11.4314 4.81947 12.184 4.43597C13.0397 4 14.1598 4 16.4 4H17.6C19.8402 4 20.9603 4 21.816 4.43597C22.5686 4.81947 23.1805 5.43139 23.564 6.18404C24 7.03969 24 8.15979 24 10.4V11.6C24 13.8402 24 14.9603 23.564 15.816C23.1805 16.5686 22.5686 17.1805 21.816 17.564C21.0128 17.9733 19.9767 17.9984 17.9999 17.9999C17.9984 19.9767 17.9733 21.0128 17.564 21.816C17.1805 22.5686 16.5686 23.1805 15.816 23.564C14.9603 24 13.8402 24 11.6 24H10.4C8.15979 24 7.03969 24 6.18404 23.564C5.43139 23.1805 4.81947 22.5686 4.43597 21.816C4 20.9603 4 19.8402 4 17.6V16.4C4 14.1598 4 13.0397 4.43597 12.184C4.81947 11.4314 5.43139 10.8195 6.18404 10.436C6.98719 10.0267 8.02333 10.0016 10.0001 10.0001ZM10 11.5H9.5C8.09987 11.5 7.3998 11.5 6.86502 11.7725C6.39462 12.0122 6.01217 12.3946 5.77248 12.865C5.5 13.3998 5.5 14.0999 5.5 15.5V18.5C5.5 19.9001 5.5 20.6002 5.77248 21.135C6.01217 21.6054 6.39462 21.9878 6.86502 22.2275C7.3998 22.5 8.09987 22.5 9.5 22.5H12.5C13.9001 22.5 14.6002 22.5 15.135 22.2275C15.6054 21.9878 15.9878 21.6054 16.2275 21.135C16.5 20.6002 16.5 19.9001 16.5 18.5V18H16.4C14.1598 18 13.0397 18 12.184 17.564C11.4314 17.1805 10.8195 16.5686 10.436 15.816C10 14.9603 10 13.8402 10 11.6V11.5ZM11.5 9.5C11.5 8.09987 11.5 7.3998 11.7725 6.86502C12.0122 6.39462 12.3946 6.01217 12.865 5.77248C13.3998 5.5 14.0999 5.5 15.5 5.5H18.5C19.9001 5.5 20.6002 5.5 21.135 5.77248C21.6054 6.01217 21.9878 6.39462 22.2275 6.86502C22.5 7.3998 22.5 8.09987 22.5 9.5V12.5C22.5 13.9001 22.5 14.6002 22.2275 15.135C21.9878 15.6054 21.6054 15.9878 21.135 16.2275C20.6002 16.5 19.9001 16.5 18.5 16.5H15.5C14.0999 16.5 13.3998 16.5 12.865 16.2275C12.3946 15.9878 12.0122 15.6054 11.7725 15.135C11.5 14.6002 11.5 13.9001 11.5 12.5V9.5Z\"></path></svg>`);\nconst CopyLightIcon = (props) => {\n  const theme = useTheme();\n  const fill = () => props.fill || theme.colors.icon.secondary;\n  return (() => {\n    const _el$ = _tmpl$$a.cloneNode(true), _el$2 = _el$.firstChild;\n    createRenderEffect((_p$) => {\n      const _v$ = fill(), _v$2 = fill();\n      _v$ !== _p$._v$ && setAttribute(_el$, \"fill\", _p$._v$ = _v$);\n      _v$2 !== _p$._v$2 && setAttribute(_el$2, \"fill\", _p$._v$2 = _v$2);\n      return _p$;\n    }, {\n      _v$: void 0,\n      _v$2: void 0\n    });\n    return _el$;\n  })();\n};\nconst _tmpl$$9 = /* @__PURE__ */ template$1(`<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"17\" viewBox=\"0 0 16 17\" fill=\"none\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M1 4.12695C1 3.07754 1 2.55284 1.19202 2.14684C1.38986 1.72856 1.7266 1.39181 2.14489 1.19397C2.55088 1.00195 3.07559 1.00195 4.125 1.00195C5.17441 1.00195 5.69912 1.00195 6.10511 1.19397C6.5234 1.39181 6.86014 1.72856 7.05798 2.14684C7.25 2.55284 7.25 3.07754 7.25 4.12695C7.25 5.17636 7.25 5.70107 7.05798 6.10706C6.86014 6.52535 6.5234 6.8621 6.10511 7.05993C5.69912 7.25195 5.17441 7.25195 4.125 7.25195C3.07559 7.25195 2.55088 7.25195 2.14489 7.05993C1.7266 6.8621 1.38986 6.52535 1.19202 6.10706C1 5.70107 1 5.17636 1 4.12695ZM2.5 3.30195C2.5 3.02193 2.5 2.88191 2.5545 2.77496C2.60243 2.68088 2.67892 2.60439 2.773 2.55645C2.87996 2.50195 3.01997 2.50195 3.3 2.50195H4.95C5.23003 2.50195 5.37004 2.50195 5.477 2.55645C5.57108 2.60439 5.64757 2.68088 5.6955 2.77496C5.75 2.88191 5.75 3.02193 5.75 3.30195V4.95195C5.75 5.23198 5.75 5.37199 5.6955 5.47895C5.64757 5.57303 5.57108 5.64952 5.477 5.69746C5.37004 5.75195 5.23003 5.75195 4.95 5.75195H3.3C3.01997 5.75195 2.87996 5.75195 2.773 5.69746C2.67892 5.64952 2.60243 5.57303 2.5545 5.47895C2.5 5.37199 2.5 5.23198 2.5 4.95195V3.30195ZM1 11.877C1 10.8275 1 10.3028 1.19202 9.89684C1.38986 9.47856 1.7266 9.14181 2.14489 8.94397C2.55088 8.75195 3.07559 8.75195 4.125 8.75195C5.17441 8.75195 5.69912 8.75195 6.10511 8.94397C6.5234 9.14181 6.86014 9.47856 7.05798 9.89684C7.25 10.3028 7.25 10.8275 7.25 11.877C7.25 12.9264 7.25 13.4511 7.05798 13.8571C6.86014 14.2753 6.5234 14.6121 6.10511 14.8099C5.69912 15.002 5.17441 15.002 4.125 15.002C3.07559 15.002 2.55088 15.002 2.14489 14.8099C1.7266 14.6121 1.38986 14.2753 1.19202 13.8571C1 13.4511 1 12.9264 1 11.877ZM2.5 11.052C2.5 10.7719 2.5 10.6319 2.5545 10.525C2.60243 10.4309 2.67892 10.3544 2.773 10.3064C2.87996 10.252 3.01997 10.252 3.3 10.252H4.95C5.23003 10.252 5.37004 10.252 5.477 10.3064C5.57108 10.3544 5.64757 10.4309 5.6955 10.525C5.75 10.6319 5.75 10.7719 5.75 11.052V12.702C5.75 12.982 5.75 13.122 5.6955 13.2289C5.64757 13.323 5.57108 13.3995 5.477 13.4475C5.37004 13.502 5.23003 13.502 4.95 13.502H3.3C3.01997 13.502 2.87996 13.502 2.773 13.4475C2.67892 13.3995 2.60243 13.323 2.5545 13.2289C2.5 13.122 2.5 12.982 2.5 12.702V11.052ZM8.94202 2.14684C8.75 2.55284 8.75 3.07754 8.75 4.12695C8.75 5.17636 8.75 5.70107 8.94202 6.10706C9.13986 6.52535 9.4766 6.8621 9.89489 7.05993C10.3009 7.25195 10.8256 7.25195 11.875 7.25195C12.9244 7.25195 13.4491 7.25195 13.8551 7.05993C14.2734 6.8621 14.6101 6.52535 14.808 6.10706C15 5.70107 15 5.17636 15 4.12695C15 3.07754 15 2.55284 14.808 2.14684C14.6101 1.72856 14.2734 1.39181 13.8551 1.19397C13.4491 1.00195 12.9244 1.00195 11.875 1.00195C10.8256 1.00195 10.3009 1.00195 9.89489 1.19397C9.4766 1.39181 9.13986 1.72856 8.94202 2.14684ZM10.3045 2.77496C10.25 2.88191 10.25 3.02193 10.25 3.30195V4.95195C10.25 5.23198 10.25 5.37199 10.3045 5.47895C10.3524 5.57303 10.4289 5.64952 10.523 5.69746C10.63 5.75195 10.77 5.75195 11.05 5.75195H12.7C12.98 5.75195 13.12 5.75195 13.227 5.69746C13.3211 5.64952 13.3976 5.57303 13.4455 5.47895C13.5 5.37199 13.5 5.23198 13.5 4.95195V3.30195C13.5 3.02193 13.5 2.88191 13.4455 2.77496C13.3976 2.68088 13.3211 2.60439 13.227 2.55645C13.12 2.50195 12.98 2.50195 12.7 2.50195H11.05C10.77 2.50195 10.63 2.50195 10.523 2.55645C10.4289 2.60439 10.3524 2.68088 10.3045 2.77496ZM8.80727 9.13518C8.75 9.26242 8.75 9.4256 8.75 9.75195C8.75 10.0783 8.75 10.2415 8.80727 10.3687C8.87245 10.5136 8.9884 10.6295 9.13323 10.6947C9.26047 10.752 9.42365 10.752 9.75 10.752C10.0764 10.752 10.2395 10.752 10.3668 10.6947C10.5116 10.6295 10.6276 10.5136 10.6927 10.3687C10.75 10.2415 10.75 10.0783 10.75 9.75195C10.75 9.4256 10.75 9.26242 10.6927 9.13518C10.6276 8.99035 10.5116 8.8744 10.3668 8.80922C10.2395 8.75195 10.0764 8.75195 9.75 8.75195C9.42365 8.75195 9.26047 8.75195 9.13323 8.80922C8.9884 8.8744 8.87245 8.99035 8.80727 9.13518ZM10.87 11.8771C10.87 11.546 10.87 11.3805 10.9289 11.2517C10.9938 11.1098 11.1077 10.9959 11.2497 10.931C11.3784 10.8721 11.5439 10.8721 11.875 10.8721C12.2061 10.8721 12.3716 10.8721 12.5003 10.931C12.6423 10.9959 12.7562 11.1098 12.8211 11.2517C12.88 11.3805 12.88 11.546 12.88 11.8771C12.88 12.2081 12.88 12.3737 12.8211 12.5024C12.7562 12.6444 12.6423 12.7583 12.5003 12.8232C12.3716 12.8821 12.2061 12.8821 11.875 12.8821C11.5439 12.8821 11.3784 12.8821 11.2497 12.8232C11.1077 12.7583 10.9938 12.6444 10.9289 12.5024C10.87 12.3737 10.87 12.2081 10.87 11.8771ZM8.80727 13.3852C8.75 13.5124 8.75 13.6756 8.75 14.002C8.75 14.3283 8.75 14.4915 8.80727 14.6187C8.87245 14.7636 8.9884 14.8795 9.13323 14.9447C9.26047 15.002 9.42365 15.002 9.75 15.002C10.0764 15.002 10.2395 15.002 10.3668 14.9447C10.5116 14.8795 10.6276 14.7636 10.6927 14.6187C10.75 14.4915 10.75 14.3283 10.75 14.002C10.75 13.6756 10.75 13.5124 10.6927 13.3852C10.6276 13.2404 10.5116 13.1244 10.3668 13.0592C10.2395 13.002 10.0764 13.002 9.75 13.002C9.42365 13.002 9.26047 13.002 9.13323 13.0592C8.9884 13.1244 8.87245 13.2404 8.80727 13.3852ZM13 9.75195C13 9.4256 13 9.26242 13.0573 9.13518C13.1224 8.99035 13.2384 8.8744 13.3832 8.80922C13.5105 8.75195 13.6736 8.75195 14 8.75195C14.3264 8.75195 14.4895 8.75195 14.6168 8.80922C14.7616 8.8744 14.8776 8.99035 14.9427 9.13518C15 9.26242 15 9.4256 15 9.75195C15 10.0783 15 10.2415 14.9427 10.3687C14.8776 10.5136 14.7616 10.6295 14.6168 10.6947C14.4895 10.752 14.3264 10.752 14 10.752C13.6736 10.752 13.5105 10.752 13.3832 10.6947C13.2384 10.6295 13.1224 10.5136 13.0573 10.3687C13 10.2415 13 10.0783 13 9.75195ZM13.0573 13.3852C13 13.5124 13 13.6756 13 14.002C13 14.3283 13 14.4915 13.0573 14.6187C13.1224 14.7636 13.2384 14.8795 13.3832 14.9447C13.5105 15.002 13.6736 15.002 14 15.002C14.3264 15.002 14.4895 15.002 14.6168 14.9447C14.7616 14.8795 14.8776 14.7636 14.9427 14.6187C15 14.4915 15 14.3283 15 14.002C15 13.6756 15 13.5124 14.9427 13.3852C14.8776 13.2404 14.7616 13.1244 14.6168 13.0592C14.4895 13.002 14.3264 13.002 14 13.002C13.6736 13.002 13.5105 13.002 13.3832 13.0592C13.2384 13.1244 13.1224 13.2404 13.0573 13.3852Z\"></path></svg>`);\nconst QRIcon = (props) => {\n  const theme = useTheme();\n  const fill = () => props.fill || theme.colors.icon.secondary;\n  return (() => {\n    const _el$ = _tmpl$$9.cloneNode(true), _el$2 = _el$.firstChild;\n    createRenderEffect(() => setAttribute(_el$2, \"fill\", fill()));\n    return _el$;\n  })();\n};\nconst containerBorders = {\n  m: \"16px\",\n  s: \"12px\",\n  none: \"0\"\n};\nconst walletBorders = {\n  m: \"6px\",\n  s: \"6px\",\n  none: \"0\"\n};\nconst FourWalletsCard = styled.div`\n    width: 60px;\n    height: 60px;\n    padding: 8px;\n    margin-bottom: 8px;\n    border-radius: ${(props) => containerBorders[props.theme.borderRadius]};\n    background-color: ${(props) => props.theme.colors.background.tint};\n    display: grid;\n    grid-template: 1fr 1fr / 1fr 1fr;\n    gap: 4px;\n`;\nconst FourWalletsImage = styled(WalletImage)`\n    width: 20px;\n    height: 20px;\n    border-radius: ${(props) => walletBorders[props.theme.borderRadius]};\n`;\nconst FourWalletsItem = (props) => {\n  return createComponent(WalletItem, {\n    get name() {\n      return props.labelLine1;\n    },\n    get secondLine() {\n      return props.labelLine2;\n    },\n    get icon() {\n      return createComponent(FourWalletsCard, {\n        get children() {\n          return createComponent(For, {\n            each: [0, 1, 2, 3],\n            children: (index) => createComponent(FourWalletsImage, {\n              get src() {\n                return props.images[index];\n              }\n            })\n          });\n        }\n      });\n    },\n    onClick: () => props.onClick()\n  });\n};\nconst AT_WALLET_APP_NAME = \"telegram-wallet\";\nconst IMG = {\n  TON: \"https://raw.githubusercontent.com/ton-connect/sdk/main/assets/ton-icon-48.png\",\n  TG: \"https://raw.githubusercontent.com/ton-connect/sdk/main/assets/tg.png\"\n};\nconst WalletLabeledItem = (props) => {\n  const [t2] = useI18n();\n  const walletsSecondLine = () => {\n    if (props.wallet.appName === AT_WALLET_APP_NAME) {\n      return void 0;\n    }\n    if (\"isPreferred\" in props.wallet && props.wallet.isPreferred) {\n      return t2(\"walletItem.recent\", {}, \"Recent\");\n    }\n    if ((0,_tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.isWalletInfoCurrentlyInjected)(props.wallet)) {\n      return t2(\"walletItem.installed\", {}, \"Installed\");\n    }\n    if (props.wallet.name === \"Tonkeeper\") {\n      return t2(\"walletItem.popular\", {}, \"Popular\");\n    }\n    return void 0;\n  };\n  return createMemo((() => {\n    const _c$ = createMemo(() => props.wallet.appName === AT_WALLET_APP_NAME);\n    return () => _c$() ? createComponent(WalletItem, {\n      get icon() {\n        return props.wallet.imageUrl;\n      },\n      get name() {\n        return t2(\"walletItem.walletOn\", {}, \"Wallet in\");\n      },\n      secondLine: \"Telegram\",\n      get badgeUrl() {\n        return IMG.TG;\n      },\n      onClick: () => props.onClick(),\n      get [\"class\"]() {\n        return props.class;\n      }\n    }) : createComponent(WalletItem, {\n      get icon() {\n        return props.wallet.imageUrl;\n      },\n      get name() {\n        return props.wallet.name;\n      },\n      get secondLine() {\n        return walletsSecondLine();\n      },\n      secondLineColorPrimary: false,\n      onClick: () => props.onClick(),\n      get [\"class\"]() {\n        return props.class;\n      }\n    });\n  })());\n};\nconst ScrollContainerStyled = styled.div`\n    width: 100%;\n    overflow-y: auto;\n    max-height: ${(props) => props.maxHeight};\n\n    scrollbar-width: none;\n    &&::-webkit-scrollbar {\n        display: none;\n    }\n\n    &&::-webkit-scrollbar-track {\n        background: transparent;\n    }\n\n    &&::-webkit-scrollbar-thumb {\n        display: none;\n    }\n`;\nconst ScrollDivider = styled.div`\n    height: 1px;\n    margin: 0 -24px;\n    width: calc(100% + 48px);\n    opacity: 0.08;\n    background: ${(props) => props.isShown ? props.theme.colors.icon.secondary : \"transparent\"};\n    transition: background 0.15s ease-in-out;\n\n    ${media(\"mobile\")} {\n        width: 100%;\n        margin: 0;\n    }\n`;\nconst [windowHeight, setWindowHeight] = createSignal(((_h = getWindow$1()) == null ? void 0 : _h.innerHeight) || 0);\nif (getWindow$1()) {\n  window.addEventListener(\"resize\", () => setWindowHeight(window.innerHeight));\n}\nconst [isMobile, setIsMobile] = createSignal(isDevice(\"mobile\"));\nconst updateIsMobile = () => setIsMobile(isDevice(\"mobile\"));\nif (getWindow$1()) {\n  window.addEventListener(\"resize\", () => updateIsMobile());\n  window.addEventListener(\"load\", () => updateIsMobile(), { once: true });\n}\nconst ScrollContainer = (props) => {\n  const [scrolled, setScrolled] = createSignal(false);\n  const onScroll = (e2) => {\n    setScrolled(e2.target.scrollTop > 0);\n  };\n  const offset = () => isMobile() ? 150 : 200;\n  const maxHeight = () => props.maxHeight !== void 0 ? `${props.maxHeight}px` : `${windowHeight() - offset()}px`;\n  return [createComponent(ScrollDivider, {\n    get isShown() {\n      return scrolled();\n    }\n  }), createComponent(ScrollContainerStyled, {\n    get maxHeight() {\n      return maxHeight();\n    },\n    onScroll,\n    get [\"class\"]() {\n      return props.class;\n    },\n    get children() {\n      return props.children;\n    }\n  })];\n};\nconst AStyled = styled.a`\n    display: block;\n    text-decoration: unset;\n`;\nconst Link = (props) => {\n  const attributes = () => props.blank ? {\n    rel: \"noreferrer noopener\"\n  } : {};\n  return createComponent(AStyled, mergeProps({\n    get href() {\n      return props.href;\n    },\n    get target() {\n      return props.blank ? \"_blank\" : \"_self\";\n    },\n    get [\"class\"]() {\n      return props.class;\n    }\n  }, attributes, {\n    get children() {\n      return props.children;\n    }\n  }));\n};\nconst TonConnectUiContext = createContext();\nconst _tmpl$$8 = /* @__PURE__ */ template$1(`<svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M7.76228 2.09998H10.2378C11.0458 2.09997 11.7067 2.09996 12.2438 2.14384C12.7997 2.18926 13.3017 2.28614 13.7706 2.52505C14.5045 2.89896 15.1011 3.49558 15.475 4.22941C15.7139 4.6983 15.8108 5.20038 15.8562 5.75629C15.9001 6.29337 15.9001 6.95422 15.9001 7.76227V8.1H16.2377C17.0457 8.09999 17.7066 8.09998 18.2437 8.14386C18.7996 8.18928 19.3017 8.28616 19.7705 8.52507C20.5044 8.89898 21.101 9.4956 21.4749 10.2294C21.7138 10.6983 21.8107 11.2004 21.8561 11.7563C21.9 12.2934 21.9 12.9542 21.9 13.7623V16.2377C21.9 17.0458 21.9 17.7066 21.8561 18.2437C21.8107 18.7996 21.7138 19.3017 21.4749 19.7706C21.101 20.5044 20.5044 21.101 19.7705 21.4749C19.3017 21.7138 18.7996 21.8107 18.2437 21.8561C17.7066 21.9 17.0458 21.9 16.2378 21.9H13.7623C12.9543 21.9 12.2934 21.9 11.7563 21.8561C11.2004 21.8107 10.6983 21.7138 10.2294 21.4749C9.49561 21.101 8.89898 20.5044 8.52508 19.7706C8.28616 19.3017 8.18928 18.7996 8.14386 18.2437C8.09998 17.7066 8.09999 17.0458 8.1 16.2377V15.9H7.76227C6.95426 15.9 6.29335 15.9 5.75629 15.8561C5.20038 15.8107 4.6983 15.7138 4.22941 15.4749C3.49558 15.101 2.89896 14.5044 2.52505 13.7705C2.28614 13.3017 2.18926 12.7996 2.14384 12.2437C2.09996 11.7066 2.09997 11.0458 2.09998 10.2377V7.76228C2.09997 6.95424 2.09996 6.29336 2.14384 5.75629C2.18926 5.20038 2.28614 4.6983 2.52505 4.22941C2.89896 3.49558 3.49558 2.89896 4.22941 2.52505C4.6983 2.28614 5.20038 2.18926 5.75629 2.14384C6.29336 2.09996 6.95425 2.09997 7.76228 2.09998ZM8.1 14.1V13.7623C8.09999 12.9542 8.09998 12.2934 8.14386 11.7563C8.18928 11.2004 8.28616 10.6983 8.52508 10.2294C8.89898 9.4956 9.49561 8.89898 10.2294 8.52507C10.6983 8.28616 11.2004 8.18928 11.7563 8.14386C12.2934 8.09998 12.9542 8.09999 13.7623 8.1H14.1001V7.79998C14.1001 6.94505 14.0994 6.35798 14.0622 5.90287C14.0259 5.45827 13.9593 5.21944 13.8712 5.0466C13.6699 4.65146 13.3486 4.3302 12.9535 4.12886C12.7806 4.04079 12.5418 3.97419 12.0972 3.93786C11.6421 3.90068 11.055 3.89998 10.2001 3.89998H7.79998C6.94505 3.89998 6.35798 3.90068 5.90287 3.93786C5.45827 3.97419 5.21944 4.04079 5.0466 4.12886C4.65146 4.3302 4.3302 4.65146 4.12886 5.0466C4.04079 5.21944 3.97419 5.45827 3.93786 5.90287C3.90068 6.35798 3.89998 6.94505 3.89998 7.79998V10.2C3.89998 11.0549 3.90068 11.642 3.93786 12.0971C3.97419 12.5417 4.04079 12.7805 4.12886 12.9534C4.3302 13.3485 4.65146 13.6698 5.0466 13.8711C5.21944 13.9592 5.45827 14.0258 5.90287 14.0621C6.35798 14.0993 6.94505 14.1 7.79998 14.1H8.1ZM11.0466 10.1289C11.2195 10.0408 11.4583 9.97421 11.9029 9.93788C12.358 9.9007 12.9451 9.9 13.8 9.9H16.2C17.0549 9.9 17.642 9.9007 18.0971 9.93788C18.5417 9.97421 18.7805 10.0408 18.9534 10.1289C19.3485 10.3302 19.6698 10.6515 19.8711 11.0466C19.9592 11.2195 20.0258 11.4583 20.0621 11.9029C20.0993 12.358 20.1 12.9451 20.1 13.8V16.2C20.1 17.0549 20.0993 17.642 20.0621 18.0971C20.0258 18.5417 19.9592 18.7805 19.8711 18.9534C19.6698 19.3485 19.3485 19.6698 18.9534 19.8711C18.7805 19.9592 18.5417 20.0258 18.0971 20.0621C17.642 20.0993 17.0549 20.1 16.2 20.1H13.8C12.9451 20.1 12.358 20.0993 11.9029 20.0621C11.4583 20.0258 11.2195 19.9592 11.0466 19.8711C10.6515 19.6698 10.3302 19.3485 10.1289 18.9534C10.0408 18.7805 9.97421 18.5417 9.93788 18.0971C9.9007 17.642 9.9 17.0549 9.9 16.2V13.8C9.9 12.9451 9.9007 12.358 9.93788 11.9029C9.97421 11.4583 10.0408 11.2195 10.1289 11.0466C10.3302 10.6515 10.6515 10.3302 11.0466 10.1289Z\"></path></svg>`);\nconst CopyIcon = (props) => {\n  const theme = useTheme();\n  const fill = () => props.fill || theme.colors.icon.primary;\n  return (() => {\n    const _el$ = _tmpl$$8.cloneNode(true), _el$2 = _el$.firstChild;\n    createRenderEffect((_p$) => {\n      const _v$ = props.class, _v$2 = fill();\n      _v$ !== _p$._v$ && setAttribute(_el$, \"class\", _p$._v$ = _v$);\n      _v$2 !== _p$._v$2 && setAttribute(_el$2, \"fill\", _p$._v$2 = _v$2);\n      return _p$;\n    }, {\n      _v$: void 0,\n      _v$2: void 0\n    });\n    return _el$;\n  })();\n};\nconst _tmpl$$7 = /* @__PURE__ */ template$1(`<svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M8.7624 3.10001C7.95435 3.1 7.29349 3.09999 6.75642 3.14387C6.2005 3.18929 5.69842 3.28617 5.22954 3.52508C4.4957 3.89899 3.89908 4.49561 3.52517 5.22944C3.28626 5.69833 3.18938 6.20041 3.14396 6.75632C3.10008 7.2934 3.10009 7.95424 3.1001 8.76229V15.2377C3.10009 16.0458 3.10008 16.7066 3.14396 17.2437C3.18938 17.7996 3.28626 18.3017 3.52517 18.7706C3.89908 19.5044 4.4957 20.101 5.22954 20.4749C5.69842 20.7138 6.2005 20.8107 6.75642 20.8561C7.29349 20.9 7.95434 20.9 8.76239 20.9H12.0001C12.4972 20.9 12.9001 20.4971 12.9001 20C12.9001 19.503 12.4972 19.1 12.0001 19.1H8.8001C7.94517 19.1 7.3581 19.0993 6.90299 19.0621C6.45839 19.0258 6.21956 18.9592 6.04672 18.8711C5.65158 18.6698 5.33032 18.3485 5.12898 17.9534C5.04092 17.7805 4.97431 17.5417 4.93798 17.0971C4.9008 16.642 4.9001 16.0549 4.9001 15.2V8.80001C4.9001 7.94508 4.9008 7.35801 4.93798 6.9029C4.97431 6.4583 5.04092 6.21947 5.12898 6.04663C5.33032 5.65149 5.65158 5.33023 6.04672 5.12889C6.21956 5.04082 6.45839 4.97422 6.90299 4.93789C7.3581 4.90071 7.94517 4.90001 8.8001 4.90001H12.0001C12.4972 4.90001 12.9001 4.49706 12.9001 4.00001C12.9001 3.50295 12.4972 3.10001 12.0001 3.10001H8.7624Z\"></path><path d=\"M17.6364 7.3636C17.2849 7.01212 16.7151 7.01212 16.3636 7.3636C16.0121 7.71507 16.0121 8.28492 16.3636 8.63639L18.8272 11.1H9.00001C8.50295 11.1 8.10001 11.5029 8.10001 12C8.10001 12.497 8.50295 12.9 9.00001 12.9H18.8272L16.3636 15.3636C16.0121 15.7151 16.0121 16.2849 16.3636 16.6364C16.7151 16.9879 17.2849 16.9879 17.6364 16.6364L21.6364 12.6364C21.9879 12.2849 21.9879 11.7151 21.6364 11.3636L17.6364 7.3636Z\"></path></svg>`);\nconst DisconnectIcon = (props) => {\n  const theme = useTheme();\n  const fill = () => props.fill || theme.colors.icon.primary;\n  return (() => {\n    const _el$ = _tmpl$$7.cloneNode(true), _el$2 = _el$.firstChild, _el$3 = _el$2.nextSibling;\n    createRenderEffect((_p$) => {\n      const _v$ = fill(), _v$2 = fill();\n      _v$ !== _p$._v$ && setAttribute(_el$2, \"fill\", _p$._v$ = _v$);\n      _v$2 !== _p$._v$2 && setAttribute(_el$3, \"fill\", _p$._v$2 = _v$2);\n      return _p$;\n    }, {\n      _v$: void 0,\n      _v$2: void 0\n    });\n    return _el$;\n  })();\n};\nconst hoverBorders$1 = {\n  m: \"8px\",\n  s: \"4px\",\n  none: \"0\"\n};\nconst dropdownBorders = {\n  m: \"16px\",\n  s: \"8px\",\n  none: \"0\"\n};\nconst AccountButtonDropdownStyled = styled.div`\n    width: 256px;\n    box-shadow: 0 4px 24px rgba(0, 0, 0, 0.16);\n    border-radius: ${(props) => dropdownBorders[props.theme.borderRadius]};\n\n    background-color: ${(props) => props.theme.colors.background.primary}\n           \n    color: ${(props) => props.theme.colors.text.primary}\n`;\nconst UlStyled = styled.ul`\n    background-color: ${(props) => props.theme.colors.background.primary};\n    padding: 8px;\n`;\nconst MenuButtonStyled = styled.button`\n    display: flex;\n    align-items: center;\n    gap: 8px;\n    height: 40px;\n    padding-left: 8px;\n    width: 100%;\n\n    background-color: ${(props) => props.theme.colors.background.primary};\n    border: none;\n    border-radius: ${(props) => hoverBorders$1[props.theme.borderRadius]};\n    cursor: pointer;\n\n    transition: background-color, transform 0.1s ease-in-out;\n\n    &:hover {\n        background-color: ${(props) => props.theme.colors.background.secondary};\n    }\n\n    &:active {\n        transform: scale(0.96);\n    }\n`;\nconst _tmpl$$6 = /* @__PURE__ */ template$1(`<li></li>`);\nconst MenuItemText = (props) => createComponent(Text, {\n  get translationKey() {\n    return props.translationKey;\n  },\n  fontSize: \"15px\",\n  fontWeight: \"590\",\n  get children() {\n    return props.children;\n  }\n});\nconst AccountButtonDropdown = (props) => {\n  const tonConnectUi = useContext(TonConnectUiContext);\n  const [isCopiedShown, setIsCopiedShown] = createSignal(false);\n  const onCopy = () => __async(void 0, null, function* () {\n    const userFriendlyAddress = (0,_tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.toUserFriendlyAddress)(tonConnectUi.account.address, tonConnectUi.account.chain === _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.CHAIN.TESTNET);\n    yield copyToClipboard(userFriendlyAddress);\n    setIsCopiedShown(true);\n    setTimeout(() => setIsCopiedShown(false), 1e3);\n  });\n  const onDisconnect = () => {\n    tonConnectUi.disconnect();\n    props.onClose();\n  };\n  return createComponent(AccountButtonDropdownStyled, {\n    ref(r$) {\n      const _ref$ = props.ref;\n      typeof _ref$ === \"function\" ? _ref$(r$) : props.ref = r$;\n    },\n    get [\"class\"]() {\n      return props.class;\n    },\n    \"data-tc-dropdown\": \"true\",\n    get children() {\n      return createComponent(UlStyled, {\n        get children() {\n          return [(() => {\n            const _el$ = _tmpl$$6.cloneNode(true);\n            insert(_el$, createComponent(MenuButtonStyled, {\n              onClick: () => onCopy(),\n              get children() {\n                return [createComponent(CopyIcon, {}), createComponent(Show, {\n                  get when() {\n                    return !isCopiedShown();\n                  },\n                  get children() {\n                    return createComponent(MenuItemText, {\n                      translationKey: \"button.dropdown.copy\",\n                      children: \"Copy address\"\n                    });\n                  }\n                }), createComponent(Show, {\n                  get when() {\n                    return isCopiedShown();\n                  },\n                  get children() {\n                    return createComponent(MenuItemText, {\n                      translationKey: \"button.dropdown.copied\",\n                      children: \"Address copied!\"\n                    });\n                  }\n                })];\n              }\n            }));\n            return _el$;\n          })(), (() => {\n            const _el$2 = _tmpl$$6.cloneNode(true);\n            insert(_el$2, createComponent(MenuButtonStyled, {\n              onClick: () => onDisconnect(),\n              get children() {\n                return [createComponent(DisconnectIcon, {}), createComponent(MenuItemText, {\n                  translationKey: \"button.dropdown.disconnect\",\n                  children: \"Disconnect\"\n                })];\n              }\n            }));\n            return _el$2;\n          })()];\n        }\n      });\n    }\n  });\n};\nconst borders$2 = {\n  m: \"16px\",\n  s: \"8px\",\n  none: \"0\"\n};\nconst NotificationStyled = styled.div`\n    width: 256px;\n    padding: 12px 16px;\n    display: flex;\n    gap: 9px;\n\n    background-color: ${(props) => props.theme.colors.background.primary};\n    box-shadow: 0 4px 24px rgba(0, 0, 0, 0.16);\n    border-radius: ${(props) => borders$2[props.theme.borderRadius]};\n`;\nconst NotificationContentStyled = styled.div`\n    width: 192px;\n\n    > h3 {\n        font-size: 15px;\n    }\n`;\nconst TextStyled$2 = styled(Text)`\n    margin-top: 4px;\n    color: ${(props) => props.theme.colors.text.secondary};\n`;\nconst Notification = (props) => {\n  const dataAttrs = useDataAttributes(props);\n  return createComponent(NotificationStyled, mergeProps({\n    get [\"class\"]() {\n      return props.class;\n    },\n    \"data-tc-notification\": \"true\"\n  }, dataAttrs, {\n    get children() {\n      return [createComponent(NotificationContentStyled, {\n        get children() {\n          return [createComponent(H3, {\n            get translationKey() {\n              return props.header.translationKey;\n            },\n            get translationValues() {\n              return props.header.translationValues;\n            },\n            get children() {\n              return props.children;\n            }\n          }), createComponent(Show, {\n            get when() {\n              return props.text;\n            },\n            get children() {\n              return createComponent(TextStyled$2, {\n                get translationKey() {\n                  return props.text.translationKey;\n                },\n                get translationValues() {\n                  return props.text.translationValues;\n                }\n              });\n            }\n          })];\n        }\n      }), createMemo(() => props.icon)];\n    }\n  }));\n};\nconst LoaderIconStyled$2 = styled(LoaderIcon)`\n    align-self: center;\n`;\nconst ConfirmOperationNotification = (props) => {\n  const tonConnectUI = useContext(TonConnectUiContext);\n  const [t2] = useI18n();\n  const name = () => tonConnectUI.wallet && \"name\" in tonConnectUI.wallet ? tonConnectUI.wallet.name : t2(\"common.yourWallet\", {}, \"Your wallet\");\n  return createComponent(Notification, {\n    get header() {\n      return {\n        translationKey: \"notifications.confirm.header\",\n        translationValues: {\n          name: name()\n        }\n      };\n    },\n    get [\"class\"]() {\n      return props.class;\n    },\n    get icon() {\n      return createComponent(LoaderIconStyled$2, {});\n    },\n    \"data-tc-notification-confirm\": \"true\",\n    children: \"Confirm operation in your wallet\"\n  });\n};\nconst ErrorIconStyled$2 = styled(ErrorIcon)`\n    margin-top: 2px;\n`;\nconst ErrorTransactionNotification = (props) => {\n  return createComponent(Notification, {\n    header: {\n      translationKey: \"notifications.transactionCanceled.header\"\n    },\n    text: {\n      translationKey: \"notifications.transactionCanceled.text\"\n    },\n    get icon() {\n      return createComponent(ErrorIconStyled$2, {\n        size: \"xs\"\n      });\n    },\n    get [\"class\"]() {\n      return props.class;\n    },\n    \"data-tc-notification-tx-cancelled\": \"true\",\n    children: \"Transaction cancelled\"\n  });\n};\nconst SuccessIconStyled = styled(SuccessIcon)`\n    margin-top: 2px;\n`;\nconst SuccessTransactionNotification = (props) => {\n  return createComponent(Notification, {\n    header: {\n      translationKey: \"notifications.transactionSent.header\"\n    },\n    text: {\n      translationKey: \"notifications.transactionSent.text\"\n    },\n    get icon() {\n      return createComponent(SuccessIconStyled, {});\n    },\n    get [\"class\"]() {\n      return props.class;\n    },\n    \"data-tc-notification-tx-sent\": \"true\",\n    children: \"Transaction sent\"\n  });\n};\nconst NotificationClass = u`\n    transform: translateY(-8px);\n    margin-bottom: 12px;\n`;\nconst defaultConfig = {\n  timeout: 4500\n};\nconst [latestAction, setLatestAction] = createSignal(null);\nfunction useOpenedNotifications(config) {\n  const { timeout } = __spreadValues(__spreadValues({}, defaultConfig), config);\n  const [openedNotifications, setOpenedNotifications] = createSignal([]);\n  const [timeoutIds, setTimeoutIds] = createSignal([]);\n  createEffect(\n    on(action, (action2) => {\n      var _a2;\n      if (!action2 || !action2.showNotification) {\n        return;\n      }\n      if (latestAction() === action2) {\n        return;\n      }\n      if (((_a2 = latestAction()) == null ? void 0 : _a2.name) === \"confirm-transaction\" && action2.name === \"confirm-transaction\") {\n        return;\n      }\n      setLatestAction(action2);\n      setOpenedNotifications(\n        (openedNotifications2) => openedNotifications2.filter((n2) => n2.action !== \"confirm-transaction\")\n      );\n      const notification = { action: action2.name };\n      setOpenedNotifications((openedNotifications2) => [...openedNotifications2, notification]);\n      const timeoutId = setTimeout(() => {\n        setOpenedNotifications(\n          (openedNotifications2) => openedNotifications2.filter((n2) => n2 !== notification)\n        );\n        setTimeoutIds((timeoutIds2) => timeoutIds2.filter((id) => id !== timeoutId));\n      }, timeout);\n      setTimeoutIds((timeoutIds2) => [...timeoutIds2, timeoutId]);\n    })\n  );\n  onCleanup(() => {\n    timeoutIds().forEach((id) => clearTimeout(id));\n  });\n  return openedNotifications;\n}\nconst _tmpl$$5 = /* @__PURE__ */ template$1(`<div data-tc-list-notifications=\"true\"></div>`);\nconst Notifications = (props) => {\n  const openedNotifications = useOpenedNotifications();\n  return (() => {\n    const _el$ = _tmpl$$5.cloneNode(true);\n    insert(_el$, createComponent(TransitionGroup, {\n      onBeforeEnter: (el) => {\n        animate(el, [{\n          opacity: 0,\n          transform: \"translateY(0)\"\n        }, {\n          opacity: 1,\n          transform: \"translateY(-8px)\"\n        }], {\n          duration: 200\n        });\n      },\n      onExit: (el, done) => {\n        const a2 = animate(el, [{\n          opacity: 1,\n          transform: \"translateY(-8px)\"\n        }, {\n          opacity: 0,\n          transform: \"translateY(-30px)\"\n        }], {\n          duration: 200\n        });\n        a2.finished.then(done);\n      },\n      get children() {\n        return createComponent(For, {\n          get each() {\n            return openedNotifications();\n          },\n          children: (openedNotification) => createComponent(Switch, {\n            get children() {\n              return [createComponent(Match, {\n                get when() {\n                  return openedNotification.action === \"transaction-sent\";\n                },\n                get children() {\n                  return createComponent(SuccessTransactionNotification, {\n                    \"class\": NotificationClass\n                  });\n                }\n              }), createComponent(Match, {\n                get when() {\n                  return openedNotification.action === \"transaction-canceled\";\n                },\n                get children() {\n                  return createComponent(ErrorTransactionNotification, {\n                    \"class\": NotificationClass\n                  });\n                }\n              }), createComponent(Match, {\n                get when() {\n                  return openedNotification.action === \"confirm-transaction\";\n                },\n                get children() {\n                  return createComponent(ConfirmOperationNotification, {\n                    \"class\": NotificationClass\n                  });\n                }\n              })];\n            }\n          })\n        });\n      }\n    }));\n    createRenderEffect(() => className(_el$, props.class));\n    return _el$;\n  })();\n};\nconst AccountButtonStyled = styled(Button)`\n    background-color: ${(props) => props.theme.colors.connectButton.background};\n    color: ${(props) => props.theme.colors.connectButton.foreground};\n    box-shadow: ${(props) => `0 4px 24px ${rgba(props.theme.colors.constant.black, 0.16)}`};\n    padding: 8px 16px 8px 12px;\n\n    display: flex;\n    align-items: center;\n    gap: 4px;\n    height: 40px;\n`;\nconst DropdownButtonStyled = styled(AccountButtonStyled)`\n    padding: 12px 16px;\n    min-width: 148px;\n    justify-content: center;\n    background-color: ${(props) => props.theme.colors.background.primary};\n`;\nconst LoaderButtonStyled$1 = styled(Button)`\n    min-width: 148px;\n    height: 40px;\n\n    background-color: ${(props) => props.theme.colors.background.primary};\n    color: ${(props) => props.theme.colors.connectButton.foreground};\n    box-shadow: ${(props) => `0 4px 24px ${rgba(props.theme.colors.constant.black, 0.16)}`};\n\n    display: flex;\n    align-items: center;\n    justify-content: center;\n`;\nconst LoaderIconStyled$1 = styled(LoaderIcon)`\n    height: 18px;\n    width: 18px;\n`;\nconst DropdownContainerStyled = styled.div`\n    width: fit-content;\n    display: flex;\n    flex-direction: column;\n    align-items: flex-end;\n`;\nconst DropdownStyled = styled(AccountButtonDropdown)`\n    box-sizing: border-box;\n    overflow: hidden;\n    margin-top: 12px;\n`;\nconst NotificationsStyled = styled(Notifications)`\n    > div:first-child {\n        margin-top: 20px;\n    }\n`;\nfunction getSide(placement) {\n  return placement.split(\"-\")[0];\n}\nfunction getAlignment(placement) {\n  return placement.split(\"-\")[1];\n}\nfunction getMainAxisFromPlacement(placement) {\n  return [\"top\", \"bottom\"].includes(getSide(placement)) ? \"x\" : \"y\";\n}\nfunction getLengthFromAxis(axis) {\n  return axis === \"y\" ? \"height\" : \"width\";\n}\nfunction computeCoordsFromPlacement(_ref, placement, rtl) {\n  let {\n    reference,\n    floating\n  } = _ref;\n  const commonX = reference.x + reference.width / 2 - floating.width / 2;\n  const commonY = reference.y + reference.height / 2 - floating.height / 2;\n  const mainAxis = getMainAxisFromPlacement(placement);\n  const length = getLengthFromAxis(mainAxis);\n  const commonAlign = reference[length] / 2 - floating[length] / 2;\n  const side = getSide(placement);\n  const isVertical = mainAxis === \"x\";\n  let coords;\n  switch (side) {\n    case \"top\":\n      coords = {\n        x: commonX,\n        y: reference.y - floating.height\n      };\n      break;\n    case \"bottom\":\n      coords = {\n        x: commonX,\n        y: reference.y + reference.height\n      };\n      break;\n    case \"right\":\n      coords = {\n        x: reference.x + reference.width,\n        y: commonY\n      };\n      break;\n    case \"left\":\n      coords = {\n        x: reference.x - floating.width,\n        y: commonY\n      };\n      break;\n    default:\n      coords = {\n        x: reference.x,\n        y: reference.y\n      };\n  }\n  switch (getAlignment(placement)) {\n    case \"start\":\n      coords[mainAxis] -= commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n    case \"end\":\n      coords[mainAxis] += commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n  }\n  return coords;\n}\nconst computePosition$1 = (reference, floating, config) => __async(void 0, null, function* () {\n  const {\n    placement = \"bottom\",\n    strategy = \"absolute\",\n    middleware = [],\n    platform: platform2\n  } = config;\n  const validMiddleware = middleware.filter(Boolean);\n  const rtl = yield platform2.isRTL == null ? void 0 : platform2.isRTL(floating);\n  if ({}.NODE_ENV !== \"production\") {\n    if (platform2 == null) {\n      console.error([\"Floating UI: `platform` property was not passed to config. If you\", \"want to use Floating UI on the web, install @floating-ui/dom\", \"instead of the /core package. Otherwise, you can create your own\", \"`platform`: https://floating-ui.com/docs/platform\"].join(\" \"));\n    }\n    if (validMiddleware.filter((_ref) => {\n      let {\n        name\n      } = _ref;\n      return name === \"autoPlacement\" || name === \"flip\";\n    }).length > 1) {\n      throw new Error([\"Floating UI: duplicate `flip` and/or `autoPlacement` middleware\", \"detected. This will lead to an infinite loop. Ensure only one of\", \"either has been passed to the `middleware` array.\"].join(\" \"));\n    }\n    if (!reference || !floating) {\n      console.error([\"Floating UI: The reference and/or floating element was not defined\", \"when `computePosition()` was called. Ensure that both elements have\", \"been created and can be measured.\"].join(\" \"));\n    }\n  }\n  let rects = yield platform2.getElementRects({\n    reference,\n    floating,\n    strategy\n  });\n  let {\n    x,\n    y\n  } = computeCoordsFromPlacement(rects, placement, rtl);\n  let statefulPlacement = placement;\n  let middlewareData = {};\n  let resetCount = 0;\n  for (let i2 = 0; i2 < validMiddleware.length; i2++) {\n    const {\n      name,\n      fn\n    } = validMiddleware[i2];\n    const {\n      x: nextX,\n      y: nextY,\n      data,\n      reset\n    } = yield fn({\n      x,\n      y,\n      initialPlacement: placement,\n      placement: statefulPlacement,\n      strategy,\n      middlewareData,\n      rects,\n      platform: platform2,\n      elements: {\n        reference,\n        floating\n      }\n    });\n    x = nextX != null ? nextX : x;\n    y = nextY != null ? nextY : y;\n    middlewareData = __spreadProps(__spreadValues({}, middlewareData), {\n      [name]: __spreadValues(__spreadValues({}, middlewareData[name]), data)\n    });\n    if ({}.NODE_ENV !== \"production\") {\n      if (resetCount > 50) {\n        console.warn([\"Floating UI: The middleware lifecycle appears to be running in an\", \"infinite loop. This is usually caused by a `reset` continually\", \"being returned without a break condition.\"].join(\" \"));\n      }\n    }\n    if (reset && resetCount <= 50) {\n      resetCount++;\n      if (typeof reset === \"object\") {\n        if (reset.placement) {\n          statefulPlacement = reset.placement;\n        }\n        if (reset.rects) {\n          rects = reset.rects === true ? yield platform2.getElementRects({\n            reference,\n            floating,\n            strategy\n          }) : reset.rects;\n        }\n        ({\n          x,\n          y\n        } = computeCoordsFromPlacement(rects, statefulPlacement, rtl));\n      }\n      i2 = -1;\n      continue;\n    }\n  }\n  return {\n    x,\n    y,\n    placement: statefulPlacement,\n    strategy,\n    middlewareData\n  };\n});\nfunction rectToClientRect(rect) {\n  return __spreadProps(__spreadValues({}, rect), {\n    top: rect.y,\n    left: rect.x,\n    right: rect.x + rect.width,\n    bottom: rect.y + rect.height\n  });\n}\nfunction getWindow(node) {\n  var _node$ownerDocument;\n  return ((_node$ownerDocument = node.ownerDocument) == null ? void 0 : _node$ownerDocument.defaultView) || window;\n}\nfunction getComputedStyle$1(element) {\n  return getWindow(element).getComputedStyle(element);\n}\nfunction getNodeName(node) {\n  return isNode(node) ? (node.nodeName || \"\").toLowerCase() : \"\";\n}\nlet uaString;\nfunction getUAString() {\n  if (uaString) {\n    return uaString;\n  }\n  const uaData = navigator.userAgentData;\n  if (uaData && Array.isArray(uaData.brands)) {\n    uaString = uaData.brands.map((item) => item.brand + \"/\" + item.version).join(\" \");\n    return uaString;\n  }\n  return navigator.userAgent;\n}\nfunction isHTMLElement(value) {\n  return value instanceof getWindow(value).HTMLElement;\n}\nfunction isElement(value) {\n  return value instanceof getWindow(value).Element;\n}\nfunction isNode(value) {\n  return value instanceof getWindow(value).Node;\n}\nfunction isShadowRoot(node) {\n  if (typeof ShadowRoot === \"undefined\") {\n    return false;\n  }\n  const OwnElement = getWindow(node).ShadowRoot;\n  return node instanceof OwnElement || node instanceof ShadowRoot;\n}\nfunction isOverflowElement(element) {\n  const {\n    overflow,\n    overflowX,\n    overflowY,\n    display\n  } = getComputedStyle$1(element);\n  return /auto|scroll|overlay|hidden/.test(overflow + overflowY + overflowX) && ![\"inline\", \"contents\"].includes(display);\n}\nfunction isTableElement(element) {\n  return [\"table\", \"td\", \"th\"].includes(getNodeName(element));\n}\nfunction isContainingBlock(element) {\n  const isFirefox = /firefox/i.test(getUAString());\n  const css = getComputedStyle$1(element);\n  const backdropFilter = css.backdropFilter || css.WebkitBackdropFilter;\n  return css.transform !== \"none\" || css.perspective !== \"none\" || (backdropFilter ? backdropFilter !== \"none\" : false) || isFirefox && css.willChange === \"filter\" || isFirefox && (css.filter ? css.filter !== \"none\" : false) || [\"transform\", \"perspective\"].some((value) => css.willChange.includes(value)) || [\"paint\", \"layout\", \"strict\", \"content\"].some(\n    (value) => {\n      const contain = css.contain;\n      return contain != null ? contain.includes(value) : false;\n    }\n  );\n}\nfunction isLayoutViewport() {\n  return !/^((?!chrome|android).)*safari/i.test(getUAString());\n}\nfunction isLastTraversableNode(node) {\n  return [\"html\", \"body\", \"#document\"].includes(getNodeName(node));\n}\nconst min = Math.min;\nconst max = Math.max;\nconst round = Math.round;\nconst FALLBACK_SCALE = {\n  x: 1,\n  y: 1\n};\nfunction getScale(element) {\n  const domElement = !isElement(element) && element.contextElement ? element.contextElement : isElement(element) ? element : null;\n  if (!domElement) {\n    return FALLBACK_SCALE;\n  }\n  const rect = domElement.getBoundingClientRect();\n  const css = getComputedStyle$1(domElement);\n  if (css.boxSizing !== \"border-box\") {\n    if (!isHTMLElement(domElement)) {\n      return FALLBACK_SCALE;\n    }\n    return {\n      x: domElement.offsetWidth > 0 ? round(rect.width) / domElement.offsetWidth || 1 : 1,\n      y: domElement.offsetHeight > 0 ? round(rect.height) / domElement.offsetHeight || 1 : 1\n    };\n  }\n  let x = rect.width / parseFloat(css.width);\n  let y = rect.height / parseFloat(css.height);\n  if (!x || !Number.isFinite(x)) {\n    x = 1;\n  }\n  if (!y || !Number.isFinite(y)) {\n    y = 1;\n  }\n  return {\n    x,\n    y\n  };\n}\nfunction getBoundingClientRect(element, includeScale, isFixedStrategy, offsetParent) {\n  var _win$visualViewport$o, _win$visualViewport, _win$visualViewport$o2, _win$visualViewport2;\n  if (includeScale === void 0) {\n    includeScale = false;\n  }\n  if (isFixedStrategy === void 0) {\n    isFixedStrategy = false;\n  }\n  const clientRect = element.getBoundingClientRect();\n  let scale = FALLBACK_SCALE;\n  if (includeScale) {\n    if (offsetParent) {\n      if (isElement(offsetParent)) {\n        scale = getScale(offsetParent);\n      }\n    } else {\n      scale = getScale(element);\n    }\n  }\n  const win = isElement(element) ? getWindow(element) : window;\n  const addVisualOffsets = !isLayoutViewport() && isFixedStrategy;\n  const x = (clientRect.left + (addVisualOffsets ? (_win$visualViewport$o = (_win$visualViewport = win.visualViewport) == null ? void 0 : _win$visualViewport.offsetLeft) != null ? _win$visualViewport$o : 0 : 0)) / scale.x;\n  const y = (clientRect.top + (addVisualOffsets ? (_win$visualViewport$o2 = (_win$visualViewport2 = win.visualViewport) == null ? void 0 : _win$visualViewport2.offsetTop) != null ? _win$visualViewport$o2 : 0 : 0)) / scale.y;\n  const width = clientRect.width / scale.x;\n  const height = clientRect.height / scale.y;\n  return {\n    width,\n    height,\n    top: y,\n    right: x + width,\n    bottom: y + height,\n    left: x,\n    x,\n    y\n  };\n}\nfunction getDocumentElement(node) {\n  return ((isNode(node) ? node.ownerDocument : node.document) || window.document).documentElement;\n}\nfunction getNodeScroll(element) {\n  if (isElement(element)) {\n    return {\n      scrollLeft: element.scrollLeft,\n      scrollTop: element.scrollTop\n    };\n  }\n  return {\n    scrollLeft: element.pageXOffset,\n    scrollTop: element.pageYOffset\n  };\n}\nfunction getWindowScrollBarX(element) {\n  return getBoundingClientRect(getDocumentElement(element)).left + getNodeScroll(element).scrollLeft;\n}\nfunction getRectRelativeToOffsetParent(element, offsetParent, strategy) {\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  const documentElement = getDocumentElement(offsetParent);\n  const rect = getBoundingClientRect(element, true, strategy === \"fixed\", offsetParent);\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  const offsets = {\n    x: 0,\n    y: 0\n  };\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && strategy !== \"fixed\") {\n    if (getNodeName(offsetParent) !== \"body\" || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n    if (isHTMLElement(offsetParent)) {\n      const offsetRect = getBoundingClientRect(offsetParent, true);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    } else if (documentElement) {\n      offsets.x = getWindowScrollBarX(documentElement);\n    }\n  }\n  return {\n    x: rect.left + scroll.scrollLeft - offsets.x,\n    y: rect.top + scroll.scrollTop - offsets.y,\n    width: rect.width,\n    height: rect.height\n  };\n}\nfunction getParentNode(node) {\n  if (getNodeName(node) === \"html\") {\n    return node;\n  }\n  const result = node.assignedSlot || node.parentNode || (isShadowRoot(node) ? node.host : null) || getDocumentElement(node);\n  return isShadowRoot(result) ? result.host : result;\n}\nfunction getTrueOffsetParent(element) {\n  if (!isHTMLElement(element) || getComputedStyle$1(element).position === \"fixed\") {\n    return null;\n  }\n  return element.offsetParent;\n}\nfunction getContainingBlock(element) {\n  let currentNode = getParentNode(element);\n  while (isHTMLElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    if (isContainingBlock(currentNode)) {\n      return currentNode;\n    } else {\n      currentNode = getParentNode(currentNode);\n    }\n  }\n  return null;\n}\nfunction getOffsetParent(element) {\n  const window2 = getWindow(element);\n  let offsetParent = getTrueOffsetParent(element);\n  while (offsetParent && isTableElement(offsetParent) && getComputedStyle$1(offsetParent).position === \"static\") {\n    offsetParent = getTrueOffsetParent(offsetParent);\n  }\n  if (offsetParent && (getNodeName(offsetParent) === \"html\" || getNodeName(offsetParent) === \"body\" && getComputedStyle$1(offsetParent).position === \"static\" && !isContainingBlock(offsetParent))) {\n    return window2;\n  }\n  return offsetParent || getContainingBlock(element) || window2;\n}\nfunction getDimensions(element) {\n  if (isHTMLElement(element)) {\n    return {\n      width: element.offsetWidth,\n      height: element.offsetHeight\n    };\n  }\n  const rect = getBoundingClientRect(element);\n  return {\n    width: rect.width,\n    height: rect.height\n  };\n}\nfunction convertOffsetParentRelativeRectToViewportRelativeRect(_ref) {\n  let {\n    rect,\n    offsetParent,\n    strategy\n  } = _ref;\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  const documentElement = getDocumentElement(offsetParent);\n  if (offsetParent === documentElement) {\n    return rect;\n  }\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  let scale = {\n    x: 1,\n    y: 1\n  };\n  const offsets = {\n    x: 0,\n    y: 0\n  };\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && strategy !== \"fixed\") {\n    if (getNodeName(offsetParent) !== \"body\" || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n    if (isHTMLElement(offsetParent)) {\n      const offsetRect = getBoundingClientRect(offsetParent);\n      scale = getScale(offsetParent);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    }\n  }\n  return {\n    width: rect.width * scale.x,\n    height: rect.height * scale.y,\n    x: rect.x * scale.x - scroll.scrollLeft * scale.x + offsets.x,\n    y: rect.y * scale.y - scroll.scrollTop * scale.y + offsets.y\n  };\n}\nfunction getViewportRect(element, strategy) {\n  const win = getWindow(element);\n  const html = getDocumentElement(element);\n  const visualViewport = win.visualViewport;\n  let width = html.clientWidth;\n  let height = html.clientHeight;\n  let x = 0;\n  let y = 0;\n  if (visualViewport) {\n    width = visualViewport.width;\n    height = visualViewport.height;\n    const layoutViewport = isLayoutViewport();\n    if (layoutViewport || !layoutViewport && strategy === \"fixed\") {\n      x = visualViewport.offsetLeft;\n      y = visualViewport.offsetTop;\n    }\n  }\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\nfunction getDocumentRect(element) {\n  var _element$ownerDocumen;\n  const html = getDocumentElement(element);\n  const scroll = getNodeScroll(element);\n  const body = (_element$ownerDocumen = element.ownerDocument) == null ? void 0 : _element$ownerDocumen.body;\n  const width = max(html.scrollWidth, html.clientWidth, body ? body.scrollWidth : 0, body ? body.clientWidth : 0);\n  const height = max(html.scrollHeight, html.clientHeight, body ? body.scrollHeight : 0, body ? body.clientHeight : 0);\n  let x = -scroll.scrollLeft + getWindowScrollBarX(element);\n  const y = -scroll.scrollTop;\n  if (getComputedStyle$1(body || html).direction === \"rtl\") {\n    x += max(html.clientWidth, body ? body.clientWidth : 0) - width;\n  }\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\nfunction getNearestOverflowAncestor(node) {\n  const parentNode = getParentNode(node);\n  if (isLastTraversableNode(parentNode)) {\n    return node.ownerDocument.body;\n  }\n  if (isHTMLElement(parentNode) && isOverflowElement(parentNode)) {\n    return parentNode;\n  }\n  return getNearestOverflowAncestor(parentNode);\n}\nfunction getOverflowAncestors(node, list) {\n  var _node$ownerDocument;\n  if (list === void 0) {\n    list = [];\n  }\n  const scrollableAncestor = getNearestOverflowAncestor(node);\n  const isBody = scrollableAncestor === ((_node$ownerDocument = node.ownerDocument) == null ? void 0 : _node$ownerDocument.body);\n  const win = getWindow(scrollableAncestor);\n  if (isBody) {\n    return list.concat(win, win.visualViewport || [], isOverflowElement(scrollableAncestor) ? scrollableAncestor : []);\n  }\n  return list.concat(scrollableAncestor, getOverflowAncestors(scrollableAncestor));\n}\nfunction getInnerBoundingClientRect(element, strategy) {\n  const clientRect = getBoundingClientRect(element, true, strategy === \"fixed\");\n  const top = clientRect.top + element.clientTop;\n  const left = clientRect.left + element.clientLeft;\n  const scale = isHTMLElement(element) ? getScale(element) : {\n    x: 1,\n    y: 1\n  };\n  const width = element.clientWidth * scale.x;\n  const height = element.clientHeight * scale.y;\n  const x = left * scale.x;\n  const y = top * scale.y;\n  return {\n    top: y,\n    left: x,\n    right: x + width,\n    bottom: y + height,\n    x,\n    y,\n    width,\n    height\n  };\n}\nfunction getClientRectFromClippingAncestor(element, clippingAncestor, strategy) {\n  if (clippingAncestor === \"viewport\") {\n    return rectToClientRect(getViewportRect(element, strategy));\n  }\n  if (isElement(clippingAncestor)) {\n    return getInnerBoundingClientRect(clippingAncestor, strategy);\n  }\n  return rectToClientRect(getDocumentRect(getDocumentElement(element)));\n}\nfunction getClippingElementAncestors(element, cache) {\n  const cachedResult = cache.get(element);\n  if (cachedResult) {\n    return cachedResult;\n  }\n  let result = getOverflowAncestors(element).filter((el) => isElement(el) && getNodeName(el) !== \"body\");\n  let currentContainingBlockComputedStyle = null;\n  const elementIsFixed = getComputedStyle$1(element).position === \"fixed\";\n  let currentNode = elementIsFixed ? getParentNode(element) : element;\n  while (isElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    const computedStyle = getComputedStyle$1(currentNode);\n    const containingBlock = isContainingBlock(currentNode);\n    const shouldDropCurrentNode = elementIsFixed ? !containingBlock && !currentContainingBlockComputedStyle : !containingBlock && computedStyle.position === \"static\" && !!currentContainingBlockComputedStyle && [\"absolute\", \"fixed\"].includes(currentContainingBlockComputedStyle.position);\n    if (shouldDropCurrentNode) {\n      result = result.filter((ancestor) => ancestor !== currentNode);\n    } else {\n      currentContainingBlockComputedStyle = computedStyle;\n    }\n    currentNode = getParentNode(currentNode);\n  }\n  cache.set(element, result);\n  return result;\n}\nfunction getClippingRect(_ref) {\n  let {\n    element,\n    boundary,\n    rootBoundary,\n    strategy\n  } = _ref;\n  const elementClippingAncestors = boundary === \"clippingAncestors\" ? getClippingElementAncestors(element, this._c) : [].concat(boundary);\n  const clippingAncestors = [...elementClippingAncestors, rootBoundary];\n  const firstClippingAncestor = clippingAncestors[0];\n  const clippingRect = clippingAncestors.reduce((accRect, clippingAncestor) => {\n    const rect = getClientRectFromClippingAncestor(element, clippingAncestor, strategy);\n    accRect.top = max(rect.top, accRect.top);\n    accRect.right = min(rect.right, accRect.right);\n    accRect.bottom = min(rect.bottom, accRect.bottom);\n    accRect.left = max(rect.left, accRect.left);\n    return accRect;\n  }, getClientRectFromClippingAncestor(element, firstClippingAncestor, strategy));\n  return {\n    width: clippingRect.right - clippingRect.left,\n    height: clippingRect.bottom - clippingRect.top,\n    x: clippingRect.left,\n    y: clippingRect.top\n  };\n}\nconst platform = {\n  getClippingRect,\n  convertOffsetParentRelativeRectToViewportRelativeRect,\n  isElement,\n  getDimensions,\n  getOffsetParent,\n  getDocumentElement,\n  getScale,\n  getElementRects(_ref) {\n    return __async(this, null, function* () {\n      let {\n        reference,\n        floating,\n        strategy\n      } = _ref;\n      const getOffsetParentFn = this.getOffsetParent || getOffsetParent;\n      const getDimensionsFn = this.getDimensions;\n      return {\n        reference: getRectRelativeToOffsetParent(reference, yield getOffsetParentFn(floating), strategy),\n        floating: __spreadValues({\n          x: 0,\n          y: 0\n        }, yield getDimensionsFn(floating))\n      };\n    });\n  },\n  getClientRects: (element) => Array.from(element.getClientRects()),\n  isRTL: (element) => getComputedStyle$1(element).direction === \"rtl\"\n};\nfunction autoUpdate(reference, floating, update, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    ancestorScroll: _ancestorScroll = true,\n    ancestorResize = true,\n    elementResize = true,\n    animationFrame = false\n  } = options;\n  const ancestorScroll = _ancestorScroll && !animationFrame;\n  const ancestors = ancestorScroll || ancestorResize ? [...isElement(reference) ? getOverflowAncestors(reference) : reference.contextElement ? getOverflowAncestors(reference.contextElement) : [], ...getOverflowAncestors(floating)] : [];\n  ancestors.forEach((ancestor) => {\n    ancestorScroll && ancestor.addEventListener(\"scroll\", update, {\n      passive: true\n    });\n    ancestorResize && ancestor.addEventListener(\"resize\", update);\n  });\n  let observer = null;\n  if (elementResize) {\n    let initialUpdate = true;\n    observer = new ResizeObserver(() => {\n      if (!initialUpdate) {\n        update();\n      }\n      initialUpdate = false;\n    });\n    isElement(reference) && !animationFrame && observer.observe(reference);\n    if (!isElement(reference) && reference.contextElement && !animationFrame) {\n      observer.observe(reference.contextElement);\n    }\n    observer.observe(floating);\n  }\n  let frameId;\n  let prevRefRect = animationFrame ? getBoundingClientRect(reference) : null;\n  if (animationFrame) {\n    frameLoop();\n  }\n  function frameLoop() {\n    const nextRefRect = getBoundingClientRect(reference);\n    if (prevRefRect && (nextRefRect.x !== prevRefRect.x || nextRefRect.y !== prevRefRect.y || nextRefRect.width !== prevRefRect.width || nextRefRect.height !== prevRefRect.height)) {\n      update();\n    }\n    prevRefRect = nextRefRect;\n    frameId = requestAnimationFrame(frameLoop);\n  }\n  update();\n  return () => {\n    var _observer;\n    ancestors.forEach((ancestor) => {\n      ancestorScroll && ancestor.removeEventListener(\"scroll\", update);\n      ancestorResize && ancestor.removeEventListener(\"resize\", update);\n    });\n    (_observer = observer) == null ? void 0 : _observer.disconnect();\n    observer = null;\n    if (animationFrame) {\n      cancelAnimationFrame(frameId);\n    }\n  };\n}\nconst computePosition = (reference, floating, options) => {\n  const cache = /* @__PURE__ */ new Map();\n  const mergedOptions = __spreadValues({\n    platform\n  }, options);\n  const platformWithCache = __spreadProps(__spreadValues({}, mergedOptions.platform), {\n    _c: cache\n  });\n  return computePosition$1(reference, floating, __spreadProps(__spreadValues({}, mergedOptions), {\n    platform: platformWithCache\n  }));\n};\nfunction P(l2, u2, e2) {\n  let c2 = () => {\n    var t2;\n    return (t2 = e2 == null ? void 0 : e2.placement) != null ? t2 : \"bottom\";\n  }, d = () => {\n    var t2;\n    return (t2 = e2 == null ? void 0 : e2.strategy) != null ? t2 : \"absolute\";\n  }, [n2, o2] = createSignal({ x: null, y: null, placement: c2(), strategy: d(), middlewareData: {} }), [x, F] = createSignal();\n  createEffect(() => {\n    let t2 = x();\n    if (t2)\n      throw t2.value;\n  });\n  let s2 = createMemo(() => (l2(), u2(), {}));\n  function i2() {\n    let t2 = l2(), r = u2();\n    if (t2 && r) {\n      let a2 = s2();\n      computePosition(t2, r, { middleware: e2 == null ? void 0 : e2.middleware, placement: c2(), strategy: d() }).then((m) => {\n        a2 === s2() && o2(m);\n      }, (m) => {\n        F(m);\n      });\n    }\n  }\n  return createEffect(() => {\n    let t2 = l2(), r = u2();\n    if (e2 == null || e2.middleware, c2(), d(), t2 && r)\n      if (e2 != null && e2.whileElementsMounted) {\n        let a2 = e2.whileElementsMounted(t2, r, i2);\n        a2 && onCleanup(a2);\n      } else\n        i2();\n  }), { get x() {\n    return n2().x;\n  }, get y() {\n    return n2().y;\n  }, get placement() {\n    return n2().placement;\n  }, get strategy() {\n    return n2().strategy;\n  }, get middlewareData() {\n    return n2().middlewareData;\n  }, update: i2 };\n}\nconst _tmpl$$4 = /* @__PURE__ */ template$1(`<tc-root data-tc-dropdown-container=\"true\"></tc-root>`);\nconst AccountButton = () => {\n  const theme = useTheme();\n  const connector = useContext(ConnectorContext);\n  const tonConnectUI = useContext(TonConnectUiContext);\n  const [isOpened, setIsOpened] = createSignal(false);\n  const [account, setAccount] = createSignal(connector.account);\n  const [restoringProcess, setRestoringProcess] = createSignal(!connector.account);\n  let dropDownRef;\n  const [floating, setFloating] = createSignal();\n  const [anchor, setAnchor] = createSignal();\n  const position = P(anchor, floating, {\n    whileElementsMounted: autoUpdate,\n    placement: \"bottom-end\"\n  });\n  const normalizedAddress = () => {\n    const acc = account();\n    if (acc) {\n      const userFriendlyAddress = (0,_tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.toUserFriendlyAddress)(acc.address, acc.chain === _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.CHAIN.TESTNET);\n      return userFriendlyAddress.slice(0, 4) + \"\\u2026\" + userFriendlyAddress.slice(-4);\n    }\n    return \"\";\n  };\n  tonConnectUI.connectionRestored.then(() => setRestoringProcess(false));\n  const unsubscribe = connector.onStatusChange((wallet) => {\n    if (!wallet) {\n      setIsOpened(false);\n      setAccount(null);\n      setRestoringProcess(false);\n      return;\n    }\n    setAccount(wallet.account);\n    setRestoringProcess(false);\n  });\n  const onClick = (e2) => {\n    if (!account() || !isOpened()) {\n      return;\n    }\n    const clickToButton = anchor().contains(e2.target);\n    const clickToDropdown = dropDownRef.contains(e2.target);\n    if (!clickToButton && !clickToDropdown) {\n      setIsOpened(false);\n    }\n  };\n  onMount(() => {\n    document.body.addEventListener(\"click\", onClick);\n  });\n  onCleanup(() => {\n    document.body.removeEventListener(\"click\", onClick);\n    unsubscribe();\n  });\n  return createComponent(Dynamic, {\n    component: globalStylesTag,\n    get children() {\n      return [createComponent(Show, {\n        get when() {\n          return restoringProcess();\n        },\n        get children() {\n          return createComponent(LoaderButtonStyled$1, {\n            disabled: true,\n            \"data-tc-connect-button-loading\": \"true\",\n            get children() {\n              return createComponent(LoaderIconStyled$1, {});\n            }\n          });\n        }\n      }), createComponent(Show, {\n        get when() {\n          return !restoringProcess();\n        },\n        get children() {\n          return [createComponent(Show, {\n            get when() {\n              return !account();\n            },\n            get children() {\n              return createComponent(AccountButtonStyled, {\n                onClick: () => tonConnectUI.openModal(),\n                \"data-tc-connect-button\": \"true\",\n                scale: \"s\",\n                get children() {\n                  return [createComponent(TonIcon, {\n                    get fill() {\n                      return theme.colors.connectButton.foreground;\n                    }\n                  }), createComponent(Text, {\n                    translationKey: \"button.connectWallet\",\n                    fontSize: \"15px\",\n                    lineHeight: \"18px\",\n                    fontWeight: \"590\",\n                    get color() {\n                      return theme.colors.connectButton.foreground;\n                    },\n                    children: \"Connect wallet\"\n                  })];\n                }\n              });\n            }\n          }), createComponent(Show, {\n            get when() {\n              return account();\n            },\n            get children() {\n              return createComponent(DropdownContainerStyled, {\n                get children() {\n                  return [createComponent(DropdownButtonStyled, {\n                    onClick: () => setIsOpened((v) => !v),\n                    ref: setAnchor,\n                    \"data-tc-dropdown-button\": \"true\",\n                    scale: \"s\",\n                    get children() {\n                      return [createComponent(Text, {\n                        fontSize: \"15px\",\n                        fontWeight: \"590\",\n                        lineHeight: \"18px\",\n                        get children() {\n                          return normalizedAddress();\n                        }\n                      }), createComponent(ArrowIcon, {\n                        direction: \"bottom\"\n                      })];\n                    }\n                  }), createComponent(Portal, {\n                    get children() {\n                      const _el$ = untrack(() => document.importNode(_tmpl$$4, true));\n                      use(setFloating, _el$);\n                      _el$.style.setProperty(\"z-index\", \"999\");\n                      _el$._$owner = getOwner();\n                      insert(_el$, createComponent(Transition, {\n                        onBeforeEnter: (el) => {\n                          animate(el, [{\n                            opacity: 0,\n                            transform: \"translateY(-8px)\"\n                          }, {\n                            opacity: 1,\n                            transform: \"translateY(0)\"\n                          }], {\n                            duration: 150\n                          });\n                        },\n                        onExit: (el, done) => {\n                          const a2 = animate(el, [{\n                            opacity: 1,\n                            transform: \"translateY(0)\"\n                          }, {\n                            opacity: 0,\n                            transform: \"translateY(-8px)\"\n                          }], {\n                            duration: 150\n                          });\n                          a2.finished.then(done);\n                        },\n                        get children() {\n                          return createComponent(Show, {\n                            get when() {\n                              return isOpened();\n                            },\n                            get children() {\n                              return createComponent(DropdownStyled, {\n                                get hidden() {\n                                  return !isOpened();\n                                },\n                                onClose: () => setIsOpened(false),\n                                ref(r$) {\n                                  const _ref$ = dropDownRef;\n                                  typeof _ref$ === \"function\" ? _ref$(r$) : dropDownRef = r$;\n                                }\n                              });\n                            }\n                          });\n                        }\n                      }), null);\n                      insert(_el$, createComponent(NotificationsStyled, {}), null);\n                      createRenderEffect((_p$) => {\n                        var _a2, _b2;\n                        const _v$ = position.strategy, _v$2 = `${(_a2 = position.y) != null ? _a2 : 0}px`, _v$3 = `${(_b2 = position.x) != null ? _b2 : 0}px`;\n                        _v$ !== _p$._v$ && _el$.style.setProperty(\"position\", _p$._v$ = _v$);\n                        _v$2 !== _p$._v$2 && _el$.style.setProperty(\"top\", _p$._v$2 = _v$2);\n                        _v$3 !== _p$._v$3 && _el$.style.setProperty(\"left\", _p$._v$3 = _v$3);\n                        return _p$;\n                      }, {\n                        _v$: void 0,\n                        _v$2: void 0,\n                        _v$3: void 0\n                      });\n                      return _el$;\n                    }\n                  })];\n                }\n              });\n            }\n          })];\n        }\n      })];\n    }\n  });\n};\nconst StyledModal = styled(Modal)`\n    padding-left: 24px;\n    padding-right: 24px;\n    padding-top: 18px;\n    padding-bottom: 0;\n\n    ${media(\"mobile\")} {\n        padding-left: 0;\n        padding-right: 0;\n    }\n`;\nconst H1Styled$8 = styled(H1)`\n    margin-top: 12px;\n\n    ${media(\"mobile\")} {\n        padding: 0 10px;\n    }\n`;\nconst LoaderContainerStyled = styled.div`\n    margin: 30px 0;\n    width: 100%;\n    display: flex;\n    justify-content: center;\n\n    ${media(\"mobile\")} {\n        height: 160px;\n        align-items: center;\n    }\n`;\nstyled(Text)`\n    min-width: 84px;\n    text-align: center;\n    font-weight: 590;\n`;\nstyled(TabBar)`\n    margin: 0 auto 22px;\n`;\nconst [appState, setAppState] = createStore({\n  buttonRootId: null,\n  language: \"en\",\n  returnStrategy: \"back\",\n  twaReturnUrl: void 0,\n  walletsListConfiguration: {},\n  enableAndroidBackHandler: true\n});\nfunction uniq(array) {\n  return [...new Set(array)];\n}\nfunction mergeConcat(idKey, array1, array2) {\n  return array1.map((item1) => {\n    const item2 = array2.find((elem) => elem[idKey] === item1[idKey]);\n    array2 = array2.filter((elem) => elem[idKey] !== item1[idKey]);\n    return item2 === void 0 ? item1 : item2;\n  }).concat(array2);\n}\nfunction uiWalletToWalletInfo(uiWallet) {\n  if (\"jsBridgeKey\" in uiWallet) {\n    return __spreadProps(__spreadValues({}, uiWallet), {\n      injected: _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.TonConnect.isWalletInjected(uiWallet.jsBridgeKey),\n      embedded: _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.TonConnect.isInsideWalletBrowser(uiWallet.jsBridgeKey)\n    });\n  }\n  return uiWallet;\n}\nfunction applyWalletsListConfiguration(walletsList, configuration) {\n  var _a2;\n  if (!configuration) {\n    return walletsList;\n  }\n  if ((_a2 = configuration.includeWallets) == null ? void 0 : _a2.length) {\n    walletsList = mergeConcat(\n      \"name\",\n      walletsList,\n      configuration.includeWallets.map(uiWalletToWalletInfo)\n    );\n  }\n  return walletsList;\n}\nfunction supportsDesktop(walletInfo) {\n  return walletInfo.platforms.some((w) => [\"macos\", \"linux\", \"windows\"].includes(w));\n}\nfunction supportsMobile(walletInfo) {\n  return walletInfo.platforms.some((w) => [\"ios\", \"android\"].includes(w));\n}\nfunction supportsExtension(walletInfo) {\n  return walletInfo.platforms.some((w) => [\"chrome\", \"firefox\", \"safari\"].includes(w));\n}\nfunction eqWalletName(wallet1, name) {\n  if (!name) {\n    return false;\n  }\n  return wallet1.name.toLowerCase() === name.toLowerCase() || wallet1.appName.toLowerCase() === name.toLowerCase();\n}\nconst DesktopSelectWalletModalStyled = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n`;\nconst H1Styled$7 = styled(H1)`\n    margin-bottom: 18px;\n`;\nstyled.div`\n    height: 1px;\n    margin: 0 -24px;\n    width: calc(100% + 48px);\n    opacity: 0.12;\n    background: ${(props) => props.isShown ? props.theme.colors.icon.secondary : \"transparent\"};\n    transition: background 0.15s ease-in-out;\n\n    ${media(\"mobile\")} {\n        width: 100%;\n    }\n`;\nconst WalletsUl = styled.ul`\n    display: grid;\n    grid-template-columns: repeat(auto-fit, 92px);\n    grid-template-rows: auto;\n    align-content: flex-start;\n    row-gap: 8px;\n    width: 100%;\n    padding: 0 0 16px;\n    align-self: flex-start;\n    max-width: 400px;\n    margin: 0 auto;\n    list-style: none;\n\n    > li {\n        display: block;\n        height: fit-content;\n    }\n\n    ${media(\"mobile\")} {\n        display: grid;\n        grid-template-columns: repeat(4, 1fr);\n        gap: 0;\n        padding: 8px 12px 16px;\n        max-width: none;\n\n        > li {\n            min-width: 78px;\n            display: flex;\n        }\n\n        > li > * {\n            width: 100%;\n        }\n    }\n`;\nstyled(Button)`\n    display: block;\n    margin: 0 auto 1px;\n    font-size: 15px;\n`;\nconst StyledIconButton$3 = styled(IconButton)`\n    position: absolute;\n    top: 16px;\n    left: 16px;\n`;\nconst WalletLabeledItemStyled = styled(WalletLabeledItem)`\n    opacity: ${(props) => props.withOpacity ? \"0.4\" : \"1\"};\n`;\nconst WalletsNotSupportedNotifier = styled.div`\n    display: grid;\n    grid-template-columns: auto 28px;\n    gap: 16px;\n    padding: 16px;\n    margin-bottom: 16px;\n    border-radius: 16px;\n    color: ${(props) => props.theme.colors.text.secondary};\n    background: ${(props) => props.theme.colors.background.tint};\n\n    ${media(\"mobile\")} {\n        margin-left: 16px;\n        margin-right: 16px;\n    }\n`;\nconst WalletsNotSupportedNotifierText = styled(H2)`\n    color: ${(props) => props.theme.colors.text.secondary};\n    text-align: left;\n    margin: 0;\n`;\nconst ErrorBoxStyled = styled.div`\n    position: absolute;\n    bottom: 14px;\n    left: 50%;\n    transform: translate(-50%, 0);\n\n    text-wrap: nowrap;\n    display: flex;\n    gap: 6px;\n    align-items: center;\n    border-radius: 18px;\n    min-width: 126px;\n    padding: 9px 16px 9px 10px;\n\n    filter: drop-shadow(0px 2px 8px rgba(0, 0, 0, 0.08));\n    background-color: ${(props) => props.theme.colors.background.segment};\n`;\nconst _tmpl$$3 = /* @__PURE__ */ template$1(`<svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><g clip-path=\"url(#clip0_5122_10355)\"><circle cx=\"8\" cy=\"8\" r=\"8\"></circle><circle cx=\"8\" cy=\"11\" r=\"1\"></circle><path d=\"M7.04994 4.99875C7.02277 4.45542 7.45598 4 8 4C8.54402 4 8.97723 4.45541 8.95006 4.99875L8.78745 8.25094C8.76647 8.67055 8.42014 9 8 9C7.57986 9 7.23353 8.67055 7.21255 8.25094L7.04994 4.99875Z\"></path></g><defs><clipPath id=\"clip0_5122_10355\"><rect width=\"16\" height=\"16\"></rect></clipPath></defs></svg>`), _tmpl$2$1 = /* @__PURE__ */ template$1(`<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"28\" height=\"28\" viewBox=\"0 0 28 28\" fill=\"none\"><circle cx=\"14\" cy=\"14\" r=\"12\"></circle><circle cx=\"14\" cy=\"18.9\" r=\"1.4\"></circle><path d=\"M12.6658 8.89845C12.63 8.13698 13.2377 7.5 14 7.5C14.7623 7.5 15.37 8.13698 15.3342 8.89845L15.047 15.0013C15.0207 15.5604 14.5597 16.0002 14 16.0002C13.4403 16.0002 12.9793 15.5604 12.953 15.0013L12.6658 8.89845Z\"></path></svg>`);\nconst ExclamationIcon = (props) => {\n  const theme = useTheme();\n  const size = () => props.size;\n  const fill = () => props.fill || theme.colors.icon.error;\n  return createMemo((() => {\n    const _c$ = createMemo(() => size() === \"16\");\n    return () => _c$() ? (() => {\n      const _el$ = _tmpl$$3.cloneNode(true), _el$2 = _el$.firstChild, _el$3 = _el$2.firstChild, _el$4 = _el$3.nextSibling, _el$5 = _el$4.nextSibling, _el$6 = _el$2.nextSibling, _el$7 = _el$6.firstChild, _el$8 = _el$7.firstChild;\n      createRenderEffect((_p$) => {\n        const _v$ = fill(), _v$2 = theme.colors.constant.white, _v$3 = theme.colors.constant.white, _v$4 = theme.colors.constant.white;\n        _v$ !== _p$._v$ && setAttribute(_el$3, \"fill\", _p$._v$ = _v$);\n        _v$2 !== _p$._v$2 && setAttribute(_el$4, \"fill\", _p$._v$2 = _v$2);\n        _v$3 !== _p$._v$3 && setAttribute(_el$5, \"fill\", _p$._v$3 = _v$3);\n        _v$4 !== _p$._v$4 && setAttribute(_el$8, \"fill\", _p$._v$4 = _v$4);\n        return _p$;\n      }, {\n        _v$: void 0,\n        _v$2: void 0,\n        _v$3: void 0,\n        _v$4: void 0\n      });\n      return _el$;\n    })() : (() => {\n      const _c$2 = createMemo(() => size() === \"28\");\n      return () => _c$2() ? (() => {\n        const _el$9 = _tmpl$2$1.cloneNode(true), _el$10 = _el$9.firstChild, _el$11 = _el$10.nextSibling, _el$12 = _el$11.nextSibling;\n        createRenderEffect((_p$) => {\n          const _v$5 = props.class, _v$6 = fill(), _v$7 = theme.colors.constant.white, _v$8 = theme.colors.constant.white;\n          _v$5 !== _p$._v$5 && setAttribute(_el$9, \"class\", _p$._v$5 = _v$5);\n          _v$6 !== _p$._v$6 && setAttribute(_el$10, \"fill\", _p$._v$6 = _v$6);\n          _v$7 !== _p$._v$7 && setAttribute(_el$11, \"fill\", _p$._v$7 = _v$7);\n          _v$8 !== _p$._v$8 && setAttribute(_el$12, \"fill\", _p$._v$8 = _v$8);\n          return _p$;\n        }, {\n          _v$5: void 0,\n          _v$6: void 0,\n          _v$7: void 0,\n          _v$8: void 0\n        });\n        return _el$9;\n      })() : null;\n    })();\n  })());\n};\nconst _tmpl$$2 = /* @__PURE__ */ template$1(`<li></li>`);\nconst AllWalletsListModal = (props) => {\n  const maxHeight = () => isMobile() ? void 0 : 510;\n  const [errorSupportOpened, setErrorSupportOpened] = createSignal(null);\n  let timeoutId = null;\n  const onErrorClick = (wallet) => {\n    setErrorSupportOpened(wallet);\n    if (timeoutId != null) {\n      clearTimeout(timeoutId);\n    }\n    timeoutId = setTimeout(() => setErrorSupportOpened(null), 1500);\n  };\n  const handleSelectWallet = (wallet) => {\n    if (!wallet.isSupportRequiredFeatures) {\n      onErrorClick(wallet);\n      return;\n    }\n    props.onSelect(wallet);\n  };\n  const walletsList = () => isMobile() ? props.walletsList.filter(supportsMobile) : props.walletsList;\n  const supportedWallets = () => walletsList().filter((wallet) => wallet.isSupportRequiredFeatures);\n  const unsupportedWallets = () => walletsList().filter((wallet) => !wallet.isSupportRequiredFeatures);\n  return createComponent(DesktopSelectWalletModalStyled, {\n    \"data-tc-wallets-modal-list\": \"true\",\n    get children() {\n      return [createComponent(StyledIconButton$3, {\n        icon: \"arrow\",\n        onClick: () => props.onBack()\n      }), createComponent(H1Styled$7, {\n        translationKey: \"walletModal.wallets\",\n        children: \"Wallets\"\n      }), createComponent(ScrollContainer, {\n        get maxHeight() {\n          return maxHeight();\n        },\n        get children() {\n          return [createComponent(WalletsUl, {\n            get children() {\n              return createComponent(For, {\n                get each() {\n                  return supportedWallets();\n                },\n                children: (wallet) => (() => {\n                  const _el$ = _tmpl$$2.cloneNode(true);\n                  insert(_el$, createComponent(WalletLabeledItemStyled, {\n                    wallet,\n                    onClick: () => props.onSelect(wallet)\n                  }));\n                  return _el$;\n                })()\n              });\n            }\n          }), createComponent(Show, {\n            get when() {\n              return unsupportedWallets().length > 0;\n            },\n            get children() {\n              return [createComponent(WalletsNotSupportedNotifier, {\n                get children() {\n                  return [createComponent(WalletsNotSupportedNotifierText, {\n                    translationKey: \"walletModal.allWallets.walletsBelowNotSupported\",\n                    children: \"The wallets below don\\u2019t support all features of the connected service. You can use your recovery phrase in one of the supported wallets above.\"\n                  }), createComponent(ExclamationIcon, {\n                    size: \"28\"\n                  })];\n                }\n              }), createComponent(WalletsUl, {\n                get children() {\n                  return createComponent(For, {\n                    get each() {\n                      return unsupportedWallets();\n                    },\n                    children: (wallet) => (() => {\n                      const _el$2 = _tmpl$$2.cloneNode(true);\n                      insert(_el$2, createComponent(WalletLabeledItemStyled, {\n                        wallet,\n                        onClick: () => handleSelectWallet(wallet),\n                        withOpacity: true\n                      }));\n                      return _el$2;\n                    })()\n                  });\n                }\n              }), createComponent(Transition, {\n                onBeforeEnter: (el) => {\n                  animate(el, [{\n                    opacity: 0,\n                    transform: \"translate(-50%, 44px)\"\n                  }, {\n                    opacity: 1,\n                    transform: \"translate(-50%, 0)\"\n                  }], {\n                    duration: 150,\n                    easing: \"ease-out\"\n                  });\n                },\n                onExit: (el, done) => {\n                  animate(el, [{\n                    opacity: 1,\n                    transform: \"translate(-50%, 0)\"\n                  }, {\n                    opacity: 0,\n                    transform: \"translate(-50%, 44px)\"\n                  }], {\n                    duration: 150,\n                    easing: \"ease-out\"\n                  }).finished.then(() => {\n                    done();\n                  });\n                },\n                get children() {\n                  return createComponent(Show, {\n                    get when() {\n                      return errorSupportOpened();\n                    },\n                    get children() {\n                      return createComponent(ErrorBoxStyled, {\n                        get children() {\n                          return [createComponent(ErrorIcon, {\n                            size: \"xs\"\n                          }), createComponent(Text, {\n                            translationKey: \"walletModal.allWallets.walletNotSupportService\",\n                            get translationValues() {\n                              return {\n                                name: errorSupportOpened().name\n                              };\n                            },\n                            get children() {\n                              return [createMemo(() => errorSupportOpened().name), \" doesn\\u2019t support connected service\"];\n                            }\n                          })];\n                        }\n                      });\n                    }\n                  });\n                }\n              })];\n            }\n          })];\n        }\n      })];\n    }\n  });\n};\nconst tgButtonBorders = {\n  m: \"16px\",\n  s: \"12px\",\n  none: \"0\"\n};\nconst tgIconBorders = {\n  m: \"6px\",\n  s: \"6px\",\n  none: \"0\"\n};\nconst DesktopConnectionModalStyled = styled.div`\n    display: flex;\n    flex-direction: column;\n`;\nconst BodyStyled$1 = styled.div`\n    flex: 1;\n    margin-top: ${(props) => props.qr ? \"0\" : \"18px\"};\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    min-height: 232px;\n`;\nconst QRCodeStyled$1 = styled(QRCode)`\n    margin-bottom: 24px;\n`;\nconst H1Styled$6 = styled(H1)`\n    max-width: 288px;\n    margin: 0 auto 2px;\n`;\nconst H2Styled$4 = styled(H2)`\n    max-width: 288px;\n    text-align: center;\n    margin: 0 auto 20px;\n`;\nconst StyledIconButton$2 = styled(IconButton)`\n    position: absolute;\n    top: 16px;\n    left: 16px;\n`;\nconst ButtonsContainerStyled$1 = styled.div`\n    display: flex;\n    justify-content: center;\n    gap: 8px;\n    padding-bottom: 16px;\n`;\nconst BottomButtonsContainerStyled = styled(ButtonsContainerStyled$1)`\n    padding-bottom: 0;\n`;\nconst FooterButton$1 = styled(Button)`\n    margin-bottom: 24px;\n`;\nconst LoaderStyled$1 = styled(LoaderIcon)`\n    margin-bottom: 18px;\n    margin-top: 2px;\n`;\nconst ErrorIconStyled$1 = styled(ErrorIcon)`\n    margin-bottom: 16px;\n`;\nconst BodyTextStyled$1 = styled(H2)`\n    color: ${(props) => props.theme.colors.text.secondary};\n    text-align: center;\n    margin-bottom: 20px;\n`;\nconst TgButtonStyled = styled(Button)`\n    margin-top: -8px;\n    margin-bottom: 24px;\n    width: 100%;\n    padding: 12px 12px 12px 20px;\n    border-radius: ${(props) => tgButtonBorders[props.theme.borderRadius]};\n    font-size: 16px;\n    line-height: 20px;\n`;\nconst TgImageStyled = styled(Image)`\n    width: 32px;\n    height: 32px;\n    border-radius: ${(props) => tgIconBorders[props.theme.borderRadius]};\n`;\nconst Translation = (props) => {\n  const [t2] = useI18n();\n  return createMemo(() => {\n    var _a2;\n    return t2(props.translationKey, props.translationValues, (_a2 = props.children) == null ? void 0 : _a2.toString());\n  });\n};\nfunction addReturnStrategy(url, strategy) {\n  let returnStrategy;\n  if (typeof strategy === \"string\") {\n    returnStrategy = strategy;\n  } else {\n    returnStrategy = isInTMA() ? strategy.twaReturnUrl || strategy.returnStrategy : \"none\";\n  }\n  const newUrl = addQueryParameter(url, \"ret\", returnStrategy);\n  if (!(0,_tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.isTelegramUrl)(url)) {\n    return newUrl;\n  }\n  const lastParam = newUrl.slice(newUrl.lastIndexOf(\"&\") + 1);\n  return newUrl.slice(0, newUrl.lastIndexOf(\"&\")) + \"-\" + (0,_tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.encodeTelegramUrlParameters)(lastParam);\n}\nfunction redirectToTelegram(universalLink, options) {\n  options = __spreadValues({}, options);\n  const directLink = convertToTGDirectLink(universalLink);\n  const directLinkUrl = new URL(directLink);\n  if (!directLinkUrl.searchParams.has(\"startapp\")) {\n    directLinkUrl.searchParams.append(\"startapp\", \"tonconnect\");\n  }\n  if (isInTelegramBrowser()) {\n    options.returnStrategy = \"back\";\n    const linkWitStrategy = addReturnStrategy(directLinkUrl.toString(), options.returnStrategy);\n    openLinkBlank(linkWitStrategy);\n  } else if (isInTMA()) {\n    if (isTmaPlatform(\"ios\", \"android\", \"macos\", \"tdesktop\", \"web\")) {\n      options.returnStrategy = \"back\";\n      const linkWitStrategy = addReturnStrategy(\n        directLinkUrl.toString(),\n        options.returnStrategy\n      );\n      sendOpenTelegramLink(linkWitStrategy);\n    } else if (isTmaPlatform(\"weba\")) {\n      sendOpenTelegramLink(addReturnStrategy(directLinkUrl.toString(), options));\n    } else {\n      openLinkBlank(addReturnStrategy(directLinkUrl.toString(), options));\n    }\n  } else {\n    if (isOS(\"ios\")) {\n      if (options.returnStrategy === \"back\") {\n        if (isBrowser(\"safari\")) {\n          options.returnStrategy = \"back\";\n        } else if (isBrowser(\"chrome\")) {\n          options.returnStrategy = \"googlechrome://\";\n        } else if (isBrowser(\"firefox\")) {\n          options.returnStrategy = \"firefox://\";\n        } else if (isBrowser(\"opera\")) {\n          options.returnStrategy = \"opera-http://\";\n        } else {\n          options.returnStrategy = location.href;\n        }\n      }\n      const isChrome = isBrowser(\"chrome\");\n      const isFirefox = isBrowser(\"firefox\");\n      const useDeepLink = (isChrome || isFirefox) && !options.forceRedirect;\n      if (useDeepLink) {\n        const linkWithStrategy = addReturnStrategy(\n          directLinkUrl.toString(),\n          options.returnStrategy\n        );\n        const deepLink = convertToTGDeepLink(linkWithStrategy);\n        openDeeplinkWithFallback(deepLink, () => openLinkBlank(linkWithStrategy));\n      } else {\n        const linkWithStrategy = addReturnStrategy(\n          directLinkUrl.toString(),\n          options.returnStrategy\n        );\n        openLinkBlank(linkWithStrategy);\n      }\n    } else if (isOS(\"android\")) {\n      options.returnStrategy = \"back\";\n      const isChrome = isBrowser(\"chrome\");\n      const isFirefox = isBrowser(\"firefox\");\n      const useDeepLink = (isChrome || isFirefox) && !options.forceRedirect;\n      if (useDeepLink) {\n        const linkWithStrategy = addReturnStrategy(\n          directLinkUrl.toString(),\n          options.returnStrategy\n        );\n        const deepLink = convertToTGDeepLink(linkWithStrategy);\n        openDeeplinkWithFallback(deepLink, () => openLinkBlank(linkWithStrategy));\n      } else {\n        const linkWithStrategy = addReturnStrategy(\n          directLinkUrl.toString(),\n          options.returnStrategy\n        );\n        openLinkBlank(linkWithStrategy);\n      }\n    } else if (isOS(\"ipad\")) {\n      if (options.returnStrategy === \"back\") {\n        if (isBrowser(\"safari\")) {\n          options.returnStrategy = \"back\";\n        } else if (isBrowser(\"chrome\")) {\n          options.returnStrategy = \"googlechrome://\";\n        } else if (isBrowser(\"firefox\")) {\n          options.returnStrategy = \"firefox://\";\n        } else if (isBrowser(\"opera\")) {\n          options.returnStrategy = \"opera-http://\";\n        } else {\n          options.returnStrategy = location.href;\n        }\n      }\n      const isChrome = isBrowser(\"chrome\");\n      const isFirefox = isBrowser(\"firefox\");\n      const useDeepLink = (isChrome || isFirefox) && !options.forceRedirect;\n      const linkWithStrategy = addReturnStrategy(\n        directLinkUrl.toString(),\n        options.returnStrategy\n      );\n      if (useDeepLink) {\n        const deepLink = convertToTGDeepLink(linkWithStrategy);\n        openDeeplinkWithFallback(deepLink, () => openLinkBlank(linkWithStrategy));\n      } else {\n        openLinkBlank(linkWithStrategy);\n      }\n    } else if (isOS(\"macos\", \"windows\", \"linux\")) {\n      options.returnStrategy = \"back\";\n      options.twaReturnUrl = void 0;\n      const linkWithStrategy = addReturnStrategy(\n        directLinkUrl.toString(),\n        options.returnStrategy\n      );\n      if (options.forceRedirect) {\n        openLinkBlank(linkWithStrategy);\n      } else {\n        const deepLink = convertToTGDeepLink(linkWithStrategy);\n        openDeeplinkWithFallback(deepLink, () => openLinkBlank(linkWithStrategy));\n      }\n    } else {\n      openLinkBlank(addReturnStrategy(directLinkUrl.toString(), options));\n    }\n  }\n}\nfunction redirectToWallet(universalLink, deepLink, options, setOpenMethod) {\n  options = __spreadValues({}, options);\n  if (isInTelegramBrowser()) {\n    if (isOS(\"ios\", \"android\")) {\n      if (options.returnStrategy === \"back\") {\n        options.returnStrategy = \"tg://resolve\";\n      }\n      setOpenMethod(\"universal-link\");\n      openLink(addReturnStrategy(universalLink, options.returnStrategy), \"_self\");\n    } else {\n      setOpenMethod(\"universal-link\");\n      const linkWitStrategy = addReturnStrategy(universalLink, options.returnStrategy);\n      openLinkBlank(linkWitStrategy);\n    }\n  } else if (isInTMA()) {\n    if (isTmaPlatform(\"ios\", \"android\")) {\n      if (options.returnStrategy === \"back\") {\n        options.returnStrategy = \"tg://resolve\";\n      }\n      setOpenMethod(\"universal-link\");\n      const linkWitStrategy = addReturnStrategy(universalLink, options.returnStrategy);\n      sendOpenTelegramLink(linkWitStrategy, () => {\n        setOpenMethod(\"universal-link\");\n        openLinkBlank(linkWitStrategy);\n      });\n    } else if (isTmaPlatform(\"macos\", \"tdesktop\")) {\n      if (options.returnStrategy === \"back\") {\n        options.returnStrategy = \"tg://resolve\";\n      }\n      const linkWitStrategy = addReturnStrategy(universalLink, options.returnStrategy);\n      const useDeepLink = !!deepLink && !options.forceRedirect;\n      if (useDeepLink) {\n        setOpenMethod(\"custom-deeplink\");\n        openDeeplinkWithFallback(toDeeplink(linkWitStrategy, deepLink), () => {\n          setOpenMethod(\"universal-link\");\n          openLinkBlank(linkWitStrategy);\n        });\n      } else {\n        setOpenMethod(\"universal-link\");\n        openLinkBlank(linkWitStrategy);\n      }\n    } else if (isTmaPlatform(\"weba\")) {\n      if (options.returnStrategy === \"back\") {\n        if (isBrowser(\"safari\")) {\n          options.returnStrategy = location.href;\n        } else if (isBrowser(\"chrome\")) {\n          options.returnStrategy = \"googlechrome://\";\n        } else if (isBrowser(\"firefox\")) {\n          options.returnStrategy = \"firefox://\";\n        } else if (isBrowser(\"opera\")) {\n          options.returnStrategy = \"opera-http://\";\n        } else {\n          options.returnStrategy = location.href;\n        }\n      }\n      const linkWitStrategy = addReturnStrategy(universalLink, options.returnStrategy);\n      const useDeepLink = !!deepLink && !options.forceRedirect;\n      if (useDeepLink) {\n        setOpenMethod(\"custom-deeplink\");\n        openDeeplinkWithFallback(toDeeplink(linkWitStrategy, deepLink), () => {\n          setOpenMethod(\"universal-link\");\n          openLinkBlank(linkWitStrategy);\n        });\n      } else {\n        setOpenMethod(\"universal-link\");\n        openLinkBlank(linkWitStrategy);\n      }\n    } else if (isTmaPlatform(\"web\")) {\n      if (options.returnStrategy === \"back\") {\n        if (isBrowser(\"safari\")) {\n          options.returnStrategy = location.href;\n        } else if (isBrowser(\"chrome\")) {\n          options.returnStrategy = \"googlechrome://\";\n        } else if (isBrowser(\"firefox\")) {\n          options.returnStrategy = \"firefox://\";\n        } else if (isBrowser(\"opera\")) {\n          options.returnStrategy = \"opera-http://\";\n        } else {\n          options.returnStrategy = location.href;\n        }\n      }\n      const linkWitStrategy = addReturnStrategy(universalLink, options.returnStrategy);\n      const useDeepLink = !!deepLink && !options.forceRedirect;\n      if (useDeepLink) {\n        setOpenMethod(\"custom-deeplink\");\n        openDeeplinkWithFallback(toDeeplink(linkWitStrategy, deepLink), () => {\n          setOpenMethod(\"universal-link\");\n          openLinkBlank(linkWitStrategy);\n        });\n      } else {\n        setOpenMethod(\"universal-link\");\n        openLinkBlank(linkWitStrategy);\n      }\n    } else {\n      setOpenMethod(\"universal-link\");\n      const linkWitStrategy = addReturnStrategy(universalLink, options.returnStrategy);\n      openLinkBlank(linkWitStrategy);\n    }\n  } else {\n    if (isOS(\"ios\")) {\n      if (options.returnStrategy === \"back\") {\n        if (isBrowser(\"safari\")) {\n          options.returnStrategy = \"none\";\n        } else if (isBrowser(\"chrome\")) {\n          options.returnStrategy = \"googlechrome://\";\n        } else if (isBrowser(\"firefox\")) {\n          options.returnStrategy = \"firefox://\";\n        } else if (isBrowser(\"opera\")) {\n          options.returnStrategy = \"opera-http://\";\n        } else {\n          options.returnStrategy = location.href;\n        }\n      }\n      if (isBrowser(\"chrome\")) {\n        setOpenMethod(\"universal-link\");\n        openLink(addReturnStrategy(universalLink, options.returnStrategy), \"_self\");\n      } else {\n        setOpenMethod(\"universal-link\");\n        openLinkBlank(addReturnStrategy(universalLink, options.returnStrategy));\n      }\n    } else if (isOS(\"android\")) {\n      if (options.returnStrategy === \"back\") {\n        if (isBrowser(\"chrome\")) {\n          options.returnStrategy = \"googlechrome://\";\n        } else if (isBrowser(\"firefox\")) {\n          options.returnStrategy = \"firefox://\";\n        } else if (isBrowser(\"opera\")) {\n          options.returnStrategy = \"opera-http://\";\n        } else {\n          options.returnStrategy = location.href;\n        }\n      }\n      setOpenMethod(\"universal-link\");\n      openLinkBlank(addReturnStrategy(universalLink, options.returnStrategy));\n    } else if (isOS(\"ipad\")) {\n      if (options.returnStrategy === \"back\") {\n        if (isBrowser(\"safari\")) {\n          options.returnStrategy = \"none\";\n        } else if (isBrowser(\"chrome\")) {\n          options.returnStrategy = \"googlechrome://\";\n        } else if (isBrowser(\"firefox\")) {\n          options.returnStrategy = \"firefox://\";\n        } else if (isBrowser(\"opera\")) {\n          options.returnStrategy = \"opera-http://\";\n        } else {\n          options.returnStrategy = location.href;\n        }\n      }\n      if (isBrowser(\"chrome\")) {\n        setOpenMethod(\"universal-link\");\n        openLink(addReturnStrategy(universalLink, options.returnStrategy), \"_self\");\n      } else {\n        setOpenMethod(\"universal-link\");\n        openLinkBlank(addReturnStrategy(universalLink, options.returnStrategy));\n      }\n    } else if (isOS(\"macos\", \"windows\", \"linux\")) {\n      if (options.returnStrategy === \"back\") {\n        if (isBrowser(\"safari\")) {\n          options.returnStrategy = \"none\";\n        } else if (isBrowser(\"chrome\")) {\n          options.returnStrategy = \"googlechrome://\";\n        } else if (isBrowser(\"firefox\")) {\n          options.returnStrategy = \"firefox://\";\n        } else if (isBrowser(\"opera\")) {\n          options.returnStrategy = \"opera-http://\";\n        } else {\n          options.returnStrategy = \"none\";\n        }\n      }\n      const linkWitStrategy = addReturnStrategy(universalLink, options.returnStrategy);\n      const useDeepLink = !!deepLink && !options.forceRedirect;\n      if (useDeepLink) {\n        setOpenMethod(\"custom-deeplink\");\n        openDeeplinkWithFallback(toDeeplink(linkWitStrategy, deepLink), () => {\n          setOpenMethod(\"universal-link\");\n          openLinkBlank(linkWitStrategy);\n        });\n      } else {\n        setOpenMethod(\"universal-link\");\n        openLinkBlank(linkWitStrategy);\n      }\n    } else {\n      setOpenMethod(\"universal-link\");\n      openLinkBlank(addReturnStrategy(universalLink, options.returnStrategy));\n    }\n  }\n}\nfunction addQueryParameter(url, key, value) {\n  const parsed = new URL(url);\n  parsed.searchParams.append(key, value);\n  return parsed.toString();\n}\nfunction convertToTGDirectLink(universalLink) {\n  const url = new URL(universalLink);\n  if (url.searchParams.has(\"attach\")) {\n    url.searchParams.delete(\"attach\");\n    url.pathname += \"/start\";\n  }\n  return url.toString();\n}\nfunction convertToTGDeepLink(directLink) {\n  const parsed = new URL(directLink);\n  const [, domain, appname] = parsed.pathname.split(\"/\");\n  const startapp = parsed.searchParams.get(\"startapp\");\n  return `tg://resolve?domain=${domain}&appname=${appname}&startapp=${startapp}`;\n}\nconst DesktopConnectionModal = (props) => {\n  const [mode, setMode] = createSignal(\"mobile\");\n  const [connectionErrored, setConnectionErrored] = createSignal(null);\n  createEffect(() => {\n    var _a2;\n    setConnectionErrored((_a2 = props.defaultError) != null ? _a2 : null);\n  });\n  const [universalLink, setUniversalLink] = createSignal();\n  const [firstClick, setFirstClick] = createSignal(true);\n  const connector = useContext(ConnectorContext);\n  const unsubscribe = connector.onStatusChange(() => {\n  }, (error) => {\n    if (error instanceof _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.WalletMissingRequiredFeaturesError) {\n      setConnectionErrored(\"missing-features\");\n      return;\n    }\n    if (props.wallet.appName !== AT_WALLET_APP_NAME) {\n      setConnectionErrored(\"connection-declined\");\n    }\n  });\n  onCleanup(unsubscribe);\n  const generateUniversalLink = () => {\n    try {\n      const universalLink2 = connector.connect({\n        universalLink: props.wallet.universalLink,\n        bridgeUrl: props.wallet.bridgeUrl\n      }, props.additionalRequest);\n      setUniversalLink(universalLink2);\n    } catch (e2) {\n    }\n  };\n  createEffect(() => {\n    if (untrack(mode) !== \"extension\" && (supportsMobile(props.wallet) || supportsDesktop(props.wallet))) {\n      generateUniversalLink();\n    }\n  });\n  const onClickMobile = () => {\n    setConnectionErrored(null);\n    if (mode() === \"extension\") {\n      generateUniversalLink();\n    }\n    setMode(\"mobile\");\n    setLastSelectedWalletInfo(__spreadProps(__spreadValues({}, props.wallet), {\n      openMethod: \"qrcode\"\n    }));\n  };\n  const onClickDesktop = () => {\n    setConnectionErrored(null);\n    if (mode() === \"extension\") {\n      generateUniversalLink();\n    }\n    setMode(\"desktop\");\n    if ((0,_tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.isTelegramUrl)(universalLink())) {\n      onClickTelegram();\n    } else {\n      const forceRedirect = !firstClick();\n      setFirstClick(false);\n      redirectToWallet(universalLink(), props.wallet.deepLink, {\n        returnStrategy: appState.returnStrategy,\n        forceRedirect\n      }, (method) => {\n        setLastSelectedWalletInfo(__spreadProps(__spreadValues({}, props.wallet), {\n          openMethod: method\n        }));\n      });\n    }\n  };\n  const onClickTelegram = () => {\n    const forceRedirect = !firstClick();\n    setFirstClick(false);\n    setLastSelectedWalletInfo(__spreadProps(__spreadValues({}, props.wallet), {\n      openMethod: \"universal-link\"\n    }));\n    redirectToTelegram(universalLink(), {\n      returnStrategy: appState.returnStrategy,\n      twaReturnUrl: appState.twaReturnUrl,\n      forceRedirect\n    });\n  };\n  const onClickExtension = () => {\n    setConnectionErrored(null);\n    setMode(\"extension\");\n    if ((0,_tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.isWalletInfoCurrentlyInjected)(props.wallet)) {\n      setLastSelectedWalletInfo(props.wallet);\n      connector.connect({\n        jsBridgeKey: props.wallet.jsBridgeKey\n      }, props.additionalRequest);\n    }\n  };\n  if (supportsMobile(props.wallet)) {\n    onClickMobile();\n  } else if (supportsExtension(props.wallet)) {\n    onClickExtension();\n  } else {\n    onClickDesktop();\n  }\n  return createComponent(DesktopConnectionModalStyled, {\n    \"data-tc-wallets-modal-connection-desktop\": \"true\",\n    get children() {\n      return [createComponent(Show, {\n        get when() {\n          return !props.backDisabled;\n        },\n        get children() {\n          return createComponent(StyledIconButton$2, {\n            icon: \"arrow\",\n            onClick: () => props.onBackClick()\n          });\n        }\n      }), createComponent(H1Styled$6, {\n        get children() {\n          return props.wallet.name;\n        }\n      }), createComponent(Show, {\n        get when() {\n          return createMemo(() => mode() === \"mobile\")() && !connectionErrored();\n        },\n        get children() {\n          return createComponent(H2Styled$4, {\n            translationKey: \"walletModal.desktopConnectionModal.scanQR\",\n            get translationValues() {\n              return {\n                name: props.wallet.name\n              };\n            },\n            get children() {\n              return [\"Scan the QR code below with your phone\\u2019s or \", createMemo(() => props.wallet.name), \"\\u2019s camera\"];\n            }\n          });\n        }\n      }), createComponent(BodyStyled$1, {\n        get qr() {\n          return mode() === \"mobile\";\n        },\n        get children() {\n          return createComponent(Switch, {\n            get children() {\n              return [createComponent(Match, {\n                get when() {\n                  return connectionErrored();\n                },\n                get children() {\n                  return [createComponent(ErrorIconStyled$1, {\n                    size: \"s\"\n                  }), createComponent(Switch, {\n                    get children() {\n                      return [createComponent(Match, {\n                        get when() {\n                          return connectionErrored() === \"missing-features\";\n                        },\n                        get children() {\n                          return createComponent(BodyTextStyled$1, {\n                            translationKey: \"walletModal.desktopConnectionModal.missingFeatures\",\n                            get translationValues() {\n                              return {\n                                name: props.wallet.name\n                              };\n                            },\n                            children: \"Please update Wallet, your version does not support required features for this dApp\"\n                          });\n                        }\n                      }), createComponent(Match, {\n                        get when() {\n                          return connectionErrored() === \"connection-declined\";\n                        },\n                        get children() {\n                          return createComponent(BodyTextStyled$1, {\n                            translationKey: \"walletModal.desktopConnectionModal.connectionDeclined\",\n                            children: \"Connection declined\"\n                          });\n                        }\n                      }), createComponent(Match, {\n                        get when() {\n                          return connectionErrored() === \"not-supported\";\n                        },\n                        get children() {\n                          return createComponent(BodyTextStyled$1, {\n                            translationKey: \"walletModal.desktopConnectionModal.notSupportedWallet\",\n                            get translationValues() {\n                              return {\n                                name: props.wallet.name\n                              };\n                            },\n                            get children() {\n                              return [createMemo(() => props.wallet.name), \" doesn\\u2019t support the requested action. Please connect another wallet that supports it.\"];\n                            }\n                          });\n                        }\n                      })];\n                    }\n                  }), createComponent(ButtonsContainerStyled$1, {\n                    get children() {\n                      return [createComponent(Show, {\n                        get when() {\n                          return connectionErrored() !== \"not-supported\";\n                        },\n                        get children() {\n                          return createComponent(Button, {\n                            get leftIcon() {\n                              return createComponent(RetryIcon, {});\n                            },\n                            get onClick() {\n                              return mode() === \"extension\" ? onClickExtension : onClickDesktop;\n                            },\n                            get children() {\n                              return createComponent(Translation, {\n                                translationKey: \"common.retry\",\n                                children: \"Retry\"\n                              });\n                            }\n                          });\n                        }\n                      }), createComponent(Show, {\n                        get when() {\n                          return connectionErrored() === \"missing-features\";\n                        },\n                        get children() {\n                          return createComponent(Link, {\n                            get href() {\n                              return props.wallet.aboutUrl;\n                            },\n                            blank: true,\n                            get children() {\n                              return createComponent(Button, {\n                                get leftIcon() {\n                                  return createComponent(LinkIcon, {});\n                                },\n                                get children() {\n                                  return createComponent(Translation, {\n                                    translationKey: \"walletModal.desktopConnectionModal.updateWallet\",\n                                    get translationValues() {\n                                      return {\n                                        name: props.wallet.name\n                                      };\n                                    },\n                                    get children() {\n                                      return [\"Update \", createMemo(() => props.wallet.name)];\n                                    }\n                                  });\n                                }\n                              });\n                            }\n                          });\n                        }\n                      }), createComponent(Show, {\n                        get when() {\n                          return connectionErrored() === \"not-supported\";\n                        },\n                        get children() {\n                          return createComponent(Button, {\n                            onClick: () => props.onBackClick(),\n                            get children() {\n                              return createComponent(Translation, {\n                                translationKey: \"walletModal.desktopConnectionModal.chooseAnotherWallet\",\n                                children: \"Choose Another Wallet\"\n                              });\n                            }\n                          });\n                        }\n                      })];\n                    }\n                  })];\n                }\n              }), createComponent(Match, {\n                get when() {\n                  return mode() === \"mobile\";\n                },\n                get children() {\n                  return createComponent(QRCodeStyled$1, {\n                    disableCopy: false,\n                    get sourceUrl() {\n                      return addReturnStrategy(universalLink(), \"none\");\n                    },\n                    get imageUrl() {\n                      return props.wallet.imageUrl;\n                    }\n                  });\n                }\n              }), createComponent(Match, {\n                get when() {\n                  return mode() === \"extension\";\n                },\n                get children() {\n                  return [createComponent(Show, {\n                    get when() {\n                      return (0,_tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.isWalletInfoCurrentlyInjected)(props.wallet);\n                    },\n                    get children() {\n                      return [createComponent(LoaderStyled$1, {\n                        size: \"s\"\n                      }), createComponent(BodyTextStyled$1, {\n                        translationKey: \"walletModal.desktopConnectionModal.continueInExtension\",\n                        get translationValues() {\n                          return {\n                            name: props.wallet.name\n                          };\n                        },\n                        get children() {\n                          return [\"Continue in \", createMemo(() => props.wallet.name), \" browser extension\\u2026\"];\n                        }\n                      }), createComponent(ButtonsContainerStyled$1, {\n                        get children() {\n                          return createComponent(Button, {\n                            get leftIcon() {\n                              return createComponent(RetryIcon, {});\n                            },\n                            onClick: onClickExtension,\n                            get children() {\n                              return createComponent(Translation, {\n                                translationKey: \"common.retry\",\n                                children: \"Retry\"\n                              });\n                            }\n                          });\n                        }\n                      })];\n                    }\n                  }), createComponent(Show, {\n                    get when() {\n                      return !(0,_tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.isWalletInfoCurrentlyInjected)(props.wallet);\n                    },\n                    get children() {\n                      return [createComponent(BodyTextStyled$1, {\n                        translationKey: \"walletModal.desktopConnectionModal.dontHaveExtension\",\n                        get translationValues() {\n                          return {\n                            name: props.wallet.name\n                          };\n                        },\n                        get children() {\n                          return [\"Seems you don't have installed \", createMemo(() => props.wallet.name), \" browser extension\"];\n                        }\n                      }), createComponent(ButtonsContainerStyled$1, {\n                        get children() {\n                          return createComponent(Link, {\n                            get href() {\n                              return props.wallet.aboutUrl;\n                            },\n                            blank: true,\n                            get children() {\n                              return createComponent(Button, {\n                                get rightIcon() {\n                                  return createComponent(LinkIcon, {});\n                                },\n                                onClick: onClickExtension,\n                                get children() {\n                                  return createComponent(Translation, {\n                                    translationKey: \"walletModal.desktopConnectionModal.getWallet\",\n                                    get translationValues() {\n                                      return {\n                                        name: props.wallet.name\n                                      };\n                                    },\n                                    get children() {\n                                      return [\"Get \", createMemo(() => props.wallet.name)];\n                                    }\n                                  });\n                                }\n                              });\n                            }\n                          });\n                        }\n                      })];\n                    }\n                  })];\n                }\n              }), createComponent(Match, {\n                get when() {\n                  return mode() === \"desktop\";\n                },\n                get children() {\n                  return [createComponent(LoaderIcon, {\n                    size: \"m\"\n                  }), createComponent(BodyTextStyled$1, {\n                    translationKey: \"walletModal.desktopConnectionModal.continueOnDesktop\",\n                    get translationValues() {\n                      return {\n                        name: props.wallet.name\n                      };\n                    },\n                    get children() {\n                      return [\"Continue in \", createMemo(() => props.wallet.name), \" on desktop\\u2026\"];\n                    }\n                  }), createComponent(ButtonsContainerStyled$1, {\n                    get children() {\n                      return [createComponent(Button, {\n                        get leftIcon() {\n                          return createComponent(RetryIcon, {});\n                        },\n                        onClick: onClickDesktop,\n                        get children() {\n                          return createComponent(Translation, {\n                            translationKey: \"common.retry\",\n                            children: \"Retry\"\n                          });\n                        }\n                      }), createComponent(Link, {\n                        get href() {\n                          return props.wallet.aboutUrl;\n                        },\n                        blank: true,\n                        get children() {\n                          return createComponent(Button, {\n                            get rightIcon() {\n                              return createComponent(LinkIcon, {});\n                            },\n                            get children() {\n                              return createComponent(Translation, {\n                                translationKey: \"walletModal.desktopConnectionModal.getWallet\",\n                                get translationValues() {\n                                  return {\n                                    name: props.wallet.name\n                                  };\n                                },\n                                get children() {\n                                  return [\"Get \", createMemo(() => props.wallet.name)];\n                                }\n                              });\n                            }\n                          });\n                        }\n                      })];\n                    }\n                  })];\n                }\n              })];\n            }\n          });\n        }\n      }), createComponent(Show, {\n        get when() {\n          return props.wallet.appName === AT_WALLET_APP_NAME;\n        },\n        get children() {\n          return createComponent(TgButtonStyled, {\n            get rightIcon() {\n              return createComponent(TgImageStyled, {\n                get src() {\n                  return IMG.TG;\n                }\n              });\n            },\n            scale: \"s\",\n            onClick: onClickTelegram,\n            get children() {\n              return createComponent(Translation, {\n                translationKey: \"walletModal.desktopConnectionModal.openWalletOnTelegram\",\n                children: \"Open Wallet in Telegram on desktop\"\n              });\n            }\n          });\n        }\n      }), createComponent(Show, {\n        get when() {\n          return props.wallet.appName !== AT_WALLET_APP_NAME;\n        },\n        get children() {\n          return createComponent(BottomButtonsContainerStyled, {\n            get children() {\n              return [createComponent(Show, {\n                get when() {\n                  return createMemo(() => mode() !== \"mobile\")() && supportsMobile(props.wallet);\n                },\n                get children() {\n                  return createComponent(FooterButton$1, {\n                    appearance: \"secondary\",\n                    get leftIcon() {\n                      return createComponent(MobileIcon, {});\n                    },\n                    onClick: onClickMobile,\n                    get children() {\n                      return createComponent(Translation, {\n                        translationKey: \"common.mobile\",\n                        children: \"Mobile\"\n                      });\n                    }\n                  });\n                }\n              }), createComponent(Show, {\n                get when() {\n                  return createMemo(() => mode() !== \"extension\")() && supportsExtension(props.wallet);\n                },\n                get children() {\n                  return createComponent(FooterButton$1, {\n                    appearance: \"secondary\",\n                    get leftIcon() {\n                      return createComponent(BrowserIcon, {});\n                    },\n                    onClick: onClickExtension,\n                    get children() {\n                      return createComponent(Translation, {\n                        translationKey: \"common.browserExtension\",\n                        children: \"Browser Extension\"\n                      });\n                    }\n                  });\n                }\n              }), createComponent(Show, {\n                get when() {\n                  return createMemo(() => mode() !== \"desktop\")() && supportsDesktop(props.wallet);\n                },\n                get children() {\n                  return createComponent(FooterButton$1, {\n                    appearance: \"secondary\",\n                    get leftIcon() {\n                      return createComponent(DesktopIcon, {});\n                    },\n                    onClick: onClickDesktop,\n                    get children() {\n                      return createComponent(Translation, {\n                        translationKey: \"common.desktop\",\n                        children: \"Desktop\"\n                      });\n                    }\n                  });\n                }\n              })];\n            }\n          });\n        }\n      })];\n    }\n  });\n};\nconst InfoModalStyled = styled.div``;\nconst StyledIconButton$1 = styled(IconButton)`\n    position: absolute;\n    top: 16px;\n    left: 16px;\n`;\nconst H1Styled$5 = styled(H1)`\n    margin-bottom: 18px;\n`;\nconst InfoBlock = styled.div`\n    padding: 16px 0;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n`;\nconst InfoBlockIconClass = u`\n    margin-bottom: 12px;\n`;\nconst H3Styled = styled(H3)`\n    text-align: center;\n    margin-bottom: 4px;\n`;\nconst TextStyled$1 = styled(Text)`\n    text-align: center;\n    max-width: 352px;\n    color: ${(props) => props.theme.colors.text.secondary};\n`;\nconst ButtonsBlock = styled.div`\n    padding: 16px 24px 24px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    gap: 8px;\n`;\nconst LINKS = {\n  GET_A_WALLET: \"https://ton.org/wallets?filters[wallet_features][slug][$in]=dapp-auth&pagination[limit]=-1\"\n};\nconst InfoModal = (props) => {\n  return createComponent(InfoModalStyled, {\n    \"data-tc-wallets-modal-info\": \"true\",\n    get children() {\n      return [createComponent(StyledIconButton$1, {\n        icon: \"arrow\",\n        onClick: () => props.onBackClick()\n      }), createComponent(H1Styled$5, {\n        translationKey: \"walletModal.infoModal.whatIsAWallet\",\n        children: \"What is a wallet\"\n      }), createComponent(ScrollContainer, {\n        get children() {\n          return [createComponent(InfoBlock, {\n            get children() {\n              return [createComponent(SecurityIcon, {\n                \"class\": InfoBlockIconClass\n              }), createComponent(H3Styled, {\n                translationKey: \"walletModal.infoModal.secureDigitalAssets\",\n                children: \"Secure digital assets storage\"\n              }), createComponent(TextStyled$1, {\n                translationKey: \"walletModal.infoModal.walletProtects\",\n                children: \"A wallet protects and manages your digital assets including TON, tokens and collectables.\"\n              })];\n            }\n          }), createComponent(InfoBlock, {\n            get children() {\n              return [createComponent(PersonalityIcon, {\n                \"class\": InfoBlockIconClass\n              }), createComponent(H3Styled, {\n                translationKey: \"walletModal.infoModal.controlIdentity\",\n                children: \"Control your Web3 identity\"\n              }), createComponent(TextStyled$1, {\n                translationKey: \"walletModal.infoModal.manageIdentity\",\n                children: \"Manage your digital identity and access decentralized applications with ease. Maintain control over your data and engage securely in the blockchain ecosystem.\"\n              })];\n            }\n          }), createComponent(InfoBlock, {\n            get children() {\n              return [createComponent(SwapIcon, {\n                \"class\": InfoBlockIconClass\n              }), createComponent(H3Styled, {\n                translationKey: \"walletModal.infoModal.effortlessCryptoTransactions\",\n                children: \"Effortless crypto transactions\"\n              }), createComponent(TextStyled$1, {\n                translationKey: \"walletModal.infoModal.easilySend\",\n                children: \"Easily send, receive, monitor your cryptocurrencies. Streamline your operations with decentralized applications.\"\n              })];\n            }\n          }), createComponent(ButtonsBlock, {\n            get children() {\n              return createComponent(Link, {\n                get href() {\n                  return LINKS.GET_A_WALLET;\n                },\n                blank: true,\n                get children() {\n                  return createComponent(Button, {\n                    get rightIcon() {\n                      return createComponent(WalletIcon, {});\n                    },\n                    get children() {\n                      return createComponent(Translation, {\n                        translationKey: \"walletModal.infoModal.getAWallet\",\n                        children: \"Get a Wallet\"\n                      });\n                    }\n                  });\n                }\n              });\n            }\n          })];\n        }\n      })];\n    }\n  });\n};\nconst MobileConnectionModalStyled = styled.div``;\nconst BodyStyled = styled.div`\n    flex: 1;\n    margin-top: 18px;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    min-height: 232px;\n`;\nconst H1Styled$4 = styled(H1)`\n    max-width: 262px;\n    margin: 0 auto 8px;\n`;\nconst StyledIconButton = styled(IconButton)`\n    position: absolute;\n    top: 16px;\n    left: 16px;\n`;\nconst FooterStyled = styled.div`\n    padding: 16px;\n    display: flex;\n    align-items: center;\n    gap: 12px;\n    border-top: 0.5px solid ${(props) => rgba(props.theme.colors.icon.secondary, 0.2)};\n`;\nconst ImageStyled = styled(Image)`\n    width: 36px;\n    height: 36px;\n    border-radius: 10px;\n`;\nconst FooterButton = styled(Link)`\n    margin-left: auto;\n`;\nconst LoaderStyled = styled(LoaderIcon)`\n    margin-bottom: 18px;\n    margin-top: 2px;\n`;\nconst ErrorIconStyled = styled(ErrorIcon)`\n    margin-bottom: 16px;\n`;\nconst BodyTextStyled = styled(H2)`\n    color: ${(props) => props.theme.colors.text.secondary};\n    text-align: center;\n    margin-bottom: 20px;\n`;\nconst ButtonsContainerStyled = styled.div`\n    display: flex;\n    justify-content: center;\n    gap: 8px;\n    padding-bottom: 16px;\n`;\nconst actionButtonBorderRadius$1 = {\n  m: \"16px\",\n  s: \"8px\",\n  none: \"0\"\n};\nconst H1Styled$3 = styled(H1)`\n    margin-bottom: 2px;\n    padding: 0 52px;\n`;\nconst H2Styled$3 = styled(H2)`\n    margin-bottom: 20px;\n    padding: 0 64px;\n`;\nconst QrCodeWrapper$1 = styled.div`\n    padding: 0 24px 16px;\n`;\nconst ButtonsWrapper$1 = styled.div`\n    display: flex;\n    flex-direction: row;\n    gap: 16px;\n    padding: 0 24px 24px;\n    margin-top: 0;\n`;\nconst ActionButton$1 = styled(Button)`\n    width: 100%;\n    height: 56px;\n    border-radius: ${(props) => actionButtonBorderRadius$1[props.theme.borderRadius]};\n    background-color: ${(props) => rgba(props.theme.colors.accent, 0.12)};\n    color: ${(props) => props.theme.colors.accent};\n    font-size: 16px;\n    line-height: 20px;\n    font-weight: 500;\n    padding: 17px 20px 19px 20px;\n`;\nconst MobileConnectionQR = (props) => {\n  return [createComponent(H1Styled$3, {\n    get children() {\n      return props.walletInfo.name;\n    }\n  }), createComponent(H2Styled$3, {\n    translationKey: \"walletModal.mobileConnectionModal.scanQR\",\n    get translationValues() {\n      return {\n        name: props.walletInfo.name\n      };\n    },\n    get children() {\n      return [\"Scan the QR code below with your phone\\u2019s or \", createMemo(() => props.walletInfo.name), \"\\u2019s camera\"];\n    }\n  }), createComponent(QrCodeWrapper$1, {\n    get children() {\n      return createComponent(QRCode, {\n        get imageUrl() {\n          return props.walletInfo.imageUrl;\n        },\n        get sourceUrl() {\n          return addReturnStrategy(props.universalLink, \"none\");\n        },\n        disableCopy: true\n      });\n    }\n  }), createComponent(ButtonsWrapper$1, {\n    get children() {\n      return [createComponent(ActionButton$1, {\n        appearance: \"secondary\",\n        onClick: () => {\n          var _a2;\n          return (_a2 = props.onOpenLink) == null ? void 0 : _a2.call(props);\n        },\n        get children() {\n          return createComponent(Translation, {\n            translationKey: \"walletModal.mobileUniversalModal.openLink\",\n            children: \"Open Link\"\n          });\n        }\n      }), createComponent(ActionButton$1, {\n        appearance: \"secondary\",\n        onClick: () => {\n          var _a2;\n          return (_a2 = props.onCopy) == null ? void 0 : _a2.call(props);\n        },\n        get children() {\n          return createComponent(Translation, {\n            get translationKey() {\n              return props.isCopiedShown !== void 0 ? \"common.copied\" : \"common.copyLink\";\n            },\n            get children() {\n              return props.isCopiedShown !== void 0 ? \"Copied\" : \"Copy Link\";\n            }\n          });\n        }\n      })];\n    }\n  })];\n};\nconst MobileConnectionModal = (props) => {\n  const theme = useTheme();\n  const [firstClick, setFirstClick] = createSignal(true);\n  const [showQR, setShowQR] = createSignal(false);\n  const [connectionErrored, setConnectionErrored] = createSignal(null);\n  createEffect(() => {\n    var _a2;\n    setConnectionErrored((_a2 = props.defaultError) != null ? _a2 : null);\n  });\n  const connector = useContext(ConnectorContext);\n  const unsubscribe = connector.onStatusChange(() => {\n  }, () => {\n    setConnectionErrored(null);\n  });\n  const universalLink = createMemo(() => connector.connect({\n    universalLink: props.wallet.universalLink,\n    bridgeUrl: props.wallet.bridgeUrl\n  }, props.additionalRequest));\n  const onClickTelegram = () => {\n    const alwaysForceRedirect = true;\n    setLastSelectedWalletInfo(__spreadProps(__spreadValues({}, props.wallet), {\n      openMethod: \"universal-link\"\n    }));\n    redirectToTelegram(universalLink(), {\n      returnStrategy: appState.returnStrategy,\n      twaReturnUrl: appState.twaReturnUrl,\n      forceRedirect: alwaysForceRedirect\n    });\n  };\n  const onRetry = () => {\n    const currentUniversalLink = universalLink();\n    if ((0,_tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.isTelegramUrl)(currentUniversalLink)) {\n      return onClickTelegram();\n    }\n    setConnectionErrored(null);\n    const forceRedirect = !firstClick();\n    setFirstClick(false);\n    redirectToWallet(universalLink(), props.wallet.deepLink, {\n      returnStrategy: appState.returnStrategy,\n      forceRedirect\n    }, (method) => {\n      setLastSelectedWalletInfo(__spreadProps(__spreadValues({}, props.wallet), {\n        openMethod: method\n      }));\n    });\n  };\n  const [isCopiedShown, setIsCopiedShown] = createSignal(void 0);\n  const onCopy = () => __async(void 0, null, function* () {\n    if (isCopiedShown() !== void 0) {\n      clearTimeout(isCopiedShown());\n    }\n    yield copyToClipboard(universalLink());\n    const timeoutId = setTimeout(() => setIsCopiedShown(void 0), 1500);\n    setIsCopiedShown(timeoutId);\n  });\n  const onOpenQR = () => {\n    setConnectionErrored(null);\n    setShowQR(true);\n    setLastSelectedWalletInfo(__spreadProps(__spreadValues({}, props.wallet), {\n      openMethod: \"qrcode\"\n    }));\n  };\n  const onCloseQR = () => {\n    setShowQR(false);\n    setLastSelectedWalletInfo(__spreadProps(__spreadValues({}, props.wallet), {\n      openMethod: \"universal-link\"\n    }));\n  };\n  const onBack = () => {\n    if (showQR()) {\n      onCloseQR();\n    } else {\n      props.onBackClick();\n    }\n  };\n  onCleanup(unsubscribe);\n  onRetry();\n  return createComponent(MobileConnectionModalStyled, {\n    \"data-tc-wallets-modal-connection-mobile\": \"true\",\n    get children() {\n      return [createComponent(Show, {\n        get when() {\n          return !props.backDisabled || showQR();\n        },\n        get children() {\n          return createComponent(StyledIconButton, {\n            icon: \"arrow\",\n            onClick: onBack\n          });\n        }\n      }), createComponent(Show, {\n        get when() {\n          return showQR();\n        },\n        get children() {\n          return createComponent(MobileConnectionQR, {\n            get universalLink() {\n              return universalLink();\n            },\n            get walletInfo() {\n              return props.wallet;\n            },\n            onOpenLink: onRetry,\n            onCopy,\n            get isCopiedShown() {\n              return isCopiedShown();\n            }\n          });\n        }\n      }), createComponent(Show, {\n        get when() {\n          return !showQR();\n        },\n        get children() {\n          return [createComponent(H1Styled$4, {\n            get children() {\n              return props.wallet.name;\n            }\n          }), createComponent(BodyStyled, {\n            get children() {\n              return [createComponent(Show, {\n                get when() {\n                  return connectionErrored();\n                },\n                get children() {\n                  return [createComponent(ErrorIconStyled, {\n                    size: \"s\"\n                  }), createComponent(Switch, {\n                    get children() {\n                      return [createComponent(Match, {\n                        get when() {\n                          return connectionErrored() === \"missing-features\";\n                        },\n                        get children() {\n                          return createComponent(BodyTextStyled, {\n                            translationKey: \"walletModal.mobileConnectionModal.missingFeatures\",\n                            get translationValues() {\n                              return {\n                                name: props.wallet.name\n                              };\n                            },\n                            children: \"Please update Wallet, your version does not support required features for this dApp\"\n                          });\n                        }\n                      }), createComponent(Match, {\n                        get when() {\n                          return connectionErrored() === \"connection-declined\";\n                        },\n                        get children() {\n                          return createComponent(BodyTextStyled, {\n                            translationKey: \"walletModal.mobileConnectionModal.connectionDeclined\",\n                            children: \"Connection declined\"\n                          });\n                        }\n                      }), createComponent(Match, {\n                        get when() {\n                          return connectionErrored() === \"not-supported\";\n                        },\n                        get children() {\n                          return createComponent(BodyTextStyled, {\n                            translationKey: \"walletModal.mobileConnectionModal.notSupportedWallet\",\n                            get translationValues() {\n                              return {\n                                name: props.wallet.name\n                              };\n                            },\n                            get children() {\n                              return [createMemo(() => props.wallet.name), \" doesn\\u2019t support the requested action. Please connect another wallet that supports it.\"];\n                            }\n                          });\n                        }\n                      })];\n                    }\n                  }), createComponent(ButtonsContainerStyled, {\n                    get children() {\n                      return createComponent(Switch, {\n                        get children() {\n                          return [createComponent(Match, {\n                            get when() {\n                              return connectionErrored() === \"missing-features\";\n                            },\n                            get children() {\n                              return [createComponent(Button, {\n                                get leftIcon() {\n                                  return createComponent(RetryIcon, {});\n                                },\n                                onClick: onRetry,\n                                get children() {\n                                  return createComponent(Translation, {\n                                    translationKey: \"common.retry\",\n                                    children: \"Retry\"\n                                  });\n                                }\n                              }), createComponent(Link, {\n                                get href() {\n                                  return props.wallet.aboutUrl;\n                                },\n                                blank: true,\n                                get children() {\n                                  return createComponent(Button, {\n                                    get leftIcon() {\n                                      return createComponent(LinkIcon, {});\n                                    },\n                                    get children() {\n                                      return createComponent(Translation, {\n                                        translationKey: \"walletModal.mobileConnectionModal.updateWallet\",\n                                        get translationValues() {\n                                          return {\n                                            name: props.wallet.name\n                                          };\n                                        },\n                                        get children() {\n                                          return [\"Update \", createMemo(() => props.wallet.name)];\n                                        }\n                                      });\n                                    }\n                                  });\n                                }\n                              })];\n                            }\n                          }), createComponent(Match, {\n                            get when() {\n                              return connectionErrored() === \"not-supported\";\n                            },\n                            get children() {\n                              return createComponent(Button, {\n                                onClick: () => props.onBackClick(),\n                                get children() {\n                                  return createComponent(Translation, {\n                                    translationKey: \"walletModal.mobileConnectionModal.chooseAnotherWallet\",\n                                    children: \"Choose Another Wallet\"\n                                  });\n                                }\n                              });\n                            }\n                          }), createComponent(Match, {\n                            get when() {\n                              return connectionErrored() === \"connection-declined\";\n                            },\n                            get children() {\n                              return [createComponent(Button, {\n                                get leftIcon() {\n                                  return createComponent(RetryIcon, {});\n                                },\n                                onClick: onRetry,\n                                get children() {\n                                  return createComponent(Translation, {\n                                    translationKey: \"common.retry\",\n                                    children: \"Retry\"\n                                  });\n                                }\n                              }), createComponent(Button, {\n                                get leftIcon() {\n                                  return createComponent(QRIcon, {\n                                    get fill() {\n                                      return theme.colors.accent;\n                                    }\n                                  });\n                                },\n                                onClick: onOpenQR,\n                                get children() {\n                                  return createComponent(Translation, {\n                                    translationKey: \"walletModal.mobileConnectionModal.showQR\",\n                                    children: \"Show QR Code\"\n                                  });\n                                }\n                              })];\n                            }\n                          })];\n                        }\n                      });\n                    }\n                  })];\n                }\n              }), createComponent(Show, {\n                get when() {\n                  return !connectionErrored();\n                },\n                get children() {\n                  return [createComponent(LoaderStyled, {\n                    size: \"s\"\n                  }), createComponent(BodyTextStyled, {\n                    translationKey: \"walletModal.mobileConnectionModal.continueIn\",\n                    get translationValues() {\n                      return {\n                        name: props.wallet.name\n                      };\n                    },\n                    get children() {\n                      return [\"Continue in \", createMemo(() => props.wallet.name), \"\\u2026\"];\n                    }\n                  }), createComponent(ButtonsContainerStyled, {\n                    get children() {\n                      return [createComponent(Button, {\n                        get leftIcon() {\n                          return createComponent(RetryIcon, {});\n                        },\n                        onClick: onRetry,\n                        get children() {\n                          return createComponent(Translation, {\n                            translationKey: \"common.retry\",\n                            children: \"Retry\"\n                          });\n                        }\n                      }), createComponent(Button, {\n                        get leftIcon() {\n                          return createComponent(QRIcon, {\n                            get fill() {\n                              return theme.colors.accent;\n                            }\n                          });\n                        },\n                        onClick: onOpenQR,\n                        get children() {\n                          return createComponent(Translation, {\n                            translationKey: \"walletModal.mobileConnectionModal.showQR\",\n                            children: \"Show QR Code\"\n                          });\n                        }\n                      })];\n                    }\n                  })];\n                }\n              })];\n            }\n          }), createComponent(FooterStyled, {\n            get children() {\n              return [createComponent(ImageStyled, {\n                get src() {\n                  return props.wallet.imageUrl;\n                }\n              }), createComponent(H3, {\n                get children() {\n                  return props.wallet.name;\n                }\n              }), createComponent(FooterButton, {\n                get href() {\n                  return props.wallet.aboutUrl;\n                },\n                blank: true,\n                get children() {\n                  return createComponent(Button, {\n                    get children() {\n                      return createComponent(Translation, {\n                        translationKey: \"common.get\",\n                        children: \"GET\"\n                      });\n                    }\n                  });\n                }\n              })];\n            }\n          })];\n        }\n      })];\n    }\n  });\n};\nconst borders$1 = {\n  m: \"16px\",\n  s: \"12px\",\n  none: \"0\"\n};\nconst tgBorders = {\n  m: \"6px\",\n  s: \"6px\",\n  none: \"0\"\n};\nstyled.li`\n    width: 82px;\n    min-width: 82px;\n    height: 124px;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    padding: 8px 4px;\n\n    text-align: center;\n    cursor: pointer;\n\n    transition: transform 0.1s ease-in-out;\n\n    ${mediaNotTouch} {\n        &:hover {\n            transform: scale(1.04);\n        }\n    }\n\n    &:active {\n        transform: scale(0.96);\n    }\n\n    ${mediaTouch} {\n        &:active {\n            transform: scale(0.92);\n        }\n    }\n`;\nconst H1Styled$2 = styled(H1)`\n    margin-top: 38px;\n    margin-bottom: 4px;\n    padding: 0 24px;\n`;\nconst H2Styled$2 = styled(H2)`\n    margin: ${(props) => {\n  var _a2;\n  return (_a2 = props.margin) != null ? _a2 : \"0 0 28px 0\";\n}};\n    padding: ${(props) => {\n  var _a2;\n  return (_a2 = props.padding) != null ? _a2 : \"0 24px\";\n}};\n    min-height: ${(props) => {\n  var _a2;\n  return (_a2 = props.padding) != null ? _a2 : \"44px\";\n}};\n    max-width: ${(props) => props.maxWidth}px;\n    margin-left: ${(props) => props.maxWidth ? \"auto\" : \"0px\"};\n    margin-right: ${(props) => props.maxWidth ? \"auto\" : \"0px\"};\n`;\nstyled(Button)`\n    display: block;\n    margin: 0 auto;\n`;\nconst TelegramButtonStyled = styled(Button)`\n    margin: 0 28px 24px;\n    width: calc(100% - 56px);\n    border-radius: ${(props) => borders$1[props.theme.borderRadius]};\n    padding: 14px 16px 14px 14px;\n    background-color: ${(props) => props.theme.colors.telegramButton};\n\n    color: ${(props) => props.theme.colors.constant.white};\n    font-weight: 500;\n    font-size: 16px;\n    line-height: 20px;\n\n    @media (max-width: 375px) {\n        margin: 0 16px 24px;\n        width: calc(100% - 32px);\n    }\n`;\nconst TGImageStyled = styled(Image)`\n    background-color: transparent;\n    border-radius: ${(props) => tgBorders[props.theme.borderRadius]};\n    width: 24px;\n    height: 24px;\n`;\nconst StyledLeftActionButton = styled(IconButton)`\n    position: absolute;\n    top: 16px;\n    left: 16px;\n`;\nconst actionButtonBorderRadius = {\n  m: \"16px\",\n  s: \"8px\",\n  none: \"0\"\n};\nconst H1Styled$1 = styled(H1)`\n    margin-bottom: 2px;\n    padding: 0 52px;\n`;\nconst H2Styled$1 = styled(H2)`\n    margin-bottom: 20px;\n    padding: 0 64px;\n`;\nconst QrCodeWrapper = styled.div`\n    padding: 0 24px 16px;\n`;\nconst ButtonsWrapper = styled.div`\n    display: flex;\n    flex-direction: row;\n    gap: 16px;\n    padding: 0 24px 24px;\n    margin-top: 0;\n`;\nconst ActionButton = styled(Button)`\n    width: 100%;\n    height: 56px;\n    border-radius: ${(props) => actionButtonBorderRadius[props.theme.borderRadius]};\n    background-color: ${(props) => rgba(props.theme.colors.accent, 0.12)};\n    color: ${(props) => props.theme.colors.accent};\n    font-size: 16px;\n    line-height: 20px;\n    font-weight: 500;\n    padding: 17px 20px 19px 20px;\n`;\nconst MobileUniversalQR = (props) => {\n  return [createComponent(H1Styled$1, {\n    translationKey: \"walletModal.mobileUniversalModal.connectYourWallet\",\n    children: \"Connect your TON wallet\"\n  }), createComponent(H2Styled$1, {\n    translationKey: \"walletModal.mobileUniversalModal.scan\",\n    children: \"Scan with your mobile wallet\"\n  }), createComponent(QrCodeWrapper, {\n    get children() {\n      return createComponent(QRCode, {\n        get imageUrl() {\n          return IMG.TON;\n        },\n        get sourceUrl() {\n          return addReturnStrategy(props.universalLink, \"none\");\n        },\n        disableCopy: true\n      });\n    }\n  }), createComponent(ButtonsWrapper, {\n    get children() {\n      return [createComponent(ActionButton, {\n        appearance: \"secondary\",\n        onClick: () => props.onOpenLink(),\n        get children() {\n          return createComponent(Translation, {\n            translationKey: \"walletModal.mobileUniversalModal.openLink\",\n            children: \"Open Link\"\n          });\n        }\n      }), createComponent(ActionButton, {\n        appearance: \"secondary\",\n        onClick: () => props.onCopy(),\n        get children() {\n          return createComponent(Translation, {\n            get translationKey() {\n              return props.isCopiedShown !== void 0 ? \"common.copied\" : \"common.copyLink\";\n            },\n            get children() {\n              return props.isCopiedShown !== void 0 ? \"Copied\" : \"Copy Link\";\n            }\n          });\n        }\n      })];\n    }\n  })];\n};\nfunction getUniqueBridges(walletsList) {\n  const uniqueBridges = new Set(\n    walletsList.filter(_tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.isWalletInfoRemote).map((item) => item.bridgeUrl)\n  );\n  return Array.from(uniqueBridges).map((bridgeUrl) => ({ bridgeUrl }));\n}\nfunction bridgesIsEqual(left, right) {\n  const leftSet = new Set(left == null ? void 0 : left.map((i2) => i2.bridgeUrl));\n  const rightSet = new Set(right == null ? void 0 : right.map((i2) => i2.bridgeUrl));\n  return leftSet.size === rightSet.size && [...leftSet].every((value) => rightSet.has(value));\n}\nconst _tmpl$$1 = /* @__PURE__ */ template$1(`<li></li>`), _tmpl$2 = /* @__PURE__ */ template$1(`<div data-tc-wallets-modal-universal-mobile=\"true\"></div>`);\nconst MobileUniversalModal = (props) => {\n  const [showQR, setShowQR] = createSignal(false);\n  const [firstClick, setFirstClick] = createSignal(true);\n  const [universalLink, setUniversalLink] = createSignal(null);\n  const connector = appState.connector;\n  const walletsList = () => props.walletsList.filter((w) => supportsMobile(w) && w.appName !== AT_WALLET_APP_NAME);\n  const shouldShowMoreButton = () => walletsList().length > 7;\n  const walletsBridges = createMemo(() => getUniqueBridges(props.walletsList), null, {\n    equals: bridgesIsEqual\n  });\n  const atWalletSupportFeatures = createMemo(() => {\n    var _a2, _b2;\n    return (_b2 = (_a2 = props.walletsList.find((wallet) => wallet.appName === AT_WALLET_APP_NAME)) == null ? void 0 : _a2.isSupportRequiredFeatures) != null ? _b2 : false;\n  }, null);\n  const getUniversalLink = () => {\n    if (!universalLink()) {\n      setUniversalLink(connector.connect(walletsBridges(), props.additionalRequest));\n    }\n    return universalLink();\n  };\n  setLastSelectedWalletInfo({\n    openMethod: \"universal-link\"\n  });\n  const [isCopiedShown, setIsCopiedShown] = createSignal(void 0);\n  const onCopy = () => __async(void 0, null, function* () {\n    if (isCopiedShown() !== void 0) {\n      clearTimeout(isCopiedShown());\n    }\n    yield copyToClipboard(getUniversalLink());\n    const timeoutId = setTimeout(() => setIsCopiedShown(void 0), 1500);\n    setIsCopiedShown(timeoutId);\n  });\n  const onSelectUniversal = () => {\n    const forceRedirect = !firstClick();\n    setFirstClick(false);\n    redirectToWallet(getUniversalLink(), void 0, {\n      returnStrategy: appState.returnStrategy,\n      forceRedirect\n    }, (method) => {\n      setLastSelectedWalletInfo({\n        openMethod: method\n      });\n    });\n  };\n  const onSelectTelegram = () => {\n    setUniversalLink(null);\n    const atWallet = props.walletsList.find((wallet) => wallet.appName === AT_WALLET_APP_NAME);\n    if (!atWallet || !(0,_tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.isWalletInfoRemote)(atWallet)) {\n      throw new TonConnectUIError(\"@wallet bot not found in the wallets list\");\n    }\n    const walletLink = connector.connect({\n      bridgeUrl: atWallet.bridgeUrl,\n      universalLink: atWallet.universalLink\n    }, props.additionalRequest);\n    const forceRedirect = !firstClick();\n    setFirstClick(false);\n    redirectToTelegram(walletLink, {\n      returnStrategy: appState.returnStrategy,\n      twaReturnUrl: appState.twaReturnUrl,\n      forceRedirect\n    });\n  };\n  const onOpenQR = () => {\n    setShowQR(true);\n    setLastSelectedWalletInfo({\n      openMethod: \"qrcode\"\n    });\n  };\n  const onCloseQR = () => {\n    setShowQR(false);\n    setLastSelectedWalletInfo({\n      openMethod: \"universal-link\"\n    });\n  };\n  const supportedWallets = createMemo(() => walletsList().filter((wallet) => wallet.isSupportRequiredFeatures), null);\n  const visibleWallets = createMemo(() => supportedWallets().slice(0, 3), null);\n  const fourWalletsItem = createMemo(() => walletsList().filter((wallet) => !visibleWallets().find((w) => w.appName === wallet.appName)).slice(0, 4), null);\n  return (() => {\n    const _el$ = _tmpl$2.cloneNode(true);\n    insert(_el$, createComponent(Show, {\n      get when() {\n        return showQR();\n      },\n      get children() {\n        return [createComponent(StyledLeftActionButton, {\n          icon: \"arrow\",\n          onClick: onCloseQR\n        }), createComponent(MobileUniversalQR, {\n          get universalLink() {\n            return getUniversalLink();\n          },\n          get isCopiedShown() {\n            return isCopiedShown();\n          },\n          onOpenLink: onSelectUniversal,\n          onCopy\n        })];\n      }\n    }), null);\n    insert(_el$, createComponent(Show, {\n      get when() {\n        return !showQR();\n      },\n      get children() {\n        return [createComponent(StyledLeftActionButton, {\n          get icon() {\n            return createComponent(QRIcon, {});\n          },\n          onClick: onOpenQR\n        }), createComponent(H1Styled$2, {\n          translationKey: \"walletModal.mobileUniversalModal.connectYourWallet\",\n          children: \"Connect your TON wallet\"\n        }), createComponent(Show, {\n          get when() {\n            return atWalletSupportFeatures();\n          },\n          get children() {\n            return [createComponent(H2Styled$2, {\n              translationKey: \"walletModal.mobileUniversalModal.openWalletOnTelegramOrSelect\",\n              maxWidth: 320,\n              children: \"Use Wallet in Telegram or choose other application\"\n            }), createComponent(TelegramButtonStyled, {\n              get leftIcon() {\n                return createComponent(AtWalletIcon, {});\n              },\n              get rightIcon() {\n                return createComponent(TGImageStyled, {\n                  get src() {\n                    return IMG.TG;\n                  }\n                });\n              },\n              onClick: onSelectTelegram,\n              scale: \"s\",\n              get children() {\n                return createComponent(Translation, {\n                  translationKey: \"walletModal.mobileUniversalModal.openWalletOnTelegram\",\n                  children: \"Connect Wallet in Telegram\"\n                });\n              }\n            })];\n          }\n        }), createComponent(H2Styled$2, {\n          translationKey: \"walletModal.mobileUniversalModal.chooseOtherApplication\",\n          maxWidth: 342,\n          padding: \"0 24px 8px 24px\",\n          margin: \"0\",\n          children: \"Choose other application\"\n        }), createComponent(WalletUlContainer, {\n          get children() {\n            return [createComponent(For, {\n              get each() {\n                return createMemo(() => !!shouldShowMoreButton())() ? visibleWallets() : supportedWallets();\n              },\n              children: (wallet) => (() => {\n                const _el$3 = _tmpl$$1.cloneNode(true);\n                insert(_el$3, createComponent(WalletItem, {\n                  get icon() {\n                    return wallet.imageUrl;\n                  },\n                  get name() {\n                    return wallet.name;\n                  },\n                  onClick: () => props.onSelect(wallet)\n                }));\n                return _el$3;\n              })()\n            }), createComponent(Show, {\n              get when() {\n                return shouldShowMoreButton();\n              },\n              get children() {\n                const _el$2 = _tmpl$$1.cloneNode(true);\n                insert(_el$2, createComponent(FourWalletsItem, {\n                  labelLine1: \"View all\",\n                  labelLine2: \"wallets\",\n                  get images() {\n                    return fourWalletsItem().map((i2) => i2.imageUrl);\n                  },\n                  onClick: () => props.onSelectAllWallets()\n                }));\n                return _el$2;\n              }\n            })];\n          }\n        })];\n      }\n    }), null);\n    return _el$;\n  })();\n};\nconst borders = {\n  m: \"16px\",\n  s: \"8px\",\n  none: \"0\"\n};\nconst hoverBorders = {\n  m: \"8px\",\n  s: \"4px\",\n  none: \"0\"\n};\nconst DesktopUniversalModalStyled = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    padding-bottom: 16px;\n`;\nconst H2Styled = styled(H2)`\n    max-width: 320px;\n    margin-top: 2px;\n    margin-bottom: 20px;\n`;\nconst H2AvailableWalletsStyled = styled(H2)`\n    margin-bottom: 16px;\n`;\nconst QRCodeStyled = styled(QRCode)`\n    margin-bottom: 24px;\n`;\nconst WalletsContainerStyled = styled.ul`\n    display: flex;\n`;\nstyled.div`\n    display: flex;\n    gap: 16px;\n    width: 100%;\n`;\nstyled(Button)`\n    position: relative;\n    font-size: 16px;\n    line-height: 20px;\n    width: 100%;\n    padding: 0 16px;\n    height: 56px;\n    border-radius: ${(props) => borders[props.theme.borderRadius]};\n\n    &:hover {\n        ${(props) => props.disableEventsAnimation ? \"transform: unset;\" : \"\"}\n    }\n\n    &:active {\n        ${(props) => props.disableEventsAnimation ? \"transform: unset;\" : \"\"}\n    }\n`;\nstyled.ul`\n    position: absolute;\n    bottom: 100%;\n    left: 0;\n    margin: 0;\n    padding: 8px;\n    width: 188px;\n    transform: translateY(-16px);\n\n    background-color: ${(props) => props.theme.colors.background.primary};\n    border-radius: ${(props) => borders[props.theme.borderRadius]};\n    box-shadow: 0 4px 24px rgba(0, 0, 0, 0.16);\n`;\nstyled.li`\n    padding: 8px;\n\n    display: flex;\n    align-items: center;\n    gap: 8px;\n\n    cursor: pointer;\n    border-radius: ${(props) => hoverBorders[props.theme.borderRadius]};\n\n    transition: background-color, transform 0.1s ease-in-out;\n\n    &:hover {\n        background-color: ${(props) => props.theme.colors.background.secondary};\n    }\n\n    &:active {\n        transform: scale(0.96);\n    }\n`;\nstyled(Image)`\n    width: 24px;\n    height: 24px;\n\n    border-radius: 6px;\n`;\nstyled.div`\n    margin-top: 23px;\n    margin-bottom: 1px;\n    width: 100%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n`;\nstyled(Text)`\n    color: ${(props) => props.theme.colors.text.secondary};\n    font-size: 16px;\n`;\nconst _tmpl$ = /* @__PURE__ */ template$1(`<li></li>`);\nconst DesktopUniversalModal = (props) => {\n  const [popupOpened, setPopupOpened] = createSignal(false);\n  const connector = appState.connector;\n  const walletsBridges = createMemo(() => getUniqueBridges(props.walletsList), null, {\n    equals: bridgesIsEqual\n  });\n  setLastSelectedWalletInfo({\n    openMethod: \"qrcode\"\n  });\n  const request = createMemo(() => connector.connect(walletsBridges(), props.additionalRequest));\n  const supportedWallets = createMemo(() => props.walletsList.filter((wallet) => wallet.isSupportRequiredFeatures), null);\n  const visibleWallets = createMemo(() => supportedWallets().slice(0, 3), null);\n  const fourWalletsItem = createMemo(() => props.walletsList.filter((wallet) => !visibleWallets().find((w) => w.appName === wallet.appName)).slice(0, 4), null);\n  return createComponent(DesktopUniversalModalStyled, {\n    onClick: () => setPopupOpened(false),\n    \"data-tc-wallets-modal-universal-desktop\": \"true\",\n    get children() {\n      return [createComponent(H1, {\n        translationKey: \"walletModal.desktopUniversalModal.connectYourWallet\",\n        children: \"Connect your wallet\"\n      }), createComponent(H2Styled, {\n        translationKey: \"walletModal.desktopUniversalModal.scan\",\n        children: \"Scan with your mobile wallet\"\n      }), createComponent(QRCodeStyled, {\n        get sourceUrl() {\n          return addReturnStrategy(request(), \"none\");\n        },\n        get disableCopy() {\n          return popupOpened();\n        },\n        get imageUrl() {\n          return IMG.TON;\n        }\n      }), createComponent(H2AvailableWalletsStyled, {\n        translationKey: \"walletModal.desktopUniversalModal.availableWallets\",\n        children: \"Available wallets\"\n      }), createComponent(WalletsContainerStyled, {\n        get children() {\n          return [createComponent(For, {\n            get each() {\n              return visibleWallets();\n            },\n            children: (wallet) => (() => {\n              const _el$ = _tmpl$.cloneNode(true);\n              insert(_el$, createComponent(WalletLabeledItem, {\n                wallet,\n                onClick: () => props.onSelect(wallet)\n              }));\n              return _el$;\n            })()\n          }), createComponent(FourWalletsItem, {\n            labelLine1: \"View all\",\n            labelLine2: \"wallets\",\n            get images() {\n              return fourWalletsItem().map((i2) => i2.imageUrl);\n            },\n            onClick: () => props.onSelectAllWallets()\n          })];\n        }\n      })];\n    }\n  });\n};\nconst WalletsModal = () => {\n  const {\n    locale\n  } = useI18n()[1];\n  createEffect(() => locale(appState.language));\n  createEffect(() => {\n    if (getWalletsModalIsOpened()) {\n      updateIsMobile();\n    } else {\n      setSelectedWalletInfo(null);\n      setSelectedTab(\"universal\");\n      setInfoTab(false);\n    }\n  });\n  const connector = useContext(ConnectorContext);\n  const tonConnectUI = useContext(TonConnectUiContext);\n  const [fetchedWalletsList] = createResource(() => tonConnectUI.getWallets());\n  const [selectedWalletInfo, setSelectedWalletInfo] = createSignal(null);\n  const [selectedWalletError, setSelectedWalletError] = createSignal(null);\n  const [selectedTab, setSelectedTab] = createSignal(\"universal\");\n  const [infoTab, setInfoTab] = createSignal(false);\n  const walletsList = createMemo(() => {\n    if (fetchedWalletsList.state !== \"ready\") {\n      return null;\n    }\n    let walletsList2 = applyWalletsListConfiguration(fetchedWalletsList(), appState.walletsListConfiguration);\n    const injectedWallets = walletsList2.filter(_tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.isWalletInfoCurrentlyInjected);\n    const notInjectedWallets = walletsList2.filter((w) => !(0,_tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.isWalletInfoCurrentlyInjected)(w));\n    walletsList2 = (injectedWallets || []).concat(notInjectedWallets);\n    const preferredWalletAppName = appState.preferredWalletAppName;\n    const preferredWallet = walletsList2.find((item) => eqWalletName(item, preferredWalletAppName));\n    const someWalletsWithSameName = walletsList2.filter((item) => eqWalletName(item, preferredWalletAppName)).length >= 2;\n    if (preferredWalletAppName && preferredWallet && !someWalletsWithSameName) {\n      walletsList2 = [__spreadProps(__spreadValues({}, preferredWallet), {\n        isPreferred: true\n      })].concat(walletsList2.filter((item) => !eqWalletName(item, preferredWalletAppName)));\n    }\n    const atWallet = walletsList2.find((item) => eqWalletName(item, AT_WALLET_APP_NAME));\n    if (atWallet) {\n      walletsList2 = [atWallet].concat(walletsList2.filter((item) => !eqWalletName(item, AT_WALLET_APP_NAME)));\n    }\n    const uiWallets = walletsList2.map((wallet) => {\n      var _a2;\n      return __spreadProps(__spreadValues({}, wallet), {\n        isSupportRequiredFeatures: (tonConnectUI == null ? void 0 : tonConnectUI.walletsRequiredFeatures) ? (0,_tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.checkRequiredWalletFeatures)((_a2 = wallet.features) != null ? _a2 : [], tonConnectUI.walletsRequiredFeatures) : true\n      });\n    });\n    return uiWallets;\n  });\n  const additionalRequestLoading = () => {\n    var _a2;\n    return ((_a2 = appState.connectRequestParameters) == null ? void 0 : _a2.state) === \"loading\";\n  };\n  const additionalRequest = createMemo(() => {\n    var _a2;\n    if (additionalRequestLoading()) {\n      return void 0;\n    }\n    return (_a2 = appState.connectRequestParameters) == null ? void 0 : _a2.value;\n  });\n  const onClose = (closeReason) => {\n    tonConnectUI.closeModal(closeReason);\n  };\n  const unsubscribe = connector.onStatusChange((wallet) => {\n    if (wallet) {\n      onClose(\"wallet-selected\");\n    }\n  }, (err) => {\n    var _a2;\n    if (err instanceof _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.WalletMissingRequiredFeaturesError) {\n      const errorAppName = err.cause.connectEvent.device.appName.toLowerCase();\n      const wallet = (_a2 = walletsList()) == null ? void 0 : _a2.find((w) => w.appName.toLowerCase() === errorAppName);\n      if (!wallet) {\n        throw new _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.TonConnectError(\"Wallet not found\");\n      }\n      const walletErrorType = wallet.isSupportRequiredFeatures ? \"missing-features\" : \"not-supported\";\n      setSelectedWalletError(walletErrorType);\n      setSelectedWalletInfo(wallet);\n    }\n  });\n  const onSelectAllWallets = () => {\n    setSelectedTab(\"all-wallets\");\n  };\n  const onSelectUniversal = () => {\n    setSelectedTab(\"universal\");\n  };\n  const clearSelectedWalletInfo = () => {\n    setSelectedWalletInfo(null);\n    setSelectedWalletError(null);\n  };\n  onCleanup(() => {\n    setSelectedWalletInfo(null);\n    setSelectedWalletError(null);\n    setInfoTab(false);\n  });\n  onCleanup(unsubscribe);\n  return createComponent(StyledModal, {\n    get opened() {\n      return getWalletsModalIsOpened();\n    },\n    get enableAndroidBackHandler() {\n      return appState.enableAndroidBackHandler;\n    },\n    onClose: () => onClose(\"action-cancelled\"),\n    onClickQuestion: () => setInfoTab((v) => !v),\n    \"data-tc-wallets-modal-container\": \"true\",\n    get children() {\n      return [createComponent(Show, {\n        get when() {\n          return infoTab();\n        },\n        get children() {\n          return createComponent(InfoModal, {\n            onBackClick: () => setInfoTab(false)\n          });\n        }\n      }), createComponent(Show, {\n        get when() {\n          return !infoTab();\n        },\n        get children() {\n          return [createComponent(Show, {\n            get when() {\n              return additionalRequestLoading() || !walletsList();\n            },\n            get children() {\n              return [createComponent(H1Styled$8, {\n                translationKey: \"walletModal.loading\",\n                children: \"Wallets list is loading\"\n              }), createComponent(LoaderContainerStyled, {\n                get children() {\n                  return createComponent(LoaderIcon, {\n                    size: \"m\"\n                  });\n                }\n              })];\n            }\n          }), createComponent(Show, {\n            get when() {\n              return createMemo(() => !!!additionalRequestLoading())() && walletsList();\n            },\n            get children() {\n              return createComponent(Switch, {\n                get children() {\n                  return [createComponent(Match, {\n                    get when() {\n                      return selectedWalletInfo();\n                    },\n                    get children() {\n                      return createComponent(Dynamic, {\n                        get component() {\n                          return isMobile() ? MobileConnectionModal : DesktopConnectionModal;\n                        },\n                        get wallet() {\n                          return selectedWalletInfo();\n                        },\n                        get additionalRequest() {\n                          return additionalRequest();\n                        },\n                        onBackClick: clearSelectedWalletInfo,\n                        get defaultError() {\n                          return selectedWalletError();\n                        }\n                      });\n                    }\n                  }), createComponent(Match, {\n                    get when() {\n                      return selectedTab() === \"universal\";\n                    },\n                    get children() {\n                      return createComponent(Dynamic, {\n                        get component() {\n                          return isMobile() ? MobileUniversalModal : DesktopUniversalModal;\n                        },\n                        onSelect: setSelectedWalletInfo,\n                        get walletsList() {\n                          return walletsList();\n                        },\n                        get additionalRequest() {\n                          return additionalRequest();\n                        },\n                        onSelectAllWallets\n                      });\n                    }\n                  }), createComponent(Match, {\n                    get when() {\n                      return selectedTab() === \"all-wallets\";\n                    },\n                    get children() {\n                      return createComponent(AllWalletsListModal, {\n                        get walletsList() {\n                          return walletsList();\n                        },\n                        onBack: onSelectUniversal,\n                        onSelect: setSelectedWalletInfo\n                      });\n                    }\n                  })];\n                }\n              });\n            }\n          })];\n        }\n      })];\n    }\n  });\n};\nconst ActionModalStyled = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    padding-bottom: 8px;\n`;\nconst H1Styled = styled(H1)`\n    margin-top: 16px;\n`;\nconst TextStyled = styled(Text)`\n    font-weight: 510;\n    font-size: 16px;\n    line-height: 20px;\n    text-align: center;\n    max-width: 250px;\n\n    color: ${(props) => props.theme.colors.text.secondary};\n`;\nconst LoaderButtonStyled = styled(Button)`\n    min-width: 112px;\n    margin-top: 32px;\n`;\nconst LoaderIconStyled = styled(LoaderIcon)`\n    height: 16px;\n    width: 16px;\n`;\nconst ButtonStyled = styled(Button)`\n    margin-top: 32px;\n`;\nconst ActionModal = (props) => {\n  const dataAttrs = useDataAttributes(props);\n  const tonConnectUI = useContext(TonConnectUiContext);\n  const [firstClick, setFirstClick] = createSignal(true);\n  const [sent, setSent] = createSignal(false);\n  createEffect(() => {\n    const currentAction = action();\n    setSent(!!currentAction && \"sent\" in currentAction && currentAction.sent);\n  });\n  let universalLink;\n  if ((tonConnectUI == null ? void 0 : tonConnectUI.wallet) && \"universalLink\" in tonConnectUI.wallet && (tonConnectUI.wallet.openMethod === \"universal-link\" || (0,_tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.isTelegramUrl)(tonConnectUI.wallet.universalLink) && isInTMA())) {\n    universalLink = tonConnectUI.wallet.universalLink;\n  }\n  let deepLink;\n  if ((tonConnectUI == null ? void 0 : tonConnectUI.wallet) && \"deepLink\" in tonConnectUI.wallet && (tonConnectUI.wallet.openMethod === \"custom-deeplink\" || (0,_tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.isTelegramUrl)(tonConnectUI.wallet.deepLink) && isInTMA())) {\n    deepLink = tonConnectUI.wallet.deepLink;\n  }\n  const onOpenWallet = () => {\n    const currentAction = action();\n    const returnStrategy = \"returnStrategy\" in currentAction ? currentAction.returnStrategy : appState.returnStrategy;\n    const forceRedirect = !firstClick();\n    setFirstClick(false);\n    if ((0,_tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.isTelegramUrl)(universalLink)) {\n      redirectToTelegram(universalLink, {\n        returnStrategy,\n        twaReturnUrl: \"twaReturnUrl\" in currentAction ? currentAction.twaReturnUrl : appState.twaReturnUrl,\n        forceRedirect\n      });\n    } else {\n      redirectToWallet(universalLink, deepLink, {\n        returnStrategy,\n        forceRedirect\n      }, () => {\n      });\n    }\n  };\n  return createComponent(ActionModalStyled, mergeProps(dataAttrs, {\n    get children() {\n      return [createMemo(() => props.icon), createComponent(H1Styled, {\n        get translationKey() {\n          return props.headerTranslationKey;\n        },\n        get translationValues() {\n          return props.headerTranslationValues;\n        }\n      }), createComponent(TextStyled, {\n        get translationKey() {\n          return props.textTranslationKey;\n        },\n        get translationValues() {\n          return props.textTranslationValues;\n        }\n      }), createComponent(Show, {\n        get when() {\n          return !sent() && (props.showButton === \"open-wallet\" && universalLink || props.showButton !== \"open-wallet\");\n        },\n        get children() {\n          return createComponent(LoaderButtonStyled, {\n            disabled: true,\n            \"data-tc-connect-button-loading\": \"true\",\n            get children() {\n              return createComponent(LoaderIconStyled, {});\n            }\n          });\n        }\n      }), createComponent(Show, {\n        get when() {\n          return sent();\n        },\n        get children() {\n          return [createComponent(Show, {\n            get when() {\n              return props.showButton !== \"open-wallet\";\n            },\n            get children() {\n              return createComponent(ButtonStyled, {\n                onClick: () => props.onClose(),\n                get children() {\n                  return createComponent(Translation, {\n                    translationKey: \"common.close\",\n                    children: \"Close\"\n                  });\n                }\n              });\n            }\n          }), createComponent(Show, {\n            get when() {\n              return props.showButton === \"open-wallet\" && universalLink;\n            },\n            get children() {\n              return createComponent(ButtonStyled, {\n                onClick: onOpenWallet,\n                get children() {\n                  return createComponent(Translation, {\n                    translationKey: \"common.openWallet\",\n                    children: \"Open wallet\"\n                  });\n                }\n              });\n            }\n          })];\n        }\n      })];\n    }\n  }));\n};\nconst ConfirmTransactionModal = (props) => {\n  const tonConnectUI = useContext(TonConnectUiContext);\n  const [t2] = useI18n();\n  const name = () => tonConnectUI.wallet && \"name\" in tonConnectUI.wallet ? tonConnectUI.wallet.name : t2(\"common.yourWallet\", {}, \"Your wallet\");\n  return createComponent(ActionModal, {\n    headerTranslationKey: \"actionModal.confirmTransaction.header\",\n    get headerTranslationValues() {\n      return {\n        name: name()\n      };\n    },\n    textTranslationKey: \"actionModal.confirmTransaction.text\",\n    get icon() {\n      return createComponent(LoaderIcon, {\n        size: \"m\"\n      });\n    },\n    onClose: () => props.onClose(),\n    showButton: \"open-wallet\",\n    \"data-tc-confirm-modal\": \"true\"\n  });\n};\nconst TransactionCanceledModal = (props) => {\n  return createComponent(ActionModal, {\n    headerTranslationKey: \"actionModal.transactionCanceled.header\",\n    textTranslationKey: \"actionModal.transactionCanceled.text\",\n    get icon() {\n      return createComponent(ErrorIcon, {\n        size: \"m\"\n      });\n    },\n    onClose: () => props.onClose(),\n    \"data-tc-transaction-canceled-modal\": \"true\"\n  });\n};\nconst TransactionSentModal = (props) => {\n  return createComponent(ActionModal, {\n    headerTranslationKey: \"actionModal.transactionSent.header\",\n    textTranslationKey: \"actionModal.transactionSent.text\",\n    get icon() {\n      return createComponent(SuccessIcon, {\n        size: \"m\"\n      });\n    },\n    onClose: () => props.onClose(),\n    \"data-tc-transaction-sent-modal\": \"true\"\n  });\n};\nconst ActionsModal = () => {\n  return createComponent(Modal, {\n    get opened() {\n      var _a2;\n      return createMemo(() => action() !== null)() && ((_a2 = action()) == null ? void 0 : _a2.openModal) === true;\n    },\n    get enableAndroidBackHandler() {\n      return appState.enableAndroidBackHandler;\n    },\n    onClose: () => setAction(null),\n    \"data-tc-actions-modal-container\": \"true\",\n    get children() {\n      return createComponent(Switch, {\n        get children() {\n          return [createComponent(Match, {\n            get when() {\n              return action().name === \"transaction-sent\";\n            },\n            get children() {\n              return createComponent(TransactionSentModal, {\n                onClose: () => setAction(null)\n              });\n            }\n          }), createComponent(Match, {\n            get when() {\n              return action().name === \"transaction-canceled\";\n            },\n            get children() {\n              return createComponent(TransactionCanceledModal, {\n                onClose: () => setAction(null)\n              });\n            }\n          }), createComponent(Match, {\n            get when() {\n              return action().name === \"confirm-transaction\";\n            },\n            get children() {\n              return createComponent(ConfirmTransactionModal, {\n                onClose: () => setAction(null)\n              });\n            }\n          })];\n        }\n      });\n    }\n  });\n};\nconst SingleWalletModal = () => {\n  const {\n    locale\n  } = useI18n()[1];\n  createEffect(() => locale(appState.language));\n  createEffect(() => {\n    if (getSingleWalletModalIsOpened()) {\n      updateIsMobile();\n    }\n  });\n  const connector = useContext(ConnectorContext);\n  const tonConnectUI = useContext(TonConnectUiContext);\n  const [infoTab, setInfoTab] = createSignal(false);\n  const additionalRequestLoading = () => {\n    var _a2;\n    return ((_a2 = appState.connectRequestParameters) == null ? void 0 : _a2.state) === \"loading\";\n  };\n  const additionalRequest = createMemo(() => {\n    var _a2;\n    if (additionalRequestLoading()) {\n      return void 0;\n    }\n    return (_a2 = appState.connectRequestParameters) == null ? void 0 : _a2.value;\n  });\n  const onClose = (closeReason) => {\n    tonConnectUI.closeSingleWalletModal(closeReason);\n  };\n  const unsubscribe = connector.onStatusChange((wallet) => {\n    if (wallet) {\n      onClose(\"wallet-selected\");\n    }\n  });\n  onCleanup(unsubscribe);\n  onCleanup(() => {\n    setInfoTab(false);\n  });\n  return createComponent(StyledModal, {\n    get opened() {\n      return getSingleWalletModalIsOpened();\n    },\n    get enableAndroidBackHandler() {\n      return appState.enableAndroidBackHandler;\n    },\n    onClose: () => onClose(\"action-cancelled\"),\n    onClickQuestion: () => setInfoTab((v) => !v),\n    \"data-tc-wallets-modal-container\": \"true\",\n    get children() {\n      return [createComponent(Show, {\n        get when() {\n          return infoTab();\n        },\n        get children() {\n          return createComponent(InfoModal, {\n            onBackClick: () => setInfoTab(false)\n          });\n        }\n      }), createComponent(Show, {\n        get when() {\n          return !infoTab();\n        },\n        get children() {\n          return [createComponent(Show, {\n            get when() {\n              return additionalRequestLoading();\n            },\n            get children() {\n              return [createComponent(H1Styled$8, {\n                translationKey: \"walletModal.loading\",\n                children: \"Wallets list is loading\"\n              }), createComponent(LoaderContainerStyled, {\n                get children() {\n                  return createComponent(LoaderIcon, {\n                    size: \"m\"\n                  });\n                }\n              })];\n            }\n          }), createComponent(Show, {\n            get when() {\n              return !additionalRequestLoading();\n            },\n            get children() {\n              return createComponent(Dynamic, {\n                get component() {\n                  return isMobile() ? MobileConnectionModal : DesktopConnectionModal;\n                },\n                get wallet() {\n                  return getSingleWalletModalWalletInfo();\n                },\n                get additionalRequest() {\n                  return additionalRequest();\n                },\n                onBackClick: () => {\n                },\n                backDisabled: true\n              });\n            }\n          })];\n        }\n      })];\n    }\n  });\n};\nconst App = (props) => {\n  const translations = createI18nContext(i18nDictionary, appState.language);\n  defineStylesRoot();\n  fixMobileSafariActiveTransition();\n  return createComponent(I18nContext.Provider, {\n    value: translations,\n    get children() {\n      return createComponent(TonConnectUiContext.Provider, {\n        get value() {\n          return props.tonConnectUI;\n        },\n        get children() {\n          return createComponent(ConnectorContext.Provider, {\n            get value() {\n              return appState.connector;\n            },\n            get children() {\n              return [createComponent(GlobalStyles, {}), createComponent(ThemeProvider, {\n                theme: themeState,\n                get children() {\n                  return [createComponent(Show, {\n                    get when() {\n                      return appState.buttonRootId;\n                    },\n                    get children() {\n                      return createComponent(Portal, {\n                        get mount() {\n                          return document.getElementById(appState.buttonRootId);\n                        },\n                        get children() {\n                          return createComponent(AccountButton, {});\n                        }\n                      });\n                    }\n                  }), createComponent(Dynamic, {\n                    component: globalStylesTag,\n                    get children() {\n                      return [createComponent(WalletsModal, {}), createComponent(SingleWalletModal, {}), createComponent(ActionsModal, {})];\n                    }\n                  })];\n                }\n              })];\n            }\n          });\n        }\n      });\n    }\n  });\n};\nconst widgetController = {\n  openWalletsModal: () => void setTimeout(() => setWalletsModalState({\n    status: \"opened\",\n    closeReason: null\n  })),\n  closeWalletsModal: (reason) => void setTimeout(() => setWalletsModalState({\n    status: \"closed\",\n    closeReason: reason\n  })),\n  openSingleWalletModal: (walletInfo) => {\n    void setTimeout(() => setSingleWalletModalState({\n      status: \"opened\",\n      closeReason: null,\n      walletInfo\n    }));\n  },\n  closeSingleWalletModal: (reason) => void setTimeout(() => setSingleWalletModalState({\n    status: \"closed\",\n    closeReason: reason\n  })),\n  setAction: (action2) => void setTimeout(() => setAction(action2)),\n  clearAction: () => void setTimeout(() => setAction(null)),\n  getSelectedWalletInfo: () => lastSelectedWalletInfo(),\n  removeSelectedWalletInfo: () => setLastSelectedWalletInfo(null),\n  renderApp: (root, tonConnectUI) => render(() => createComponent(App, {\n    tonConnectUI\n  }), document.getElementById(root))\n};\nclass WalletsModalManager {\n  constructor(options) {\n    __publicField(this, \"connector\");\n    __publicField(this, \"setConnectRequestParametersCallback\");\n    __publicField(this, \"consumers\", []);\n    __publicField(this, \"tracker\");\n    __publicField(this, \"state\", walletsModalState());\n    this.connector = options.connector;\n    this.tracker = options.tracker;\n    this.setConnectRequestParametersCallback = options.setConnectRequestParametersCallback;\n    createEffect(() => {\n      const state = walletsModalState();\n      this.state = state;\n      this.consumers.forEach((consumer) => consumer(state));\n    });\n  }\n  open() {\n    return __async(this, null, function* () {\n      this.tracker.trackConnectionStarted();\n      const walletsList = yield this.connector.getWallets();\n      const embeddedWallet = walletsList.find(_tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.isWalletInfoCurrentlyEmbedded);\n      if (embeddedWallet) {\n        return this.connectEmbeddedWallet(embeddedWallet);\n      } else {\n        return this.openWalletsModal();\n      }\n    });\n  }\n  close(reason = \"action-cancelled\") {\n    if (reason === \"action-cancelled\") {\n      this.tracker.trackConnectionError(\"Connection was cancelled\");\n    }\n    widgetController.closeWalletsModal(reason);\n  }\n  onStateChange(onChange) {\n    this.consumers.push(onChange);\n    return () => {\n      this.consumers = this.consumers.filter((consumer) => consumer !== onChange);\n    };\n  }\n  connectEmbeddedWallet(embeddedWallet) {\n    const connect = (parameters) => {\n      setLastSelectedWalletInfo(embeddedWallet);\n      this.connector.connect({ jsBridgeKey: embeddedWallet.jsBridgeKey }, parameters);\n    };\n    const additionalRequest = appState.connectRequestParameters;\n    if ((additionalRequest == null ? void 0 : additionalRequest.state) === \"loading\") {\n      this.setConnectRequestParametersCallback(connect);\n    } else {\n      connect(additionalRequest == null ? void 0 : additionalRequest.value);\n    }\n  }\n  openWalletsModal() {\n    return __async(this, null, function* () {\n      if (isInTMA()) {\n        sendExpand();\n      }\n      widgetController.openWalletsModal();\n      return new Promise((resolve) => {\n        const unsubscribe = this.onStateChange((state) => {\n          const { status } = state;\n          if (status === \"opened\") {\n            unsubscribe();\n            resolve();\n          }\n        });\n      });\n    });\n  }\n}\nclass TransactionModalManager {\n  constructor(options) {\n    __publicField(this, \"connector\");\n    __publicField(this, \"consumers\", []);\n    this.connector = options.connector;\n    createEffect(() => {\n      const currentAction = action();\n      this.consumers.forEach((consumer) => consumer(currentAction));\n    });\n  }\n  onStateChange(consumer) {\n    this.consumers.push(consumer);\n    return () => {\n      this.consumers = this.consumers.filter((c2) => c2 !== consumer);\n    };\n  }\n}\nclass SingleWalletModalManager {\n  constructor(options) {\n    __publicField(this, \"connector\");\n    __publicField(this, \"setConnectRequestParametersCallback\");\n    __publicField(this, \"consumers\", []);\n    __publicField(this, \"tracker\");\n    __publicField(this, \"state\", singleWalletModalState());\n    this.connector = options.connector;\n    this.tracker = options.tracker;\n    this.setConnectRequestParametersCallback = options.setConnectRequestParametersCallback;\n    createEffect(() => {\n      const state = singleWalletModalState();\n      this.state = state;\n      this.consumers.forEach((consumer) => consumer(state));\n    });\n  }\n  open(wallet) {\n    return __async(this, null, function* () {\n      this.tracker.trackConnectionStarted();\n      const fetchedWalletsList = yield this.connector.getWallets();\n      const walletsList = applyWalletsListConfiguration(\n        fetchedWalletsList,\n        appState.walletsListConfiguration\n      );\n      const embeddedWallet = walletsList.find(_tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.isWalletInfoCurrentlyEmbedded);\n      const isEmbeddedWalletExist = !!embeddedWallet;\n      if (isEmbeddedWalletExist) {\n        return this.connectEmbeddedWallet(embeddedWallet);\n      }\n      const externalWallets = walletsList.filter(_tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.isWalletInfoRemote);\n      const externalWallet = externalWallets.find((walletInfo) => eqWalletName(walletInfo, wallet));\n      const isExternalWalletExist = !!externalWallet;\n      if (isExternalWalletExist) {\n        return this.openSingleWalletModal(externalWallet);\n      }\n      const error = `Trying to open modal window with unknown wallet \"${wallet}\".`;\n      this.tracker.trackConnectionError(error);\n      throw new TonConnectUIError(error);\n    });\n  }\n  close(reason = \"action-cancelled\") {\n    if (reason === \"action-cancelled\") {\n      this.tracker.trackConnectionError(\"Connection was cancelled\");\n    }\n    widgetController.closeSingleWalletModal(\"action-cancelled\");\n  }\n  onStateChange(onChange) {\n    this.consumers.push(onChange);\n    return () => {\n      this.consumers = this.consumers.filter((consumer) => consumer !== onChange);\n    };\n  }\n  connectEmbeddedWallet(embeddedWallet) {\n    const connect = (parameters) => {\n      setLastSelectedWalletInfo(embeddedWallet);\n      this.connector.connect({ jsBridgeKey: embeddedWallet.jsBridgeKey }, parameters);\n    };\n    const additionalRequest = appState.connectRequestParameters;\n    if ((additionalRequest == null ? void 0 : additionalRequest.state) === \"loading\") {\n      this.setConnectRequestParametersCallback(connect);\n    } else {\n      connect(additionalRequest == null ? void 0 : additionalRequest.value);\n    }\n  }\n  openSingleWalletModal(wallet) {\n    return __async(this, null, function* () {\n      if (isInTMA()) {\n        sendExpand();\n      }\n      widgetController.openSingleWalletModal(wallet);\n      return new Promise((resolve) => {\n        const unsubscribe = this.onStateChange((state) => {\n          const { status } = state;\n          if (status === \"opened\") {\n            unsubscribe();\n            resolve();\n          }\n        });\n      });\n    });\n  }\n}\nclass TonConnectUITracker {\n  constructor(options) {\n    __publicField(this, \"eventPrefix\", \"ton-connect-ui-\");\n    __publicField(this, \"tonConnectUiVersion\");\n    __publicField(this, \"tonConnectSdkVersion\", null);\n    __publicField(this, \"eventDispatcher\");\n    var _a2;\n    this.eventDispatcher = (_a2 = options == null ? void 0 : options.eventDispatcher) != null ? _a2 : new _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.BrowserEventDispatcher();\n    this.tonConnectUiVersion = options.tonConnectUiVersion;\n    this.init().catch();\n  }\n  get version() {\n    return (0,_tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.createVersionInfo)({\n      ton_connect_sdk_lib: this.tonConnectSdkVersion,\n      ton_connect_ui_lib: this.tonConnectUiVersion\n    });\n  }\n  init() {\n    return __async(this, null, function* () {\n      try {\n        yield this.setRequestVersionHandler();\n        this.tonConnectSdkVersion = yield this.requestTonConnectSdkVersion();\n      } catch (e2) {\n      }\n    });\n  }\n  setRequestVersionHandler() {\n    return __async(this, null, function* () {\n      yield this.eventDispatcher.addEventListener(\"ton-connect-ui-request-version\", () => __async(this, null, function* () {\n        yield this.eventDispatcher.dispatchEvent(\n          \"ton-connect-ui-response-version\",\n          (0,_tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.createResponseVersionEvent)(this.tonConnectUiVersion)\n        );\n      }));\n    });\n  }\n  requestTonConnectSdkVersion() {\n    return __async(this, null, function* () {\n      return new Promise((resolve, reject) => __async(this, null, function* () {\n        try {\n          yield this.eventDispatcher.addEventListener(\n            \"ton-connect-response-version\",\n            (event) => {\n              resolve(event.detail.version);\n            },\n            { once: true }\n          );\n          yield this.eventDispatcher.dispatchEvent(\n            \"ton-connect-request-version\",\n            (0,_tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.createRequestVersionEvent)()\n          );\n        } catch (e2) {\n          reject(e2);\n        }\n      }));\n    });\n  }\n  dispatchUserActionEvent(eventDetails) {\n    var _a2;\n    try {\n      (_a2 = this.eventDispatcher) == null ? void 0 : _a2.dispatchEvent(`${this.eventPrefix}${eventDetails.type}`, eventDetails).catch();\n    } catch (e2) {\n    }\n  }\n  trackConnectionStarted(...args) {\n    try {\n      const event = (0,_tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.createConnectionStartedEvent)(this.version, ...args);\n      this.dispatchUserActionEvent(event);\n    } catch (e2) {\n    }\n  }\n  trackConnectionCompleted(...args) {\n    try {\n      const event = (0,_tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.createConnectionCompletedEvent)(this.version, ...args);\n      this.dispatchUserActionEvent(event);\n    } catch (e2) {\n    }\n  }\n  trackConnectionError(...args) {\n    try {\n      const event = (0,_tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.createConnectionErrorEvent)(this.version, ...args);\n      this.dispatchUserActionEvent(event);\n    } catch (e2) {\n    }\n  }\n  trackConnectionRestoringStarted(...args) {\n    try {\n      const event = (0,_tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.createConnectionRestoringStartedEvent)(this.version, ...args);\n      this.dispatchUserActionEvent(event);\n    } catch (e2) {\n    }\n  }\n  trackConnectionRestoringCompleted(...args) {\n    try {\n      const event = (0,_tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.createConnectionRestoringCompletedEvent)(this.version, ...args);\n      this.dispatchUserActionEvent(event);\n    } catch (e2) {\n    }\n  }\n  trackConnectionRestoringError(...args) {\n    try {\n      const event = (0,_tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.createConnectionRestoringErrorEvent)(this.version, ...args);\n      this.dispatchUserActionEvent(event);\n    } catch (e2) {\n    }\n  }\n  trackDisconnection(...args) {\n    try {\n      const event = (0,_tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.createDisconnectionEvent)(this.version, ...args);\n      this.dispatchUserActionEvent(event);\n    } catch (e2) {\n    }\n  }\n  trackTransactionSentForSignature(...args) {\n    try {\n      const event = (0,_tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.createTransactionSentForSignatureEvent)(this.version, ...args);\n      this.dispatchUserActionEvent(event);\n    } catch (e2) {\n    }\n  }\n  trackTransactionSigned(...args) {\n    try {\n      const event = (0,_tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.createTransactionSignedEvent)(this.version, ...args);\n      this.dispatchUserActionEvent(event);\n    } catch (e2) {\n    }\n  }\n  trackTransactionSigningFailed(...args) {\n    try {\n      const event = (0,_tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.createTransactionSigningFailedEvent)(this.version, ...args);\n      this.dispatchUserActionEvent(event);\n    } catch (e2) {\n    }\n  }\n}\nconst tonConnectUiVersion = \"2.1.0\";\nclass TonConnectUI {\n  constructor(options) {\n    __publicField(this, \"walletInfoStorage\", new WalletInfoStorage());\n    __publicField(this, \"preferredWalletStorage\", new PreferredWalletStorage());\n    __publicField(this, \"tracker\");\n    __publicField(this, \"walletInfo\", null);\n    __publicField(this, \"systemThemeChangeUnsubscribe\", null);\n    __publicField(this, \"actionsConfiguration\");\n    __publicField(this, \"walletsList\");\n    __publicField(this, \"walletsRequiredFeatures\");\n    __publicField(this, \"connectRequestParametersCallback\");\n    __publicField(this, \"connector\");\n    __publicField(this, \"modal\");\n    __publicField(this, \"singleWalletModal\");\n    __publicField(this, \"transactionModal\");\n    __publicField(this, \"connectionRestored\", Promise.resolve(false));\n    if (options && \"connector\" in options && options.connector) {\n      this.connector = options.connector;\n    } else if (options && \"manifestUrl\" in options && options.manifestUrl) {\n      this.connector = new _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.TonConnect({\n        manifestUrl: options.manifestUrl,\n        eventDispatcher: options.eventDispatcher,\n        walletsRequiredFeatures: options.walletsRequiredFeatures\n      });\n    } else {\n      throw new TonConnectUIError(\n        \"You have to specify a `manifestUrl` or a `connector` in the options.\"\n      );\n    }\n    this.tracker = new TonConnectUITracker({\n      eventDispatcher: options == null ? void 0 : options.eventDispatcher,\n      tonConnectUiVersion\n    });\n    this.modal = new WalletsModalManager({\n      connector: this.connector,\n      tracker: this.tracker,\n      setConnectRequestParametersCallback: (callback) => {\n        this.connectRequestParametersCallback = callback;\n      }\n    });\n    this.singleWalletModal = new SingleWalletModalManager({\n      connector: this.connector,\n      tracker: this.tracker,\n      setConnectRequestParametersCallback: (callback) => {\n        this.connectRequestParametersCallback = callback;\n      }\n    });\n    this.transactionModal = new TransactionModalManager({\n      connector: this.connector\n    });\n    this.walletsRequiredFeatures = options.walletsRequiredFeatures;\n    this.walletsList = this.getWallets();\n    this.walletsList.then((list) => preloadImages(uniq(list.map((item) => item.imageUrl))));\n    const rootId = this.normalizeWidgetRoot(options == null ? void 0 : options.widgetRootId);\n    this.subscribeToWalletChange();\n    if ((options == null ? void 0 : options.restoreConnection) !== false) {\n      this.connectionRestored = createMacrotaskAsync(() => __async(this, null, function* () {\n        this.tracker.trackConnectionRestoringStarted();\n        yield this.connector.restoreConnection();\n        if (!this.connector.connected) {\n          this.tracker.trackConnectionRestoringError(\"Connection was not restored\");\n          this.walletInfoStorage.removeWalletInfo();\n        } else {\n          this.tracker.trackConnectionRestoringCompleted(this.wallet);\n        }\n        return this.connector.connected;\n      }));\n    }\n    this.uiOptions = mergeOptions(options, { uiPreferences: { theme: \"SYSTEM\" } });\n    const preferredWalletName = this.preferredWalletStorage.getPreferredWalletAppName();\n    setAppState({\n      connector: this.connector,\n      preferredWalletAppName: preferredWalletName\n    });\n    widgetController.renderApp(rootId, this);\n  }\n  static getWallets() {\n    return _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.TonConnect.getWallets();\n  }\n  get connected() {\n    return this.connector.connected;\n  }\n  get account() {\n    return this.connector.account;\n  }\n  get wallet() {\n    if (!this.connector.wallet) {\n      return null;\n    }\n    return __spreadValues(__spreadValues({}, this.connector.wallet), this.walletInfo);\n  }\n  set uiOptions(options) {\n    var _a2, _b2, _c2, _d2, _e2;\n    this.checkButtonRootExist(options.buttonRootId);\n    this.actionsConfiguration = options.actionsConfiguration;\n    if ((_a2 = options.uiPreferences) == null ? void 0 : _a2.theme) {\n      if (((_b2 = options.uiPreferences) == null ? void 0 : _b2.theme) !== \"SYSTEM\") {\n        (_c2 = this.systemThemeChangeUnsubscribe) == null ? void 0 : _c2.call(this);\n        setTheme(options.uiPreferences.theme, options.uiPreferences.colorsSet);\n      } else {\n        setTheme(getSystemTheme(), options.uiPreferences.colorsSet);\n        if (!this.systemThemeChangeUnsubscribe) {\n          this.systemThemeChangeUnsubscribe = subscribeToThemeChange(setTheme);\n        }\n      }\n    } else {\n      if ((_d2 = options.uiPreferences) == null ? void 0 : _d2.colorsSet) {\n        setColors(options.uiPreferences.colorsSet);\n      }\n    }\n    if ((_e2 = options.uiPreferences) == null ? void 0 : _e2.borderRadius) {\n      setBorderRadius(options.uiPreferences.borderRadius);\n    }\n    setAppState((state) => {\n      var _a3, _b3;\n      const merged = mergeOptions(\n        __spreadValues(__spreadValues(__spreadValues(__spreadValues({}, options.language && { language: options.language }), !!((_a3 = options.actionsConfiguration) == null ? void 0 : _a3.returnStrategy) && {\n          returnStrategy: options.actionsConfiguration.returnStrategy\n        }), !!((_b3 = options.actionsConfiguration) == null ? void 0 : _b3.twaReturnUrl) && {\n          twaReturnUrl: options.actionsConfiguration.twaReturnUrl\n        }), !!options.walletsListConfiguration && {\n          walletsListConfiguration: options.walletsListConfiguration\n        }),\n        unwrap(state)\n      );\n      if (options.buttonRootId !== void 0) {\n        merged.buttonRootId = options.buttonRootId;\n      }\n      if (options.enableAndroidBackHandler !== void 0) {\n        merged.enableAndroidBackHandler = options.enableAndroidBackHandler;\n      }\n      return merged;\n    });\n  }\n  setConnectRequestParameters(connectRequestParameters) {\n    var _a2;\n    setAppState({ connectRequestParameters });\n    if ((connectRequestParameters == null ? void 0 : connectRequestParameters.state) === \"ready\" || !connectRequestParameters) {\n      (_a2 = this.connectRequestParametersCallback) == null ? void 0 : _a2.call(this, connectRequestParameters == null ? void 0 : connectRequestParameters.value);\n    }\n  }\n  getWallets() {\n    return __async(this, null, function* () {\n      return this.connector.getWallets();\n    });\n  }\n  onStatusChange(callback, errorsHandler) {\n    return this.connector.onStatusChange((wallet) => __async(this, null, function* () {\n      if (wallet) {\n        const lastSelectedWalletInfo2 = yield this.getSelectedWalletInfo(wallet);\n        callback(__spreadValues(__spreadValues({}, wallet), lastSelectedWalletInfo2 || this.walletInfoStorage.getWalletInfo()));\n      } else {\n        callback(wallet);\n      }\n    }), errorsHandler);\n  }\n  openModal() {\n    return __async(this, null, function* () {\n      return this.modal.open();\n    });\n  }\n  closeModal(reason) {\n    this.modal.close(reason);\n  }\n  onModalStateChange(onChange) {\n    return this.modal.onStateChange(onChange);\n  }\n  get modalState() {\n    return this.modal.state;\n  }\n  openSingleWalletModal(wallet) {\n    return __async(this, null, function* () {\n      return this.singleWalletModal.open(wallet);\n    });\n  }\n  closeSingleWalletModal(closeReason) {\n    this.singleWalletModal.close(closeReason);\n  }\n  onSingleWalletModalStateChange(onChange) {\n    return this.singleWalletModal.onStateChange(onChange);\n  }\n  get singleWalletModalState() {\n    return this.singleWalletModal.state;\n  }\n  connectWallet() {\n    return __async(this, null, function* () {\n      const walletsList = yield this.getWallets();\n      const embeddedWallet = walletsList.find(_tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.isWalletInfoCurrentlyEmbedded);\n      if (embeddedWallet) {\n        return yield this.connectEmbeddedWallet(embeddedWallet);\n      } else {\n        return yield this.connectExternalWallet();\n      }\n    });\n  }\n  disconnect() {\n    this.tracker.trackDisconnection(this.wallet, \"dapp\");\n    widgetController.clearAction();\n    widgetController.removeSelectedWalletInfo();\n    this.walletInfoStorage.removeWalletInfo();\n    return this.connector.disconnect();\n  }\n  sendTransaction(tx, options) {\n    return __async(this, null, function* () {\n      this.tracker.trackTransactionSentForSignature(this.wallet, tx);\n      if (!this.connected) {\n        this.tracker.trackTransactionSigningFailed(this.wallet, tx, \"Wallet was not connected\");\n        throw new TonConnectUIError(\"Connect wallet to send a transaction.\");\n      }\n      if (isInTMA()) {\n        sendExpand();\n      }\n      const { notifications: notifications2, modals, returnStrategy, twaReturnUrl } = this.getModalsAndNotificationsConfiguration(options);\n      widgetController.setAction({\n        name: \"confirm-transaction\",\n        showNotification: notifications2.includes(\"before\"),\n        openModal: modals.includes(\"before\"),\n        sent: false\n      });\n      const onRequestSent = () => {\n        if (abortController.signal.aborted) {\n          return;\n        }\n        widgetController.setAction({\n          name: \"confirm-transaction\",\n          showNotification: notifications2.includes(\"before\"),\n          openModal: modals.includes(\"before\"),\n          sent: true\n        });\n        if (this.walletInfo && \"universalLink\" in this.walletInfo && (this.walletInfo.openMethod === \"universal-link\" || this.walletInfo.openMethod === \"custom-deeplink\")) {\n          if ((0,_tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.isTelegramUrl)(this.walletInfo.universalLink)) {\n            redirectToTelegram(this.walletInfo.universalLink, {\n              returnStrategy,\n              twaReturnUrl: twaReturnUrl || appState.twaReturnUrl,\n              forceRedirect: false\n            });\n          } else {\n            redirectToWallet(\n              this.walletInfo.universalLink,\n              this.walletInfo.deepLink,\n              {\n                returnStrategy,\n                forceRedirect: false\n              },\n              () => {\n              }\n            );\n          }\n        }\n      };\n      const abortController = new AbortController();\n      const unsubscribe = this.onTransactionModalStateChange((action2) => {\n        if (action2 == null ? void 0 : action2.openModal) {\n          return;\n        }\n        unsubscribe();\n        if (!action2) {\n          abortController.abort();\n        }\n      });\n      try {\n        const result = yield this.waitForSendTransaction(\n          {\n            transaction: tx,\n            signal: abortController.signal\n          },\n          onRequestSent\n        );\n        this.tracker.trackTransactionSigned(this.wallet, tx, result);\n        widgetController.setAction({\n          name: \"transaction-sent\",\n          showNotification: notifications2.includes(\"success\"),\n          openModal: modals.includes(\"success\")\n        });\n        return result;\n      } catch (e2) {\n        widgetController.setAction({\n          name: \"transaction-canceled\",\n          showNotification: notifications2.includes(\"error\"),\n          openModal: modals.includes(\"error\")\n        });\n        if (e2 instanceof _tonconnect_sdk__WEBPACK_IMPORTED_MODULE_0__.TonConnectError) {\n          throw e2;\n        } else {\n          console.error(e2);\n          throw new TonConnectUIError(\"Unhandled error:\" + e2);\n        }\n      } finally {\n        unsubscribe();\n      }\n    });\n  }\n  connectEmbeddedWallet(embeddedWallet) {\n    return __async(this, null, function* () {\n      const connect = (parameters) => {\n        setLastSelectedWalletInfo(embeddedWallet);\n        this.connector.connect({ jsBridgeKey: embeddedWallet.jsBridgeKey }, parameters);\n      };\n      const additionalRequest = appState.connectRequestParameters;\n      if ((additionalRequest == null ? void 0 : additionalRequest.state) === \"loading\") {\n        this.connectRequestParametersCallback = connect;\n      } else {\n        connect(additionalRequest == null ? void 0 : additionalRequest.value);\n      }\n      return yield this.waitForWalletConnection({\n        ignoreErrors: false\n      });\n    });\n  }\n  connectExternalWallet() {\n    return __async(this, null, function* () {\n      const abortController = new AbortController();\n      widgetController.openWalletsModal();\n      const unsubscribe = this.onModalStateChange((state) => {\n        const { status, closeReason } = state;\n        if (status === \"opened\") {\n          return;\n        }\n        unsubscribe();\n        if (closeReason === \"action-cancelled\") {\n          abortController.abort();\n        }\n      });\n      return yield this.waitForWalletConnection({\n        ignoreErrors: true,\n        signal: abortController.signal\n      });\n    });\n  }\n  waitForWalletConnection(options) {\n    return __async(this, null, function* () {\n      return new Promise((resolve, reject) => {\n        this.tracker.trackConnectionStarted();\n        const { ignoreErrors = false, signal = null } = options;\n        if (signal && signal.aborted) {\n          this.tracker.trackConnectionError(\"Connection was cancelled\");\n          return reject(new TonConnectUIError(\"Wallet was not connected\"));\n        }\n        const onStatusChangeHandler = (wallet) => __async(this, null, function* () {\n          if (!wallet) {\n            this.tracker.trackConnectionError(\"Connection was cancelled\");\n            if (ignoreErrors) {\n              return;\n            }\n            unsubscribe();\n            reject(new TonConnectUIError(\"Wallet was not connected\"));\n          } else {\n            this.tracker.trackConnectionCompleted(wallet);\n            unsubscribe();\n            resolve(wallet);\n          }\n        });\n        const onErrorsHandler = (reason) => {\n          this.tracker.trackConnectionError(reason.message);\n          if (ignoreErrors) {\n            return;\n          }\n          unsubscribe();\n          reject(reason);\n        };\n        const unsubscribe = this.onStatusChange(\n          (wallet) => onStatusChangeHandler(wallet),\n          (reason) => onErrorsHandler(reason)\n        );\n        if (signal) {\n          signal.addEventListener(\n            \"abort\",\n            () => {\n              unsubscribe();\n              reject(new TonConnectUIError(\"Wallet was not connected\"));\n            },\n            { once: true }\n          );\n        }\n      });\n    });\n  }\n  waitForSendTransaction(options, onRequestSent) {\n    return __async(this, null, function* () {\n      return new Promise((resolve, reject) => {\n        const { transaction, signal } = options;\n        if (signal.aborted) {\n          this.tracker.trackTransactionSigningFailed(\n            this.wallet,\n            transaction,\n            \"Transaction was cancelled\"\n          );\n          return reject(new TonConnectUIError(\"Transaction was not sent\"));\n        }\n        const onTransactionHandler = (transaction2) => __async(this, null, function* () {\n          resolve(transaction2);\n        });\n        const onErrorsHandler = (reason) => {\n          reject(reason);\n        };\n        const onCanceledHandler = () => {\n          this.tracker.trackTransactionSigningFailed(\n            this.wallet,\n            transaction,\n            \"Transaction was cancelled\"\n          );\n          reject(new TonConnectUIError(\"Transaction was not sent\"));\n        };\n        signal.addEventListener(\"abort\", onCanceledHandler, { once: true });\n        this.connector.sendTransaction(transaction, { onRequestSent, signal }).then((result) => {\n          signal.removeEventListener(\"abort\", onCanceledHandler);\n          return onTransactionHandler(result);\n        }).catch((reason) => {\n          signal.removeEventListener(\"abort\", onCanceledHandler);\n          return onErrorsHandler(reason);\n        });\n      });\n    });\n  }\n  onTransactionModalStateChange(onChange) {\n    return this.transactionModal.onStateChange(onChange);\n  }\n  subscribeToWalletChange() {\n    this.connector.onStatusChange((wallet) => __async(this, null, function* () {\n      var _a2;\n      if (wallet) {\n        yield this.updateWalletInfo(wallet);\n        this.setPreferredWalletAppName(((_a2 = this.walletInfo) == null ? void 0 : _a2.appName) || wallet.device.appName);\n      } else {\n        this.walletInfoStorage.removeWalletInfo();\n      }\n    }));\n  }\n  setPreferredWalletAppName(value) {\n    this.preferredWalletStorage.setPreferredWalletAppName(value);\n    setAppState({ preferredWalletAppName: value });\n  }\n  getSelectedWalletInfo(wallet) {\n    return __async(this, null, function* () {\n      let lastSelectedWalletInfo2 = widgetController.getSelectedWalletInfo();\n      if (!lastSelectedWalletInfo2) {\n        return null;\n      }\n      let fullLastSelectedWalletInfo;\n      if (!(\"name\" in lastSelectedWalletInfo2)) {\n        const walletsList = applyWalletsListConfiguration(\n          yield this.walletsList,\n          appState.walletsListConfiguration\n        );\n        const walletInfo = walletsList.find((item) => eqWalletName(item, wallet.device.appName));\n        if (!walletInfo) {\n          throw new TonConnectUIError(\n            `Cannot find WalletInfo for the '${wallet.device.appName}' wallet`\n          );\n        }\n        fullLastSelectedWalletInfo = __spreadValues(__spreadValues({}, walletInfo), lastSelectedWalletInfo2);\n      } else {\n        fullLastSelectedWalletInfo = lastSelectedWalletInfo2;\n      }\n      return fullLastSelectedWalletInfo;\n    });\n  }\n  updateWalletInfo(wallet) {\n    return __async(this, null, function* () {\n      const selectedWalletInfo = yield this.getSelectedWalletInfo(wallet);\n      if (selectedWalletInfo) {\n        this.walletInfo = selectedWalletInfo;\n        this.walletInfoStorage.setWalletInfo(selectedWalletInfo);\n        return;\n      }\n      const storedWalletInfo = this.walletInfoStorage.getWalletInfo();\n      if (storedWalletInfo) {\n        this.walletInfo = storedWalletInfo;\n        return;\n      }\n      this.walletInfo = (yield this.walletsList).find(\n        (walletInfo) => eqWalletName(walletInfo, wallet.device.appName)\n      ) || null;\n    });\n  }\n  normalizeWidgetRoot(rootId) {\n    if (!rootId || !document.getElementById(rootId)) {\n      rootId = \"tc-widget-root\";\n      const rootElement = document.createElement(\"div\");\n      rootElement.id = rootId;\n      document.body.appendChild(rootElement);\n    }\n    return rootId;\n  }\n  checkButtonRootExist(buttonRootId) {\n    if (buttonRootId == null) {\n      return;\n    }\n    if (!document.getElementById(buttonRootId)) {\n      throw new TonConnectUIError(`${buttonRootId} element not found in the document.`);\n    }\n  }\n  getModalsAndNotificationsConfiguration(options) {\n    var _a2, _b2, _c2, _d2, _e2, _f2;\n    const allActions = [\n      \"before\",\n      \"success\",\n      \"error\"\n    ];\n    let notifications2 = allActions;\n    if (((_a2 = this.actionsConfiguration) == null ? void 0 : _a2.notifications) && ((_b2 = this.actionsConfiguration) == null ? void 0 : _b2.notifications) !== \"all\") {\n      notifications2 = this.actionsConfiguration.notifications;\n    }\n    if (options == null ? void 0 : options.notifications) {\n      if (options.notifications === \"all\") {\n        notifications2 = allActions;\n      } else {\n        notifications2 = options.notifications;\n      }\n    }\n    let modals = [\"before\"];\n    if ((_c2 = this.actionsConfiguration) == null ? void 0 : _c2.modals) {\n      if (this.actionsConfiguration.modals === \"all\") {\n        modals = allActions;\n      } else {\n        modals = this.actionsConfiguration.modals;\n      }\n    }\n    if (options == null ? void 0 : options.modals) {\n      if (options.modals === \"all\") {\n        modals = allActions;\n      } else {\n        modals = options.modals;\n      }\n    }\n    const returnStrategy = (options == null ? void 0 : options.returnStrategy) || ((_d2 = this.actionsConfiguration) == null ? void 0 : _d2.returnStrategy) || \"back\";\n    const twaReturnUrl = (options == null ? void 0 : options.twaReturnUrl) || ((_e2 = this.actionsConfiguration) == null ? void 0 : _e2.twaReturnUrl);\n    let skipRedirectToWallet = (options == null ? void 0 : options.skipRedirectToWallet) || ((_f2 = this.actionsConfiguration) == null ? void 0 : _f2.skipRedirectToWallet) || \"ios\";\n    if (isInTMA()) {\n      skipRedirectToWallet = \"never\";\n    }\n    return {\n      notifications: notifications2,\n      modals,\n      returnStrategy,\n      twaReturnUrl,\n      skipRedirectToWallet\n    };\n  }\n}\n\n//# sourceMappingURL=index.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHRvbmNvbm5lY3QvdWkvbGliL2luZGV4Lm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhFQUE4RSw2REFBNkQ7QUFDM0k7QUFDQSwrQkFBK0I7QUFDL0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNpdEI7QUFDanJCO0FBQ0k7QUFDRjtBQUNOO0FBQzVCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNDQUFzQztBQUN0QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0NBQXNDO0FBQ3RDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBLFlBQVksd0JBQXdCLEVBQUUsNkJBQTZCO0FBQ25FO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVCQUF1QixrQkFBa0I7QUFDekM7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlCQUF5Qiw0QkFBNEI7QUFDckQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjLEtBQUs7QUFDbkIsWUFBWSxFQUFDO0FBQ2I7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFD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Q0EsR0FBRztBQUNIO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQSxVQUFVO0FBQ1Y7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlEQUFpRDtBQUNqRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkNBQTJDLFNBQVM7QUFDcEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IsS0FBSztBQUNyQixnQkFBZ0IsS0FBSztBQUNyQixNQUFNO0FBQ04sZ0JBQWdCLEtBQUs7QUFDckIsSUFBSTtBQUNKO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBLHlDQUF5QztBQUN6QywyQ0FBMkM7QUFDM0M7QUFDQSxzQ0FBc0MsVUFBVTtBQUNoRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1Q0FBdUMsVUFBVTtBQUNqRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0I7QUFDcEIsc0JBQXNCO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQ0FBZ0M7QUFDaEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0VBQWdFO0FBQ2hFLHNCQUFzQjtBQUN0QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0RBQWdELGNBQWM7QUFDOUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CLFFBQVE7QUFDM0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkJBQTJCLElBQUk7QUFDL0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCLG1CQUFtQjtBQUMxQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7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QUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5RUFBeUUsWUFBWTtBQUNyRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNDQUFzQyx1REFBdUQ7QUFDN0Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQix5Q0FBUTtBQUM5QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNB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QTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUyxzQ0FBUztBQUNsQjtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBLGtCQUFrQixjQUFjO0FBQ2hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0Esd0JBQXdCO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7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S0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVc7QUFDWDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUIsZ0JBQWdCO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxxQkFBcUIsZ0JBQWdCO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1QsUUFBUTtBQUNSO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9DQUFvQyxHQUFHLEtBQUssR0FBRztBQUMvQztBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0QkFBNEIsaURBQWlEO0FBQzdFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QjtBQUN4QjtBQUNBOztBQUVBOztBQUVBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUEsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FB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Q0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5QkFBeUIsYUFBYTtBQUN0QztBQUNBO0FBQ0E7QUFDQSwwQkFBMEIsV0FBVztBQUNyQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUJBQXlCLGFBQWE7QUFDdEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5QkFBeUIsZ0JBQWdCO0FBQ3pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVU7QUFDVjtBQUNBLFVBQVU7QUFDVjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlCQUF5QixvQkFBb0I7QUFDN0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUJBQXlCLFVBQVU7QUFDbkM7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5QkFBeUIsZ0JBQWdCO0FBQ3pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlCQUF5QixvQkFBb0I7QUFDN0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBVTtBQUNWO0FBQ0EsVUFBVTtBQUNWO0FBQ0EsVUFBVTtBQUNWO0FBQ0EsVUFBVTtBQUNWO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJCQUEyQixhQUFhO0FBQ3hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVU7QUFDVjtBQUNBLFVBQVU7QUFDVjtBQUNBLFVBQVU7QUFDVjtBQUNBLFVBQVU7QUFDVjtBQUNBLFVBQVU7QUFDVjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMEJBQTBCO0FBQzFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5QkFBeUIsZ0JBQWdCO0FBQ3pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCLFlBQVk7QUFDbEMsd0JBQXdCLFdBQVc7QUFDbkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1QkFBdUIsbUJBQW1CO0FBQzFDO0FBQ0E7QUFDQTtBQUNBLDZCQUE2QjtBQUM3QjtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUJBQXlCLGlCQUFpQjtB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O0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXO0FBQ1g7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBLGFBQWE7O0FBRWI7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQSxhQUFhOztBQUViO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsYUFBYTs7QUFFYjtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBLE9BQU87QUFDUCxLQUFLO0FBQ0wsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBLE9BQU87QUFDUCxLQUFLO0FBQ0wsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQixpQkFBaUI7QUFDdEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLHVDQUFFO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCLHVDQUFFO0FBQ3pCO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQSx1QkFBdUIsdUNBQUU7QUFDekI7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQSxPQUFPO0FBQ1AsS0FBSztBQUNMLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsR0FBRztB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QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQSxLQUFLO0FBQ0wsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSCwyREFBMkQ7QUFDM0Q7QUFDQSxHQUFHO0FBQ0gsK0VBQStFO0FBQy9FO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBLEdBQUcsNEJBQTRCLHNFQUFzRTtBQUNyRztBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSCwyQ0FBMkM7QUFDM0M7QUFDQTtB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O0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVU7QUFDVjtBQUNBLFVBQVU7QUFDVjtBQUNBLFVBQVU7QUFDVjtBQUNBLFVBQVU7QUFDVjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0EsVUFBVTtBQUNWO0FBQ0EsVUFBVTtBQUNWO0FBQ0EsVUFBVTtBQUNWO0FBQ0EsVUFBVTtBQUNWO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZCQUE2QjtBQUM3QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1AsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNULFFBQVE7QUFDUjtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0EsVUFBVTtBQUNWO0FBQ0EsVUFBVTtBQUNWO0FBQ0EsVUFBVTtBQUNWO0FBQ0EsVUFBVTtBQUNWO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNULFFBQVE7QUFDUjtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0EsVUFBVTtBQUNWO0FBQ0EsVUFBVTtBQUNWO0FBQ0EsVUFBVTtBQUNWO0FBQ0EsVUFBVTtBQUNWO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNULFFBQVE7QUFDUjtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQSxVQUFVO0FBQ1Y7QUFDQSxVQUFVO0FBQ1Y7QUFDQSxVQUFVO0FBQ1Y7QUFDQSxVQUFVO0FBQ1Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQSxVQUFVO0FBQ1Y7QUFDQSxVQUFVO0FBQ1Y7QUFDQSxVQUFVO0FBQ1Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQSxVQUFVO0FBQ1Y7QUFDQSxVQUFVO0FBQ1Y7QUFDQSxVQUFVO0FBQ1Y7QUFDQSxVQUFVO0FBQ1Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQSxVQUFVO0FBQ1Y7QUFDQSxVQUFVO0FBQ1Y7QUFDQSxVQUFVO0FBQ1Y7QUFDQSxVQUFVO0FBQ1Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1QsUUFBUTtBQUNSO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtB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QjtBQUNqRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLCtDQUErQyxzQkFBc0I7QUFDckU7QUFDQTtBQUNBLHFFQUFxRTtBQUNyRSxRQUFRO0FBQ1I7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUNBQXFDLGNBQWM7QUFDbkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUtFO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9uZXh0anMtdGVtcGxhdGUvLi9ub2RlX21vZHVsZXMvQHRvbmNvbm5lY3QvdWkvbGliL2luZGV4Lm1qcz9hNTY5Il0sInNvdXJjZXNDb250ZW50IjpbInZhciBfX2RlZlByb3AgPSBPYmplY3QuZGVmaW5lUHJvcGVydHk7XG52YXIgX19kZWZQcm9wcyA9IE9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzO1xudmFyIF9fZ2V0T3duUHJvcERlc2NzID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnM7XG52YXIgX19nZXRPd25Qcm9wU3ltYm9scyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHM7XG52YXIgX19oYXNPd25Qcm9wID0gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eTtcbnZhciBfX3Byb3BJc0VudW0gPSBPYmplY3QucHJvdG90eXBlLnByb3BlcnR5SXNFbnVtZXJhYmxlO1xudmFyIF9fZGVmTm9ybWFsUHJvcCA9IChvYmosIGtleSwgdmFsdWUpID0+IGtleSBpbiBvYmogPyBfX2RlZlByb3Aob2JqLCBrZXksIHsgZW51bWVyYWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlLCB3cml0YWJsZTogdHJ1ZSwgdmFsdWUgfSkgOiBvYmpba2V5XSA9IHZhbHVlO1xudmFyIF9fc3ByZWFkVmFsdWVzID0gKGEyLCBiKSA9PiB7XG4gIGZvciAodmFyIHByb3AgaW4gYiB8fCAoYiA9IHt9KSlcbiAgICBpZiAoX19oYXNPd25Qcm9wLmNhbGwoYiwgcHJvcCkpXG4gICAgICBfX2RlZk5vcm1hbFByb3AoYTIsIHByb3AsIGJbcHJvcF0pO1xuICBpZiAoX19nZXRPd25Qcm9wU3ltYm9scylcbiAgICBmb3IgKHZhciBwcm9wIG9mIF9fZ2V0T3duUHJvcFN5bWJvbHMoYikpIHtcbiAgICAgIGlmIChfX3Byb3BJc0VudW0uY2FsbChiLCBwcm9wKSlcbiAgICAgICAgX19kZWZOb3JtYWxQcm9wKGEyLCBwcm9wLCBiW3Byb3BdKTtcbiAgICB9XG4gIHJldHVybiBhMjtcbn07XG52YXIgX19zcHJlYWRQcm9wcyA9IChhMiwgYikgPT4gX19kZWZQcm9wcyhhMiwgX19nZXRPd25Qcm9wRGVzY3MoYikpO1xudmFyIF9fcHVibGljRmllbGQgPSAob2JqLCBrZXksIHZhbHVlKSA9PiB7XG4gIF9fZGVmTm9ybWFsUHJvcChvYmosIHR5cGVvZiBrZXkgIT09IFwic3ltYm9sXCIgPyBrZXkgKyBcIlwiIDoga2V5LCB2YWx1ZSk7XG4gIHJldHVybiB2YWx1ZTtcbn07XG52YXIgX19hc3luYyA9IChfX3RoaXMsIF9fYXJndW1lbnRzLCBnZW5lcmF0b3IpID0+IHtcbiAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICB2YXIgZnVsZmlsbGVkID0gKHZhbHVlKSA9PiB7XG4gICAgICB0cnkge1xuICAgICAgICBzdGVwKGdlbmVyYXRvci5uZXh0KHZhbHVlKSk7XG4gICAgICB9IGNhdGNoIChlMikge1xuICAgICAgICByZWplY3QoZTIpO1xuICAgICAgfVxuICAgIH07XG4gICAgdmFyIHJlamVjdGVkID0gKHZhbHVlKSA9PiB7XG4gICAgICB0cnkge1xuICAgICAgICBzdGVwKGdlbmVyYXRvci50aHJvdyh2YWx1ZSkpO1xuICAgICAgfSBjYXRjaCAoZTIpIHtcbiAgICAgICAgcmVqZWN0KGUyKTtcbiAgICAgIH1cbiAgICB9O1xuICAgIHZhciBzdGVwID0gKHgpID0+IHguZG9uZSA/IHJlc29sdmUoeC52YWx1ZSkgOiBQcm9taXNlLnJlc29sdmUoeC52YWx1ZSkudGhlbihmdWxmaWxsZWQsIHJlamVjdGVkKTtcbiAgICBzdGVwKChnZW5lcmF0b3IgPSBnZW5lcmF0b3IuYXBwbHkoX190aGlzLCBfX2FyZ3VtZW50cykpLm5leHQoKSk7XG4gIH0pO1xufTtcbnZhciBfYSwgX2IsIF9jLCBfZCwgX2UsIF9mLCBfZywgX2g7XG5pbXBvcnQgeyBUb25Db25uZWN0RXJyb3IsIGlzV2FsbGV0SW5mb0N1cnJlbnRseUluamVjdGVkLCB0b1VzZXJGcmllbmRseUFkZHJlc3MsIENIQUlOLCBUb25Db25uZWN0LCBpc1RlbGVncmFtVXJsLCBlbmNvZGVUZWxlZ3JhbVVybFBhcmFtZXRlcnMsIFdhbGxldE1pc3NpbmdSZXF1aXJlZEZlYXR1cmVzRXJyb3IsIGlzV2FsbGV0SW5mb1JlbW90ZSwgY2hlY2tSZXF1aXJlZFdhbGxldEZlYXR1cmVzLCBpc1dhbGxldEluZm9DdXJyZW50bHlFbWJlZGRlZCwgY3JlYXRlVmVyc2lvbkluZm8sIEJyb3dzZXJFdmVudERpc3BhdGNoZXIsIGNyZWF0ZVJlc3BvbnNlVmVyc2lvbkV2ZW50LCBjcmVhdGVSZXF1ZXN0VmVyc2lvbkV2ZW50LCBjcmVhdGVDb25uZWN0aW9uU3RhcnRlZEV2ZW50LCBjcmVhdGVDb25uZWN0aW9uQ29tcGxldGVkRXZlbnQsIGNyZWF0ZUNvbm5lY3Rpb25FcnJvckV2ZW50LCBjcmVhdGVDb25uZWN0aW9uUmVzdG9yaW5nU3RhcnRlZEV2ZW50LCBjcmVhdGVDb25uZWN0aW9uUmVzdG9yaW5nQ29tcGxldGVkRXZlbnQsIGNyZWF0ZUNvbm5lY3Rpb25SZXN0b3JpbmdFcnJvckV2ZW50LCBjcmVhdGVEaXNjb25uZWN0aW9uRXZlbnQsIGNyZWF0ZVRyYW5zYWN0aW9uU2VudEZvclNpZ25hdHVyZUV2ZW50LCBjcmVhdGVUcmFuc2FjdGlvblNpZ25lZEV2ZW50LCBjcmVhdGVUcmFuc2FjdGlvblNpZ25pbmdGYWlsZWRFdmVudCB9IGZyb20gXCJAdG9uY29ubmVjdC9zZGtcIjtcbmV4cG9ydCAqIGZyb20gXCJAdG9uY29ubmVjdC9zZGtcIjtcbmltcG9ydCBVQVBhcnNlciBmcm9tIFwidWEtcGFyc2VyLWpzXCI7XG5pbXBvcnQgZGVlcG1lcmdlIGZyb20gXCJkZWVwbWVyZ2VcIjtcbmltcG9ydCBjbiBmcm9tIFwiY2xhc3NuYW1lc1wiO1xuY29uc3Qgc2hhcmVkQ29uZmlnID0ge307XG5mdW5jdGlvbiBzZXRIeWRyYXRlQ29udGV4dChjb250ZXh0KSB7XG4gIHNoYXJlZENvbmZpZy5jb250ZXh0ID0gY29udGV4dDtcbn1cbmNvbnN0IGVxdWFsRm4gPSAoYTIsIGIpID0+IGEyID09PSBiO1xuY29uc3QgJFBST1hZID0gU3ltYm9sKFwic29saWQtcHJveHlcIik7XG5jb25zdCAkVFJBQ0sgPSBTeW1ib2woXCJzb2xpZC10cmFja1wiKTtcbmNvbnN0IHNpZ25hbE9wdGlvbnMgPSB7XG4gIGVxdWFsczogZXF1YWxGblxufTtcbmxldCBydW5FZmZlY3RzID0gcnVuUXVldWU7XG5jb25zdCBTVEFMRSA9IDE7XG5jb25zdCBQRU5ESU5HID0gMjtcbmNvbnN0IFVOT1dORUQgPSB7XG4gIG93bmVkOiBudWxsLFxuICBjbGVhbnVwczogbnVsbCxcbiAgY29udGV4dDogbnVsbCxcbiAgb3duZXI6IG51bGxcbn07XG5jb25zdCBOT19JTklUID0ge307XG52YXIgT3duZXIgPSBudWxsO1xubGV0IFRyYW5zaXRpb24kMSA9IG51bGw7XG5sZXQgTGlzdGVuZXIgPSBudWxsO1xubGV0IFVwZGF0ZXMgPSBudWxsO1xubGV0IEVmZmVjdHMgPSBudWxsO1xubGV0IEV4ZWNDb3VudCA9IDA7XG5mdW5jdGlvbiBjcmVhdGVSb290KGZuLCBkZXRhY2hlZE93bmVyKSB7XG4gIGNvbnN0IGxpc3RlbmVyID0gTGlzdGVuZXIsIG93bmVyID0gT3duZXIsIHVub3duZWQgPSBmbi5sZW5ndGggPT09IDAsIHJvb3QgPSB1bm93bmVkID8gVU5PV05FRCA6IHtcbiAgICBvd25lZDogbnVsbCxcbiAgICBjbGVhbnVwczogbnVsbCxcbiAgICBjb250ZXh0OiBudWxsLFxuICAgIG93bmVyOiBkZXRhY2hlZE93bmVyID09PSB2b2lkIDAgPyBvd25lciA6IGRldGFjaGVkT3duZXJcbiAgfSwgdXBkYXRlRm4gPSB1bm93bmVkID8gZm4gOiAoKSA9PiBmbigoKSA9PiB1bnRyYWNrKCgpID0+IGNsZWFuTm9kZShyb290KSkpO1xuICBPd25lciA9IHJvb3Q7XG4gIExpc3RlbmVyID0gbnVsbDtcbiAgdHJ5IHtcbiAgICByZXR1cm4gcnVuVXBkYXRlcyh1cGRhdGVGbiwgdHJ1ZSk7XG4gIH0gZmluYWxseSB7XG4gICAgTGlzdGVuZXIgPSBsaXN0ZW5lcjtcbiAgICBPd25lciA9IG93bmVyO1xuICB9XG59XG5mdW5jdGlvbiBjcmVhdGVTaWduYWwodmFsdWUsIG9wdGlvbnMpIHtcbiAgb3B0aW9ucyA9IG9wdGlvbnMgPyBPYmplY3QuYXNzaWduKHt9LCBzaWduYWxPcHRpb25zLCBvcHRpb25zKSA6IHNpZ25hbE9wdGlvbnM7XG4gIGNvbnN0IHMyID0ge1xuICAgIHZhbHVlLFxuICAgIG9ic2VydmVyczogbnVsbCxcbiAgICBvYnNlcnZlclNsb3RzOiBudWxsLFxuICAgIGNvbXBhcmF0b3I6IG9wdGlvbnMuZXF1YWxzIHx8IHZvaWQgMFxuICB9O1xuICBjb25zdCBzZXR0ZXIgPSAodmFsdWUyKSA9PiB7XG4gICAgaWYgKHR5cGVvZiB2YWx1ZTIgPT09IFwiZnVuY3Rpb25cIikge1xuICAgICAgdmFsdWUyID0gdmFsdWUyKHMyLnZhbHVlKTtcbiAgICB9XG4gICAgcmV0dXJuIHdyaXRlU2lnbmFsKHMyLCB2YWx1ZTIpO1xuICB9O1xuICByZXR1cm4gW3JlYWRTaWduYWwuYmluZChzMiksIHNldHRlcl07XG59XG5mdW5jdGlvbiBjcmVhdGVDb21wdXRlZChmbiwgdmFsdWUsIG9wdGlvbnMpIHtcbiAgY29uc3QgYzIgPSBjcmVhdGVDb21wdXRhdGlvbihmbiwgdmFsdWUsIHRydWUsIFNUQUxFKTtcbiAgdXBkYXRlQ29tcHV0YXRpb24oYzIpO1xufVxuZnVuY3Rpb24gY3JlYXRlUmVuZGVyRWZmZWN0KGZuLCB2YWx1ZSwgb3B0aW9ucykge1xuICBjb25zdCBjMiA9IGNyZWF0ZUNvbXB1dGF0aW9uKGZuLCB2YWx1ZSwgZmFsc2UsIFNUQUxFKTtcbiAgdXBkYXRlQ29tcHV0YXRpb24oYzIpO1xufVxuZnVuY3Rpb24gY3JlYXRlRWZmZWN0KGZuLCB2YWx1ZSwgb3B0aW9ucykge1xuICBydW5FZmZlY3RzID0gcnVuVXNlckVmZmVjdHM7XG4gIGNvbnN0IGMyID0gY3JlYXRlQ29tcHV0YXRpb24oZm4sIHZhbHVlLCBmYWxzZSwgU1RBTEUpO1xuICBjMi51c2VyID0gdHJ1ZTtcbiAgRWZmZWN0cyA/IEVmZmVjdHMucHVzaChjMikgOiB1cGRhdGVDb21wdXRhdGlvbihjMik7XG59XG5mdW5jdGlvbiBjcmVhdGVNZW1vKGZuLCB2YWx1ZSwgb3B0aW9ucykge1xuICBvcHRpb25zID0gb3B0aW9ucyA/IE9iamVjdC5hc3NpZ24oe30sIHNpZ25hbE9wdGlvbnMsIG9wdGlvbnMpIDogc2lnbmFsT3B0aW9ucztcbiAgY29uc3QgYzIgPSBjcmVhdGVDb21wdXRhdGlvbihmbiwgdmFsdWUsIHRydWUsIDApO1xuICBjMi5vYnNlcnZlcnMgPSBudWxsO1xuICBjMi5vYnNlcnZlclNsb3RzID0gbnVsbDtcbiAgYzIuY29tcGFyYXRvciA9IG9wdGlvbnMuZXF1YWxzIHx8IHZvaWQgMDtcbiAgdXBkYXRlQ29tcHV0YXRpb24oYzIpO1xuICByZXR1cm4gcmVhZFNpZ25hbC5iaW5kKGMyKTtcbn1cbmZ1bmN0aW9uIGNyZWF0ZVJlc291cmNlKHBTb3VyY2UsIHBGZXRjaGVyLCBwT3B0aW9ucykge1xuICBsZXQgc291cmNlO1xuICBsZXQgZmV0Y2hlcjtcbiAgbGV0IG9wdGlvbnM7XG4gIGlmIChhcmd1bWVudHMubGVuZ3RoID09PSAyICYmIHR5cGVvZiBwRmV0Y2hlciA9PT0gXCJvYmplY3RcIiB8fCBhcmd1bWVudHMubGVuZ3RoID09PSAxKSB7XG4gICAgc291cmNlID0gdHJ1ZTtcbiAgICBmZXRjaGVyID0gcFNvdXJjZTtcbiAgICBvcHRpb25zID0gcEZldGNoZXIgfHwge307XG4gIH0gZWxzZSB7XG4gICAgc291cmNlID0gcFNvdXJjZTtcbiAgICBmZXRjaGVyID0gcEZldGNoZXI7XG4gICAgb3B0aW9ucyA9IHBPcHRpb25zIHx8IHt9O1xuICB9XG4gIGxldCBwciA9IG51bGwsIGluaXRQID0gTk9fSU5JVCwgaWQgPSBudWxsLCBzY2hlZHVsZWQgPSBmYWxzZSwgcmVzb2x2ZWQgPSBcImluaXRpYWxWYWx1ZVwiIGluIG9wdGlvbnMsIGR5bmFtaWMgPSB0eXBlb2Ygc291cmNlID09PSBcImZ1bmN0aW9uXCIgJiYgY3JlYXRlTWVtbyhzb3VyY2UpO1xuICBjb25zdCBjb250ZXh0cyA9IC8qIEBfX1BVUkVfXyAqLyBuZXcgU2V0KCksIFt2YWx1ZSwgc2V0VmFsdWVdID0gKG9wdGlvbnMuc3RvcmFnZSB8fCBjcmVhdGVTaWduYWwpKG9wdGlvbnMuaW5pdGlhbFZhbHVlKSwgW2Vycm9yLCBzZXRFcnJvcl0gPSBjcmVhdGVTaWduYWwodm9pZCAwKSwgW3RyYWNrLCB0cmlnZ2VyXSA9IGNyZWF0ZVNpZ25hbCh2b2lkIDAsIHtcbiAgICBlcXVhbHM6IGZhbHNlXG4gIH0pLCBbc3RhdGUsIHNldFN0YXRlXSA9IGNyZWF0ZVNpZ25hbChyZXNvbHZlZCA/IFwicmVhZHlcIiA6IFwidW5yZXNvbHZlZFwiKTtcbiAgaWYgKHNoYXJlZENvbmZpZy5jb250ZXh0KSB7XG4gICAgaWQgPSBgJHtzaGFyZWRDb25maWcuY29udGV4dC5pZH0ke3NoYXJlZENvbmZpZy5jb250ZXh0LmNvdW50Kyt9YDtcbiAgICBsZXQgdjtcbiAgICBpZiAob3B0aW9ucy5zc3JMb2FkRnJvbSA9PT0gXCJpbml0aWFsXCIpXG4gICAgICBpbml0UCA9IG9wdGlvbnMuaW5pdGlhbFZhbHVlO1xuICAgIGVsc2UgaWYgKHNoYXJlZENvbmZpZy5sb2FkICYmICh2ID0gc2hhcmVkQ29uZmlnLmxvYWQoaWQpKSlcbiAgICAgIGluaXRQID0gdlswXTtcbiAgfVxuICBmdW5jdGlvbiBsb2FkRW5kKHAyLCB2LCBlcnJvcjIsIGtleSkge1xuICAgIGlmIChwciA9PT0gcDIpIHtcbiAgICAgIHByID0gbnVsbDtcbiAgICAgIHJlc29sdmVkID0gdHJ1ZTtcbiAgICAgIGlmICgocDIgPT09IGluaXRQIHx8IHYgPT09IGluaXRQKSAmJiBvcHRpb25zLm9uSHlkcmF0ZWQpXG4gICAgICAgIHF1ZXVlTWljcm90YXNrKCgpID0+IG9wdGlvbnMub25IeWRyYXRlZChrZXksIHtcbiAgICAgICAgICB2YWx1ZTogdlxuICAgICAgICB9KSk7XG4gICAgICBpbml0UCA9IE5PX0lOSVQ7XG4gICAgICBjb21wbGV0ZUxvYWQodiwgZXJyb3IyKTtcbiAgICB9XG4gICAgcmV0dXJuIHY7XG4gIH1cbiAgZnVuY3Rpb24gY29tcGxldGVMb2FkKHYsIGVycikge1xuICAgIHJ1blVwZGF0ZXMoKCkgPT4ge1xuICAgICAgaWYgKGVyciA9PT0gdm9pZCAwKVxuICAgICAgICBzZXRWYWx1ZSgoKSA9PiB2KTtcbiAgICAgIHNldFN0YXRlKGVyciAhPT0gdm9pZCAwID8gXCJlcnJvcmVkXCIgOiBcInJlYWR5XCIpO1xuICAgICAgc2V0RXJyb3IoZXJyKTtcbiAgICAgIGZvciAoY29uc3QgYzIgb2YgY29udGV4dHMua2V5cygpKVxuICAgICAgICBjMi5kZWNyZW1lbnQoKTtcbiAgICAgIGNvbnRleHRzLmNsZWFyKCk7XG4gICAgfSwgZmFsc2UpO1xuICB9XG4gIGZ1bmN0aW9uIHJlYWQoKSB7XG4gICAgY29uc3QgYzIgPSBTdXNwZW5zZUNvbnRleHQsIHYgPSB2YWx1ZSgpLCBlcnIgPSBlcnJvcigpO1xuICAgIGlmIChlcnIgIT09IHZvaWQgMCAmJiAhcHIpXG4gICAgICB0aHJvdyBlcnI7XG4gICAgaWYgKExpc3RlbmVyICYmICFMaXN0ZW5lci51c2VyICYmIGMyKSB7XG4gICAgICBjcmVhdGVDb21wdXRlZCgoKSA9PiB7XG4gICAgICAgIHRyYWNrKCk7XG4gICAgICAgIGlmIChwcikge1xuICAgICAgICAgIGlmIChjMi5yZXNvbHZlZClcbiAgICAgICAgICAgIDtcbiAgICAgICAgICBlbHNlIGlmICghY29udGV4dHMuaGFzKGMyKSkge1xuICAgICAgICAgICAgYzIuaW5jcmVtZW50KCk7XG4gICAgICAgICAgICBjb250ZXh0cy5hZGQoYzIpO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfVxuICAgIHJldHVybiB2O1xuICB9XG4gIGZ1bmN0aW9uIGxvYWQocmVmZXRjaGluZyA9IHRydWUpIHtcbiAgICBpZiAocmVmZXRjaGluZyAhPT0gZmFsc2UgJiYgc2NoZWR1bGVkKVxuICAgICAgcmV0dXJuO1xuICAgIHNjaGVkdWxlZCA9IGZhbHNlO1xuICAgIGNvbnN0IGxvb2t1cDIgPSBkeW5hbWljID8gZHluYW1pYygpIDogc291cmNlO1xuICAgIGlmIChsb29rdXAyID09IG51bGwgfHwgbG9va3VwMiA9PT0gZmFsc2UpIHtcbiAgICAgIGxvYWRFbmQocHIsIHVudHJhY2sodmFsdWUpKTtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgY29uc3QgcDIgPSBpbml0UCAhPT0gTk9fSU5JVCA/IGluaXRQIDogdW50cmFjaygoKSA9PiBmZXRjaGVyKGxvb2t1cDIsIHtcbiAgICAgIHZhbHVlOiB2YWx1ZSgpLFxuICAgICAgcmVmZXRjaGluZ1xuICAgIH0pKTtcbiAgICBpZiAodHlwZW9mIHAyICE9PSBcIm9iamVjdFwiIHx8ICEocDIgJiYgXCJ0aGVuXCIgaW4gcDIpKSB7XG4gICAgICBsb2FkRW5kKHByLCBwMiwgdm9pZCAwLCBsb29rdXAyKTtcbiAgICAgIHJldHVybiBwMjtcbiAgICB9XG4gICAgcHIgPSBwMjtcbiAgICBzY2hlZHVsZWQgPSB0cnVlO1xuICAgIHF1ZXVlTWljcm90YXNrKCgpID0+IHNjaGVkdWxlZCA9IGZhbHNlKTtcbiAgICBydW5VcGRhdGVzKCgpID0+IHtcbiAgICAgIHNldFN0YXRlKHJlc29sdmVkID8gXCJyZWZyZXNoaW5nXCIgOiBcInBlbmRpbmdcIik7XG4gICAgICB0cmlnZ2VyKCk7XG4gICAgfSwgZmFsc2UpO1xuICAgIHJldHVybiBwMi50aGVuKCh2KSA9PiBsb2FkRW5kKHAyLCB2LCB2b2lkIDAsIGxvb2t1cDIpLCAoZTIpID0+IGxvYWRFbmQocDIsIHZvaWQgMCwgY2FzdEVycm9yKGUyKSwgbG9va3VwMikpO1xuICB9XG4gIE9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKHJlYWQsIHtcbiAgICBzdGF0ZToge1xuICAgICAgZ2V0OiAoKSA9PiBzdGF0ZSgpXG4gICAgfSxcbiAgICBlcnJvcjoge1xuICAgICAgZ2V0OiAoKSA9PiBlcnJvcigpXG4gICAgfSxcbiAgICBsb2FkaW5nOiB7XG4gICAgICBnZXQoKSB7XG4gICAgICAgIGNvbnN0IHMyID0gc3RhdGUoKTtcbiAgICAgICAgcmV0dXJuIHMyID09PSBcInBlbmRpbmdcIiB8fCBzMiA9PT0gXCJyZWZyZXNoaW5nXCI7XG4gICAgICB9XG4gICAgfSxcbiAgICBsYXRlc3Q6IHtcbiAgICAgIGdldCgpIHtcbiAgICAgICAgaWYgKCFyZXNvbHZlZClcbiAgICAgICAgICByZXR1cm4gcmVhZCgpO1xuICAgICAgICBjb25zdCBlcnIgPSBlcnJvcigpO1xuICAgICAgICBpZiAoZXJyICYmICFwcilcbiAgICAgICAgICB0aHJvdyBlcnI7XG4gICAgICAgIHJldHVybiB2YWx1ZSgpO1xuICAgICAgfVxuICAgIH1cbiAgfSk7XG4gIGlmIChkeW5hbWljKVxuICAgIGNyZWF0ZUNvbXB1dGVkKCgpID0+IGxvYWQoZmFsc2UpKTtcbiAgZWxzZVxuICAgIGxvYWQoZmFsc2UpO1xuICByZXR1cm4gW3JlYWQsIHtcbiAgICByZWZldGNoOiBsb2FkLFxuICAgIG11dGF0ZTogc2V0VmFsdWVcbiAgfV07XG59XG5mdW5jdGlvbiBiYXRjaChmbikge1xuICByZXR1cm4gcnVuVXBkYXRlcyhmbiwgZmFsc2UpO1xufVxuZnVuY3Rpb24gdW50cmFjayhmbikge1xuICBpZiAoTGlzdGVuZXIgPT09IG51bGwpXG4gICAgcmV0dXJuIGZuKCk7XG4gIGNvbnN0IGxpc3RlbmVyID0gTGlzdGVuZXI7XG4gIExpc3RlbmVyID0gbnVsbDtcbiAgdHJ5IHtcbiAgICByZXR1cm4gZm4oKTtcbiAgfSBmaW5hbGx5IHtcbiAgICBMaXN0ZW5lciA9IGxpc3RlbmVyO1xuICB9XG59XG5mdW5jdGlvbiBvbihkZXBzLCBmbiwgb3B0aW9ucykge1xuICBjb25zdCBpc0FycmF5ID0gQXJyYXkuaXNBcnJheShkZXBzKTtcbiAgbGV0IHByZXZJbnB1dDtcbiAgbGV0IGRlZmVyID0gb3B0aW9ucyAmJiBvcHRpb25zLmRlZmVyO1xuICByZXR1cm4gKHByZXZWYWx1ZSkgPT4ge1xuICAgIGxldCBpbnB1dDtcbiAgICBpZiAoaXNBcnJheSkge1xuICAgICAgaW5wdXQgPSBBcnJheShkZXBzLmxlbmd0aCk7XG4gICAgICBmb3IgKGxldCBpMiA9IDA7IGkyIDwgZGVwcy5sZW5ndGg7IGkyKyspXG4gICAgICAgIGlucHV0W2kyXSA9IGRlcHNbaTJdKCk7XG4gICAgfSBlbHNlXG4gICAgICBpbnB1dCA9IGRlcHMoKTtcbiAgICBpZiAoZGVmZXIpIHtcbiAgICAgIGRlZmVyID0gZmFsc2U7XG4gICAgICByZXR1cm4gdm9pZCAwO1xuICAgIH1cbiAgICBjb25zdCByZXN1bHQgPSB1bnRyYWNrKCgpID0+IGZuKGlucHV0LCBwcmV2SW5wdXQsIHByZXZWYWx1ZSkpO1xuICAgIHByZXZJbnB1dCA9IGlucHV0O1xuICAgIHJldHVybiByZXN1bHQ7XG4gIH07XG59XG5mdW5jdGlvbiBvbk1vdW50KGZuKSB7XG4gIGNyZWF0ZUVmZmVjdCgoKSA9PiB1bnRyYWNrKGZuKSk7XG59XG5mdW5jdGlvbiBvbkNsZWFudXAoZm4pIHtcbiAgaWYgKE93bmVyID09PSBudWxsKVxuICAgIDtcbiAgZWxzZSBpZiAoT3duZXIuY2xlYW51cHMgPT09IG51bGwpXG4gICAgT3duZXIuY2xlYW51cHMgPSBbZm5dO1xuICBlbHNlXG4gICAgT3duZXIuY2xlYW51cHMucHVzaChmbik7XG4gIHJldHVybiBmbjtcbn1cbmZ1bmN0aW9uIGdldExpc3RlbmVyKCkge1xuICByZXR1cm4gTGlzdGVuZXI7XG59XG5mdW5jdGlvbiBnZXRPd25lcigpIHtcbiAgcmV0dXJuIE93bmVyO1xufVxuZnVuY3Rpb24gY3JlYXRlQ29udGV4dChkZWZhdWx0VmFsdWUsIG9wdGlvbnMpIHtcbiAgY29uc3QgaWQgPSBTeW1ib2woXCJjb250ZXh0XCIpO1xuICByZXR1cm4ge1xuICAgIGlkLFxuICAgIFByb3ZpZGVyOiBjcmVhdGVQcm92aWRlcihpZCksXG4gICAgZGVmYXVsdFZhbHVlXG4gIH07XG59XG5mdW5jdGlvbiB1c2VDb250ZXh0KGNvbnRleHQpIHtcbiAgbGV0IGN0eDtcbiAgcmV0dXJuIChjdHggPSBsb29rdXAoT3duZXIsIGNvbnRleHQuaWQpKSAhPT0gdm9pZCAwID8gY3R4IDogY29udGV4dC5kZWZhdWx0VmFsdWU7XG59XG5mdW5jdGlvbiBjaGlsZHJlbihmbikge1xuICBjb25zdCBjaGlsZHJlbjIgPSBjcmVhdGVNZW1vKGZuKTtcbiAgY29uc3QgbWVtbyA9IGNyZWF0ZU1lbW8oKCkgPT4gcmVzb2x2ZUNoaWxkcmVuKGNoaWxkcmVuMigpKSk7XG4gIG1lbW8udG9BcnJheSA9ICgpID0+IHtcbiAgICBjb25zdCBjMiA9IG1lbW8oKTtcbiAgICByZXR1cm4gQXJyYXkuaXNBcnJheShjMikgPyBjMiA6IGMyICE9IG51bGwgPyBbYzJdIDogW107XG4gIH07XG4gIHJldHVybiBtZW1vO1xufVxubGV0IFN1c3BlbnNlQ29udGV4dDtcbmZ1bmN0aW9uIHJlYWRTaWduYWwoKSB7XG4gIGNvbnN0IHJ1bm5pbmdUcmFuc2l0aW9uID0gVHJhbnNpdGlvbiQxO1xuICBpZiAodGhpcy5zb3VyY2VzICYmICh0aGlzLnN0YXRlIHx8IHJ1bm5pbmdUcmFuc2l0aW9uKSkge1xuICAgIGlmICh0aGlzLnN0YXRlID09PSBTVEFMRSB8fCBydW5uaW5nVHJhbnNpdGlvbilcbiAgICAgIHVwZGF0ZUNvbXB1dGF0aW9uKHRoaXMpO1xuICAgIGVsc2Uge1xuICAgICAgY29uc3QgdXBkYXRlcyA9IFVwZGF0ZXM7XG4gICAgICBVcGRhdGVzID0gbnVsbDtcbiAgICAgIHJ1blVwZGF0ZXMoKCkgPT4gbG9va1Vwc3RyZWFtKHRoaXMpLCBmYWxzZSk7XG4gICAgICBVcGRhdGVzID0gdXBkYXRlcztcbiAgICB9XG4gIH1cbiAgaWYgKExpc3RlbmVyKSB7XG4gICAgY29uc3Qgc1Nsb3QgPSB0aGlzLm9ic2VydmVycyA/IHRoaXMub2JzZXJ2ZXJzLmxlbmd0aCA6IDA7XG4gICAgaWYgKCFMaXN0ZW5lci5zb3VyY2VzKSB7XG4gICAgICBMaXN0ZW5lci5zb3VyY2VzID0gW3RoaXNdO1xuICAgICAgTGlzdGVuZXIuc291cmNlU2xvdHMgPSBbc1Nsb3RdO1xuICAgIH0gZWxzZSB7XG4gICAgICBMaXN0ZW5lci5zb3VyY2VzLnB1c2godGhpcyk7XG4gICAgICBMaXN0ZW5lci5zb3VyY2VTbG90cy5wdXNoKHNTbG90KTtcbiAgICB9XG4gICAgaWYgKCF0aGlzLm9ic2VydmVycykge1xuICAgICAgdGhpcy5vYnNlcnZlcnMgPSBbTGlzdGVuZXJdO1xuICAgICAgdGhpcy5vYnNlcnZlclNsb3RzID0gW0xpc3RlbmVyLnNvdXJjZXMubGVuZ3RoIC0gMV07XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMub2JzZXJ2ZXJzLnB1c2goTGlzdGVuZXIpO1xuICAgICAgdGhpcy5vYnNlcnZlclNsb3RzLnB1c2goTGlzdGVuZXIuc291cmNlcy5sZW5ndGggLSAxKTtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIHRoaXMudmFsdWU7XG59XG5mdW5jdGlvbiB3cml0ZVNpZ25hbChub2RlLCB2YWx1ZSwgaXNDb21wKSB7XG4gIGxldCBjdXJyZW50ID0gbm9kZS52YWx1ZTtcbiAgaWYgKCFub2RlLmNvbXBhcmF0b3IgfHwgIW5vZGUuY29tcGFyYXRvcihjdXJyZW50LCB2YWx1ZSkpIHtcbiAgICBub2RlLnZhbHVlID0gdmFsdWU7XG4gICAgaWYgKG5vZGUub2JzZXJ2ZXJzICYmIG5vZGUub2JzZXJ2ZXJzLmxlbmd0aCkge1xuICAgICAgcnVuVXBkYXRlcygoKSA9PiB7XG4gICAgICAgIGZvciAobGV0IGkyID0gMDsgaTIgPCBub2RlLm9ic2VydmVycy5sZW5ndGg7IGkyICs9IDEpIHtcbiAgICAgICAgICBjb25zdCBvMiA9IG5vZGUub2JzZXJ2ZXJzW2kyXTtcbiAgICAgICAgICBjb25zdCBUcmFuc2l0aW9uUnVubmluZyA9IFRyYW5zaXRpb24kMSAmJiBUcmFuc2l0aW9uJDEucnVubmluZztcbiAgICAgICAgICBpZiAoVHJhbnNpdGlvblJ1bm5pbmcgJiYgVHJhbnNpdGlvbiQxLmRpc3Bvc2VkLmhhcyhvMikpXG4gICAgICAgICAgICA7XG4gICAgICAgICAgaWYgKFRyYW5zaXRpb25SdW5uaW5nICYmICFvMi50U3RhdGUgfHwgIVRyYW5zaXRpb25SdW5uaW5nICYmICFvMi5zdGF0ZSkge1xuICAgICAgICAgICAgaWYgKG8yLnB1cmUpXG4gICAgICAgICAgICAgIFVwZGF0ZXMucHVzaChvMik7XG4gICAgICAgICAgICBlbHNlXG4gICAgICAgICAgICAgIEVmZmVjdHMucHVzaChvMik7XG4gICAgICAgICAgICBpZiAobzIub2JzZXJ2ZXJzKVxuICAgICAgICAgICAgICBtYXJrRG93bnN0cmVhbShvMik7XG4gICAgICAgICAgfVxuICAgICAgICAgIGlmIChUcmFuc2l0aW9uUnVubmluZylcbiAgICAgICAgICAgIDtcbiAgICAgICAgICBlbHNlXG4gICAgICAgICAgICBvMi5zdGF0ZSA9IFNUQUxFO1xuICAgICAgICB9XG4gICAgICAgIGlmIChVcGRhdGVzLmxlbmd0aCA+IDFlNikge1xuICAgICAgICAgIFVwZGF0ZXMgPSBbXTtcbiAgICAgICAgICBpZiAoZmFsc2UpXG4gICAgICAgICAgICA7XG4gICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCk7XG4gICAgICAgIH1cbiAgICAgIH0sIGZhbHNlKTtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIHZhbHVlO1xufVxuZnVuY3Rpb24gdXBkYXRlQ29tcHV0YXRpb24obm9kZSkge1xuICBpZiAoIW5vZGUuZm4pXG4gICAgcmV0dXJuO1xuICBjbGVhbk5vZGUobm9kZSk7XG4gIGNvbnN0IG93bmVyID0gT3duZXIsIGxpc3RlbmVyID0gTGlzdGVuZXIsIHRpbWUgPSBFeGVjQ291bnQ7XG4gIExpc3RlbmVyID0gT3duZXIgPSBub2RlO1xuICBydW5Db21wdXRhdGlvbihub2RlLCBub2RlLnZhbHVlLCB0aW1lKTtcbiAgTGlzdGVuZXIgPSBsaXN0ZW5lcjtcbiAgT3duZXIgPSBvd25lcjtcbn1cbmZ1bmN0aW9uIHJ1bkNvbXB1dGF0aW9uKG5vZGUsIHZhbHVlLCB0aW1lKSB7XG4gIGxldCBuZXh0VmFsdWU7XG4gIHRyeSB7XG4gICAgbmV4dFZhbHVlID0gbm9kZS5mbih2YWx1ZSk7XG4gIH0gY2F0Y2ggKGVycikge1xuICAgIGlmIChub2RlLnB1cmUpIHtcbiAgICAgIHtcbiAgICAgICAgbm9kZS5zdGF0ZSA9IFNUQUxFO1xuICAgICAgICBub2RlLm93bmVkICYmIG5vZGUub3duZWQuZm9yRWFjaChjbGVhbk5vZGUpO1xuICAgICAgICBub2RlLm93bmVkID0gbnVsbDtcbiAgICAgIH1cbiAgICB9XG4gICAgaGFuZGxlRXJyb3IoZXJyKTtcbiAgfVxuICBpZiAoIW5vZGUudXBkYXRlZEF0IHx8IG5vZGUudXBkYXRlZEF0IDw9IHRpbWUpIHtcbiAgICBpZiAobm9kZS51cGRhdGVkQXQgIT0gbnVsbCAmJiBcIm9ic2VydmVyc1wiIGluIG5vZGUpIHtcbiAgICAgIHdyaXRlU2lnbmFsKG5vZGUsIG5leHRWYWx1ZSk7XG4gICAgfSBlbHNlXG4gICAgICBub2RlLnZhbHVlID0gbmV4dFZhbHVlO1xuICAgIG5vZGUudXBkYXRlZEF0ID0gdGltZTtcbiAgfVxufVxuZnVuY3Rpb24gY3JlYXRlQ29tcHV0YXRpb24oZm4sIGluaXQsIHB1cmUsIHN0YXRlID0gU1RBTEUsIG9wdGlvbnMpIHtcbiAgY29uc3QgYzIgPSB7XG4gICAgZm4sXG4gICAgc3RhdGUsXG4gICAgdXBkYXRlZEF0OiBudWxsLFxuICAgIG93bmVkOiBudWxsLFxuICAgIHNvdXJjZXM6IG51bGwsXG4gICAgc291cmNlU2xvdHM6IG51bGwsXG4gICAgY2xlYW51cHM6IG51bGwsXG4gICAgdmFsdWU6IGluaXQsXG4gICAgb3duZXI6IE93bmVyLFxuICAgIGNvbnRleHQ6IG51bGwsXG4gICAgcHVyZVxuICB9O1xuICBpZiAoT3duZXIgPT09IG51bGwpXG4gICAgO1xuICBlbHNlIGlmIChPd25lciAhPT0gVU5PV05FRCkge1xuICAgIHtcbiAgICAgIGlmICghT3duZXIub3duZWQpXG4gICAgICAgIE93bmVyLm93bmVkID0gW2MyXTtcbiAgICAgIGVsc2VcbiAgICAgICAgT3duZXIub3duZWQucHVzaChjMik7XG4gICAgfVxuICB9XG4gIHJldHVybiBjMjtcbn1cbmZ1bmN0aW9uIHJ1blRvcChub2RlKSB7XG4gIGNvbnN0IHJ1bm5pbmdUcmFuc2l0aW9uID0gVHJhbnNpdGlvbiQxO1xuICBpZiAobm9kZS5zdGF0ZSA9PT0gMCB8fCBydW5uaW5nVHJhbnNpdGlvbilcbiAgICByZXR1cm47XG4gIGlmIChub2RlLnN0YXRlID09PSBQRU5ESU5HIHx8IHJ1bm5pbmdUcmFuc2l0aW9uKVxuICAgIHJldHVybiBsb29rVXBzdHJlYW0obm9kZSk7XG4gIGlmIChub2RlLnN1c3BlbnNlICYmIHVudHJhY2sobm9kZS5zdXNwZW5zZS5pbkZhbGxiYWNrKSlcbiAgICByZXR1cm4gbm9kZS5zdXNwZW5zZS5lZmZlY3RzLnB1c2gobm9kZSk7XG4gIGNvbnN0IGFuY2VzdG9ycyA9IFtub2RlXTtcbiAgd2hpbGUgKChub2RlID0gbm9kZS5vd25lcikgJiYgKCFub2RlLnVwZGF0ZWRBdCB8fCBub2RlLnVwZGF0ZWRBdCA8IEV4ZWNDb3VudCkpIHtcbiAgICBpZiAobm9kZS5zdGF0ZSB8fCBydW5uaW5nVHJhbnNpdGlvbilcbiAgICAgIGFuY2VzdG9ycy5wdXNoKG5vZGUpO1xuICB9XG4gIGZvciAobGV0IGkyID0gYW5jZXN0b3JzLmxlbmd0aCAtIDE7IGkyID49IDA7IGkyLS0pIHtcbiAgICBub2RlID0gYW5jZXN0b3JzW2kyXTtcbiAgICBpZiAobm9kZS5zdGF0ZSA9PT0gU1RBTEUgfHwgcnVubmluZ1RyYW5zaXRpb24pIHtcbiAgICAgIHVwZGF0ZUNvbXB1dGF0aW9uKG5vZGUpO1xuICAgIH0gZWxzZSBpZiAobm9kZS5zdGF0ZSA9PT0gUEVORElORyB8fCBydW5uaW5nVHJhbnNpdGlvbikge1xuICAgICAgY29uc3QgdXBkYXRlcyA9IFVwZGF0ZXM7XG4gICAgICBVcGRhdGVzID0gbnVsbDtcbiAgICAgIHJ1blVwZGF0ZXMoKCkgPT4gbG9va1Vwc3RyZWFtKG5vZGUsIGFuY2VzdG9yc1swXSksIGZhbHNlKTtcbiAgICAgIFVwZGF0ZXMgPSB1cGRhdGVzO1xuICAgIH1cbiAgfVxufVxuZnVuY3Rpb24gcnVuVXBkYXRlcyhmbiwgaW5pdCkge1xuICBpZiAoVXBkYXRlcylcbiAgICByZXR1cm4gZm4oKTtcbiAgbGV0IHdhaXQgPSBmYWxzZTtcbiAgaWYgKCFpbml0KVxuICAgIFVwZGF0ZXMgPSBbXTtcbiAgaWYgKEVmZmVjdHMpXG4gICAgd2FpdCA9IHRydWU7XG4gIGVsc2VcbiAgICBFZmZlY3RzID0gW107XG4gIEV4ZWNDb3VudCsrO1xuICB0cnkge1xuICAgIGNvbnN0IHJlcyA9IGZuKCk7XG4gICAgY29tcGxldGVVcGRhdGVzKHdhaXQpO1xuICAgIHJldHVybiByZXM7XG4gIH0gY2F0Y2ggKGVycikge1xuICAgIGlmICghd2FpdClcbiAgICAgIEVmZmVjdHMgPSBudWxsO1xuICAgIFVwZGF0ZXMgPSBudWxsO1xuICAgIGhhbmRsZUVycm9yKGVycik7XG4gIH1cbn1cbmZ1bmN0aW9uIGNvbXBsZXRlVXBkYXRlcyh3YWl0KSB7XG4gIGlmIChVcGRhdGVzKSB7XG4gICAgcnVuUXVldWUoVXBkYXRlcyk7XG4gICAgVXBkYXRlcyA9IG51bGw7XG4gIH1cbiAgaWYgKHdhaXQpXG4gICAgcmV0dXJuO1xuICBjb25zdCBlMiA9IEVmZmVjdHM7XG4gIEVmZmVjdHMgPSBudWxsO1xuICBpZiAoZTIubGVuZ3RoKVxuICAgIHJ1blVwZGF0ZXMoKCkgPT4gcnVuRWZmZWN0cyhlMiksIGZhbHNlKTtcbn1cbmZ1bmN0aW9uIHJ1blF1ZXVlKHF1ZXVlKSB7XG4gIGZvciAobGV0IGkyID0gMDsgaTIgPCBxdWV1ZS5sZW5ndGg7IGkyKyspXG4gICAgcnVuVG9wKHF1ZXVlW2kyXSk7XG59XG5mdW5jdGlvbiBydW5Vc2VyRWZmZWN0cyhxdWV1ZSkge1xuICBsZXQgaTIsIHVzZXJMZW5ndGggPSAwO1xuICBmb3IgKGkyID0gMDsgaTIgPCBxdWV1ZS5sZW5ndGg7IGkyKyspIHtcbiAgICBjb25zdCBlMiA9IHF1ZXVlW2kyXTtcbiAgICBpZiAoIWUyLnVzZXIpXG4gICAgICBydW5Ub3AoZTIpO1xuICAgIGVsc2VcbiAgICAgIHF1ZXVlW3VzZXJMZW5ndGgrK10gPSBlMjtcbiAgfVxuICBpZiAoc2hhcmVkQ29uZmlnLmNvbnRleHQpXG4gICAgc2V0SHlkcmF0ZUNvbnRleHQoKTtcbiAgZm9yIChpMiA9IDA7IGkyIDwgdXNlckxlbmd0aDsgaTIrKylcbiAgICBydW5Ub3AocXVldWVbaTJdKTtcbn1cbmZ1bmN0aW9uIGxvb2tVcHN0cmVhbShub2RlLCBpZ25vcmUpIHtcbiAgY29uc3QgcnVubmluZ1RyYW5zaXRpb24gPSBUcmFuc2l0aW9uJDE7XG4gIG5vZGUuc3RhdGUgPSAwO1xuICBmb3IgKGxldCBpMiA9IDA7IGkyIDwgbm9kZS5zb3VyY2VzLmxlbmd0aDsgaTIgKz0gMSkge1xuICAgIGNvbnN0IHNvdXJjZSA9IG5vZGUuc291cmNlc1tpMl07XG4gICAgaWYgKHNvdXJjZS5zb3VyY2VzKSB7XG4gICAgICBpZiAoc291cmNlLnN0YXRlID09PSBTVEFMRSB8fCBydW5uaW5nVHJhbnNpdGlvbikge1xuICAgICAgICBpZiAoc291cmNlICE9PSBpZ25vcmUpXG4gICAgICAgICAgcnVuVG9wKHNvdXJjZSk7XG4gICAgICB9IGVsc2UgaWYgKHNvdXJjZS5zdGF0ZSA9PT0gUEVORElORyB8fCBydW5uaW5nVHJhbnNpdGlvbilcbiAgICAgICAgbG9va1Vwc3RyZWFtKHNvdXJjZSwgaWdub3JlKTtcbiAgICB9XG4gIH1cbn1cbmZ1bmN0aW9uIG1hcmtEb3duc3RyZWFtKG5vZGUpIHtcbiAgY29uc3QgcnVubmluZ1RyYW5zaXRpb24gPSBUcmFuc2l0aW9uJDE7XG4gIGZvciAobGV0IGkyID0gMDsgaTIgPCBub2RlLm9ic2VydmVycy5sZW5ndGg7IGkyICs9IDEpIHtcbiAgICBjb25zdCBvMiA9IG5vZGUub2JzZXJ2ZXJzW2kyXTtcbiAgICBpZiAoIW8yLnN0YXRlIHx8IHJ1bm5pbmdUcmFuc2l0aW9uKSB7XG4gICAgICBvMi5zdGF0ZSA9IFBFTkRJTkc7XG4gICAgICBpZiAobzIucHVyZSlcbiAgICAgICAgVXBkYXRlcy5wdXNoKG8yKTtcbiAgICAgIGVsc2VcbiAgICAgICAgRWZmZWN0cy5wdXNoKG8yKTtcbiAgICAgIG8yLm9ic2VydmVycyAmJiBtYXJrRG93bnN0cmVhbShvMik7XG4gICAgfVxuICB9XG59XG5mdW5jdGlvbiBjbGVhbk5vZGUobm9kZSkge1xuICBsZXQgaTI7XG4gIGlmIChub2RlLnNvdXJjZXMpIHtcbiAgICB3aGlsZSAobm9kZS5zb3VyY2VzLmxlbmd0aCkge1xuICAgICAgY29uc3Qgc291cmNlID0gbm9kZS5zb3VyY2VzLnBvcCgpLCBpbmRleCA9IG5vZGUuc291cmNlU2xvdHMucG9wKCksIG9icyA9IHNvdXJjZS5vYnNlcnZlcnM7XG4gICAgICBpZiAob2JzICYmIG9icy5sZW5ndGgpIHtcbiAgICAgICAgY29uc3QgbjIgPSBvYnMucG9wKCksIHMyID0gc291cmNlLm9ic2VydmVyU2xvdHMucG9wKCk7XG4gICAgICAgIGlmIChpbmRleCA8IG9icy5sZW5ndGgpIHtcbiAgICAgICAgICBuMi5zb3VyY2VTbG90c1tzMl0gPSBpbmRleDtcbiAgICAgICAgICBvYnNbaW5kZXhdID0gbjI7XG4gICAgICAgICAgc291cmNlLm9ic2VydmVyU2xvdHNbaW5kZXhdID0gczI7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH1cbiAgaWYgKG5vZGUub3duZWQpIHtcbiAgICBmb3IgKGkyID0gMDsgaTIgPCBub2RlLm93bmVkLmxlbmd0aDsgaTIrKylcbiAgICAgIGNsZWFuTm9kZShub2RlLm93bmVkW2kyXSk7XG4gICAgbm9kZS5vd25lZCA9IG51bGw7XG4gIH1cbiAgaWYgKG5vZGUuY2xlYW51cHMpIHtcbiAgICBmb3IgKGkyID0gMDsgaTIgPCBub2RlLmNsZWFudXBzLmxlbmd0aDsgaTIrKylcbiAgICAgIG5vZGUuY2xlYW51cHNbaTJdKCk7XG4gICAgbm9kZS5jbGVhbnVwcyA9IG51bGw7XG4gIH1cbiAgbm9kZS5zdGF0ZSA9IDA7XG4gIG5vZGUuY29udGV4dCA9IG51bGw7XG59XG5mdW5jdGlvbiBjYXN0RXJyb3IoZXJyKSB7XG4gIGlmIChlcnIgaW5zdGFuY2VvZiBFcnJvciB8fCB0eXBlb2YgZXJyID09PSBcInN0cmluZ1wiKVxuICAgIHJldHVybiBlcnI7XG4gIHJldHVybiBuZXcgRXJyb3IoXCJVbmtub3duIGVycm9yXCIpO1xufVxuZnVuY3Rpb24gaGFuZGxlRXJyb3IoZXJyKSB7XG4gIGVyciA9IGNhc3RFcnJvcihlcnIpO1xuICB0aHJvdyBlcnI7XG59XG5mdW5jdGlvbiBsb29rdXAob3duZXIsIGtleSkge1xuICByZXR1cm4gb3duZXIgPyBvd25lci5jb250ZXh0ICYmIG93bmVyLmNvbnRleHRba2V5XSAhPT0gdm9pZCAwID8gb3duZXIuY29udGV4dFtrZXldIDogbG9va3VwKG93bmVyLm93bmVyLCBrZXkpIDogdm9pZCAwO1xufVxuZnVuY3Rpb24gcmVzb2x2ZUNoaWxkcmVuKGNoaWxkcmVuMikge1xuICBpZiAodHlwZW9mIGNoaWxkcmVuMiA9PT0gXCJmdW5jdGlvblwiICYmICFjaGlsZHJlbjIubGVuZ3RoKVxuICAgIHJldHVybiByZXNvbHZlQ2hpbGRyZW4oY2hpbGRyZW4yKCkpO1xuICBpZiAoQXJyYXkuaXNBcnJheShjaGlsZHJlbjIpKSB7XG4gICAgY29uc3QgcmVzdWx0cyA9IFtdO1xuICAgIGZvciAobGV0IGkyID0gMDsgaTIgPCBjaGlsZHJlbjIubGVuZ3RoOyBpMisrKSB7XG4gICAgICBjb25zdCByZXN1bHQgPSByZXNvbHZlQ2hpbGRyZW4oY2hpbGRyZW4yW2kyXSk7XG4gICAgICBBcnJheS5pc0FycmF5KHJlc3VsdCkgPyByZXN1bHRzLnB1c2guYXBwbHkocmVzdWx0cywgcmVzdWx0KSA6IHJlc3VsdHMucHVzaChyZXN1bHQpO1xuICAgIH1cbiAgICByZXR1cm4gcmVzdWx0cztcbiAgfVxuICByZXR1cm4gY2hpbGRyZW4yO1xufVxuZnVuY3Rpb24gY3JlYXRlUHJvdmlkZXIoaWQsIG9wdGlvbnMpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIHByb3ZpZGVyKHByb3BzKSB7XG4gICAgbGV0IHJlcztcbiAgICBjcmVhdGVSZW5kZXJFZmZlY3QoKCkgPT4gcmVzID0gdW50cmFjaygoKSA9PiB7XG4gICAgICBPd25lci5jb250ZXh0ID0ge1xuICAgICAgICBbaWRdOiBwcm9wcy52YWx1ZVxuICAgICAgfTtcbiAgICAgIHJldHVybiBjaGlsZHJlbigoKSA9PiBwcm9wcy5jaGlsZHJlbik7XG4gICAgfSksIHZvaWQgMCk7XG4gICAgcmV0dXJuIHJlcztcbiAgfTtcbn1cbmNvbnN0IEZBTExCQUNLID0gU3ltYm9sKFwiZmFsbGJhY2tcIik7XG5mdW5jdGlvbiBkaXNwb3NlKGQpIHtcbiAgZm9yIChsZXQgaTIgPSAwOyBpMiA8IGQubGVuZ3RoOyBpMisrKVxuICAgIGRbaTJdKCk7XG59XG5mdW5jdGlvbiBtYXBBcnJheShsaXN0LCBtYXBGbiwgb3B0aW9ucyA9IHt9KSB7XG4gIGxldCBpdGVtcyA9IFtdLCBtYXBwZWQgPSBbXSwgZGlzcG9zZXJzID0gW10sIGxlbiA9IDAsIGluZGV4ZXMgPSBtYXBGbi5sZW5ndGggPiAxID8gW10gOiBudWxsO1xuICBvbkNsZWFudXAoKCkgPT4gZGlzcG9zZShkaXNwb3NlcnMpKTtcbiAgcmV0dXJuICgpID0+IHtcbiAgICBsZXQgbmV3SXRlbXMgPSBsaXN0KCkgfHwgW10sIGkyLCBqO1xuICAgIG5ld0l0ZW1zWyRUUkFDS107XG4gICAgcmV0dXJuIHVudHJhY2soKCkgPT4ge1xuICAgICAgbGV0IG5ld0xlbiA9IG5ld0l0ZW1zLmxlbmd0aCwgbmV3SW5kaWNlcywgbmV3SW5kaWNlc05leHQsIHRlbXAsIHRlbXBkaXNwb3NlcnMsIHRlbXBJbmRleGVzLCBzdGFydCwgZW5kLCBuZXdFbmQsIGl0ZW07XG4gICAgICBpZiAobmV3TGVuID09PSAwKSB7XG4gICAgICAgIGlmIChsZW4gIT09IDApIHtcbiAgICAgICAgICBkaXNwb3NlKGRpc3Bvc2Vycyk7XG4gICAgICAgICAgZGlzcG9zZXJzID0gW107XG4gICAgICAgICAgaXRlbXMgPSBbXTtcbiAgICAgICAgICBtYXBwZWQgPSBbXTtcbiAgICAgICAgICBsZW4gPSAwO1xuICAgICAgICAgIGluZGV4ZXMgJiYgKGluZGV4ZXMgPSBbXSk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKG9wdGlvbnMuZmFsbGJhY2spIHtcbiAgICAgICAgICBpdGVtcyA9IFtGQUxMQkFDS107XG4gICAgICAgICAgbWFwcGVkWzBdID0gY3JlYXRlUm9vdCgoZGlzcG9zZXIpID0+IHtcbiAgICAgICAgICAgIGRpc3Bvc2Vyc1swXSA9IGRpc3Bvc2VyO1xuICAgICAgICAgICAgcmV0dXJuIG9wdGlvbnMuZmFsbGJhY2soKTtcbiAgICAgICAgICB9KTtcbiAgICAgICAgICBsZW4gPSAxO1xuICAgICAgICB9XG4gICAgICB9IGVsc2UgaWYgKGxlbiA9PT0gMCkge1xuICAgICAgICBtYXBwZWQgPSBuZXcgQXJyYXkobmV3TGVuKTtcbiAgICAgICAgZm9yIChqID0gMDsgaiA8IG5ld0xlbjsgaisrKSB7XG4gICAgICAgICAgaXRlbXNbal0gPSBuZXdJdGVtc1tqXTtcbiAgICAgICAgICBtYXBwZWRbal0gPSBjcmVhdGVSb290KG1hcHBlcik7XG4gICAgICAgIH1cbiAgICAgICAgbGVuID0gbmV3TGVuO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdGVtcCA9IG5ldyBBcnJheShuZXdMZW4pO1xuICAgICAgICB0ZW1wZGlzcG9zZXJzID0gbmV3IEFycmF5KG5ld0xlbik7XG4gICAgICAgIGluZGV4ZXMgJiYgKHRlbXBJbmRleGVzID0gbmV3IEFycmF5KG5ld0xlbikpO1xuICAgICAgICBmb3IgKHN0YXJ0ID0gMCwgZW5kID0gTWF0aC5taW4obGVuLCBuZXdMZW4pOyBzdGFydCA8IGVuZCAmJiBpdGVtc1tzdGFydF0gPT09IG5ld0l0ZW1zW3N0YXJ0XTsgc3RhcnQrKylcbiAgICAgICAgICA7XG4gICAgICAgIGZvciAoZW5kID0gbGVuIC0gMSwgbmV3RW5kID0gbmV3TGVuIC0gMTsgZW5kID49IHN0YXJ0ICYmIG5ld0VuZCA+PSBzdGFydCAmJiBpdGVtc1tlbmRdID09PSBuZXdJdGVtc1tuZXdFbmRdOyBlbmQtLSwgbmV3RW5kLS0pIHtcbiAgICAgICAgICB0ZW1wW25ld0VuZF0gPSBtYXBwZWRbZW5kXTtcbiAgICAgICAgICB0ZW1wZGlzcG9zZXJzW25ld0VuZF0gPSBkaXNwb3NlcnNbZW5kXTtcbiAgICAgICAgICBpbmRleGVzICYmICh0ZW1wSW5kZXhlc1tuZXdFbmRdID0gaW5kZXhlc1tlbmRdKTtcbiAgICAgICAgfVxuICAgICAgICBuZXdJbmRpY2VzID0gLyogQF9fUFVSRV9fICovIG5ldyBNYXAoKTtcbiAgICAgICAgbmV3SW5kaWNlc05leHQgPSBuZXcgQXJyYXkobmV3RW5kICsgMSk7XG4gICAgICAgIGZvciAoaiA9IG5ld0VuZDsgaiA+PSBzdGFydDsgai0tKSB7XG4gICAgICAgICAgaXRlbSA9IG5ld0l0ZW1zW2pdO1xuICAgICAgICAgIGkyID0gbmV3SW5kaWNlcy5nZXQoaXRlbSk7XG4gICAgICAgICAgbmV3SW5kaWNlc05leHRbal0gPSBpMiA9PT0gdm9pZCAwID8gLTEgOiBpMjtcbiAgICAgICAgICBuZXdJbmRpY2VzLnNldChpdGVtLCBqKTtcbiAgICAgICAgfVxuICAgICAgICBmb3IgKGkyID0gc3RhcnQ7IGkyIDw9IGVuZDsgaTIrKykge1xuICAgICAgICAgIGl0ZW0gPSBpdGVtc1tpMl07XG4gICAgICAgICAgaiA9IG5ld0luZGljZXMuZ2V0KGl0ZW0pO1xuICAgICAgICAgIGlmIChqICE9PSB2b2lkIDAgJiYgaiAhPT0gLTEpIHtcbiAgICAgICAgICAgIHRlbXBbal0gPSBtYXBwZWRbaTJdO1xuICAgICAgICAgICAgdGVtcGRpc3Bvc2Vyc1tqXSA9IGRpc3Bvc2Vyc1tpMl07XG4gICAgICAgICAgICBpbmRleGVzICYmICh0ZW1wSW5kZXhlc1tqXSA9IGluZGV4ZXNbaTJdKTtcbiAgICAgICAgICAgIGogPSBuZXdJbmRpY2VzTmV4dFtqXTtcbiAgICAgICAgICAgIG5ld0luZGljZXMuc2V0KGl0ZW0sIGopO1xuICAgICAgICAgIH0gZWxzZVxuICAgICAgICAgICAgZGlzcG9zZXJzW2kyXSgpO1xuICAgICAgICB9XG4gICAgICAgIGZvciAoaiA9IHN0YXJ0OyBqIDwgbmV3TGVuOyBqKyspIHtcbiAgICAgICAgICBpZiAoaiBpbiB0ZW1wKSB7XG4gICAgICAgICAgICBtYXBwZWRbal0gPSB0ZW1wW2pdO1xuICAgICAgICAgICAgZGlzcG9zZXJzW2pdID0gdGVtcGRpc3Bvc2Vyc1tqXTtcbiAgICAgICAgICAgIGlmIChpbmRleGVzKSB7XG4gICAgICAgICAgICAgIGluZGV4ZXNbal0gPSB0ZW1wSW5kZXhlc1tqXTtcbiAgICAgICAgICAgICAgaW5kZXhlc1tqXShqKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9IGVsc2VcbiAgICAgICAgICAgIG1hcHBlZFtqXSA9IGNyZWF0ZVJvb3QobWFwcGVyKTtcbiAgICAgICAgfVxuICAgICAgICBtYXBwZWQgPSBtYXBwZWQuc2xpY2UoMCwgbGVuID0gbmV3TGVuKTtcbiAgICAgICAgaXRlbXMgPSBuZXdJdGVtcy5zbGljZSgwKTtcbiAgICAgIH1cbiAgICAgIHJldHVybiBtYXBwZWQ7XG4gICAgfSk7XG4gICAgZnVuY3Rpb24gbWFwcGVyKGRpc3Bvc2VyKSB7XG4gICAgICBkaXNwb3NlcnNbal0gPSBkaXNwb3NlcjtcbiAgICAgIGlmIChpbmRleGVzKSB7XG4gICAgICAgIGNvbnN0IFtzMiwgc2V0XSA9IGNyZWF0ZVNpZ25hbChqKTtcbiAgICAgICAgaW5kZXhlc1tqXSA9IHNldDtcbiAgICAgICAgcmV0dXJuIG1hcEZuKG5ld0l0ZW1zW2pdLCBzMik7XG4gICAgICB9XG4gICAgICByZXR1cm4gbWFwRm4obmV3SXRlbXNbal0pO1xuICAgIH1cbiAgfTtcbn1cbmZ1bmN0aW9uIGNyZWF0ZUNvbXBvbmVudChDb21wLCBwcm9wcykge1xuICByZXR1cm4gdW50cmFjaygoKSA9PiBDb21wKHByb3BzIHx8IHt9KSk7XG59XG5mdW5jdGlvbiB0cnVlRm4oKSB7XG4gIHJldHVybiB0cnVlO1xufVxuY29uc3QgcHJvcFRyYXBzID0ge1xuICBnZXQoXywgcHJvcGVydHksIHJlY2VpdmVyKSB7XG4gICAgaWYgKHByb3BlcnR5ID09PSAkUFJPWFkpXG4gICAgICByZXR1cm4gcmVjZWl2ZXI7XG4gICAgcmV0dXJuIF8uZ2V0KHByb3BlcnR5KTtcbiAgfSxcbiAgaGFzKF8sIHByb3BlcnR5KSB7XG4gICAgaWYgKHByb3BlcnR5ID09PSAkUFJPWFkpXG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICByZXR1cm4gXy5oYXMocHJvcGVydHkpO1xuICB9LFxuICBzZXQ6IHRydWVGbixcbiAgZGVsZXRlUHJvcGVydHk6IHRydWVGbixcbiAgZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKF8sIHByb3BlcnR5KSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICBnZXQoKSB7XG4gICAgICAgIHJldHVybiBfLmdldChwcm9wZXJ0eSk7XG4gICAgICB9LFxuICAgICAgc2V0OiB0cnVlRm4sXG4gICAgICBkZWxldGVQcm9wZXJ0eTogdHJ1ZUZuXG4gICAgfTtcbiAgfSxcbiAgb3duS2V5cyhfKSB7XG4gICAgcmV0dXJuIF8ua2V5cygpO1xuICB9XG59O1xuZnVuY3Rpb24gcmVzb2x2ZVNvdXJjZShzMikge1xuICByZXR1cm4gIShzMiA9IHR5cGVvZiBzMiA9PT0gXCJmdW5jdGlvblwiID8gczIoKSA6IHMyKSA/IHt9IDogczI7XG59XG5mdW5jdGlvbiBtZXJnZVByb3BzKC4uLnNvdXJjZXMpIHtcbiAgbGV0IHByb3h5ID0gZmFsc2U7XG4gIGZvciAobGV0IGkyID0gMDsgaTIgPCBzb3VyY2VzLmxlbmd0aDsgaTIrKykge1xuICAgIGNvbnN0IHMyID0gc291cmNlc1tpMl07XG4gICAgcHJveHkgPSBwcm94eSB8fCAhIXMyICYmICRQUk9YWSBpbiBzMjtcbiAgICBzb3VyY2VzW2kyXSA9IHR5cGVvZiBzMiA9PT0gXCJmdW5jdGlvblwiID8gKHByb3h5ID0gdHJ1ZSwgY3JlYXRlTWVtbyhzMikpIDogczI7XG4gIH1cbiAgaWYgKHByb3h5KSB7XG4gICAgcmV0dXJuIG5ldyBQcm94eSh7XG4gICAgICBnZXQocHJvcGVydHkpIHtcbiAgICAgICAgZm9yIChsZXQgaTIgPSBzb3VyY2VzLmxlbmd0aCAtIDE7IGkyID49IDA7IGkyLS0pIHtcbiAgICAgICAgICBjb25zdCB2ID0gcmVzb2x2ZVNvdXJjZShzb3VyY2VzW2kyXSlbcHJvcGVydHldO1xuICAgICAgICAgIGlmICh2ICE9PSB2b2lkIDApXG4gICAgICAgICAgICByZXR1cm4gdjtcbiAgICAgICAgfVxuICAgICAgfSxcbiAgICAgIGhhcyhwcm9wZXJ0eSkge1xuICAgICAgICBmb3IgKGxldCBpMiA9IHNvdXJjZXMubGVuZ3RoIC0gMTsgaTIgPj0gMDsgaTItLSkge1xuICAgICAgICAgIGlmIChwcm9wZXJ0eSBpbiByZXNvbHZlU291cmNlKHNvdXJjZXNbaTJdKSlcbiAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgIH0sXG4gICAgICBrZXlzKCkge1xuICAgICAgICBjb25zdCBrZXlzID0gW107XG4gICAgICAgIGZvciAobGV0IGkyID0gMDsgaTIgPCBzb3VyY2VzLmxlbmd0aDsgaTIrKylcbiAgICAgICAgICBrZXlzLnB1c2goLi4uT2JqZWN0LmtleXMocmVzb2x2ZVNvdXJjZShzb3VyY2VzW2kyXSkpKTtcbiAgICAgICAgcmV0dXJuIFsuLi5uZXcgU2V0KGtleXMpXTtcbiAgICAgIH1cbiAgICB9LCBwcm9wVHJhcHMpO1xuICB9XG4gIGNvbnN0IHRhcmdldCA9IHt9O1xuICBmb3IgKGxldCBpMiA9IHNvdXJjZXMubGVuZ3RoIC0gMTsgaTIgPj0gMDsgaTItLSkge1xuICAgIGlmIChzb3VyY2VzW2kyXSkge1xuICAgICAgY29uc3QgZGVzY3JpcHRvcnMgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycyhzb3VyY2VzW2kyXSk7XG4gICAgICBmb3IgKGNvbnN0IGtleSBpbiBkZXNjcmlwdG9ycykge1xuICAgICAgICBpZiAoa2V5IGluIHRhcmdldClcbiAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwga2V5LCB7XG4gICAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgICBnZXQoKSB7XG4gICAgICAgICAgICBmb3IgKGxldCBpMyA9IHNvdXJjZXMubGVuZ3RoIC0gMTsgaTMgPj0gMDsgaTMtLSkge1xuICAgICAgICAgICAgICBjb25zdCB2ID0gKHNvdXJjZXNbaTNdIHx8IHt9KVtrZXldO1xuICAgICAgICAgICAgICBpZiAodiAhPT0gdm9pZCAwKVxuICAgICAgICAgICAgICAgIHJldHVybiB2O1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgfVxuICB9XG4gIHJldHVybiB0YXJnZXQ7XG59XG5mdW5jdGlvbiBzcGxpdFByb3BzKHByb3BzLCAuLi5rZXlzKSB7XG4gIGNvbnN0IGJsb2NrZWQgPSBuZXcgU2V0KGtleXMuZmxhdCgpKTtcbiAgaWYgKCRQUk9YWSBpbiBwcm9wcykge1xuICAgIGNvbnN0IHJlcyA9IGtleXMubWFwKChrKSA9PiB7XG4gICAgICByZXR1cm4gbmV3IFByb3h5KHtcbiAgICAgICAgZ2V0KHByb3BlcnR5KSB7XG4gICAgICAgICAgcmV0dXJuIGsuaW5jbHVkZXMocHJvcGVydHkpID8gcHJvcHNbcHJvcGVydHldIDogdm9pZCAwO1xuICAgICAgICB9LFxuICAgICAgICBoYXMocHJvcGVydHkpIHtcbiAgICAgICAgICByZXR1cm4gay5pbmNsdWRlcyhwcm9wZXJ0eSkgJiYgcHJvcGVydHkgaW4gcHJvcHM7XG4gICAgICAgIH0sXG4gICAgICAgIGtleXMoKSB7XG4gICAgICAgICAgcmV0dXJuIGsuZmlsdGVyKChwcm9wZXJ0eSkgPT4gcHJvcGVydHkgaW4gcHJvcHMpO1xuICAgICAgICB9XG4gICAgICB9LCBwcm9wVHJhcHMpO1xuICAgIH0pO1xuICAgIHJlcy5wdXNoKG5ldyBQcm94eSh7XG4gICAgICBnZXQocHJvcGVydHkpIHtcbiAgICAgICAgcmV0dXJuIGJsb2NrZWQuaGFzKHByb3BlcnR5KSA/IHZvaWQgMCA6IHByb3BzW3Byb3BlcnR5XTtcbiAgICAgIH0sXG4gICAgICBoYXMocHJvcGVydHkpIHtcbiAgICAgICAgcmV0dXJuIGJsb2NrZWQuaGFzKHByb3BlcnR5KSA/IGZhbHNlIDogcHJvcGVydHkgaW4gcHJvcHM7XG4gICAgICB9LFxuICAgICAga2V5cygpIHtcbiAgICAgICAgcmV0dXJuIE9iamVjdC5rZXlzKHByb3BzKS5maWx0ZXIoKGspID0+ICFibG9ja2VkLmhhcyhrKSk7XG4gICAgICB9XG4gICAgfSwgcHJvcFRyYXBzKSk7XG4gICAgcmV0dXJuIHJlcztcbiAgfVxuICBjb25zdCBkZXNjcmlwdG9ycyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzKHByb3BzKTtcbiAga2V5cy5wdXNoKE9iamVjdC5rZXlzKGRlc2NyaXB0b3JzKS5maWx0ZXIoKGspID0+ICFibG9ja2VkLmhhcyhrKSkpO1xuICByZXR1cm4ga2V5cy5tYXAoKGspID0+IHtcbiAgICBjb25zdCBjbG9uZSA9IHt9O1xuICAgIGZvciAobGV0IGkyID0gMDsgaTIgPCBrLmxlbmd0aDsgaTIrKykge1xuICAgICAgY29uc3Qga2V5ID0ga1tpMl07XG4gICAgICBpZiAoIShrZXkgaW4gcHJvcHMpKVxuICAgICAgICBjb250aW51ZTtcbiAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShjbG9uZSwga2V5LCBkZXNjcmlwdG9yc1trZXldID8gZGVzY3JpcHRvcnNba2V5XSA6IHtcbiAgICAgICAgZ2V0KCkge1xuICAgICAgICAgIHJldHVybiBwcm9wc1trZXldO1xuICAgICAgICB9LFxuICAgICAgICBzZXQoKSB7XG4gICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgIH0sXG4gICAgICAgIGVudW1lcmFibGU6IHRydWVcbiAgICAgIH0pO1xuICAgIH1cbiAgICByZXR1cm4gY2xvbmU7XG4gIH0pO1xufVxuZnVuY3Rpb24gRm9yKHByb3BzKSB7XG4gIGNvbnN0IGZhbGxiYWNrID0gXCJmYWxsYmFja1wiIGluIHByb3BzICYmIHtcbiAgICBmYWxsYmFjazogKCkgPT4gcHJvcHMuZmFsbGJhY2tcbiAgfTtcbiAgcmV0dXJuIGNyZWF0ZU1lbW8obWFwQXJyYXkoKCkgPT4gcHJvcHMuZWFjaCwgcHJvcHMuY2hpbGRyZW4sIGZhbGxiYWNrIHx8IHZvaWQgMCkpO1xufVxuZnVuY3Rpb24gU2hvdyhwcm9wcykge1xuICBsZXQgc3RyaWN0RXF1YWwgPSBmYWxzZTtcbiAgY29uc3Qga2V5ZWQgPSBwcm9wcy5rZXllZDtcbiAgY29uc3QgY29uZGl0aW9uID0gY3JlYXRlTWVtbygoKSA9PiBwcm9wcy53aGVuLCB2b2lkIDAsIHtcbiAgICBlcXVhbHM6IChhMiwgYikgPT4gc3RyaWN0RXF1YWwgPyBhMiA9PT0gYiA6ICFhMiA9PT0gIWJcbiAgfSk7XG4gIHJldHVybiBjcmVhdGVNZW1vKCgpID0+IHtcbiAgICBjb25zdCBjMiA9IGNvbmRpdGlvbigpO1xuICAgIGlmIChjMikge1xuICAgICAgY29uc3QgY2hpbGQgPSBwcm9wcy5jaGlsZHJlbjtcbiAgICAgIGNvbnN0IGZuID0gdHlwZW9mIGNoaWxkID09PSBcImZ1bmN0aW9uXCIgJiYgY2hpbGQubGVuZ3RoID4gMDtcbiAgICAgIHN0cmljdEVxdWFsID0ga2V5ZWQgfHwgZm47XG4gICAgICByZXR1cm4gZm4gPyB1bnRyYWNrKCgpID0+IGNoaWxkKGMyKSkgOiBjaGlsZDtcbiAgICB9XG4gICAgcmV0dXJuIHByb3BzLmZhbGxiYWNrO1xuICB9LCB2b2lkIDAsIHZvaWQgMCk7XG59XG5mdW5jdGlvbiBTd2l0Y2gocHJvcHMpIHtcbiAgbGV0IHN0cmljdEVxdWFsID0gZmFsc2U7XG4gIGxldCBrZXllZCA9IGZhbHNlO1xuICBjb25zdCBlcXVhbHMgPSAoYTIsIGIpID0+IGEyWzBdID09PSBiWzBdICYmIChzdHJpY3RFcXVhbCA/IGEyWzFdID09PSBiWzFdIDogIWEyWzFdID09PSAhYlsxXSkgJiYgYTJbMl0gPT09IGJbMl07XG4gIGNvbnN0IGNvbmRpdGlvbnMgPSBjaGlsZHJlbigoKSA9PiBwcm9wcy5jaGlsZHJlbiksIGV2YWxDb25kaXRpb25zID0gY3JlYXRlTWVtbygoKSA9PiB7XG4gICAgbGV0IGNvbmRzID0gY29uZGl0aW9ucygpO1xuICAgIGlmICghQXJyYXkuaXNBcnJheShjb25kcykpXG4gICAgICBjb25kcyA9IFtjb25kc107XG4gICAgZm9yIChsZXQgaTIgPSAwOyBpMiA8IGNvbmRzLmxlbmd0aDsgaTIrKykge1xuICAgICAgY29uc3QgYzIgPSBjb25kc1tpMl0ud2hlbjtcbiAgICAgIGlmIChjMikge1xuICAgICAgICBrZXllZCA9ICEhY29uZHNbaTJdLmtleWVkO1xuICAgICAgICByZXR1cm4gW2kyLCBjMiwgY29uZHNbaTJdXTtcbiAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIFstMV07XG4gIH0sIHZvaWQgMCwge1xuICAgIGVxdWFsc1xuICB9KTtcbiAgcmV0dXJuIGNyZWF0ZU1lbW8oKCkgPT4ge1xuICAgIGNvbnN0IFtpbmRleCwgd2hlbiwgY29uZF0gPSBldmFsQ29uZGl0aW9ucygpO1xuICAgIGlmIChpbmRleCA8IDApXG4gICAgICByZXR1cm4gcHJvcHMuZmFsbGJhY2s7XG4gICAgY29uc3QgYzIgPSBjb25kLmNoaWxkcmVuO1xuICAgIGNvbnN0IGZuID0gdHlwZW9mIGMyID09PSBcImZ1bmN0aW9uXCIgJiYgYzIubGVuZ3RoID4gMDtcbiAgICBzdHJpY3RFcXVhbCA9IGtleWVkIHx8IGZuO1xuICAgIHJldHVybiBmbiA/IHVudHJhY2soKCkgPT4gYzIod2hlbikpIDogYzI7XG4gIH0sIHZvaWQgMCwgdm9pZCAwKTtcbn1cbmZ1bmN0aW9uIE1hdGNoKHByb3BzKSB7XG4gIHJldHVybiBwcm9wcztcbn1cbmNvbnN0IGJvb2xlYW5zID0gW1wiYWxsb3dmdWxsc2NyZWVuXCIsIFwiYXN5bmNcIiwgXCJhdXRvZm9jdXNcIiwgXCJhdXRvcGxheVwiLCBcImNoZWNrZWRcIiwgXCJjb250cm9sc1wiLCBcImRlZmF1bHRcIiwgXCJkaXNhYmxlZFwiLCBcImZvcm1ub3ZhbGlkYXRlXCIsIFwiaGlkZGVuXCIsIFwiaW5kZXRlcm1pbmF0ZVwiLCBcImlzbWFwXCIsIFwibG9vcFwiLCBcIm11bHRpcGxlXCIsIFwibXV0ZWRcIiwgXCJub21vZHVsZVwiLCBcIm5vdmFsaWRhdGVcIiwgXCJvcGVuXCIsIFwicGxheXNpbmxpbmVcIiwgXCJyZWFkb25seVwiLCBcInJlcXVpcmVkXCIsIFwicmV2ZXJzZWRcIiwgXCJzZWFtbGVzc1wiLCBcInNlbGVjdGVkXCJdO1xuY29uc3QgUHJvcGVydGllcyA9IC8qIEBfX1BVUkVfXyAqLyBuZXcgU2V0KFtcImNsYXNzTmFtZVwiLCBcInZhbHVlXCIsIFwicmVhZE9ubHlcIiwgXCJmb3JtTm9WYWxpZGF0ZVwiLCBcImlzTWFwXCIsIFwibm9Nb2R1bGVcIiwgXCJwbGF5c0lubGluZVwiLCAuLi5ib29sZWFuc10pO1xuY29uc3QgQ2hpbGRQcm9wZXJ0aWVzID0gLyogQF9fUFVSRV9fICovIG5ldyBTZXQoW1wiaW5uZXJIVE1MXCIsIFwidGV4dENvbnRlbnRcIiwgXCJpbm5lclRleHRcIiwgXCJjaGlsZHJlblwiXSk7XG5jb25zdCBBbGlhc2VzID0gLyogQF9fUFVSRV9fICovIE9iamVjdC5hc3NpZ24oLyogQF9fUFVSRV9fICovIE9iamVjdC5jcmVhdGUobnVsbCksIHtcbiAgY2xhc3NOYW1lOiBcImNsYXNzXCIsXG4gIGh0bWxGb3I6IFwiZm9yXCJcbn0pO1xuY29uc3QgUHJvcEFsaWFzZXMgPSAvKiBAX19QVVJFX18gKi8gT2JqZWN0LmFzc2lnbigvKiBAX19QVVJFX18gKi8gT2JqZWN0LmNyZWF0ZShudWxsKSwge1xuICBjbGFzczogXCJjbGFzc05hbWVcIixcbiAgZm9ybW5vdmFsaWRhdGU6IFwiZm9ybU5vVmFsaWRhdGVcIixcbiAgaXNtYXA6IFwiaXNNYXBcIixcbiAgbm9tb2R1bGU6IFwibm9Nb2R1bGVcIixcbiAgcGxheXNpbmxpbmU6IFwicGxheXNJbmxpbmVcIixcbiAgcmVhZG9ubHk6IFwicmVhZE9ubHlcIlxufSk7XG5jb25zdCBEZWxlZ2F0ZWRFdmVudHMgPSAvKiBAX19QVVJFX18gKi8gbmV3IFNldChbXCJiZWZvcmVpbnB1dFwiLCBcImNsaWNrXCIsIFwiZGJsY2xpY2tcIiwgXCJjb250ZXh0bWVudVwiLCBcImZvY3VzaW5cIiwgXCJmb2N1c291dFwiLCBcImlucHV0XCIsIFwia2V5ZG93blwiLCBcImtleXVwXCIsIFwibW91c2Vkb3duXCIsIFwibW91c2Vtb3ZlXCIsIFwibW91c2VvdXRcIiwgXCJtb3VzZW92ZXJcIiwgXCJtb3VzZXVwXCIsIFwicG9pbnRlcmRvd25cIiwgXCJwb2ludGVybW92ZVwiLCBcInBvaW50ZXJvdXRcIiwgXCJwb2ludGVyb3ZlclwiLCBcInBvaW50ZXJ1cFwiLCBcInRvdWNoZW5kXCIsIFwidG91Y2htb3ZlXCIsIFwidG91Y2hzdGFydFwiXSk7XG5jb25zdCBTVkdFbGVtZW50cyA9IC8qIEBfX1BVUkVfXyAqLyBuZXcgU2V0KFtcbiAgXCJhbHRHbHlwaFwiLFxuICBcImFsdEdseXBoRGVmXCIsXG4gIFwiYWx0R2x5cGhJdGVtXCIsXG4gIFwiYW5pbWF0ZVwiLFxuICBcImFuaW1hdGVDb2xvclwiLFxuICBcImFuaW1hdGVNb3Rpb25cIixcbiAgXCJhbmltYXRlVHJhbnNmb3JtXCIsXG4gIFwiY2lyY2xlXCIsXG4gIFwiY2xpcFBhdGhcIixcbiAgXCJjb2xvci1wcm9maWxlXCIsXG4gIFwiY3Vyc29yXCIsXG4gIFwiZGVmc1wiLFxuICBcImRlc2NcIixcbiAgXCJlbGxpcHNlXCIsXG4gIFwiZmVCbGVuZFwiLFxuICBcImZlQ29sb3JNYXRyaXhcIixcbiAgXCJmZUNvbXBvbmVudFRyYW5zZmVyXCIsXG4gIFwiZmVDb21wb3NpdGVcIixcbiAgXCJmZUNvbnZvbHZlTWF0cml4XCIsXG4gIFwiZmVEaWZmdXNlTGlnaHRpbmdcIixcbiAgXCJmZURpc3BsYWNlbWVudE1hcFwiLFxuICBcImZlRGlzdGFudExpZ2h0XCIsXG4gIFwiZmVGbG9vZFwiLFxuICBcImZlRnVuY0FcIixcbiAgXCJmZUZ1bmNCXCIsXG4gIFwiZmVGdW5jR1wiLFxuICBcImZlRnVuY1JcIixcbiAgXCJmZUdhdXNzaWFuQmx1clwiLFxuICBcImZlSW1hZ2VcIixcbiAgXCJmZU1lcmdlXCIsXG4gIFwiZmVNZXJnZU5vZGVcIixcbiAgXCJmZU1vcnBob2xvZ3lcIixcbiAgXCJmZU9mZnNldFwiLFxuICBcImZlUG9pbnRMaWdodFwiLFxuICBcImZlU3BlY3VsYXJMaWdodGluZ1wiLFxuICBcImZlU3BvdExpZ2h0XCIsXG4gIFwiZmVUaWxlXCIsXG4gIFwiZmVUdXJidWxlbmNlXCIsXG4gIFwiZmlsdGVyXCIsXG4gIFwiZm9udFwiLFxuICBcImZvbnQtZmFjZVwiLFxuICBcImZvbnQtZmFjZS1mb3JtYXRcIixcbiAgXCJmb250LWZhY2UtbmFtZVwiLFxuICBcImZvbnQtZmFjZS1zcmNcIixcbiAgXCJmb250LWZhY2UtdXJpXCIsXG4gIFwiZm9yZWlnbk9iamVjdFwiLFxuICBcImdcIixcbiAgXCJnbHlwaFwiLFxuICBcImdseXBoUmVmXCIsXG4gIFwiaGtlcm5cIixcbiAgXCJpbWFnZVwiLFxuICBcImxpbmVcIixcbiAgXCJsaW5lYXJHcmFkaWVudFwiLFxuICBcIm1hcmtlclwiLFxuICBcIm1hc2tcIixcbiAgXCJtZXRhZGF0YVwiLFxuICBcIm1pc3NpbmctZ2x5cGhcIixcbiAgXCJtcGF0aFwiLFxuICBcInBhdGhcIixcbiAgXCJwYXR0ZXJuXCIsXG4gIFwicG9seWdvblwiLFxuICBcInBvbHlsaW5lXCIsXG4gIFwicmFkaWFsR3JhZGllbnRcIixcbiAgXCJyZWN0XCIsXG4gIFwic2V0XCIsXG4gIFwic3RvcFwiLFxuICBcInN2Z1wiLFxuICBcInN3aXRjaFwiLFxuICBcInN5bWJvbFwiLFxuICBcInRleHRcIixcbiAgXCJ0ZXh0UGF0aFwiLFxuICBcInRyZWZcIixcbiAgXCJ0c3BhblwiLFxuICBcInVzZVwiLFxuICBcInZpZXdcIixcbiAgXCJ2a2VyblwiXG5dKTtcbmNvbnN0IFNWR05hbWVzcGFjZSA9IHtcbiAgeGxpbms6IFwiaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGlua1wiLFxuICB4bWw6IFwiaHR0cDovL3d3dy53My5vcmcvWE1MLzE5OTgvbmFtZXNwYWNlXCJcbn07XG5mdW5jdGlvbiByZWNvbmNpbGVBcnJheXMocGFyZW50Tm9kZSwgYTIsIGIpIHtcbiAgbGV0IGJMZW5ndGggPSBiLmxlbmd0aCwgYUVuZCA9IGEyLmxlbmd0aCwgYkVuZCA9IGJMZW5ndGgsIGFTdGFydCA9IDAsIGJTdGFydCA9IDAsIGFmdGVyID0gYTJbYUVuZCAtIDFdLm5leHRTaWJsaW5nLCBtYXAgPSBudWxsO1xuICB3aGlsZSAoYVN0YXJ0IDwgYUVuZCB8fCBiU3RhcnQgPCBiRW5kKSB7XG4gICAgaWYgKGEyW2FTdGFydF0gPT09IGJbYlN0YXJ0XSkge1xuICAgICAgYVN0YXJ0Kys7XG4gICAgICBiU3RhcnQrKztcbiAgICAgIGNvbnRpbnVlO1xuICAgIH1cbiAgICB3aGlsZSAoYTJbYUVuZCAtIDFdID09PSBiW2JFbmQgLSAxXSkge1xuICAgICAgYUVuZC0tO1xuICAgICAgYkVuZC0tO1xuICAgIH1cbiAgICBpZiAoYUVuZCA9PT0gYVN0YXJ0KSB7XG4gICAgICBjb25zdCBub2RlID0gYkVuZCA8IGJMZW5ndGggPyBiU3RhcnQgPyBiW2JTdGFydCAtIDFdLm5leHRTaWJsaW5nIDogYltiRW5kIC0gYlN0YXJ0XSA6IGFmdGVyO1xuICAgICAgd2hpbGUgKGJTdGFydCA8IGJFbmQpXG4gICAgICAgIHBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKGJbYlN0YXJ0KytdLCBub2RlKTtcbiAgICB9IGVsc2UgaWYgKGJFbmQgPT09IGJTdGFydCkge1xuICAgICAgd2hpbGUgKGFTdGFydCA8IGFFbmQpIHtcbiAgICAgICAgaWYgKCFtYXAgfHwgIW1hcC5oYXMoYTJbYVN0YXJ0XSkpXG4gICAgICAgICAgYTJbYVN0YXJ0XS5yZW1vdmUoKTtcbiAgICAgICAgYVN0YXJ0Kys7XG4gICAgICB9XG4gICAgfSBlbHNlIGlmIChhMlthU3RhcnRdID09PSBiW2JFbmQgLSAxXSAmJiBiW2JTdGFydF0gPT09IGEyW2FFbmQgLSAxXSkge1xuICAgICAgY29uc3Qgbm9kZSA9IGEyWy0tYUVuZF0ubmV4dFNpYmxpbmc7XG4gICAgICBwYXJlbnROb2RlLmluc2VydEJlZm9yZShiW2JTdGFydCsrXSwgYTJbYVN0YXJ0KytdLm5leHRTaWJsaW5nKTtcbiAgICAgIHBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKGJbLS1iRW5kXSwgbm9kZSk7XG4gICAgICBhMlthRW5kXSA9IGJbYkVuZF07XG4gICAgfSBlbHNlIHtcbiAgICAgIGlmICghbWFwKSB7XG4gICAgICAgIG1hcCA9IC8qIEBfX1BVUkVfXyAqLyBuZXcgTWFwKCk7XG4gICAgICAgIGxldCBpMiA9IGJTdGFydDtcbiAgICAgICAgd2hpbGUgKGkyIDwgYkVuZClcbiAgICAgICAgICBtYXAuc2V0KGJbaTJdLCBpMisrKTtcbiAgICAgIH1cbiAgICAgIGNvbnN0IGluZGV4ID0gbWFwLmdldChhMlthU3RhcnRdKTtcbiAgICAgIGlmIChpbmRleCAhPSBudWxsKSB7XG4gICAgICAgIGlmIChiU3RhcnQgPCBpbmRleCAmJiBpbmRleCA8IGJFbmQpIHtcbiAgICAgICAgICBsZXQgaTIgPSBhU3RhcnQsIHNlcXVlbmNlID0gMSwgdDI7XG4gICAgICAgICAgd2hpbGUgKCsraTIgPCBhRW5kICYmIGkyIDwgYkVuZCkge1xuICAgICAgICAgICAgaWYgKCh0MiA9IG1hcC5nZXQoYTJbaTJdKSkgPT0gbnVsbCB8fCB0MiAhPT0gaW5kZXggKyBzZXF1ZW5jZSlcbiAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBzZXF1ZW5jZSsrO1xuICAgICAgICAgIH1cbiAgICAgICAgICBpZiAoc2VxdWVuY2UgPiBpbmRleCAtIGJTdGFydCkge1xuICAgICAgICAgICAgY29uc3Qgbm9kZSA9IGEyW2FTdGFydF07XG4gICAgICAgICAgICB3aGlsZSAoYlN0YXJ0IDwgaW5kZXgpXG4gICAgICAgICAgICAgIHBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKGJbYlN0YXJ0KytdLCBub2RlKTtcbiAgICAgICAgICB9IGVsc2VcbiAgICAgICAgICAgIHBhcmVudE5vZGUucmVwbGFjZUNoaWxkKGJbYlN0YXJ0KytdLCBhMlthU3RhcnQrK10pO1xuICAgICAgICB9IGVsc2VcbiAgICAgICAgICBhU3RhcnQrKztcbiAgICAgIH0gZWxzZVxuICAgICAgICBhMlthU3RhcnQrK10ucmVtb3ZlKCk7XG4gICAgfVxuICB9XG59XG5jb25zdCAkJEVWRU5UUyA9IFwiXyREWF9ERUxFR0FURVwiO1xuZnVuY3Rpb24gcmVuZGVyKGNvZGUsIGVsZW1lbnQsIGluaXQsIG9wdGlvbnMgPSB7fSkge1xuICBsZXQgZGlzcG9zZXI7XG4gIGNyZWF0ZVJvb3QoKGRpc3Bvc2UyKSA9PiB7XG4gICAgZGlzcG9zZXIgPSBkaXNwb3NlMjtcbiAgICBlbGVtZW50ID09PSBkb2N1bWVudCA/IGNvZGUoKSA6IGluc2VydChlbGVtZW50LCBjb2RlKCksIGVsZW1lbnQuZmlyc3RDaGlsZCA/IG51bGwgOiB2b2lkIDAsIGluaXQpO1xuICB9LCBvcHRpb25zLm93bmVyKTtcbiAgcmV0dXJuICgpID0+IHtcbiAgICBkaXNwb3NlcigpO1xuICAgIGVsZW1lbnQudGV4dENvbnRlbnQgPSBcIlwiO1xuICB9O1xufVxuZnVuY3Rpb24gdGVtcGxhdGUkMShodG1sLCBjaGVjaywgaXNTVkcpIHtcbiAgaWYgKHR5cGVvZiB3aW5kb3cgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgcmV0dXJuIG51bGw7XG4gIH1cblxuICBjb25zdCB0MiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJ0ZW1wbGF0ZVwiKTtcbiAgdDIuaW5uZXJIVE1MID0gaHRtbDtcbiAgbGV0IG5vZGUgPSB0Mi5jb250ZW50LmZpcnN0Q2hpbGQ7XG4gIGlmIChpc1NWRylcbiAgICBub2RlID0gbm9kZS5maXJzdENoaWxkO1xuICByZXR1cm4gbm9kZTtcbn1cbmZ1bmN0aW9uIGRlbGVnYXRlRXZlbnRzKGV2ZW50TmFtZXMsIGRvY3VtZW50MiA9IHdpbmRvdy5kb2N1bWVudCkge1xuICBjb25zdCBlMiA9IGRvY3VtZW50MlskJEVWRU5UU10gfHwgKGRvY3VtZW50MlskJEVWRU5UU10gPSAvKiBAX19QVVJFX18gKi8gbmV3IFNldCgpKTtcbiAgZm9yIChsZXQgaTIgPSAwLCBsMiA9IGV2ZW50TmFtZXMubGVuZ3RoOyBpMiA8IGwyOyBpMisrKSB7XG4gICAgY29uc3QgbmFtZSA9IGV2ZW50TmFtZXNbaTJdO1xuICAgIGlmICghZTIuaGFzKG5hbWUpKSB7XG4gICAgICBlMi5hZGQobmFtZSk7XG4gICAgICBkb2N1bWVudDIuYWRkRXZlbnRMaXN0ZW5lcihuYW1lLCBldmVudEhhbmRsZXIpO1xuICAgIH1cbiAgfVxufVxuZnVuY3Rpb24gc2V0QXR0cmlidXRlKG5vZGUsIG5hbWUsIHZhbHVlKSB7XG4gIGlmICh2YWx1ZSA9PSBudWxsKVxuICAgIG5vZGUucmVtb3ZlQXR0cmlidXRlKG5hbWUpO1xuICBlbHNlXG4gICAgbm9kZS5zZXRBdHRyaWJ1dGUobmFtZSwgdmFsdWUpO1xufVxuZnVuY3Rpb24gc2V0QXR0cmlidXRlTlMobm9kZSwgbmFtZXNwYWNlLCBuYW1lLCB2YWx1ZSkge1xuICBpZiAodmFsdWUgPT0gbnVsbClcbiAgICBub2RlLnJlbW92ZUF0dHJpYnV0ZU5TKG5hbWVzcGFjZSwgbmFtZSk7XG4gIGVsc2VcbiAgICBub2RlLnNldEF0dHJpYnV0ZU5TKG5hbWVzcGFjZSwgbmFtZSwgdmFsdWUpO1xufVxuZnVuY3Rpb24gY2xhc3NOYW1lKG5vZGUsIHZhbHVlKSB7XG4gIGlmICh2YWx1ZSA9PSBudWxsKVxuICAgIG5vZGUucmVtb3ZlQXR0cmlidXRlKFwiY2xhc3NcIik7XG4gIGVsc2VcbiAgICBub2RlLmNsYXNzTmFtZSA9IHZhbHVlO1xufVxuZnVuY3Rpb24gYWRkRXZlbnRMaXN0ZW5lcihub2RlLCBuYW1lLCBoYW5kbGVyLCBkZWxlZ2F0ZSkge1xuICBpZiAoZGVsZWdhdGUpIHtcbiAgICBpZiAoQXJyYXkuaXNBcnJheShoYW5kbGVyKSkge1xuICAgICAgbm9kZVtgJCQke25hbWV9YF0gPSBoYW5kbGVyWzBdO1xuICAgICAgbm9kZVtgJCQke25hbWV9RGF0YWBdID0gaGFuZGxlclsxXTtcbiAgICB9IGVsc2VcbiAgICAgIG5vZGVbYCQkJHtuYW1lfWBdID0gaGFuZGxlcjtcbiAgfSBlbHNlIGlmIChBcnJheS5pc0FycmF5KGhhbmRsZXIpKSB7XG4gICAgY29uc3QgaGFuZGxlckZuID0gaGFuZGxlclswXTtcbiAgICBub2RlLmFkZEV2ZW50TGlzdGVuZXIobmFtZSwgaGFuZGxlclswXSA9IChlMikgPT4gaGFuZGxlckZuLmNhbGwobm9kZSwgaGFuZGxlclsxXSwgZTIpKTtcbiAgfSBlbHNlXG4gICAgbm9kZS5hZGRFdmVudExpc3RlbmVyKG5hbWUsIGhhbmRsZXIpO1xufVxuZnVuY3Rpb24gY2xhc3NMaXN0KG5vZGUsIHZhbHVlLCBwcmV2ID0ge30pIHtcbiAgY29uc3QgY2xhc3NLZXlzID0gT2JqZWN0LmtleXModmFsdWUgfHwge30pLCBwcmV2S2V5cyA9IE9iamVjdC5rZXlzKHByZXYpO1xuICBsZXQgaTIsIGxlbjtcbiAgZm9yIChpMiA9IDAsIGxlbiA9IHByZXZLZXlzLmxlbmd0aDsgaTIgPCBsZW47IGkyKyspIHtcbiAgICBjb25zdCBrZXkgPSBwcmV2S2V5c1tpMl07XG4gICAgaWYgKCFrZXkgfHwga2V5ID09PSBcInVuZGVmaW5lZFwiIHx8IHZhbHVlW2tleV0pXG4gICAgICBjb250aW51ZTtcbiAgICB0b2dnbGVDbGFzc0tleShub2RlLCBrZXksIGZhbHNlKTtcbiAgICBkZWxldGUgcHJldltrZXldO1xuICB9XG4gIGZvciAoaTIgPSAwLCBsZW4gPSBjbGFzc0tleXMubGVuZ3RoOyBpMiA8IGxlbjsgaTIrKykge1xuICAgIGNvbnN0IGtleSA9IGNsYXNzS2V5c1tpMl0sIGNsYXNzVmFsdWUgPSAhIXZhbHVlW2tleV07XG4gICAgaWYgKCFrZXkgfHwga2V5ID09PSBcInVuZGVmaW5lZFwiIHx8IHByZXZba2V5XSA9PT0gY2xhc3NWYWx1ZSB8fCAhY2xhc3NWYWx1ZSlcbiAgICAgIGNvbnRpbnVlO1xuICAgIHRvZ2dsZUNsYXNzS2V5KG5vZGUsIGtleSwgdHJ1ZSk7XG4gICAgcHJldltrZXldID0gY2xhc3NWYWx1ZTtcbiAgfVxuICByZXR1cm4gcHJldjtcbn1cbmZ1bmN0aW9uIHN0eWxlKG5vZGUsIHZhbHVlLCBwcmV2KSB7XG4gIGlmICghdmFsdWUpXG4gICAgcmV0dXJuIHByZXYgPyBzZXRBdHRyaWJ1dGUobm9kZSwgXCJzdHlsZVwiKSA6IHZhbHVlO1xuICBjb25zdCBub2RlU3R5bGUgPSBub2RlLnN0eWxlO1xuICBpZiAodHlwZW9mIHZhbHVlID09PSBcInN0cmluZ1wiKVxuICAgIHJldHVybiBub2RlU3R5bGUuY3NzVGV4dCA9IHZhbHVlO1xuICB0eXBlb2YgcHJldiA9PT0gXCJzdHJpbmdcIiAmJiAobm9kZVN0eWxlLmNzc1RleHQgPSBwcmV2ID0gdm9pZCAwKTtcbiAgcHJldiB8fCAocHJldiA9IHt9KTtcbiAgdmFsdWUgfHwgKHZhbHVlID0ge30pO1xuICBsZXQgdiwgczI7XG4gIGZvciAoczIgaW4gcHJldikge1xuICAgIHZhbHVlW3MyXSA9PSBudWxsICYmIG5vZGVTdHlsZS5yZW1vdmVQcm9wZXJ0eShzMik7XG4gICAgZGVsZXRlIHByZXZbczJdO1xuICB9XG4gIGZvciAoczIgaW4gdmFsdWUpIHtcbiAgICB2ID0gdmFsdWVbczJdO1xuICAgIGlmICh2ICE9PSBwcmV2W3MyXSkge1xuICAgICAgbm9kZVN0eWxlLnNldFByb3BlcnR5KHMyLCB2KTtcbiAgICAgIHByZXZbczJdID0gdjtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIHByZXY7XG59XG5mdW5jdGlvbiBzcHJlYWQobm9kZSwgcHJvcHMgPSB7fSwgaXNTVkcsIHNraXBDaGlsZHJlbikge1xuICBjb25zdCBwcmV2UHJvcHMgPSB7fTtcbiAgaWYgKCFza2lwQ2hpbGRyZW4pIHtcbiAgICBjcmVhdGVSZW5kZXJFZmZlY3QoKCkgPT4gcHJldlByb3BzLmNoaWxkcmVuID0gaW5zZXJ0RXhwcmVzc2lvbihub2RlLCBwcm9wcy5jaGlsZHJlbiwgcHJldlByb3BzLmNoaWxkcmVuKSk7XG4gIH1cbiAgY3JlYXRlUmVuZGVyRWZmZWN0KCgpID0+IHByb3BzLnJlZiAmJiBwcm9wcy5yZWYobm9kZSkpO1xuICBjcmVhdGVSZW5kZXJFZmZlY3QoKCkgPT4gYXNzaWduKG5vZGUsIHByb3BzLCBpc1NWRywgdHJ1ZSwgcHJldlByb3BzLCB0cnVlKSk7XG4gIHJldHVybiBwcmV2UHJvcHM7XG59XG5mdW5jdGlvbiB1c2UoZm4sIGVsZW1lbnQsIGFyZykge1xuICByZXR1cm4gdW50cmFjaygoKSA9PiBmbihlbGVtZW50LCBhcmcpKTtcbn1cbmZ1bmN0aW9uIGluc2VydChwYXJlbnQsIGFjY2Vzc29yLCBtYXJrZXIsIGluaXRpYWwpIHtcbiAgaWYgKG1hcmtlciAhPT0gdm9pZCAwICYmICFpbml0aWFsKVxuICAgIGluaXRpYWwgPSBbXTtcbiAgaWYgKHR5cGVvZiBhY2Nlc3NvciAhPT0gXCJmdW5jdGlvblwiKVxuICAgIHJldHVybiBpbnNlcnRFeHByZXNzaW9uKHBhcmVudCwgYWNjZXNzb3IsIGluaXRpYWwsIG1hcmtlcik7XG4gIGNyZWF0ZVJlbmRlckVmZmVjdCgoY3VycmVudCkgPT4gaW5zZXJ0RXhwcmVzc2lvbihwYXJlbnQsIGFjY2Vzc29yKCksIGN1cnJlbnQsIG1hcmtlciksIGluaXRpYWwpO1xufVxuZnVuY3Rpb24gYXNzaWduKG5vZGUsIHByb3BzLCBpc1NWRywgc2tpcENoaWxkcmVuLCBwcmV2UHJvcHMgPSB7fSwgc2tpcFJlZiA9IGZhbHNlKSB7XG4gIHByb3BzIHx8IChwcm9wcyA9IHt9KTtcbiAgZm9yIChjb25zdCBwcm9wIGluIHByZXZQcm9wcykge1xuICAgIGlmICghKHByb3AgaW4gcHJvcHMpKSB7XG4gICAgICBpZiAocHJvcCA9PT0gXCJjaGlsZHJlblwiKVxuICAgICAgICBjb250aW51ZTtcbiAgICAgIHByZXZQcm9wc1twcm9wXSA9IGFzc2lnblByb3Aobm9kZSwgcHJvcCwgbnVsbCwgcHJldlByb3BzW3Byb3BdLCBpc1NWRywgc2tpcFJlZik7XG4gICAgfVxuICB9XG4gIGZvciAoY29uc3QgcHJvcCBpbiBwcm9wcykge1xuICAgIGlmIChwcm9wID09PSBcImNoaWxkcmVuXCIpIHtcbiAgICAgIGlmICghc2tpcENoaWxkcmVuKVxuICAgICAgICBpbnNlcnRFeHByZXNzaW9uKG5vZGUsIHByb3BzLmNoaWxkcmVuKTtcbiAgICAgIGNvbnRpbnVlO1xuICAgIH1cbiAgICBjb25zdCB2YWx1ZSA9IHByb3BzW3Byb3BdO1xuICAgIHByZXZQcm9wc1twcm9wXSA9IGFzc2lnblByb3Aobm9kZSwgcHJvcCwgdmFsdWUsIHByZXZQcm9wc1twcm9wXSwgaXNTVkcsIHNraXBSZWYpO1xuICB9XG59XG5mdW5jdGlvbiBnZXROZXh0RWxlbWVudCh0ZW1wbGF0ZTIpIHtcbiAgbGV0IG5vZGUsIGtleTtcbiAgaWYgKCFzaGFyZWRDb25maWcuY29udGV4dCB8fCAhKG5vZGUgPSBzaGFyZWRDb25maWcucmVnaXN0cnkuZ2V0KGtleSA9IGdldEh5ZHJhdGlvbktleSgpKSkpIHtcbiAgICByZXR1cm4gdGVtcGxhdGUyLmNsb25lTm9kZSh0cnVlKTtcbiAgfVxuICBpZiAoc2hhcmVkQ29uZmlnLmNvbXBsZXRlZClcbiAgICBzaGFyZWRDb25maWcuY29tcGxldGVkLmFkZChub2RlKTtcbiAgc2hhcmVkQ29uZmlnLnJlZ2lzdHJ5LmRlbGV0ZShrZXkpO1xuICByZXR1cm4gbm9kZTtcbn1cbmZ1bmN0aW9uIHRvUHJvcGVydHlOYW1lKG5hbWUpIHtcbiAgcmV0dXJuIG5hbWUudG9Mb3dlckNhc2UoKS5yZXBsYWNlKC8tKFthLXpdKS9nLCAoXywgdykgPT4gdy50b1VwcGVyQ2FzZSgpKTtcbn1cbmZ1bmN0aW9uIHRvZ2dsZUNsYXNzS2V5KG5vZGUsIGtleSwgdmFsdWUpIHtcbiAgY29uc3QgY2xhc3NOYW1lcyA9IGtleS50cmltKCkuc3BsaXQoL1xccysvKTtcbiAgZm9yIChsZXQgaTIgPSAwLCBuYW1lTGVuID0gY2xhc3NOYW1lcy5sZW5ndGg7IGkyIDwgbmFtZUxlbjsgaTIrKylcbiAgICBub2RlLmNsYXNzTGlzdC50b2dnbGUoY2xhc3NOYW1lc1tpMl0sIHZhbHVlKTtcbn1cbmZ1bmN0aW9uIGFzc2lnblByb3Aobm9kZSwgcHJvcCwgdmFsdWUsIHByZXYsIGlzU1ZHLCBza2lwUmVmKSB7XG4gIGxldCBpc0NFLCBpc1Byb3AsIGlzQ2hpbGRQcm9wO1xuICBpZiAocHJvcCA9PT0gXCJzdHlsZVwiKVxuICAgIHJldHVybiBzdHlsZShub2RlLCB2YWx1ZSwgcHJldik7XG4gIGlmIChwcm9wID09PSBcImNsYXNzTGlzdFwiKVxuICAgIHJldHVybiBjbGFzc0xpc3Qobm9kZSwgdmFsdWUsIHByZXYpO1xuICBpZiAodmFsdWUgPT09IHByZXYpXG4gICAgcmV0dXJuIHByZXY7XG4gIGlmIChwcm9wID09PSBcInJlZlwiKSB7XG4gICAgaWYgKCFza2lwUmVmKVxuICAgICAgdmFsdWUobm9kZSk7XG4gIH0gZWxzZSBpZiAocHJvcC5zbGljZSgwLCAzKSA9PT0gXCJvbjpcIikge1xuICAgIGNvbnN0IGUyID0gcHJvcC5zbGljZSgzKTtcbiAgICBwcmV2ICYmIG5vZGUucmVtb3ZlRXZlbnRMaXN0ZW5lcihlMiwgcHJldik7XG4gICAgdmFsdWUgJiYgbm9kZS5hZGRFdmVudExpc3RlbmVyKGUyLCB2YWx1ZSk7XG4gIH0gZWxzZSBpZiAocHJvcC5zbGljZSgwLCAxMCkgPT09IFwib25jYXB0dXJlOlwiKSB7XG4gICAgY29uc3QgZTIgPSBwcm9wLnNsaWNlKDEwKTtcbiAgICBwcmV2ICYmIG5vZGUucmVtb3ZlRXZlbnRMaXN0ZW5lcihlMiwgcHJldiwgdHJ1ZSk7XG4gICAgdmFsdWUgJiYgbm9kZS5hZGRFdmVudExpc3RlbmVyKGUyLCB2YWx1ZSwgdHJ1ZSk7XG4gIH0gZWxzZSBpZiAocHJvcC5zbGljZSgwLCAyKSA9PT0gXCJvblwiKSB7XG4gICAgY29uc3QgbmFtZSA9IHByb3Auc2xpY2UoMikudG9Mb3dlckNhc2UoKTtcbiAgICBjb25zdCBkZWxlZ2F0ZSA9IERlbGVnYXRlZEV2ZW50cy5oYXMobmFtZSk7XG4gICAgaWYgKCFkZWxlZ2F0ZSAmJiBwcmV2KSB7XG4gICAgICBjb25zdCBoMiA9IEFycmF5LmlzQXJyYXkocHJldikgPyBwcmV2WzBdIDogcHJldjtcbiAgICAgIG5vZGUucmVtb3ZlRXZlbnRMaXN0ZW5lcihuYW1lLCBoMik7XG4gICAgfVxuICAgIGlmIChkZWxlZ2F0ZSB8fCB2YWx1ZSkge1xuICAgICAgYWRkRXZlbnRMaXN0ZW5lcihub2RlLCBuYW1lLCB2YWx1ZSwgZGVsZWdhdGUpO1xuICAgICAgZGVsZWdhdGUgJiYgZGVsZWdhdGVFdmVudHMoW25hbWVdKTtcbiAgICB9XG4gIH0gZWxzZSBpZiAoKGlzQ2hpbGRQcm9wID0gQ2hpbGRQcm9wZXJ0aWVzLmhhcyhwcm9wKSkgfHwgIWlzU1ZHICYmIChQcm9wQWxpYXNlc1twcm9wXSB8fCAoaXNQcm9wID0gUHJvcGVydGllcy5oYXMocHJvcCkpKSB8fCAoaXNDRSA9IG5vZGUubm9kZU5hbWUuaW5jbHVkZXMoXCItXCIpKSkge1xuICAgIGlmIChwcm9wID09PSBcImNsYXNzXCIgfHwgcHJvcCA9PT0gXCJjbGFzc05hbWVcIilcbiAgICAgIGNsYXNzTmFtZShub2RlLCB2YWx1ZSk7XG4gICAgZWxzZSBpZiAoaXNDRSAmJiAhaXNQcm9wICYmICFpc0NoaWxkUHJvcClcbiAgICAgIG5vZGVbdG9Qcm9wZXJ0eU5hbWUocHJvcCldID0gdmFsdWU7XG4gICAgZWxzZVxuICAgICAgbm9kZVtQcm9wQWxpYXNlc1twcm9wXSB8fCBwcm9wXSA9IHZhbHVlO1xuICB9IGVsc2Uge1xuICAgIGNvbnN0IG5zID0gaXNTVkcgJiYgcHJvcC5pbmRleE9mKFwiOlwiKSA+IC0xICYmIFNWR05hbWVzcGFjZVtwcm9wLnNwbGl0KFwiOlwiKVswXV07XG4gICAgaWYgKG5zKVxuICAgICAgc2V0QXR0cmlidXRlTlMobm9kZSwgbnMsIHByb3AsIHZhbHVlKTtcbiAgICBlbHNlXG4gICAgICBzZXRBdHRyaWJ1dGUobm9kZSwgQWxpYXNlc1twcm9wXSB8fCBwcm9wLCB2YWx1ZSk7XG4gIH1cbiAgcmV0dXJuIHZhbHVlO1xufVxuZnVuY3Rpb24gZXZlbnRIYW5kbGVyKGUyKSB7XG4gIGNvbnN0IGtleSA9IGAkJCR7ZTIudHlwZX1gO1xuICBsZXQgbm9kZSA9IGUyLmNvbXBvc2VkUGF0aCAmJiBlMi5jb21wb3NlZFBhdGgoKVswXSB8fCBlMi50YXJnZXQ7XG4gIGlmIChlMi50YXJnZXQgIT09IG5vZGUpIHtcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoZTIsIFwidGFyZ2V0XCIsIHtcbiAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgIHZhbHVlOiBub2RlXG4gICAgfSk7XG4gIH1cbiAgT2JqZWN0LmRlZmluZVByb3BlcnR5KGUyLCBcImN1cnJlbnRUYXJnZXRcIiwge1xuICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICBnZXQoKSB7XG4gICAgICByZXR1cm4gbm9kZSB8fCBkb2N1bWVudDtcbiAgICB9XG4gIH0pO1xuICBpZiAoc2hhcmVkQ29uZmlnLnJlZ2lzdHJ5ICYmICFzaGFyZWRDb25maWcuZG9uZSkge1xuICAgIHNoYXJlZENvbmZpZy5kb25lID0gdHJ1ZTtcbiAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKFwiW2lkXj1wbC1dXCIpLmZvckVhY2goKGVsZW0pID0+IHtcbiAgICAgIHdoaWxlIChlbGVtICYmIGVsZW0ubm9kZVR5cGUgIT09IDggJiYgZWxlbS5ub2RlVmFsdWUgIT09IFwicGwtXCIgKyBlMikge1xuICAgICAgICBsZXQgeCA9IGVsZW0ubmV4dFNpYmxpbmc7XG4gICAgICAgIGVsZW0ucmVtb3ZlKCk7XG4gICAgICAgIGVsZW0gPSB4O1xuICAgICAgfVxuICAgICAgZWxlbSAmJiBlbGVtLnJlbW92ZSgpO1xuICAgIH0pO1xuICB9XG4gIHdoaWxlIChub2RlKSB7XG4gICAgY29uc3QgaGFuZGxlciA9IG5vZGVba2V5XTtcbiAgICBpZiAoaGFuZGxlciAmJiAhbm9kZS5kaXNhYmxlZCkge1xuICAgICAgY29uc3QgZGF0YSA9IG5vZGVbYCR7a2V5fURhdGFgXTtcbiAgICAgIGRhdGEgIT09IHZvaWQgMCA/IGhhbmRsZXIuY2FsbChub2RlLCBkYXRhLCBlMikgOiBoYW5kbGVyLmNhbGwobm9kZSwgZTIpO1xuICAgICAgaWYgKGUyLmNhbmNlbEJ1YmJsZSlcbiAgICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBub2RlID0gbm9kZS5fJGhvc3QgfHwgbm9kZS5wYXJlbnROb2RlIHx8IG5vZGUuaG9zdDtcbiAgfVxufVxuZnVuY3Rpb24gaW5zZXJ0RXhwcmVzc2lvbihwYXJlbnQsIHZhbHVlLCBjdXJyZW50LCBtYXJrZXIsIHVud3JhcEFycmF5KSB7XG4gIGlmIChzaGFyZWRDb25maWcuY29udGV4dCAmJiAhY3VycmVudClcbiAgICBjdXJyZW50ID0gWy4uLnBhcmVudC5jaGlsZE5vZGVzXTtcbiAgd2hpbGUgKHR5cGVvZiBjdXJyZW50ID09PSBcImZ1bmN0aW9uXCIpXG4gICAgY3VycmVudCA9IGN1cnJlbnQoKTtcbiAgaWYgKHZhbHVlID09PSBjdXJyZW50KVxuICAgIHJldHVybiBjdXJyZW50O1xuICBjb25zdCB0MiA9IHR5cGVvZiB2YWx1ZSwgbXVsdGkgPSBtYXJrZXIgIT09IHZvaWQgMDtcbiAgcGFyZW50ID0gbXVsdGkgJiYgY3VycmVudFswXSAmJiBjdXJyZW50WzBdLnBhcmVudE5vZGUgfHwgcGFyZW50O1xuICBpZiAodDIgPT09IFwic3RyaW5nXCIgfHwgdDIgPT09IFwibnVtYmVyXCIpIHtcbiAgICBpZiAoc2hhcmVkQ29uZmlnLmNvbnRleHQpXG4gICAgICByZXR1cm4gY3VycmVudDtcbiAgICBpZiAodDIgPT09IFwibnVtYmVyXCIpXG4gICAgICB2YWx1ZSA9IHZhbHVlLnRvU3RyaW5nKCk7XG4gICAgaWYgKG11bHRpKSB7XG4gICAgICBsZXQgbm9kZSA9IGN1cnJlbnRbMF07XG4gICAgICBpZiAobm9kZSAmJiBub2RlLm5vZGVUeXBlID09PSAzKSB7XG4gICAgICAgIG5vZGUuZGF0YSA9IHZhbHVlO1xuICAgICAgfSBlbHNlXG4gICAgICAgIG5vZGUgPSBkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZSh2YWx1ZSk7XG4gICAgICBjdXJyZW50ID0gY2xlYW5DaGlsZHJlbihwYXJlbnQsIGN1cnJlbnQsIG1hcmtlciwgbm9kZSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGlmIChjdXJyZW50ICE9PSBcIlwiICYmIHR5cGVvZiBjdXJyZW50ID09PSBcInN0cmluZ1wiKSB7XG4gICAgICAgIGN1cnJlbnQgPSBwYXJlbnQuZmlyc3RDaGlsZC5kYXRhID0gdmFsdWU7XG4gICAgICB9IGVsc2VcbiAgICAgICAgY3VycmVudCA9IHBhcmVudC50ZXh0Q29udGVudCA9IHZhbHVlO1xuICAgIH1cbiAgfSBlbHNlIGlmICh2YWx1ZSA9PSBudWxsIHx8IHQyID09PSBcImJvb2xlYW5cIikge1xuICAgIGlmIChzaGFyZWRDb25maWcuY29udGV4dClcbiAgICAgIHJldHVybiBjdXJyZW50O1xuICAgIGN1cnJlbnQgPSBjbGVhbkNoaWxkcmVuKHBhcmVudCwgY3VycmVudCwgbWFya2VyKTtcbiAgfSBlbHNlIGlmICh0MiA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgY3JlYXRlUmVuZGVyRWZmZWN0KCgpID0+IHtcbiAgICAgIGxldCB2ID0gdmFsdWUoKTtcbiAgICAgIHdoaWxlICh0eXBlb2YgdiA9PT0gXCJmdW5jdGlvblwiKVxuICAgICAgICB2ID0gdigpO1xuICAgICAgY3VycmVudCA9IGluc2VydEV4cHJlc3Npb24ocGFyZW50LCB2LCBjdXJyZW50LCBtYXJrZXIpO1xuICAgIH0pO1xuICAgIHJldHVybiAoKSA9PiBjdXJyZW50O1xuICB9IGVsc2UgaWYgKEFycmF5LmlzQXJyYXkodmFsdWUpKSB7XG4gICAgY29uc3QgYXJyYXkgPSBbXTtcbiAgICBjb25zdCBjdXJyZW50QXJyYXkgPSBjdXJyZW50ICYmIEFycmF5LmlzQXJyYXkoY3VycmVudCk7XG4gICAgaWYgKG5vcm1hbGl6ZUluY29taW5nQXJyYXkoYXJyYXksIHZhbHVlLCBjdXJyZW50LCB1bndyYXBBcnJheSkpIHtcbiAgICAgIGNyZWF0ZVJlbmRlckVmZmVjdCgoKSA9PiBjdXJyZW50ID0gaW5zZXJ0RXhwcmVzc2lvbihwYXJlbnQsIGFycmF5LCBjdXJyZW50LCBtYXJrZXIsIHRydWUpKTtcbiAgICAgIHJldHVybiAoKSA9PiBjdXJyZW50O1xuICAgIH1cbiAgICBpZiAoc2hhcmVkQ29uZmlnLmNvbnRleHQpIHtcbiAgICAgIGlmICghYXJyYXkubGVuZ3RoKVxuICAgICAgICByZXR1cm4gY3VycmVudDtcbiAgICAgIGZvciAobGV0IGkyID0gMDsgaTIgPCBhcnJheS5sZW5ndGg7IGkyKyspIHtcbiAgICAgICAgaWYgKGFycmF5W2kyXS5wYXJlbnROb2RlKVxuICAgICAgICAgIHJldHVybiBjdXJyZW50ID0gYXJyYXk7XG4gICAgICB9XG4gICAgfVxuICAgIGlmIChhcnJheS5sZW5ndGggPT09IDApIHtcbiAgICAgIGN1cnJlbnQgPSBjbGVhbkNoaWxkcmVuKHBhcmVudCwgY3VycmVudCwgbWFya2VyKTtcbiAgICAgIGlmIChtdWx0aSlcbiAgICAgICAgcmV0dXJuIGN1cnJlbnQ7XG4gICAgfSBlbHNlIGlmIChjdXJyZW50QXJyYXkpIHtcbiAgICAgIGlmIChjdXJyZW50Lmxlbmd0aCA9PT0gMCkge1xuICAgICAgICBhcHBlbmROb2RlcyhwYXJlbnQsIGFycmF5LCBtYXJrZXIpO1xuICAgICAgfSBlbHNlXG4gICAgICAgIHJlY29uY2lsZUFycmF5cyhwYXJlbnQsIGN1cnJlbnQsIGFycmF5KTtcbiAgICB9IGVsc2Uge1xuICAgICAgY3VycmVudCAmJiBjbGVhbkNoaWxkcmVuKHBhcmVudCk7XG4gICAgICBhcHBlbmROb2RlcyhwYXJlbnQsIGFycmF5KTtcbiAgICB9XG4gICAgY3VycmVudCA9IGFycmF5O1xuICB9IGVsc2UgaWYgKHZhbHVlIGluc3RhbmNlb2YgTm9kZSkge1xuICAgIGlmIChzaGFyZWRDb25maWcuY29udGV4dCAmJiB2YWx1ZS5wYXJlbnROb2RlKVxuICAgICAgcmV0dXJuIGN1cnJlbnQgPSBtdWx0aSA/IFt2YWx1ZV0gOiB2YWx1ZTtcbiAgICBpZiAoQXJyYXkuaXNBcnJheShjdXJyZW50KSkge1xuICAgICAgaWYgKG11bHRpKVxuICAgICAgICByZXR1cm4gY3VycmVudCA9IGNsZWFuQ2hpbGRyZW4ocGFyZW50LCBjdXJyZW50LCBtYXJrZXIsIHZhbHVlKTtcbiAgICAgIGNsZWFuQ2hpbGRyZW4ocGFyZW50LCBjdXJyZW50LCBudWxsLCB2YWx1ZSk7XG4gICAgfSBlbHNlIGlmIChjdXJyZW50ID09IG51bGwgfHwgY3VycmVudCA9PT0gXCJcIiB8fCAhcGFyZW50LmZpcnN0Q2hpbGQpIHtcbiAgICAgIHBhcmVudC5hcHBlbmRDaGlsZCh2YWx1ZSk7XG4gICAgfSBlbHNlXG4gICAgICBwYXJlbnQucmVwbGFjZUNoaWxkKHZhbHVlLCBwYXJlbnQuZmlyc3RDaGlsZCk7XG4gICAgY3VycmVudCA9IHZhbHVlO1xuICB9IGVsc2VcbiAgICA7XG4gIHJldHVybiBjdXJyZW50O1xufVxuZnVuY3Rpb24gbm9ybWFsaXplSW5jb21pbmdBcnJheShub3JtYWxpemVkLCBhcnJheSwgY3VycmVudCwgdW53cmFwMikge1xuICBsZXQgZHluYW1pYyA9IGZhbHNlO1xuICBmb3IgKGxldCBpMiA9IDAsIGxlbiA9IGFycmF5Lmxlbmd0aDsgaTIgPCBsZW47IGkyKyspIHtcbiAgICBsZXQgaXRlbSA9IGFycmF5W2kyXSwgcHJldiA9IGN1cnJlbnQgJiYgY3VycmVudFtpMl07XG4gICAgaWYgKGl0ZW0gaW5zdGFuY2VvZiBOb2RlKSB7XG4gICAgICBub3JtYWxpemVkLnB1c2goaXRlbSk7XG4gICAgfSBlbHNlIGlmIChpdGVtID09IG51bGwgfHwgaXRlbSA9PT0gdHJ1ZSB8fCBpdGVtID09PSBmYWxzZSlcbiAgICAgIDtcbiAgICBlbHNlIGlmIChBcnJheS5pc0FycmF5KGl0ZW0pKSB7XG4gICAgICBkeW5hbWljID0gbm9ybWFsaXplSW5jb21pbmdBcnJheShub3JtYWxpemVkLCBpdGVtLCBwcmV2KSB8fCBkeW5hbWljO1xuICAgIH0gZWxzZSBpZiAodHlwZW9mIGl0ZW0gPT09IFwiZnVuY3Rpb25cIikge1xuICAgICAgaWYgKHVud3JhcDIpIHtcbiAgICAgICAgd2hpbGUgKHR5cGVvZiBpdGVtID09PSBcImZ1bmN0aW9uXCIpXG4gICAgICAgICAgaXRlbSA9IGl0ZW0oKTtcbiAgICAgICAgZHluYW1pYyA9IG5vcm1hbGl6ZUluY29taW5nQXJyYXkobm9ybWFsaXplZCwgQXJyYXkuaXNBcnJheShpdGVtKSA/IGl0ZW0gOiBbaXRlbV0sIEFycmF5LmlzQXJyYXkocHJldikgPyBwcmV2IDogW3ByZXZdKSB8fCBkeW5hbWljO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgbm9ybWFsaXplZC5wdXNoKGl0ZW0pO1xuICAgICAgICBkeW5hbWljID0gdHJ1ZTtcbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgY29uc3QgdmFsdWUgPSBTdHJpbmcoaXRlbSk7XG4gICAgICBpZiAocHJldiAmJiBwcmV2Lm5vZGVUeXBlID09PSAzICYmIHByZXYuZGF0YSA9PT0gdmFsdWUpIHtcbiAgICAgICAgbm9ybWFsaXplZC5wdXNoKHByZXYpO1xuICAgICAgfSBlbHNlXG4gICAgICAgIG5vcm1hbGl6ZWQucHVzaChkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZSh2YWx1ZSkpO1xuICAgIH1cbiAgfVxuICByZXR1cm4gZHluYW1pYztcbn1cbmZ1bmN0aW9uIGFwcGVuZE5vZGVzKHBhcmVudCwgYXJyYXksIG1hcmtlciA9IG51bGwpIHtcbiAgZm9yIChsZXQgaTIgPSAwLCBsZW4gPSBhcnJheS5sZW5ndGg7IGkyIDwgbGVuOyBpMisrKVxuICAgIHBhcmVudC5pbnNlcnRCZWZvcmUoYXJyYXlbaTJdLCBtYXJrZXIpO1xufVxuZnVuY3Rpb24gY2xlYW5DaGlsZHJlbihwYXJlbnQsIGN1cnJlbnQsIG1hcmtlciwgcmVwbGFjZW1lbnQpIHtcbiAgaWYgKG1hcmtlciA9PT0gdm9pZCAwKVxuICAgIHJldHVybiBwYXJlbnQudGV4dENvbnRlbnQgPSBcIlwiO1xuICBjb25zdCBub2RlID0gcmVwbGFjZW1lbnQgfHwgZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoXCJcIik7XG4gIGlmIChjdXJyZW50Lmxlbmd0aCkge1xuICAgIGxldCBpbnNlcnRlZCA9IGZhbHNlO1xuICAgIGZvciAobGV0IGkyID0gY3VycmVudC5sZW5ndGggLSAxOyBpMiA+PSAwOyBpMi0tKSB7XG4gICAgICBjb25zdCBlbCA9IGN1cnJlbnRbaTJdO1xuICAgICAgaWYgKG5vZGUgIT09IGVsKSB7XG4gICAgICAgIGNvbnN0IGlzUGFyZW50ID0gZWwucGFyZW50Tm9kZSA9PT0gcGFyZW50O1xuICAgICAgICBpZiAoIWluc2VydGVkICYmICFpMilcbiAgICAgICAgICBpc1BhcmVudCA/IHBhcmVudC5yZXBsYWNlQ2hpbGQobm9kZSwgZWwpIDogcGFyZW50Lmluc2VydEJlZm9yZShub2RlLCBtYXJrZXIpO1xuICAgICAgICBlbHNlXG4gICAgICAgICAgaXNQYXJlbnQgJiYgZWwucmVtb3ZlKCk7XG4gICAgICB9IGVsc2VcbiAgICAgICAgaW5zZXJ0ZWQgPSB0cnVlO1xuICAgIH1cbiAgfSBlbHNlXG4gICAgcGFyZW50Lmluc2VydEJlZm9yZShub2RlLCBtYXJrZXIpO1xuICByZXR1cm4gW25vZGVdO1xufVxuZnVuY3Rpb24gZ2V0SHlkcmF0aW9uS2V5KCkge1xuICBjb25zdCBoeWRyYXRlID0gc2hhcmVkQ29uZmlnLmNvbnRleHQ7XG4gIHJldHVybiBgJHtoeWRyYXRlLmlkfSR7aHlkcmF0ZS5jb3VudCsrfWA7XG59XG5jb25zdCBTVkdfTkFNRVNQQUNFID0gXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiO1xuZnVuY3Rpb24gY3JlYXRlRWxlbWVudCh0YWdOYW1lLCBpc1NWRyA9IGZhbHNlKSB7XG4gIHJldHVybiBpc1NWRyA/IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnROUyhTVkdfTkFNRVNQQUNFLCB0YWdOYW1lKSA6IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQodGFnTmFtZSk7XG59XG5mdW5jdGlvbiBQb3J0YWwocHJvcHMpIHtcbiAgY29uc3Qge1xuICAgIHVzZVNoYWRvd1xuICB9ID0gcHJvcHMsIG1hcmtlciA9IGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKFwiXCIpLCBtb3VudCA9IHByb3BzLm1vdW50IHx8IGRvY3VtZW50LmJvZHk7XG4gIGZ1bmN0aW9uIHJlbmRlclBvcnRhbCgpIHtcbiAgICBpZiAoc2hhcmVkQ29uZmlnLmNvbnRleHQpIHtcbiAgICAgIGNvbnN0IFtzMiwgc2V0XSA9IGNyZWF0ZVNpZ25hbChmYWxzZSk7XG4gICAgICBxdWV1ZU1pY3JvdGFzaygoKSA9PiBzZXQodHJ1ZSkpO1xuICAgICAgcmV0dXJuICgpID0+IHMyKCkgJiYgcHJvcHMuY2hpbGRyZW47XG4gICAgfSBlbHNlXG4gICAgICByZXR1cm4gKCkgPT4gcHJvcHMuY2hpbGRyZW47XG4gIH1cbiAgaWYgKG1vdW50IGluc3RhbmNlb2YgSFRNTEhlYWRFbGVtZW50KSB7XG4gICAgY29uc3QgW2NsZWFuLCBzZXRDbGVhbl0gPSBjcmVhdGVTaWduYWwoZmFsc2UpO1xuICAgIGNvbnN0IGNsZWFudXAgPSAoKSA9PiBzZXRDbGVhbih0cnVlKTtcbiAgICBjcmVhdGVSb290KChkaXNwb3NlMikgPT4gaW5zZXJ0KG1vdW50LCAoKSA9PiAhY2xlYW4oKSA/IHJlbmRlclBvcnRhbCgpKCkgOiBkaXNwb3NlMigpLCBudWxsKSk7XG4gICAgb25DbGVhbnVwKCgpID0+IHtcbiAgICAgIGlmIChzaGFyZWRDb25maWcuY29udGV4dClcbiAgICAgICAgcXVldWVNaWNyb3Rhc2soY2xlYW51cCk7XG4gICAgICBlbHNlXG4gICAgICAgIGNsZWFudXAoKTtcbiAgICB9KTtcbiAgfSBlbHNlIHtcbiAgICBjb25zdCBjb250YWluZXIgPSBjcmVhdGVFbGVtZW50KHByb3BzLmlzU1ZHID8gXCJnXCIgOiBcImRpdlwiLCBwcm9wcy5pc1NWRyksIHJlbmRlclJvb3QgPSB1c2VTaGFkb3cgJiYgY29udGFpbmVyLmF0dGFjaFNoYWRvdyA/IGNvbnRhaW5lci5hdHRhY2hTaGFkb3coe1xuICAgICAgbW9kZTogXCJvcGVuXCJcbiAgICB9KSA6IGNvbnRhaW5lcjtcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoY29udGFpbmVyLCBcIl8kaG9zdFwiLCB7XG4gICAgICBnZXQoKSB7XG4gICAgICAgIHJldHVybiBtYXJrZXIucGFyZW50Tm9kZTtcbiAgICAgIH0sXG4gICAgICBjb25maWd1cmFibGU6IHRydWVcbiAgICB9KTtcbiAgICBpbnNlcnQocmVuZGVyUm9vdCwgcmVuZGVyUG9ydGFsKCkpO1xuICAgIG1vdW50LmFwcGVuZENoaWxkKGNvbnRhaW5lcik7XG4gICAgcHJvcHMucmVmICYmIHByb3BzLnJlZihjb250YWluZXIpO1xuICAgIG9uQ2xlYW51cCgoKSA9PiBtb3VudC5yZW1vdmVDaGlsZChjb250YWluZXIpKTtcbiAgfVxuICByZXR1cm4gbWFya2VyO1xufVxuZnVuY3Rpb24gRHluYW1pYyhwcm9wcykge1xuICBjb25zdCBbcDIsIG90aGVyc10gPSBzcGxpdFByb3BzKHByb3BzLCBbXCJjb21wb25lbnRcIl0pO1xuICBjb25zdCBjYWNoZWQgPSBjcmVhdGVNZW1vKCgpID0+IHAyLmNvbXBvbmVudCk7XG4gIHJldHVybiBjcmVhdGVNZW1vKCgpID0+IHtcbiAgICBjb25zdCBjb21wb25lbnQgPSBjYWNoZWQoKTtcbiAgICBzd2l0Y2ggKHR5cGVvZiBjb21wb25lbnQpIHtcbiAgICAgIGNhc2UgXCJmdW5jdGlvblwiOlxuICAgICAgICByZXR1cm4gdW50cmFjaygoKSA9PiBjb21wb25lbnQob3RoZXJzKSk7XG4gICAgICBjYXNlIFwic3RyaW5nXCI6XG4gICAgICAgIGNvbnN0IGlzU3ZnID0gU1ZHRWxlbWVudHMuaGFzKGNvbXBvbmVudCk7XG4gICAgICAgIGNvbnN0IGVsID0gc2hhcmVkQ29uZmlnLmNvbnRleHQgPyBnZXROZXh0RWxlbWVudCgpIDogY3JlYXRlRWxlbWVudChjb21wb25lbnQsIGlzU3ZnKTtcbiAgICAgICAgc3ByZWFkKGVsLCBvdGhlcnMsIGlzU3ZnKTtcbiAgICAgICAgcmV0dXJuIGVsO1xuICAgIH1cbiAgfSk7XG59XG52YXIgVEhFTUUgPSAvKiBAX19QVVJFX18gKi8gKChUSEVNRTIpID0+IHtcbiAgVEhFTUUyW1wiREFSS1wiXSA9IFwiREFSS1wiO1xuICBUSEVNRTJbXCJMSUdIVFwiXSA9IFwiTElHSFRcIjtcbiAgcmV0dXJuIFRIRU1FMjtcbn0pKFRIRU1FIHx8IHt9KTtcbmxldCBlID0geyBkYXRhOiBcIlwiIH0sIHQgPSAodDIpID0+IFwib2JqZWN0XCIgPT0gdHlwZW9mIHdpbmRvdyA/ICgodDIgPyB0Mi5xdWVyeVNlbGVjdG9yKFwiI19nb29iZXJcIikgOiB3aW5kb3cuX2dvb2JlcikgfHwgT2JqZWN0LmFzc2lnbigodDIgfHwgZG9jdW1lbnQuaGVhZCkuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInN0eWxlXCIpKSwgeyBpbm5lckhUTUw6IFwiIFwiLCBpZDogXCJfZ29vYmVyXCIgfSkpLmZpcnN0Q2hpbGQgOiB0MiB8fCBlLCBsID0gLyg/OihbXFx1MDA4MC1cXHVGRkZGXFx3LSVAXSspICo6PyAqKFteeztdKz8pO3woW147fXtdKj8pICp7KXwofVxccyopL2csIGEgPSAvXFwvXFwqW15dKj9cXCpcXC98ICArL2csIG4gPSAvXFxuKy9nLCBvID0gKGUyLCB0MikgPT4ge1xuICBsZXQgciA9IFwiXCIsIGwyID0gXCJcIiwgYTIgPSBcIlwiO1xuICBmb3IgKGxldCBuMiBpbiBlMikge1xuICAgIGxldCBjMiA9IGUyW24yXTtcbiAgICBcIkBcIiA9PSBuMlswXSA/IFwiaVwiID09IG4yWzFdID8gciA9IG4yICsgXCIgXCIgKyBjMiArIFwiO1wiIDogbDIgKz0gXCJmXCIgPT0gbjJbMV0gPyBvKGMyLCBuMikgOiBuMiArIFwie1wiICsgbyhjMiwgXCJrXCIgPT0gbjJbMV0gPyBcIlwiIDogdDIpICsgXCJ9XCIgOiBcIm9iamVjdFwiID09IHR5cGVvZiBjMiA/IGwyICs9IG8oYzIsIHQyID8gdDIucmVwbGFjZSgvKFteLF0pKy9nLCAoZTMpID0+IG4yLnJlcGxhY2UoLyheOi4qKXwoW14sXSkrL2csICh0MykgPT4gLyYvLnRlc3QodDMpID8gdDMucmVwbGFjZSgvJi9nLCBlMykgOiBlMyA/IGUzICsgXCIgXCIgKyB0MyA6IHQzKSkgOiBuMikgOiBudWxsICE9IGMyICYmIChuMiA9IC9eLS0vLnRlc3QobjIpID8gbjIgOiBuMi5yZXBsYWNlKC9bQS1aXS9nLCBcIi0kJlwiKS50b0xvd2VyQ2FzZSgpLCBhMiArPSBvLnAgPyBvLnAobjIsIGMyKSA6IG4yICsgXCI6XCIgKyBjMiArIFwiO1wiKTtcbiAgfVxuICByZXR1cm4gciArICh0MiAmJiBhMiA/IHQyICsgXCJ7XCIgKyBhMiArIFwifVwiIDogYTIpICsgbDI7XG59LCBjID0ge30sIHMgPSAoZTIpID0+IHtcbiAgaWYgKFwib2JqZWN0XCIgPT0gdHlwZW9mIGUyKSB7XG4gICAgbGV0IHQyID0gXCJcIjtcbiAgICBmb3IgKGxldCByIGluIGUyKVxuICAgICAgdDIgKz0gciArIHMoZTJbcl0pO1xuICAgIHJldHVybiB0MjtcbiAgfVxuICByZXR1cm4gZTI7XG59LCBpID0gKGUyLCB0MiwgciwgaTIsIHAyKSA9PiB7XG4gIGxldCB1MiA9IHMoZTIpLCBkID0gY1t1Ml0gfHwgKGNbdTJdID0gKChlMykgPT4ge1xuICAgIGxldCB0MyA9IDAsIHIyID0gMTE7XG4gICAgZm9yICg7IHQzIDwgZTMubGVuZ3RoOyApXG4gICAgICByMiA9IDEwMSAqIHIyICsgZTMuY2hhckNvZGVBdCh0MysrKSA+Pj4gMDtcbiAgICByZXR1cm4gXCJnb1wiICsgcjI7XG4gIH0pKHUyKSk7XG4gIGlmICghY1tkXSkge1xuICAgIGxldCB0MyA9IHUyICE9PSBlMiA/IGUyIDogKChlMykgPT4ge1xuICAgICAgbGV0IHQ0LCByMiwgbzIgPSBbe31dO1xuICAgICAgZm9yICg7IHQ0ID0gbC5leGVjKGUzLnJlcGxhY2UoYSwgXCJcIikpOyApXG4gICAgICAgIHQ0WzRdID8gbzIuc2hpZnQoKSA6IHQ0WzNdID8gKHIyID0gdDRbM10ucmVwbGFjZShuLCBcIiBcIikudHJpbSgpLCBvMi51bnNoaWZ0KG8yWzBdW3IyXSA9IG8yWzBdW3IyXSB8fCB7fSkpIDogbzJbMF1bdDRbMV1dID0gdDRbMl0ucmVwbGFjZShuLCBcIiBcIikudHJpbSgpO1xuICAgICAgcmV0dXJuIG8yWzBdO1xuICAgIH0pKGUyKTtcbiAgICBjW2RdID0gbyhwMiA/IHsgW1wiQGtleWZyYW1lcyBcIiArIGRdOiB0MyB9IDogdDMsIHIgPyBcIlwiIDogXCIuXCIgKyBkKTtcbiAgfVxuICBsZXQgZiA9IHIgJiYgYy5nID8gYy5nIDogbnVsbDtcbiAgcmV0dXJuIHIgJiYgKGMuZyA9IGNbZF0pLCAoKGUzLCB0MywgcjIsIGwyKSA9PiB7XG4gICAgbDIgPyB0My5kYXRhID0gdDMuZGF0YS5yZXBsYWNlKGwyLCBlMykgOiAtMSA9PT0gdDMuZGF0YS5pbmRleE9mKGUzKSAmJiAodDMuZGF0YSA9IHIyID8gZTMgKyB0My5kYXRhIDogdDMuZGF0YSArIGUzKTtcbiAgfSkoY1tkXSwgdDIsIGkyLCBmKSwgZDtcbn0sIHAgPSAoZTIsIHQyLCByKSA9PiBlMi5yZWR1Y2UoKGUzLCBsMiwgYTIpID0+IHtcbiAgbGV0IG4yID0gdDJbYTJdO1xuICBpZiAobjIgJiYgbjIuY2FsbCkge1xuICAgIGxldCBlNCA9IG4yKHIpLCB0MyA9IGU0ICYmIGU0LnByb3BzICYmIGU0LnByb3BzLmNsYXNzTmFtZSB8fCAvXmdvLy50ZXN0KGU0KSAmJiBlNDtcbiAgICBuMiA9IHQzID8gXCIuXCIgKyB0MyA6IGU0ICYmIFwib2JqZWN0XCIgPT0gdHlwZW9mIGU0ID8gZTQucHJvcHMgPyBcIlwiIDogbyhlNCwgXCJcIikgOiBmYWxzZSA9PT0gZTQgPyBcIlwiIDogZTQ7XG4gIH1cbiAgcmV0dXJuIGUzICsgbDIgKyAobnVsbCA9PSBuMiA/IFwiXCIgOiBuMik7XG59LCBcIlwiKTtcbmZ1bmN0aW9uIHUoZTIpIHtcbiAgbGV0IHIgPSB0aGlzIHx8IHt9LCBsMiA9IGUyLmNhbGwgPyBlMihyLnApIDogZTI7XG4gIHJldHVybiBpKGwyLnVuc2hpZnQgPyBsMi5yYXcgPyBwKGwyLCBbXS5zbGljZS5jYWxsKGFyZ3VtZW50cywgMSksIHIucCkgOiBsMi5yZWR1Y2UoKGUzLCB0MikgPT4gT2JqZWN0LmFzc2lnbihlMywgdDIgJiYgdDIuY2FsbCA/IHQyKHIucCkgOiB0MiksIHt9KSA6IGwyLCB0KHIudGFyZ2V0KSwgci5nLCByLm8sIHIuayk7XG59XG51LmJpbmQoeyBnOiAxIH0pO1xubGV0IGggPSB1LmJpbmQoeyBrOiAxIH0pO1xuY29uc3QgVGhlbWVDb250ZXh0ID0gY3JlYXRlQ29udGV4dCgpO1xuZnVuY3Rpb24gVGhlbWVQcm92aWRlcihwcm9wcykge1xuICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KFRoZW1lQ29udGV4dC5Qcm92aWRlciwge1xuICAgIHZhbHVlOiBwcm9wcy50aGVtZSxcbiAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICByZXR1cm4gcHJvcHMuY2hpbGRyZW47XG4gICAgfVxuICB9KTtcbn1cbmZ1bmN0aW9uIHVzZVRoZW1lKCkge1xuICByZXR1cm4gdXNlQ29udGV4dChUaGVtZUNvbnRleHQpO1xufVxuZnVuY3Rpb24gbWFrZVN0eWxlZCh0YWcpIHtcbiAgbGV0IF9jdHggPSB0aGlzIHx8IHt9O1xuICByZXR1cm4gKC4uLmFyZ3MpID0+IHtcbiAgICBjb25zdCBTdHlsZWQgPSAocHJvcHMpID0+IHtcbiAgICAgIGNvbnN0IHRoZW1lID0gdXNlQ29udGV4dChUaGVtZUNvbnRleHQpO1xuICAgICAgY29uc3Qgd2l0aFRoZW1lID0gbWVyZ2VQcm9wcyhwcm9wcywgeyB0aGVtZSB9KTtcbiAgICAgIGNvbnN0IGNsb25lID0gbWVyZ2VQcm9wcyh3aXRoVGhlbWUsIHtcbiAgICAgICAgZ2V0IGNsYXNzKCkge1xuICAgICAgICAgIGNvbnN0IHBDbGFzcyA9IHdpdGhUaGVtZS5jbGFzcywgYXBwZW5kID0gXCJjbGFzc1wiIGluIHdpdGhUaGVtZSAmJiAvXmdvWzAtOV0rLy50ZXN0KHBDbGFzcyk7XG4gICAgICAgICAgbGV0IGNsYXNzTmFtZTIgPSB1LmFwcGx5KFxuICAgICAgICAgICAgeyB0YXJnZXQ6IF9jdHgudGFyZ2V0LCBvOiBhcHBlbmQsIHA6IHdpdGhUaGVtZSwgZzogX2N0eC5nIH0sXG4gICAgICAgICAgICBhcmdzXG4gICAgICAgICAgKTtcbiAgICAgICAgICByZXR1cm4gW3BDbGFzcywgY2xhc3NOYW1lMl0uZmlsdGVyKEJvb2xlYW4pLmpvaW4oXCIgXCIpO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICAgIGNvbnN0IFtsb2NhbCwgbmV3UHJvcHNdID0gc3BsaXRQcm9wcyhjbG9uZSwgW1wiYXNcIiwgXCJ0aGVtZVwiXSk7XG4gICAgICBjb25zdCBodG1sUHJvcHMgPSBuZXdQcm9wcztcbiAgICAgIGNvbnN0IGNyZWF0ZVRhZyA9IGxvY2FsLmFzIHx8IHRhZztcbiAgICAgIGxldCBlbDtcbiAgICAgIGlmICh0eXBlb2YgY3JlYXRlVGFnID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICAgICAgZWwgPSBjcmVhdGVUYWcoaHRtbFByb3BzKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHtcbiAgICAgICAgICBpZiAoX2N0eC5nID09IDEpIHtcbiAgICAgICAgICAgIGVsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChjcmVhdGVUYWcpO1xuICAgICAgICAgICAgc3ByZWFkKGVsLCBodG1sUHJvcHMpO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBlbCA9IER5bmFtaWMobWVyZ2VQcm9wcyh7IGNvbXBvbmVudDogY3JlYXRlVGFnIH0sIGh0bWxQcm9wcykpO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgcmV0dXJuIGVsO1xuICAgIH07XG4gICAgU3R5bGVkLmNsYXNzID0gKHByb3BzKSA9PiB7XG4gICAgICByZXR1cm4gdW50cmFjaygoKSA9PiB7XG4gICAgICAgIHJldHVybiB1LmFwcGx5KHsgdGFyZ2V0OiBfY3R4LnRhcmdldCwgcDogcHJvcHMsIGc6IF9jdHguZyB9LCBhcmdzKTtcbiAgICAgIH0pO1xuICAgIH07XG4gICAgcmV0dXJuIFN0eWxlZDtcbiAgfTtcbn1cbmNvbnN0IHN0eWxlZCA9IG5ldyBQcm94eShtYWtlU3R5bGVkLCB7XG4gIGdldCh0YXJnZXQsIHRhZykge1xuICAgIHJldHVybiB0YXJnZXQodGFnKTtcbiAgfVxufSk7XG5mdW5jdGlvbiBjcmVhdGVHbG9iYWxTdHlsZXMoKSB7XG4gIGNvbnN0IGZuID0gbWFrZVN0eWxlZC5jYWxsKHsgZzogMSB9LCBcImRpdlwiKS5hcHBseShudWxsLCBhcmd1bWVudHMpO1xuICByZXR1cm4gZnVuY3Rpb24gR2xvYmFsU3R5bGVzMihwcm9wcykge1xuICAgIGZuKHByb3BzKTtcbiAgICByZXR1cm4gbnVsbDtcbiAgfTtcbn1cbmNvbnN0IGdsb2JhbFN0eWxlc1RhZyA9IFwidGMtcm9vdFwiO1xuY29uc3QgZGlzYWJsZVNjcm9sbENsYXNzID0gXCJ0Yy1kaXNhYmxlLXNjcm9sbFwiO1xuY29uc3QgdXNpbmdNb3VzZUNsYXNzID0gXCJ0Yy11c2luZy1tb3VzZVwiO1xuY29uc3QgR2xvYmFsU3R5bGVzID0gKCkgPT4ge1xuICBkb2N1bWVudC5ib2R5LmFkZEV2ZW50TGlzdGVuZXIoXCJtb3VzZWRvd25cIiwgKCkgPT4gZG9jdW1lbnQuYm9keS5jbGFzc0xpc3QuYWRkKHVzaW5nTW91c2VDbGFzcykpO1xuICBkb2N1bWVudC5ib2R5LmFkZEV2ZW50TGlzdGVuZXIoXCJrZXlkb3duXCIsIChldmVudCkgPT4ge1xuICAgIGlmIChldmVudC5rZXkgPT09IFwiVGFiXCIpIHtcbiAgICAgIGRvY3VtZW50LmJvZHkuY2xhc3NMaXN0LnJlbW92ZSh1c2luZ01vdXNlQ2xhc3MpO1xuICAgIH1cbiAgfSk7XG4gIGNvbnN0IFN0eWxlcyA9IGNyZWF0ZUdsb2JhbFN0eWxlc2BcbiAgICAke2dsb2JhbFN0eWxlc1RhZ30gKiB7XG4gICAgICAgIG1hcmdpbjogMDtcbiAgICAgICAgcGFkZGluZzogMDtcbiAgICAgICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgICAgICAgXG4gICAgICAgIGZvbnQtZmFtaWx5OiAtYXBwbGUtc3lzdGVtLCBCbGlua01hY1N5c3RlbUZvbnQsICdSb2JvdG8nLCAnSGVsdmV0aWNhIE5ldWUnLCBBcmlhbCwgVGFob21hLCBWZXJkYW5hLCBzYW5zLXNlcmlmO1xuICAgICAgICAtd2Via2l0LWZvbnQtc21vb3RoaW5nOiBhbnRpYWxpYXNlZDtcbiAgICAgICAgLW1vei1vc3gtZm9udC1zbW9vdGhpbmc6IGdyYXlzY2FsZTsgICAgICAgIFxuICAgICAgICAtd2Via2l0LXRhcC1oaWdobGlnaHQtY29sb3I6IHRyYW5zcGFyZW50O1xuICAgIH1cbiAgICBcbiAgICAke2dsb2JhbFN0eWxlc1RhZ30gaW1nIHtcbiAgICAgIC13ZWJraXQtdXNlci1zZWxlY3Q6IG5vbmU7XG4gICAgICAtd2Via2l0LXRvdWNoLWNhbGxvdXQ6IG5vbmU7XG4gICAgfSAgIFxuIFxuICAgICR7Z2xvYmFsU3R5bGVzVGFnfSAqOmZvY3VzIHtcbiAgICAgICAgb3V0bGluZTogIzA4ZiBhdXRvIDJweDtcbiAgICB9XG4gICAgXG4gICAgJHtnbG9iYWxTdHlsZXNUYWd9IGxpIHtcbiAgICAgICAgbGlzdC1zdHlsZTogbm9uZTtcbiAgICB9XG4gICAgXG4gICAgJHtnbG9iYWxTdHlsZXNUYWd9IGJ1dHRvbiB7XG4gICAgICAgIG91dGxpbmU6IG5vbmU7XG4gICAgfVxuICAgIFxuICAgIGJvZHkuJHtkaXNhYmxlU2Nyb2xsQ2xhc3N9IHtcbiAgICAgICAgcG9zaXRpb246IGZpeGVkOyBcbiAgICAgICAgb3ZlcmZsb3cteTogc2Nyb2xsO1xuICAgICAgICByaWdodDogMDtcbiAgICAgICAgbGVmdDogMDtcbiAgICB9XG4gICAgXG4gICAgYm9keS4ke3VzaW5nTW91c2VDbGFzc30gJHtnbG9iYWxTdHlsZXNUYWd9ICo6Zm9jdXMge1xuICAgICAgICBvdXRsaW5lOiBub25lO1xuICAgIH1cbmA7XG4gIHJldHVybiBjcmVhdGVDb21wb25lbnQoU3R5bGVzLCB7fSk7XG59O1xuZnVuY3Rpb24gaGV4VG9SZ2IoaGV4KSB7XG4gIGlmIChoZXhbMF0gPT09IFwiI1wiKSB7XG4gICAgaGV4ID0gaGV4LnNsaWNlKDEpO1xuICB9XG4gIGNvbnN0IGJpZ2ludCA9IHBhcnNlSW50KGhleCwgMTYpO1xuICBjb25zdCByID0gYmlnaW50ID4+IDE2ICYgMjU1O1xuICBjb25zdCBnID0gYmlnaW50ID4+IDggJiAyNTU7XG4gIGNvbnN0IGIgPSBiaWdpbnQgJiAyNTU7XG4gIHJldHVybiBbciwgZywgYl0uam9pbihcIixcIik7XG59XG5mdW5jdGlvbiByZ2JhKGNvbG9yLCBvcGFjaXR5KSB7XG4gIGlmIChjb2xvclswXSA9PT0gXCIjXCIpIHtcbiAgICBjb2xvciA9IGhleFRvUmdiKGNvbG9yKTtcbiAgfVxuICByZXR1cm4gYHJnYmEoJHtjb2xvcn0sICR7b3BhY2l0eX0pYDtcbn1cbmZ1bmN0aW9uIHRvUHgodmFsdWUpIHtcbiAgcmV0dXJuIHZhbHVlLnRvU3RyaW5nKCkgKyBcInB4XCI7XG59XG5jb25zdCBfSW5NZW1vcnlTdG9yYWdlID0gY2xhc3Mge1xuICBjb25zdHJ1Y3RvcigpIHtcbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwic3RvcmFnZVwiLCB7fSk7XG4gIH1cbiAgc3RhdGljIGdldEluc3RhbmNlKCkge1xuICAgIGlmICghX0luTWVtb3J5U3RvcmFnZS5pbnN0YW5jZSkge1xuICAgICAgX0luTWVtb3J5U3RvcmFnZS5pbnN0YW5jZSA9IG5ldyBfSW5NZW1vcnlTdG9yYWdlKCk7XG4gICAgfVxuICAgIHJldHVybiBfSW5NZW1vcnlTdG9yYWdlLmluc3RhbmNlO1xuICB9XG4gIGdldCBsZW5ndGgoKSB7XG4gICAgcmV0dXJuIE9iamVjdC5rZXlzKHRoaXMuc3RvcmFnZSkubGVuZ3RoO1xuICB9XG4gIGNsZWFyKCkge1xuICAgIHRoaXMuc3RvcmFnZSA9IHt9O1xuICB9XG4gIGdldEl0ZW0oa2V5KSB7XG4gICAgdmFyIF9hMjtcbiAgICByZXR1cm4gKF9hMiA9IHRoaXMuc3RvcmFnZVtrZXldKSAhPSBudWxsID8gX2EyIDogbnVsbDtcbiAgfVxuICBrZXkoaW5kZXgpIHtcbiAgICB2YXIgX2EyO1xuICAgIGNvbnN0IGtleXMgPSBPYmplY3Qua2V5cyh0aGlzLnN0b3JhZ2UpO1xuICAgIGlmIChpbmRleCA8IDAgfHwgaW5kZXggPj0ga2V5cy5sZW5ndGgpIHtcbiAgICAgIHJldHVybiBudWxsO1xuICAgIH1cbiAgICByZXR1cm4gKF9hMiA9IGtleXNbaW5kZXhdKSAhPSBudWxsID8gX2EyIDogbnVsbDtcbiAgfVxuICByZW1vdmVJdGVtKGtleSkge1xuICAgIGRlbGV0ZSB0aGlzLnN0b3JhZ2Vba2V5XTtcbiAgfVxuICBzZXRJdGVtKGtleSwgdmFsdWUpIHtcbiAgICB0aGlzLnN0b3JhZ2Vba2V5XSA9IHZhbHVlO1xuICB9XG59O1xubGV0IEluTWVtb3J5U3RvcmFnZSA9IF9Jbk1lbW9yeVN0b3JhZ2U7XG5fX3B1YmxpY0ZpZWxkKEluTWVtb3J5U3RvcmFnZSwgXCJpbnN0YW5jZVwiKTtcbmNsYXNzIFRvbkNvbm5lY3RVSUVycm9yIGV4dGVuZHMgVG9uQ29ubmVjdEVycm9yIHtcbiAgY29uc3RydWN0b3IoLi4uYXJncykge1xuICAgIHN1cGVyKC4uLmFyZ3MpO1xuICAgIE9iamVjdC5zZXRQcm90b3R5cGVPZih0aGlzLCBUb25Db25uZWN0VUlFcnJvci5wcm90b3R5cGUpO1xuICB9XG59XG5mdW5jdGlvbiBsb2dEZWJ1ZyguLi5hcmdzKSB7XG4gIHtcbiAgICB0cnkge1xuICAgICAgY29uc29sZS5kZWJ1ZyhcIltUT05fQ09OTkVDVF9VSV1cIiwgLi4uYXJncyk7XG4gICAgfSBjYXRjaCAoZTIpIHtcbiAgICB9XG4gIH1cbn1cbmZ1bmN0aW9uIGxvZ0Vycm9yKC4uLmFyZ3MpIHtcbiAge1xuICAgIHRyeSB7XG4gICAgICBjb25zb2xlLmVycm9yKFwiW1RPTl9DT05ORUNUX1VJXVwiLCAuLi5hcmdzKTtcbiAgICB9IGNhdGNoIChlMikge1xuICAgIH1cbiAgfVxufVxuZnVuY3Rpb24gbG9nV2FybmluZyguLi5hcmdzKSB7XG4gIHtcbiAgICB0cnkge1xuICAgICAgY29uc29sZS53YXJuKFwiW1RPTl9DT05ORUNUX1VJXVwiLCAuLi5hcmdzKTtcbiAgICB9IGNhdGNoIChlMikge1xuICAgIH1cbiAgfVxufVxuZnVuY3Rpb24gb3BlbkxpbmsoaHJlZiwgdGFyZ2V0ID0gXCJfc2VsZlwiKSB7XG4gIGxvZ0RlYnVnKFwib3BlbkxpbmtcIiwgaHJlZiwgdGFyZ2V0KTtcbiAgd2luZG93Lm9wZW4oaHJlZiwgdGFyZ2V0LCBcIm5vb3BlbmVyIG5vcmVmZXJyZXJcIik7XG59XG5mdW5jdGlvbiBvcGVuTGlua0JsYW5rKGhyZWYpIHtcbiAgb3BlbkxpbmsoaHJlZiwgXCJfYmxhbmtcIik7XG59XG5mdW5jdGlvbiBvcGVuRGVlcGxpbmtXaXRoRmFsbGJhY2soaHJlZiwgZmFsbGJhY2spIHtcbiAgY29uc3QgZG9GYWxsYmFjayA9ICgpID0+IHtcbiAgICBpZiAoaXNCcm93c2VyKFwic2FmYXJpXCIpIHx8IGlzT1MoXCJhbmRyb2lkXCIpICYmIGlzQnJvd3NlcihcImZpcmVmb3hcIikpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgZmFsbGJhY2soKTtcbiAgfTtcbiAgY29uc3QgZmFsbGJhY2tUaW1lb3V0ID0gc2V0VGltZW91dCgoKSA9PiBkb0ZhbGxiYWNrKCksIDIwMCk7XG4gIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKFwiYmx1clwiLCAoKSA9PiBjbGVhclRpbWVvdXQoZmFsbGJhY2tUaW1lb3V0KSwgeyBvbmNlOiB0cnVlIH0pO1xuICBvcGVuTGluayhocmVmLCBcIl9zZWxmXCIpO1xufVxuZnVuY3Rpb24gZ2V0U3lzdGVtVGhlbWUoKSB7XG4gIGlmICh3aW5kb3cubWF0Y2hNZWRpYSAmJiB3aW5kb3cubWF0Y2hNZWRpYShcIihwcmVmZXJzLWNvbG9yLXNjaGVtZTogbGlnaHQpXCIpLm1hdGNoZXMpIHtcbiAgICByZXR1cm4gVEhFTUUuTElHSFQ7XG4gIH1cbiAgcmV0dXJuIFRIRU1FLkRBUks7XG59XG5mdW5jdGlvbiBzdWJzY3JpYmVUb1RoZW1lQ2hhbmdlKGNhbGxiYWNrKSB7XG4gIGNvbnN0IGhhbmRsZXIgPSAoZXZlbnQpID0+IGNhbGxiYWNrKGV2ZW50Lm1hdGNoZXMgPyBUSEVNRS5EQVJLIDogVEhFTUUuTElHSFQpO1xuICB3aW5kb3cubWF0Y2hNZWRpYShcIihwcmVmZXJzLWNvbG9yLXNjaGVtZTogZGFyaylcIikuYWRkRXZlbnRMaXN0ZW5lcihcImNoYW5nZVwiLCBoYW5kbGVyKTtcbiAgcmV0dXJuICgpID0+IHdpbmRvdy5tYXRjaE1lZGlhKFwiKHByZWZlcnMtY29sb3Itc2NoZW1lOiBkYXJrKVwiKS5yZW1vdmVFdmVudExpc3RlbmVyKFwiY2hhbmdlXCIsIGhhbmRsZXIpO1xufVxuZnVuY3Rpb24gZGlzYWJsZVNjcm9sbCgpIHtcbiAgaWYgKGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5zY3JvbGxIZWlnaHQgPT09IGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5jbGllbnRIZWlnaHQpIHtcbiAgICByZXR1cm47XG4gIH1cbiAgZG9jdW1lbnQuYm9keS5zdHlsZS50b3AgPSB0b1B4KC1kb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuc2Nyb2xsVG9wKTtcbiAgZG9jdW1lbnQuYm9keS5jbGFzc0xpc3QuYWRkKGRpc2FibGVTY3JvbGxDbGFzcyk7XG59XG5mdW5jdGlvbiBlbmFibGVTY3JvbGwoKSB7XG4gIGRvY3VtZW50LmJvZHkuY2xhc3NMaXN0LnJlbW92ZShkaXNhYmxlU2Nyb2xsQ2xhc3MpO1xuICBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuc2Nyb2xsVG8oeyB0b3A6IC1wYXJzZUZsb2F0KGdldENvbXB1dGVkU3R5bGUoZG9jdW1lbnQuYm9keSkudG9wKSB9KTtcbiAgZG9jdW1lbnQuYm9keS5zdHlsZS50b3AgPSBcImF1dG9cIjtcbn1cbmZ1bmN0aW9uIGZpeE1vYmlsZVNhZmFyaUFjdGl2ZVRyYW5zaXRpb24oKSB7XG4gIGlmICghZG9jdW1lbnQuYm9keS5oYXNBdHRyaWJ1dGUoXCJvbnRvdWNoc3RhcnRcIikpIHtcbiAgICBkb2N1bWVudC5ib2R5LnNldEF0dHJpYnV0ZShcIm9udG91Y2hzdGFydFwiLCBcIlwiKTtcbiAgfVxufVxuZnVuY3Rpb24gZGVmaW5lU3R5bGVzUm9vdCgpIHtcbiAgY3VzdG9tRWxlbWVudHMuZGVmaW5lKGdsb2JhbFN0eWxlc1RhZywgY2xhc3MgVGNSb290RWxlbWVudCBleHRlbmRzIEhUTUxFbGVtZW50IHtcbiAgfSk7XG59XG5mdW5jdGlvbiBjcmVhdGVNYWNyb3Rhc2soY2FsbGJhY2spIHtcbiAgcmV0dXJuIF9fYXN5bmModGhpcywgbnVsbCwgZnVuY3Rpb24qICgpIHtcbiAgICB5aWVsZCBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4gcmVxdWVzdEFuaW1hdGlvbkZyYW1lKHJlc29sdmUpKTtcbiAgICBjYWxsYmFjaygpO1xuICB9KTtcbn1cbmZ1bmN0aW9uIGNyZWF0ZU1hY3JvdGFza0FzeW5jKGNhbGxiYWNrKSB7XG4gIHJldHVybiBfX2FzeW5jKHRoaXMsIG51bGwsIGZ1bmN0aW9uKiAoKSB7XG4gICAgeWllbGQgbmV3IFByb21pc2UoKHJlc29sdmUpID0+IHJlcXVlc3RBbmltYXRpb25GcmFtZShyZXNvbHZlKSk7XG4gICAgcmV0dXJuIGNhbGxiYWNrKCk7XG4gIH0pO1xufVxuZnVuY3Rpb24gcHJlbG9hZEltYWdlcyhpbWFnZXMpIHtcbiAgaWYgKGRvY3VtZW50LnJlYWR5U3RhdGUgIT09IFwiY29tcGxldGVcIikge1xuICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKFwibG9hZFwiLCAoKSA9PiBjcmVhdGVNYWNyb3Rhc2soKCkgPT4gcHJlbG9hZEltYWdlcyhpbWFnZXMpKSwge1xuICAgICAgb25jZTogdHJ1ZVxuICAgIH0pO1xuICB9IGVsc2Uge1xuICAgIGltYWdlcy5mb3JFYWNoKChpbWcpID0+IHtcbiAgICAgIGNvbnN0IG5vZGUgPSBuZXcgd2luZG93LkltYWdlKCk7XG4gICAgICBub2RlLnNyYyA9IGltZztcbiAgICB9KTtcbiAgfVxufVxuZnVuY3Rpb24gZ2V0V2luZG93JDEoKSB7XG4gIGlmICh0eXBlb2Ygd2luZG93ICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgcmV0dXJuIHdpbmRvdztcbiAgfVxuICByZXR1cm4gdm9pZCAwO1xufVxuZnVuY3Rpb24gdHJ5R2V0TG9jYWxTdG9yYWdlKCkge1xuICBpZiAoaXNMb2NhbFN0b3JhZ2VBdmFpbGFibGUoKSkge1xuICAgIHJldHVybiBsb2NhbFN0b3JhZ2U7XG4gIH1cbiAgaWYgKGlzTm9kZUpzKCkpIHtcbiAgICB0aHJvdyBuZXcgVG9uQ29ubmVjdFVJRXJyb3IoXG4gICAgICBcImBsb2NhbFN0b3JhZ2VgIGlzIHVuYXZhaWxhYmxlLCBidXQgaXQgaXMgcmVxdWlyZWQgZm9yIFRvbkNvbm5lY3QuIEZvciBtb3JlIGRldGFpbHMsIHNlZSBodHRwczovL2dpdGh1Yi5jb20vdG9uLWNvbm5lY3Qvc2RrL3RyZWUvbWFpbi9wYWNrYWdlcy9zZGsjaW5pdC1jb25uZWN0b3JcIlxuICAgICk7XG4gIH1cbiAgcmV0dXJuIEluTWVtb3J5U3RvcmFnZS5nZXRJbnN0YW5jZSgpO1xufVxuZnVuY3Rpb24gaXNMb2NhbFN0b3JhZ2VBdmFpbGFibGUoKSB7XG4gIHRyeSB7XG4gICAgcmV0dXJuIHR5cGVvZiBsb2NhbFN0b3JhZ2UgIT09IFwidW5kZWZpbmVkXCI7XG4gIH0gY2F0Y2ggKGUyKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG59XG5mdW5jdGlvbiBpc05vZGVKcygpIHtcbiAgcmV0dXJuIHR5cGVvZiBwcm9jZXNzICE9PSBcInVuZGVmaW5lZFwiICYmIHByb2Nlc3MudmVyc2lvbnMgIT0gbnVsbCAmJiBwcm9jZXNzLnZlcnNpb25zLm5vZGUgIT0gbnVsbDtcbn1cbmZ1bmN0aW9uIGdldFVzZXJBZ2VudCgpIHtcbiAgdmFyIF9hMiwgX2IyLCBfYzI7XG4gIGNvbnN0IHJlc3VsdHMgPSBuZXcgVUFQYXJzZXIoKS5nZXRSZXN1bHQoKTtcbiAgY29uc3Qgb3NOYW1lID0gKF9hMiA9IHJlc3VsdHMub3MubmFtZSkgPT0gbnVsbCA/IHZvaWQgMCA6IF9hMi50b0xvd2VyQ2FzZSgpO1xuICBjb25zdCBkZXZpY2VNb2RlbCA9IChfYjIgPSByZXN1bHRzLmRldmljZS5tb2RlbCkgPT0gbnVsbCA/IHZvaWQgMCA6IF9iMi50b0xvd2VyQ2FzZSgpO1xuICBsZXQgb3M7XG4gIHN3aXRjaCAodHJ1ZSkge1xuICAgIGNhc2UgZGV2aWNlTW9kZWwgPT09IFwiaXBhZFwiOlxuICAgICAgb3MgPSBcImlwYWRcIjtcbiAgICAgIGJyZWFrO1xuICAgIGNhc2Ugb3NOYW1lID09PSBcImlvc1wiOlxuICAgICAgb3MgPSBcImlvc1wiO1xuICAgICAgYnJlYWs7XG4gICAgY2FzZSBvc05hbWUgPT09IFwiYW5kcm9pZFwiOlxuICAgICAgb3MgPSBcImFuZHJvaWRcIjtcbiAgICAgIGJyZWFrO1xuICAgIGNhc2Ugb3NOYW1lID09PSBcIm1hYyBvc1wiOlxuICAgICAgb3MgPSBcIm1hY29zXCI7XG4gICAgICBicmVhaztcbiAgICBjYXNlIG9zTmFtZSA9PT0gXCJsaW51eFwiOlxuICAgICAgb3MgPSBcImxpbnV4XCI7XG4gICAgICBicmVhaztcbiAgICBjYXNlIChvc05hbWUgPT0gbnVsbCA/IHZvaWQgMCA6IG9zTmFtZS5pbmNsdWRlcyhcIndpbmRvd3NcIikpOlxuICAgICAgb3MgPSBcIndpbmRvd3NcIjtcbiAgICAgIGJyZWFrO1xuICB9XG4gIGNvbnN0IGJyb3dzZXJOYW1lID0gKF9jMiA9IHJlc3VsdHMuYnJvd3Nlci5uYW1lKSA9PSBudWxsID8gdm9pZCAwIDogX2MyLnRvTG93ZXJDYXNlKCk7XG4gIGxldCBicm93c2VyO1xuICBzd2l0Y2ggKHRydWUpIHtcbiAgICBjYXNlIGJyb3dzZXJOYW1lID09PSBcImNocm9tZVwiOlxuICAgICAgYnJvd3NlciA9IFwiY2hyb21lXCI7XG4gICAgICBicmVhaztcbiAgICBjYXNlIGJyb3dzZXJOYW1lID09PSBcImZpcmVmb3hcIjpcbiAgICAgIGJyb3dzZXIgPSBcImZpcmVmb3hcIjtcbiAgICAgIGJyZWFrO1xuICAgIGNhc2UgKGJyb3dzZXJOYW1lID09IG51bGwgPyB2b2lkIDAgOiBicm93c2VyTmFtZS5pbmNsdWRlcyhcInNhZmFyaVwiKSk6XG4gICAgICBicm93c2VyID0gXCJzYWZhcmlcIjtcbiAgICAgIGJyZWFrO1xuICAgIGNhc2UgKGJyb3dzZXJOYW1lID09IG51bGwgPyB2b2lkIDAgOiBicm93c2VyTmFtZS5pbmNsdWRlcyhcIm9wZXJhXCIpKTpcbiAgICAgIGJyb3dzZXIgPSBcIm9wZXJhXCI7XG4gICAgICBicmVhaztcbiAgfVxuICByZXR1cm4ge1xuICAgIG9zLFxuICAgIGJyb3dzZXJcbiAgfTtcbn1cbmZ1bmN0aW9uIGlzT1MoLi4ub3MpIHtcbiAgcmV0dXJuIG9zLmluY2x1ZGVzKGdldFVzZXJBZ2VudCgpLm9zKTtcbn1cbmZ1bmN0aW9uIGlzQnJvd3NlciguLi5icm93c2VyKSB7XG4gIHJldHVybiBicm93c2VyLmluY2x1ZGVzKGdldFVzZXJBZ2VudCgpLmJyb3dzZXIpO1xufVxuZnVuY3Rpb24gdG9EZWVwbGluayh1bml2ZXJzYWxMaW5rLCBkZWVwbGluaykge1xuICBjb25zdCB1cmwgPSBuZXcgVVJMKHVuaXZlcnNhbExpbmspO1xuICByZXR1cm4gZGVlcGxpbmsgKyB1cmwuc2VhcmNoO1xufVxuY2xhc3MgV2FsbGV0SW5mb1N0b3JhZ2Uge1xuICBjb25zdHJ1Y3RvcigpIHtcbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwibG9jYWxTdG9yYWdlXCIpO1xuICAgIF9fcHVibGljRmllbGQodGhpcywgXCJzdG9yYWdlS2V5XCIsIFwidG9uLWNvbm5lY3QtdWlfd2FsbGV0LWluZm9cIik7XG4gICAgdGhpcy5sb2NhbFN0b3JhZ2UgPSB0cnlHZXRMb2NhbFN0b3JhZ2UoKTtcbiAgfVxuICBzZXRXYWxsZXRJbmZvKHdhbGxldEluZm8pIHtcbiAgICB0aGlzLmxvY2FsU3RvcmFnZS5zZXRJdGVtKHRoaXMuc3RvcmFnZUtleSwgSlNPTi5zdHJpbmdpZnkod2FsbGV0SW5mbykpO1xuICB9XG4gIGdldFdhbGxldEluZm8oKSB7XG4gICAgY29uc3Qgd2FsbGV0SW5mb1N0cmluZyA9IHRoaXMubG9jYWxTdG9yYWdlLmdldEl0ZW0odGhpcy5zdG9yYWdlS2V5KTtcbiAgICBpZiAoIXdhbGxldEluZm9TdHJpbmcpIHtcbiAgICAgIHJldHVybiBudWxsO1xuICAgIH1cbiAgICByZXR1cm4gSlNPTi5wYXJzZSh3YWxsZXRJbmZvU3RyaW5nKTtcbiAgfVxuICByZW1vdmVXYWxsZXRJbmZvKCkge1xuICAgIHRoaXMubG9jYWxTdG9yYWdlLnJlbW92ZUl0ZW0odGhpcy5zdG9yYWdlS2V5KTtcbiAgfVxufVxuY2xhc3MgUHJlZmVycmVkV2FsbGV0U3RvcmFnZSB7XG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIF9fcHVibGljRmllbGQodGhpcywgXCJsb2NhbFN0b3JhZ2VcIik7XG4gICAgX19wdWJsaWNGaWVsZCh0aGlzLCBcInN0b3JhZ2VLZXlcIiwgXCJ0b24tY29ubmVjdC11aV9wcmVmZXJyZWQtd2FsbGV0XCIpO1xuICAgIHRoaXMubG9jYWxTdG9yYWdlID0gdHJ5R2V0TG9jYWxTdG9yYWdlKCk7XG4gIH1cbiAgc2V0UHJlZmVycmVkV2FsbGV0QXBwTmFtZShuYW1lKSB7XG4gICAgdGhpcy5sb2NhbFN0b3JhZ2Uuc2V0SXRlbSh0aGlzLnN0b3JhZ2VLZXksIG5hbWUpO1xuICB9XG4gIGdldFByZWZlcnJlZFdhbGxldEFwcE5hbWUoKSB7XG4gICAgcmV0dXJuIHRoaXMubG9jYWxTdG9yYWdlLmdldEl0ZW0odGhpcy5zdG9yYWdlS2V5KSB8fCB2b2lkIDA7XG4gIH1cbn1cbmNsYXNzIExhc3RTZWxlY3RlZFdhbGxldEluZm9TdG9yYWdlIHtcbiAgY29uc3RydWN0b3IoKSB7XG4gICAgX19wdWJsaWNGaWVsZCh0aGlzLCBcImxvY2FsU3RvcmFnZVwiKTtcbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwic3RvcmFnZUtleVwiLCBcInRvbi1jb25uZWN0LXVpX2xhc3Qtc2VsZWN0ZWQtd2FsbGV0LWluZm9cIik7XG4gICAgdGhpcy5sb2NhbFN0b3JhZ2UgPSB0cnlHZXRMb2NhbFN0b3JhZ2UoKTtcbiAgfVxuICBzZXRMYXN0U2VsZWN0ZWRXYWxsZXRJbmZvKHdhbGxldEluZm8pIHtcbiAgICB0aGlzLmxvY2FsU3RvcmFnZS5zZXRJdGVtKHRoaXMuc3RvcmFnZUtleSwgSlNPTi5zdHJpbmdpZnkod2FsbGV0SW5mbykpO1xuICB9XG4gIGdldExhc3RTZWxlY3RlZFdhbGxldEluZm8oKSB7XG4gICAgY29uc3Qgd2FsbGV0SW5mb1N0cmluZyA9IHRoaXMubG9jYWxTdG9yYWdlLmdldEl0ZW0odGhpcy5zdG9yYWdlS2V5KTtcbiAgICBpZiAoIXdhbGxldEluZm9TdHJpbmcpIHtcbiAgICAgIHJldHVybiBudWxsO1xuICAgIH1cbiAgICByZXR1cm4gSlNPTi5wYXJzZSh3YWxsZXRJbmZvU3RyaW5nKTtcbiAgfVxuICByZW1vdmVMYXN0U2VsZWN0ZWRXYWxsZXRJbmZvKCkge1xuICAgIHRoaXMubG9jYWxTdG9yYWdlLnJlbW92ZUl0ZW0odGhpcy5zdG9yYWdlS2V5KTtcbiAgfVxufVxuY29uc3QgW3dhbGxldHNNb2RhbFN0YXRlLCBzZXRXYWxsZXRzTW9kYWxTdGF0ZV0gPSBjcmVhdGVTaWduYWwoe1xuICBzdGF0dXM6IFwiY2xvc2VkXCIsXG4gIGNsb3NlUmVhc29uOiBudWxsXG59KTtcbmNvbnN0IGdldFdhbGxldHNNb2RhbElzT3BlbmVkID0gY3JlYXRlTWVtbygoKSA9PiB3YWxsZXRzTW9kYWxTdGF0ZSgpLnN0YXR1cyA9PT0gXCJvcGVuZWRcIik7XG5jb25zdCBbc2luZ2xlV2FsbGV0TW9kYWxTdGF0ZSwgc2V0U2luZ2xlV2FsbGV0TW9kYWxTdGF0ZV0gPSBjcmVhdGVTaWduYWwoe1xuICBzdGF0dXM6IFwiY2xvc2VkXCIsXG4gIGNsb3NlUmVhc29uOiBudWxsXG59KTtcbmNvbnN0IGdldFNpbmdsZVdhbGxldE1vZGFsSXNPcGVuZWQgPSBjcmVhdGVNZW1vKFxuICAoKSA9PiBzaW5nbGVXYWxsZXRNb2RhbFN0YXRlKCkuc3RhdHVzID09PSBcIm9wZW5lZFwiXG4pO1xuY29uc3QgZ2V0U2luZ2xlV2FsbGV0TW9kYWxXYWxsZXRJbmZvID0gY3JlYXRlTWVtbygoKSA9PiB7XG4gIGNvbnN0IHN0YXRlID0gc2luZ2xlV2FsbGV0TW9kYWxTdGF0ZSgpO1xuICBpZiAoc3RhdGUuc3RhdHVzID09PSBcIm9wZW5lZFwiKSB7XG4gICAgcmV0dXJuIHN0YXRlLndhbGxldEluZm87XG4gIH1cbiAgcmV0dXJuIG51bGw7XG59KTtcbmxldCBsYXN0U2VsZWN0ZWRXYWxsZXRJbmZvU3RvcmFnZSA9IHR5cGVvZiB3aW5kb3cgIT09IFwidW5kZWZpbmVkXCIgPyBuZXcgTGFzdFNlbGVjdGVkV2FsbGV0SW5mb1N0b3JhZ2UoKSA6IHZvaWQgMDtcbmNvbnN0IFtsYXN0U2VsZWN0ZWRXYWxsZXRJbmZvLCBfc2V0TGFzdFNlbGVjdGVkV2FsbGV0SW5mb10gPSBjcmVhdGVTaWduYWwoKGxhc3RTZWxlY3RlZFdhbGxldEluZm9TdG9yYWdlID09IG51bGwgPyB2b2lkIDAgOiBsYXN0U2VsZWN0ZWRXYWxsZXRJbmZvU3RvcmFnZS5nZXRMYXN0U2VsZWN0ZWRXYWxsZXRJbmZvKCkpIHx8IG51bGwpO1xuY29uc3Qgc2V0TGFzdFNlbGVjdGVkV2FsbGV0SW5mbyA9ICh3YWxsZXRJbmZvKSA9PiB7XG4gIGlmICghbGFzdFNlbGVjdGVkV2FsbGV0SW5mb1N0b3JhZ2UpIHtcbiAgICBsYXN0U2VsZWN0ZWRXYWxsZXRJbmZvU3RvcmFnZSA9IG5ldyBMYXN0U2VsZWN0ZWRXYWxsZXRJbmZvU3RvcmFnZSgpO1xuICB9XG4gIGlmICh3YWxsZXRJbmZvKSB7XG4gICAgbGFzdFNlbGVjdGVkV2FsbGV0SW5mb1N0b3JhZ2Uuc2V0TGFzdFNlbGVjdGVkV2FsbGV0SW5mbyh3YWxsZXRJbmZvKTtcbiAgfSBlbHNlIHtcbiAgICBsYXN0U2VsZWN0ZWRXYWxsZXRJbmZvU3RvcmFnZS5yZW1vdmVMYXN0U2VsZWN0ZWRXYWxsZXRJbmZvKCk7XG4gIH1cbiAgX3NldExhc3RTZWxlY3RlZFdhbGxldEluZm8od2FsbGV0SW5mbyk7XG59O1xuY29uc3QgW2FjdGlvbiwgc2V0QWN0aW9uXSA9IGNyZWF0ZVNpZ25hbChudWxsKTtcbmNvbnN0IGNvbW1vbiQxID0ge1xuICBjbG9zZTogXCJDbG9zZVwiLFxuICBvcGVuV2FsbGV0OiBcIk9wZW4gd2FsbGV0XCIsXG4gIGNvcHlMaW5rOiBcIkNvcHkgTGlua1wiLFxuICBsaW5rQ29waWVkOiBcIkxpbmsgQ29waWVkXCIsXG4gIGNvcGllZDogXCJDb3BpZWRcIixcbiAgeW91cldhbGxldDogXCJZb3VyIFdhbGxldFwiLFxuICByZXRyeTogXCJSZXRyeVwiLFxuICBnZXQ6IFwiR0VUXCIsXG4gIG1vYmlsZTogXCJNb2JpbGVcIixcbiAgYnJvd3NlckV4dGVuc2lvbjogXCJCcm93c2VyIEV4dGVuc2lvblwiLFxuICBkZXNrdG9wOiBcIkRlc2t0b3BcIlxufTtcbmNvbnN0IGJ1dHRvbiQxID0ge1xuICBjb25uZWN0V2FsbGV0OiBcIkNvbm5lY3QgV2FsbGV0XCIsXG4gIGRyb3Bkb3duOiB7XG4gICAgY29weTogXCJDb3B5IGFkZHJlc3NcIixcbiAgICBjb3BpZWQ6IFwiQWRkcmVzcyBjb3BpZWQhXCIsXG4gICAgZGlzY29ubmVjdDogXCJEaXNjb25uZWN0XCJcbiAgfVxufTtcbmNvbnN0IG5vdGlmaWNhdGlvbnMkMSA9IHtcbiAgY29uZmlybToge1xuICAgIGhlYWRlcjogXCJPcGVuIHt7IG5hbWUgfX0gdG9cXHhBMGNvbmZpcm0gdGhlXFx4QTB0cmFuc2FjdGlvbi5cIlxuICB9LFxuICB0cmFuc2FjdGlvblNlbnQ6IHtcbiAgICBoZWFkZXI6IFwiVHJhbnNhY3Rpb24gc2VudFwiLFxuICAgIHRleHQ6IFwiWW91ciB0cmFuc2FjdGlvblxceEEwd2lsbCBiZVxceEEwcHJvY2Vzc2VkIGluXFx4QTBhXFx4QTBmZXcgc2Vjb25kcy5cIlxuICB9LFxuICB0cmFuc2FjdGlvbkNhbmNlbGVkOiB7XG4gICAgaGVhZGVyOiBcIlRyYW5zYWN0aW9uIGNhbmNlbGVkXCIsXG4gICAgdGV4dDogXCJUaGVyZSB3aWxsIGJlIG5vIGNoYW5nZXMgdG9cXHhBMHlvdXIgYWNjb3VudC5cIlxuICB9XG59O1xuY29uc3Qgd2FsbGV0SXRlbSQxID0ge1xuICB3YWxsZXRPbjogXCJXYWxsZXQgaW5cIixcbiAgcmVjZW50OiBcIlJlY2VudFwiLFxuICBpbnN0YWxsZWQ6IFwiSW5zdGFsbGVkXCIsXG4gIHBvcHVsYXI6IFwiUG9wdWxhclwiXG59O1xuY29uc3Qgd2FsbGV0TW9kYWwkMSA9IHtcbiAgbG9hZGluZzogXCJMb2FkaW5nIHdhbGxldHNcIixcbiAgd2FsbGV0czogXCJXYWxsZXRzXCIsXG4gIG1vYmlsZVVuaXZlcnNhbE1vZGFsOiB7XG4gICAgY29ubmVjdFlvdXJXYWxsZXQ6IFwiQ29ubmVjdCB5b3VyIFRPTlxceEEwd2FsbGV0XCIsXG4gICAgb3BlbldhbGxldE9uVGVsZWdyYW1PclNlbGVjdDogXCJVc2UgV2FsbGV0IGluIFRlbGVncmFtIG9yIGNob29zZSBvdGhlciBhcHBsaWNhdGlvblwiLFxuICAgIG9wZW5XYWxsZXRPblRlbGVncmFtOiBcIkNvbm5lY3QgV2FsbGV0IGluIFRlbGVncmFtXCIsXG4gICAgY2hvb3NlT3RoZXJBcHBsaWNhdGlvbjogXCJDaG9vc2Ugb3RoZXIgYXBwbGljYXRpb25cIixcbiAgICBvcGVuTGluazogXCJPcGVuIExpbmtcIixcbiAgICBzY2FuOiBcIlNjYW4gd2l0aCB5b3VyIG1vYmlsZVxceEEwd2FsbGV0XCJcbiAgfSxcbiAgZGVza3RvcFVuaXZlcnNhbE1vZGFsOiB7XG4gICAgY29ubmVjdFlvdXJXYWxsZXQ6IFwiQ29ubmVjdCB5b3VyIFRPTiB3YWxsZXRcIixcbiAgICBzY2FuOiBcIlNjYW4gd2l0aCB5b3VyIG1vYmlsZSB3YWxsZXRcIixcbiAgICBhdmFpbGFibGVXYWxsZXRzOiBcIkF2YWlsYWJsZSB3YWxsZXRzXCJcbiAgfSxcbiAgbW9iaWxlQ29ubmVjdGlvbk1vZGFsOiB7XG4gICAgc2hvd1FSOiBcIlNob3cgUVIgQ29kZVwiLFxuICAgIHNjYW5RUjogXCJTY2FuIHRoZVxceEEwUVIgY29kZSBiZWxvdyB3aXRoIHlvdXIgcGhvbmVcXHUyMDE5c1xceEEwb3JcXHhBMHt7IG5hbWUgfX1cXHUyMDE5cyBjYW1lcmFcIixcbiAgICBtaXNzaW5nRmVhdHVyZXM6IFwiUGxlYXNlIHVwZGF0ZSB7eyBuYW1lIH19LCB5b3VyIHZlcnNpb24gZG9lcyBub3Qgc3VwcG9ydCByZXF1aXJlZCBmZWF0dXJlcyBmb3IgdGhpcyBkQXBwXCIsXG4gICAgbm90U3VwcG9ydGVkV2FsbGV0OiBcInt7IG5hbWUgfX0gZG9lc25cXHUyMDE5dCBzdXBwb3J0IHRoZSByZXF1ZXN0ZWQgYWN0aW9uLiBQbGVhc2UgY29ubmVjdCBhbm90aGVyIHdhbGxldCB0aGF0IHN1cHBvcnRzIGl0XCIsXG4gICAgY29udGludWVJbjogXCJDb250aW51ZSBpbiB7eyBuYW1lIH19XFx1MjAyNlwiLFxuICAgIHVwZGF0ZVdhbGxldDogXCJVcGRhdGUge3sgbmFtZSB9fVwiLFxuICAgIGNob29zZUFub3RoZXJXYWxsZXQ6IFwiQ2hvb3NlIEFub3RoZXIgV2FsbGV0XCIsXG4gICAgY29ubmVjdGlvbkRlY2xpbmVkOiBcIkNvbm5lY3Rpb24gZGVjbGluZWRcIlxuICB9LFxuICBkZXNrdG9wQ29ubmVjdGlvbk1vZGFsOiB7XG4gICAgc2NhblFSOiBcIlNjYW4gdGhlXFx4QTBRUiBjb2RlIGJlbG93IHdpdGggeW91ciBwaG9uZVxcdTIwMTlzXFx4QTBvclxceEEwe3sgbmFtZSB9fVxcdTIwMTlzIGNhbWVyYVwiLFxuICAgIGNvbnRpbnVlSW5FeHRlbnNpb246IFwiQ29udGludWUgaW5cXHhBMHt7IG5hbWUgfX0gYnJvd3NlciBleHRlbnNpb25cXHUyMDI2XCIsXG4gICAgZG9udEhhdmVFeHRlbnNpb246IFwiU2VlbXMgeW91IGRvbid0IGhhdmUgaW5zdGFsbGVkIHt7IG5hbWUgfX1cXHhBMGJyb3dzZXJcXHhBMGV4dGVuc2lvblwiLFxuICAgIG1pc3NpbmdGZWF0dXJlczogXCJQbGVhc2UgdXBkYXRlIHt7IG5hbWUgfX0sIHlvdXIgdmVyc2lvbiBkb2VzIG5vdCBzdXBwb3J0IHJlcXVpcmVkIGZlYXR1cmVzIGZvciB0aGlzIGRBcHBcIixcbiAgICBub3RTdXBwb3J0ZWRXYWxsZXQ6IFwie3sgbmFtZSB9fSBkb2VzblxcdTIwMTl0IHN1cHBvcnQgdGhlIHJlcXVlc3RlZCBhY3Rpb24uIFBsZWFzZSBjb25uZWN0IGFub3RoZXIgd2FsbGV0IHRoYXQgc3VwcG9ydHMgaXRcIixcbiAgICBnZXRXYWxsZXQ6IFwiR2V0IHt7IG5hbWUgfX1cIixcbiAgICB1cGRhdGVXYWxsZXQ6IFwiVXBkYXRlIHt7IG5hbWUgfX1cIixcbiAgICBjaG9vc2VBbm90aGVyV2FsbGV0OiBcIkNob29zZSBBbm90aGVyIFdhbGxldFwiLFxuICAgIGNvbnRpbnVlT25EZXNrdG9wOiBcIkNvbnRpbnVlIGluXFx4QTB7eyBuYW1lIH19IG9uIGRlc2t0b3BcXHUyMDI2XCIsXG4gICAgb3BlbldhbGxldE9uVGVsZWdyYW06IFwiQ29ubmVjdCBXYWxsZXQgaW4gVGVsZWdyYW0gb24gZGVza3RvcFwiLFxuICAgIGNvbm5lY3Rpb25EZWNsaW5lZDogXCJDb25uZWN0aW9uIGRlY2xpbmVkXCJcbiAgfSxcbiAgaW5mb01vZGFsOiB7XG4gICAgd2hhdElzQVdhbGxldDogXCJXaGF0IGlzIGEgd2FsbGV0XCIsXG4gICAgc2VjdXJlRGlnaXRhbEFzc2V0czogXCJTZWN1cmUgZGlnaXRhbCBhc3NldHMgc3RvcmFnZVwiLFxuICAgIHdhbGxldFByb3RlY3RzOiBcIkEgd2FsbGV0IHByb3RlY3RzIGFuZCBtYW5hZ2VzIHlvdXIgZGlnaXRhbCBhc3NldHNcXHhBMGluY2x1ZGluZyBUT04sIHRva2VucyBhbmQgY29sbGVjdGFibGVzLlwiLFxuICAgIGNvbnRyb2xJZGVudGl0eTogXCJDb250cm9sIHlvdXIgV2ViMyBpZGVudGl0eVwiLFxuICAgIG1hbmFnZUlkZW50aXR5OiBcIk1hbmFnZSB5b3VyIGRpZ2l0YWwgaWRlbnRpdHkgYW5kIGFjY2VzcyBkZWNlbnRyYWxpemVkIGFwcGxpY2F0aW9ucyB3aXRoIGVhc2UuIE1haW50YWluIGNvbnRyb2wgb3ZlciB5b3VyIGRhdGEgYW5kIGVuZ2FnZSBzZWN1cmVseSBpblxceEEwdGhlXFx4QTBibG9ja2NoYWluIGVjb3N5c3RlbS5cIixcbiAgICBlZmZvcnRsZXNzQ3J5cHRvVHJhbnNhY3Rpb25zOiBcIkVmZm9ydGxlc3MgY3J5cHRvIHRyYW5zYWN0aW9uc1wiLFxuICAgIGVhc2lseVNlbmQ6IFwiRWFzaWx5IHNlbmQsIHJlY2VpdmUsIG1vbml0b3IgeW91ciBjcnlwdG9jdXJyZW5jaWVzLlxceEEwU3RyZWFtbGluZSB5b3VyIG9wZXJhdGlvbnMgd2l0aFxceEEwZGVjZW50cmFsaXplZCBhcHBsaWNhdGlvbnMuXCIsXG4gICAgZ2V0QVdhbGxldDogXCJHZXQgYSBXYWxsZXRcIlxuICB9LFxuICBhbGxXYWxsZXRzOiB7XG4gICAgd2FsbGV0c0JlbG93Tm90U3VwcG9ydGVkOiBcIlRoZSB3YWxsZXRzIGJlbG93IGRvblxcdTIwMTl0IHN1cHBvcnQgYWxsIGZlYXR1cmVzIG9mXFx4QTB0aGUgY29ubmVjdGVkIHNlcnZpY2UuIFlvdSBjYW4gdXNlIHlvdXIgcmVjb3ZlcnkgcGhyYXNlIGluIG9uZSBvZiB0aGUgc3VwcG9ydGVkIHdhbGxldHMgYWJvdmUuXCIsXG4gICAgd2FsbGV0Tm90U3VwcG9ydFNlcnZpY2U6IFwie3sgbmFtZSB9fSBkb2VzblxcdTIwMTl0IHN1cHBvcnQgY29ubmVjdGVkIHNlcnZpY2VcIlxuICB9XG59O1xuY29uc3QgYWN0aW9uTW9kYWwkMSA9IHtcbiAgY29uZmlybVRyYW5zYWN0aW9uOiB7XG4gICAgaGVhZGVyOiBcIkNvbmZpcm0gdGhlXFx4QTB0cmFuc2FjdGlvbiBpblxceEEwe3sgbmFtZSB9fVwiLFxuICAgIHRleHQ6IFwiSXQgd2lsbCBvbmx5IHRha2UgYVxceEEwbW9tZW50LlwiXG4gIH0sXG4gIHRyYW5zYWN0aW9uU2VudDogXCIkbm90aWZpY2F0aW9ucy50cmFuc2FjdGlvblNlbnRcIixcbiAgdHJhbnNhY3Rpb25DYW5jZWxlZDogXCIkbm90aWZpY2F0aW9ucy50cmFuc2FjdGlvbkNhbmNlbGVkXCJcbn07XG5jb25zdCBlbiA9IHtcbiAgY29tbW9uOiBjb21tb24kMSxcbiAgYnV0dG9uOiBidXR0b24kMSxcbiAgbm90aWZpY2F0aW9uczogbm90aWZpY2F0aW9ucyQxLFxuICB3YWxsZXRJdGVtOiB3YWxsZXRJdGVtJDEsXG4gIHdhbGxldE1vZGFsOiB3YWxsZXRNb2RhbCQxLFxuICBhY3Rpb25Nb2RhbDogYWN0aW9uTW9kYWwkMVxufTtcbmNvbnN0IGNvbW1vbiA9IHtcbiAgY2xvc2U6IFwiXFx1MDQxN1xcdTA0MzBcXHUwNDNBXFx1MDQ0MFxcdTA0NEJcXHUwNDQyXFx1MDQ0Q1wiLFxuICBvcGVuV2FsbGV0OiBcIlxcdTA0MUVcXHUwNDQyXFx1MDQzQVxcdTA0NDBcXHUwNDRCXFx1MDQ0MlxcdTA0NEMgXFx1MDQzQVxcdTA0M0VcXHUwNDQ4XFx1MDQzNVxcdTA0M0JcXHUwNDUxXFx1MDQzQVwiLFxuICBjb3B5TGluazogXCJcXHUwNDIxXFx1MDQzQVxcdTA0M0VcXHUwNDNGXFx1MDQzOFxcdTA0NDBcXHUwNDNFXFx1MDQzMlxcdTA0MzBcXHUwNDQyXFx1MDQ0Q1wiLFxuICBsaW5rQ29waWVkOiBcIlxcdTA0MjFcXHUwNDQxXFx1MDQ0QlxcdTA0M0JcXHUwNDNBXFx1MDQzMCBcXHUwNDQxXFx1MDQzQVxcdTA0M0VcXHUwNDNGXFx1MDQzOFxcdTA0NDBcXHUwNDNFXFx1MDQzMlxcdTA0MzBcXHUwNDNEXFx1MDQzMFwiLFxuICBjb3BpZWQ6IFwiXFx1MDQyMVxcdTA0M0FcXHUwNDNFXFx1MDQzRlxcdTA0MzhcXHUwNDQwXFx1MDQzRVxcdTA0MzJcXHUwNDMwXFx1MDQzRFxcdTA0M0VcIixcbiAgeW91cldhbGxldDogXCJcXHUwNDEyXFx1MDQzMFxcdTA0NDggXFx1MDQzQVxcdTA0M0VcXHUwNDQ4XFx1MDQzNVxcdTA0M0JcXHUwNDUxXFx1MDQzQVwiLFxuICByZXRyeTogXCJcXHUwNDFGXFx1MDQzRVxcdTA0MzJcXHUwNDQyXFx1MDQzRVxcdTA0NDBcXHUwNDM4XFx1MDQ0MlxcdTA0NENcIixcbiAgZ2V0OiBcIlxcdTA0MjFcXHUwNDNBXFx1MDQzMFxcdTA0NDdcXHUwNDMwXFx1MDQ0MlxcdTA0NENcIixcbiAgbW9iaWxlOiBcIlxcdTA0MUNcXHUwNDNFXFx1MDQzMVxcdTA0MzhcXHUwNDNCXFx1MDQ0Q1xcdTA0M0RcXHUwNDRCXFx1MDQzOVwiLFxuICBicm93c2VyRXh0ZW5zaW9uOiBcIlxcdTA0MjBcXHUwNDMwXFx1MDQ0MVxcdTA0NDhcXHUwNDM4XFx1MDQ0MFxcdTA0MzVcXHUwNDNEXFx1MDQzOFxcdTA0MzVcIixcbiAgZGVza3RvcDogXCJcXHUwNDE0XFx1MDQzNVxcdTA0NDFcXHUwNDNBXFx1MDQ0MlxcdTA0M0VcXHUwNDNGXCJcbn07XG5jb25zdCBidXR0b24gPSB7XG4gIGNvbm5lY3RXYWxsZXQ6IFwiXFx1MDQxRlxcdTA0M0VcXHUwNDM0XFx1MDQzQVxcdTA0M0JcXHUwNDRFXFx1MDQ0N1xcdTA0MzhcXHUwNDQyXFx1MDQ0QyBcXHUwNDNBXFx1MDQzRVxcdTA0NDhcXHUwNDM1XFx1MDQzQlxcdTA0NTFcXHUwNDNBXCIsXG4gIGRyb3Bkb3duOiB7XG4gICAgY29weTogXCJcXHUwNDIxXFx1MDQzQVxcdTA0M0VcXHUwNDNGXFx1MDQzOFxcdTA0NDBcXHUwNDNFXFx1MDQzMlxcdTA0MzBcXHUwNDQyXFx1MDQ0QyBcXHUwNDMwXFx1MDQzNFxcdTA0NDBcXHUwNDM1XFx1MDQ0MVwiLFxuICAgIGNvcGllZDogXCJcXHUwNDEwXFx1MDQzNFxcdTA0NDBcXHUwNDM1XFx1MDQ0MSBcXHUwNDQxXFx1MDQzQVxcdTA0M0VcXHUwNDNGXFx1MDQzOFxcdTA0NDBcXHUwNDNFXFx1MDQzMlxcdTA0MzBcXHUwNDNEIVwiLFxuICAgIGRpc2Nvbm5lY3Q6IFwiXFx1MDQxRVxcdTA0NDJcXHUwNDNBXFx1MDQzQlxcdTA0NEVcXHUwNDQ3XFx1MDQzOFxcdTA0NDJcXHUwNDRDIFxcdTA0M0FcXHUwNDNFXFx1MDQ0OFxcdTA0MzVcXHUwNDNCXFx1MDQ1MVxcdTA0M0FcIlxuICB9XG59O1xuY29uc3Qgbm90aWZpY2F0aW9ucyA9IHtcbiAgY29uZmlybToge1xuICAgIGhlYWRlcjogXCJcXHUwNDFFXFx1MDQ0MlxcdTA0M0FcXHUwNDQwXFx1MDQzRVxcdTA0MzlcXHUwNDQyXFx1MDQzNSB7eyBuYW1lIH19LCBcXHUwNDQ3XFx1MDQ0MlxcdTA0M0VcXHUwNDMxXFx1MDQ0QlxceEEwXFx1MDQzRlxcdTA0M0VcXHUwNDM0XFx1MDQ0MlxcdTA0MzJcXHUwNDM1XFx1MDQ0MFxcdTA0MzRcXHUwNDM4XFx1MDQ0MlxcdTA0NEMgXFx1MDQ0MlxcdTA0NDBcXHUwNDMwXFx1MDQzRFxcdTA0MzdcXHUwNDMwXFx1MDQzQVxcdTA0NDZcXHUwNDM4XFx1MDQ0RS5cIlxuICB9LFxuICB0cmFuc2FjdGlvblNlbnQ6IHtcbiAgICBoZWFkZXI6IFwiXFx1MDQyMlxcdTA0NDBcXHUwNDMwXFx1MDQzRFxcdTA0MzdcXHUwNDMwXFx1MDQzQVxcdTA0NDZcXHUwNDM4XFx1MDQ0RiBcXHUwNDNFXFx1MDQ0MlxcdTA0M0ZcXHUwNDQwXFx1MDQzMFxcdTA0MzJcXHUwNDNCXFx1MDQzNVxcdTA0M0RcXHUwNDMwXCIsXG4gICAgdGV4dDogXCJcXHUwNDEyXFx1MDQzMFxcdTA0NDhcXHUwNDMwIFxcdTA0NDJcXHUwNDQwXFx1MDQzMFxcdTA0M0RcXHUwNDM3XFx1MDQzMFxcdTA0M0FcXHUwNDQ2XFx1MDQzOFxcdTA0NEZcXHhBMFxcdTA0MzFcXHUwNDQzXFx1MDQzNFxcdTA0MzVcXHUwNDQyIFxcdTA0M0VcXHUwNDMxXFx1MDQ0MFxcdTA0MzBcXHUwNDMxXFx1MDQzRVxcdTA0NDJcXHUwNDMwXFx1MDQzRFxcdTA0MzAgXFx1MDQ0N1xcdTA0MzVcXHUwNDQwXFx1MDQzNVxcdTA0MzdcXHhBMFxcdTA0M0RcXHUwNDM1XFx1MDQ0MVxcdTA0M0FcXHUwNDNFXFx1MDQzQlxcdTA0NENcXHUwNDNBXFx1MDQzRSBcXHUwNDQxXFx1MDQzNVxcdTA0M0FcXHUwNDQzXFx1MDQzRFxcdTA0MzQuXCJcbiAgfSxcbiAgdHJhbnNhY3Rpb25DYW5jZWxlZDoge1xuICAgIGhlYWRlcjogXCJcXHUwNDIyXFx1MDQ0MFxcdTA0MzBcXHUwNDNEXFx1MDQzN1xcdTA0MzBcXHUwNDNBXFx1MDQ0NlxcdTA0MzhcXHUwNDRGIFxcdTA0M0VcXHUwNDQyXFx1MDQzQ1xcdTA0MzVcXHUwNDNEXFx1MDQzNVxcdTA0M0RcXHUwNDMwXCIsXG4gICAgdGV4dDogXCJcXHUwNDIxXFx1MDQzRVxcdTA0NDFcXHUwNDQyXFx1MDQzRVxcdTA0NEZcXHUwNDNEXFx1MDQzOFxcdTA0MzUgXFx1MDQzMlxcdTA0MzBcXHUwNDQ4XFx1MDQzNVxcdTA0MzNcXHUwNDNFIFxcdTA0NDFcXHUwNDQ3XFx1MDQ1MVxcdTA0NDJcXHUwNDMwIFxcdTA0M0RcXHUwNDM1XFx4QTBcXHUwNDM4XFx1MDQzN1xcdTA0M0NcXHUwNDM1XFx1MDQzRFxcdTA0MzhcXHUwNDQyXFx1MDQ0MVxcdTA0NEYuXCJcbiAgfVxufTtcbmNvbnN0IHdhbGxldEl0ZW0gPSB7XG4gIHdhbGxldE9uOiBcIldhbGxldCBcXHUwNDMyXCIsXG4gIHJlY2VudDogXCJcXHUwNDFEXFx1MDQzNVxcdTA0MzRcXHUwNDMwXFx1MDQzMlxcdTA0M0RcXHUwNDM4XFx1MDQzOVwiLFxuICBpbnN0YWxsZWQ6IFwiXFx1MDQyM1xcdTA0NDFcXHUwNDQyXFx1MDQzMFxcdTA0M0RcXHUwNDNFXFx1MDQzMlxcdTA0M0JcXHUwNDM1XFx1MDQzRFwiLFxuICBwb3B1bGFyOiBcIlxcdTA0MUZcXHUwNDNFXFx1MDQzRlxcdTA0NDNcXHUwNDNCXFx1MDQ0RlxcdTA0NDBcXHUwNDM1XFx1MDQzRFwiXG59O1xuY29uc3Qgd2FsbGV0TW9kYWwgPSB7XG4gIGxvYWRpbmc6IFwiXFx1MDQxQVxcdTA0M0VcXHUwNDQ4XFx1MDQzNVxcdTA0M0JcXHUwNDRDXFx1MDQzQVxcdTA0MzggXFx1MDQzN1xcdTA0MzBcXHUwNDMzXFx1MDQ0MFxcdTA0NDNcXHUwNDM2XFx1MDQzMFxcdTA0NEVcXHUwNDQyXFx1MDQ0MVxcdTA0NEZcIixcbiAgd2FsbGV0czogXCJcXHUwNDFBXFx1MDQzRVxcdTA0NDhcXHUwNDM1XFx1MDQzQlxcdTA0NENcXHUwNDNBXFx1MDQzOFwiLFxuICBtb2JpbGVVbml2ZXJzYWxNb2RhbDoge1xuICAgIGNvbm5lY3RZb3VyV2FsbGV0OiBcIlxcdTA0MUZcXHUwNDNFXFx1MDQzNFxcdTA0M0FcXHUwNDNCXFx1MDQ0RVxcdTA0NDdcXHUwNDM4XFx1MDQ0MlxcdTA0MzUgVE9OXFx4QTBcXHUwNDNBXFx1MDQzRVxcdTA0NDhcXHUwNDM1XFx1MDQzQlxcdTA0NTFcXHUwNDNBXCIsXG4gICAgb3BlbldhbGxldE9uVGVsZWdyYW1PclNlbGVjdDogXCJcXHUwNDFGXFx1MDQzRVxcdTA0MzRcXHUwNDNBXFx1MDQzQlxcdTA0NEVcXHUwNDQ3XFx1MDQzOFxcdTA0NDJcXHUwNDM1IFdhbGxldCBcXHUwNDMyXFx4QTBUZWxlZ3JhbSBcXHUwNDM4XFx1MDQzQlxcdTA0MzhcXHhBMFxcdTA0MzJcXHUwNDRCXFx1MDQzMVxcdTA0MzVcXHUwNDQwXFx1MDQzNVxcdTA0NDJcXHUwNDM1IFxcdTA0MzRcXHUwNDQwXFx1MDQ0M1xcdTA0MzNcXHUwNDNFXFx1MDQzNSBcXHUwNDNGXFx1MDQ0MFxcdTA0MzhcXHUwNDNCXFx1MDQzRVxcdTA0MzZcXHUwNDM1XFx1MDQzRFxcdTA0MzhcXHUwNDM1XCIsXG4gICAgb3BlbldhbGxldE9uVGVsZWdyYW06IFwiXFx1MDQxRVxcdTA0NDJcXHUwNDNBXFx1MDQ0MFxcdTA0NEJcXHUwNDQyXFx1MDQ0QyBXYWxsZXQgXFx1MDQzMiBUZWxlZ3JhbVwiLFxuICAgIGNob29zZU90aGVyQXBwbGljYXRpb246IFwiXFx1MDQxMlxcdTA0NEJcXHUwNDMxXFx1MDQzNVxcdTA0NDBcXHUwNDM4XFx1MDQ0MlxcdTA0MzUgXFx1MDQzNFxcdTA0NDBcXHUwNDQzXFx1MDQzM1xcdTA0M0VcXHUwNDM1IFxcdTA0M0ZcXHUwNDQwXFx1MDQzOFxcdTA0M0JcXHUwNDNFXFx1MDQzNlxcdTA0MzVcXHUwNDNEXFx1MDQzOFxcdTA0MzVcIixcbiAgICBvcGVuTGluazogXCJcXHUwNDFFXFx1MDQ0MlxcdTA0M0FcXHUwNDQwXFx1MDQ0QlxcdTA0NDJcXHUwNDRDXCIsXG4gICAgc2NhbjogXCJcXHUwNDFFXFx1MDQ0MlxcdTA0NDFcXHUwNDNBXFx1MDQzMFxcdTA0M0RcXHUwNDM4XFx1MDQ0MFxcdTA0NDNcXHUwNDM5XFx1MDQ0MlxcdTA0MzUgXFx1MDQzQVxcdTA0MzBcXHUwNDNDXFx1MDQzNVxcdTA0NDBcXHUwNDNFXFx1MDQzOSBcXHUwNDMyXFx1MDQzMFxcdTA0NDhcXHUwNDM1XFx1MDQzM1xcdTA0M0VcXHhBMFxcdTA0NDJcXHUwNDM1XFx1MDQzQlxcdTA0MzVcXHUwNDQ0XFx1MDQzRVxcdTA0M0RcXHUwNDMwXCJcbiAgfSxcbiAgZGVza3RvcFVuaXZlcnNhbE1vZGFsOiB7XG4gICAgY29ubmVjdFlvdXJXYWxsZXQ6IFwiXFx1MDQxRlxcdTA0M0VcXHUwNDM0XFx1MDQzQVxcdTA0M0JcXHUwNDRFXFx1MDQ0N1xcdTA0MzhcXHUwNDQyXFx1MDQzNSBUT04gXFx1MDQzQVxcdTA0M0VcXHUwNDQ4XFx1MDQzNVxcdTA0M0JcXHUwNDUxXFx1MDQzQVwiLFxuICAgIHNjYW46IFwiXFx1MDQxRVxcdTA0NDJcXHUwNDQxXFx1MDQzQVxcdTA0MzBcXHUwNDNEXFx1MDQzOFxcdTA0NDBcXHUwNDQzXFx1MDQzOVxcdTA0NDJcXHUwNDM1IFFSLVxcdTA0M0FcXHUwNDNFXFx1MDQzNCBcXHUwNDNBXFx1MDQzMFxcdTA0M0NcXHUwNDM1XFx1MDQ0MFxcdTA0M0VcXHUwNDM5IFxcdTA0MzJcXHUwNDMwXFx1MDQ0OFxcdTA0MzVcXHUwNDMzXFx1MDQzRVxceEEwXFx1MDQ0MlxcdTA0MzVcXHUwNDNCXFx1MDQzNVxcdTA0NDRcXHUwNDNFXFx1MDQzRFxcdTA0MzBcIixcbiAgICBhdmFpbGFibGVXYWxsZXRzOiBcIlxcdTA0MTRcXHUwNDNFXFx1MDQ0MVxcdTA0NDJcXHUwNDQzXFx1MDQzRlxcdTA0M0RcXHUwNDRCXFx1MDQzNSBcXHUwNDNBXFx1MDQzRVxcdTA0NDhcXHUwNDM1XFx1MDQzQlxcdTA0NENcXHUwNDNBXFx1MDQzOFwiXG4gIH0sXG4gIG1vYmlsZUNvbm5lY3Rpb25Nb2RhbDoge1xuICAgIHNob3dRUjogXCJcXHUwNDFGXFx1MDQzRVxcdTA0M0FcXHUwNDMwXFx1MDQzN1xcdTA0MzBcXHUwNDQyXFx1MDQ0QyBRUi1cXHUwNDNBXFx1MDQzRVxcdTA0MzRcIixcbiAgICBzY2FuUVI6IFwiXFx1MDQxRVxcdTA0NDJcXHUwNDQxXFx1MDQzQVxcdTA0MzBcXHUwNDNEXFx1MDQzOFxcdTA0NDBcXHUwNDQzXFx1MDQzOVxcdTA0NDJcXHUwNDM1IFFSLVxcdTA0M0FcXHUwNDNFXFx1MDQzNCBcXHUwNDNEXFx1MDQzOFxcdTA0MzZcXHUwNDM1IFxcdTA0M0FcXHUwNDMwXFx1MDQzQ1xcdTA0MzVcXHUwNDQwXFx1MDQzRVxcdTA0MzkgXFx1MDQzMlxceEEwXFx1MDQzRlxcdTA0NDBcXHUwNDM4XFx1MDQzQlxcdTA0M0VcXHUwNDM2XFx1MDQzNVxcdTA0M0RcXHUwNDM4XFx1MDQzOCB7eyBuYW1lIH19LCBcXHUwNDM4XFx1MDQzQlxcdTA0MzhcXHhBMFxcdTA0M0FcXHUwNDMwXFx1MDQzQ1xcdTA0MzVcXHUwNDQwXFx1MDQzRVxcdTA0MzkgXFx1MDQ0MlxcdTA0MzVcXHUwNDNCXFx1MDQzNVxcdTA0NDRcXHUwNDNFXFx1MDQzRFxcdTA0MzBcIixcbiAgICBtaXNzaW5nRmVhdHVyZXM6IFwiXFx1MDQxRVxcdTA0MzFcXHUwNDNEXFx1MDQzRVxcdTA0MzJcXHUwNDM4XFx1MDQ0MlxcdTA0MzUge3sgbmFtZSB9fSwgXFx1MDQzMlxcdTA0MzBcXHUwNDQ4XFx1MDQzMCBcXHUwNDMyXFx1MDQzNVxcdTA0NDBcXHUwNDQxXFx1MDQzOFxcdTA0NEYgXFx1MDQzRFxcdTA0MzUgXFx1MDQzRlxcdTA0M0VcXHUwNDM0XFx1MDQzNFxcdTA0MzVcXHUwNDQwXFx1MDQzNlxcdTA0MzhcXHUwNDMyXFx1MDQzMFxcdTA0MzVcXHUwNDQyIFxcdTA0M0RcXHUwNDM1XFx1MDQzRVxcdTA0MzFcXHUwNDQ1XFx1MDQzRVxcdTA0MzRcXHUwNDM4XFx1MDQzQ1xcdTA0NEJcXHUwNDM1IFxcdTA0NDRcXHUwNDQzXFx1MDQzRFxcdTA0M0FcXHUwNDQ2XFx1MDQzOFxcdTA0MzggXFx1MDQzNFxcdTA0M0JcXHUwNDRGIFxcdTA0NERcXHUwNDQyXFx1MDQzRVxcdTA0MzNcXHUwNDNFIGRBcHBcIixcbiAgICBub3RTdXBwb3J0ZWRXYWxsZXQ6IFwie3sgbmFtZSB9fSBcXHUwNDNEXFx1MDQzNSBcXHUwNDNGXFx1MDQzRVxcdTA0MzRcXHUwNDM0XFx1MDQzNVxcdTA0NDBcXHUwNDM2XFx1MDQzOFxcdTA0MzJcXHUwNDMwXFx1MDQzNVxcdTA0NDIgXFx1MDQzN1xcdTA0MzBcXHUwNDNGXFx1MDQ0MFxcdTA0M0VcXHUwNDQ4XFx1MDQzNVxcdTA0M0RcXHUwNDNEXFx1MDQzRVxcdTA0MzUgXFx1MDQzNFxcdTA0MzVcXHUwNDM5XFx1MDQ0MVxcdTA0NDJcXHUwNDMyXFx1MDQzOFxcdTA0MzUuIFxcdTA0MUZcXHUwNDNFXFx1MDQzNlxcdTA0MzBcXHUwNDNCXFx1MDQ0M1xcdTA0MzlcXHUwNDQxXFx1MDQ0MlxcdTA0MzAsIFxcdTA0M0ZcXHUwNDNFXFx1MDQzNFxcdTA0M0FcXHUwNDNCXFx1MDQ0RVxcdTA0NDdcXHUwNDM4XFx1MDQ0MlxcdTA0MzUgXFx1MDQzNFxcdTA0NDBcXHUwNDQzXFx1MDQzM1xcdTA0M0VcXHUwNDM5IFxcdTA0M0FcXHUwNDNFXFx1MDQ0OFxcdTA0MzVcXHUwNDNCXFx1MDQ1MVxcdTA0M0EsIFxcdTA0M0FcXHUwNDNFXFx1MDQ0MlxcdTA0M0VcXHUwNDQwXFx1MDQ0QlxcdTA0MzkgXFx1MDQzRlxcdTA0M0VcXHUwNDM0XFx1MDQzNFxcdTA0MzVcXHUwNDQwXFx1MDQzNlxcdTA0MzhcXHUwNDMyXFx1MDQzMFxcdTA0MzVcXHUwNDQyIFxcdTA0NERcXHUwNDQyXFx1MDQzRVwiLFxuICAgIGNvbnRpbnVlSW46IFwiXFx1MDQxRlxcdTA0NDBcXHUwNDNFXFx1MDQzNFxcdTA0M0VcXHUwNDNCXFx1MDQzNlxcdTA0MzhcXHUwNDQyXFx1MDQzNSBcXHUwNDMyIHt7IG5hbWUgfX1cXHUyMDI2XCIsXG4gICAgdXBkYXRlV2FsbGV0OiBcIlxcdTA0MUVcXHUwNDMxXFx1MDQzRFxcdTA0M0VcXHUwNDMyXFx1MDQzOFxcdTA0NDJcXHUwNDRDIHt7IG5hbWUgfX1cIixcbiAgICBjaG9vc2VBbm90aGVyV2FsbGV0OiBcIlxcdTA0MTJcXHUwNDRCXFx1MDQzMVxcdTA0NDBcXHUwNDMwXFx1MDQ0MlxcdTA0NEMgXFx1MDQzNFxcdTA0NDBcXHUwNDQzXFx1MDQzM1xcdTA0M0VcXHUwNDM5IFxcdTA0M0FcXHUwNDNFXFx1MDQ0OFxcdTA0MzVcXHUwNDNCXFx1MDQ1MVxcdTA0M0FcIixcbiAgICBjb25uZWN0aW9uRGVjbGluZWQ6IFwiXFx1MDQxRlxcdTA0M0VcXHUwNDM0XFx1MDQzQVxcdTA0M0JcXHUwNDRFXFx1MDQ0N1xcdTA0MzVcXHUwNDNEXFx1MDQzOFxcdTA0MzUgXFx1MDQzRVxcdTA0NDJcXHUwNDNBXFx1MDQzQlxcdTA0M0VcXHUwNDNEXFx1MDQzNVxcdTA0M0RcXHUwNDNFXCJcbiAgfSxcbiAgZGVza3RvcENvbm5lY3Rpb25Nb2RhbDoge1xuICAgIHNjYW5RUjogXCJcXHUwNDFFXFx1MDQ0MlxcdTA0NDFcXHUwNDNBXFx1MDQzMFxcdTA0M0RcXHUwNDM4XFx1MDQ0MFxcdTA0NDNcXHUwNDM5XFx1MDQ0MlxcdTA0MzUgUVItXFx1MDQzQVxcdTA0M0VcXHUwNDM0IFxcdTA0M0RcXHUwNDM4XFx1MDQzNlxcdTA0MzUgXFx1MDQzQVxcdTA0MzBcXHUwNDNDXFx1MDQzNVxcdTA0NDBcXHUwNDNFXFx1MDQzOSBcXHUwNDMyXFx4QTBcXHUwNDNGXFx1MDQ0MFxcdTA0MzhcXHUwNDNCXFx1MDQzRVxcdTA0MzZcXHUwNDM1XFx1MDQzRFxcdTA0MzhcXHUwNDM4IHt7IG5hbWUgfX0sIFxcdTA0MzhcXHUwNDNCXFx1MDQzOFxceEEwXFx1MDQzQVxcdTA0MzBcXHUwNDNDXFx1MDQzNVxcdTA0NDBcXHUwNDNFXFx1MDQzOSBcXHUwNDQyXFx1MDQzNVxcdTA0M0JcXHUwNDM1XFx1MDQ0NFxcdTA0M0VcXHUwNDNEXFx1MDQzMFwiLFxuICAgIGNvbnRpbnVlSW5FeHRlbnNpb246IFwiXFx1MDQxRVxcdTA0NDJcXHUwNDNBXFx1MDQ0MFxcdTA0M0VcXHUwNDM5XFx1MDQ0MlxcdTA0MzUgXFx1MDQzMVxcdTA0NDBcXHUwNDMwXFx1MDQ0M1xcdTA0MzdcXHUwNDM1XFx1MDQ0MFxcdTA0M0RcXHUwNDNFXFx1MDQzNSBcXHUwNDQwXFx1MDQzMFxcdTA0NDFcXHUwNDQ4XFx1MDQzOFxcdTA0NDBcXHUwNDM1XFx1MDQzRFxcdTA0MzhcXHUwNDM1IHt7IG5hbWUgfX1cIixcbiAgICBkb250SGF2ZUV4dGVuc2lvbjogXCJcXHUwNDFGXFx1MDQzRVxcdTA0NDVcXHUwNDNFXFx1MDQzNlxcdTA0MzUsIFxcdTA0NDMgXFx1MDQzMlxcdTA0MzBcXHUwNDQxIFxcdTA0M0RcXHUwNDM1XFx4QTBcXHUwNDQzXFx1MDQ0MVxcdTA0NDJcXHUwNDMwXFx1MDQzRFxcdTA0M0VcXHUwNDMyXFx1MDQzQlxcdTA0MzVcXHUwNDNEXFx1MDQzRSBcXHUwNDMxXFx1MDQ0MFxcdTA0MzBcXHUwNDQzXFx1MDQzN1xcdTA0MzVcXHUwNDQwXFx1MDQzRFxcdTA0M0VcXHUwNDM1XFx4QTBcXHUwNDQwXFx1MDQzMFxcdTA0NDFcXHUwNDQ4XFx1MDQzOFxcdTA0NDBcXHUwNDM1XFx1MDQzRFxcdTA0MzhcXHUwNDM1XFx4QTB7eyBuYW1lIH19XCIsXG4gICAgbWlzc2luZ0ZlYXR1cmVzOiBcIlxcdTA0MUVcXHUwNDMxXFx1MDQzRFxcdTA0M0VcXHUwNDMyXFx1MDQzOFxcdTA0NDJcXHUwNDM1IHt7IG5hbWUgfX0sIFxcdTA0MzJcXHUwNDMwXFx1MDQ0OFxcdTA0MzAgXFx1MDQzMlxcdTA0MzVcXHUwNDQwXFx1MDQ0MVxcdTA0MzhcXHUwNDRGIFxcdTA0M0RcXHUwNDM1IFxcdTA0M0ZcXHUwNDNFXFx1MDQzNFxcdTA0MzRcXHUwNDM1XFx1MDQ0MFxcdTA0MzZcXHUwNDM4XFx1MDQzMlxcdTA0MzBcXHUwNDM1XFx1MDQ0MiBcXHUwNDNEXFx1MDQzNVxcdTA0M0VcXHUwNDMxXFx1MDQ0NVxcdTA0M0VcXHUwNDM0XFx1MDQzOFxcdTA0M0NcXHUwNDRCXFx1MDQzNSBcXHUwNDQ0XFx1MDQ0M1xcdTA0M0RcXHUwNDNBXFx1MDQ0NlxcdTA0MzhcXHUwNDM4IFxcdTA0MzRcXHUwNDNCXFx1MDQ0RiBcXHUwNDREXFx1MDQ0MlxcdTA0M0VcXHUwNDMzXFx1MDQzRSBkQXBwXCIsXG4gICAgbm90U3VwcG9ydGVkV2FsbGV0OiBcInt7IG5hbWUgfX0gXFx1MDQzRFxcdTA0MzUgXFx1MDQzRlxcdTA0M0VcXHUwNDM0XFx1MDQzNFxcdTA0MzVcXHUwNDQwXFx1MDQzNlxcdTA0MzhcXHUwNDMyXFx1MDQzMFxcdTA0MzVcXHUwNDQyIFxcdTA0MzdcXHUwNDMwXFx1MDQzRlxcdTA0NDBcXHUwNDNFXFx1MDQ0OFxcdTA0MzVcXHUwNDNEXFx1MDQzRFxcdTA0M0VcXHUwNDM1IFxcdTA0MzRcXHUwNDM1XFx1MDQzOVxcdTA0NDFcXHUwNDQyXFx1MDQzMlxcdTA0MzhcXHUwNDM1LiBcXHUwNDFGXFx1MDQzRVxcdTA0MzZcXHUwNDMwXFx1MDQzQlxcdTA0NDNcXHUwNDM5XFx1MDQ0MVxcdTA0NDJcXHUwNDMwLCBcXHUwNDNGXFx1MDQzRVxcdTA0MzRcXHUwNDNBXFx1MDQzQlxcdTA0NEVcXHUwNDQ3XFx1MDQzOFxcdTA0NDJcXHUwNDM1IFxcdTA0MzRcXHUwNDQwXFx1MDQ0M1xcdTA0MzNcXHUwNDNFXFx1MDQzOSBcXHUwNDNBXFx1MDQzRVxcdTA0NDhcXHUwNDM1XFx1MDQzQlxcdTA0NTFcXHUwNDNBLCBcXHUwNDNBXFx1MDQzRVxcdTA0NDJcXHUwNDNFXFx1MDQ0MFxcdTA0NEJcXHUwNDM5IFxcdTA0M0ZcXHUwNDNFXFx1MDQzNFxcdTA0MzRcXHUwNDM1XFx1MDQ0MFxcdTA0MzZcXHUwNDM4XFx1MDQzMlxcdTA0MzBcXHUwNDM1XFx1MDQ0MiBcXHUwNDREXFx1MDQ0MlxcdTA0M0VcIixcbiAgICBnZXRXYWxsZXQ6IFwiXFx1MDQyMVxcdTA0M0FcXHUwNDMwXFx1MDQ0N1xcdTA0MzBcXHUwNDQyXFx1MDQ0QyB7eyBuYW1lIH19XCIsXG4gICAgdXBkYXRlV2FsbGV0OiBcIlxcdTA0MUVcXHUwNDMxXFx1MDQzRFxcdTA0M0VcXHUwNDMyXFx1MDQzOFxcdTA0NDJcXHUwNDRDIHt7IG5hbWUgfX1cIixcbiAgICBjaG9vc2VBbm90aGVyV2FsbGV0OiBcIlxcdTA0MTJcXHUwNDRCXFx1MDQzMVxcdTA0NDBcXHUwNDMwXFx1MDQ0MlxcdTA0NEMgXFx1MDQzNFxcdTA0NDBcXHUwNDQzXFx1MDQzM1xcdTA0M0VcXHUwNDM5IFxcdTA0M0FcXHUwNDNFXFx1MDQ0OFxcdTA0MzVcXHUwNDNCXFx1MDQ1MVxcdTA0M0FcIixcbiAgICBjb250aW51ZU9uRGVza3RvcDogXCJcXHUwNDFFXFx1MDQ0MlxcdTA0M0FcXHUwNDQwXFx1MDQzRVxcdTA0MzlcXHUwNDQyXFx1MDQzNSB7eyBuYW1lIH19IFxcdTA0M0RcXHUwNDMwXFx4QTBcXHUwNDNBXFx1MDQzRVxcdTA0M0NcXHUwNDNGXFx1MDQ0Q1xcdTA0NEVcXHUwNDQyXFx1MDQzNVxcdTA0NDBcXHUwNDM1XFx1MjAyNlwiLFxuICAgIG9wZW5XYWxsZXRPblRlbGVncmFtOiBcIlxcdTA0MUVcXHUwNDQyXFx1MDQzQVxcdTA0NDBcXHUwNDRCXFx1MDQ0MlxcdTA0NEMgV2FsbGV0IFxcdTA0MzJcXHhBMFRlbGVncmFtXCIsXG4gICAgY29ubmVjdGlvbkRlY2xpbmVkOiBcIlxcdTA0MUZcXHUwNDNFXFx1MDQzNFxcdTA0M0FcXHUwNDNCXFx1MDQ0RVxcdTA0NDdcXHUwNDM1XFx1MDQzRFxcdTA0MzhcXHUwNDM1IFxcdTA0M0VcXHUwNDQyXFx1MDQzQVxcdTA0M0JcXHUwNDNFXFx1MDQzRFxcdTA0MzVcXHUwNDNEXFx1MDQzRVwiXG4gIH0sXG4gIGluZm9Nb2RhbDoge1xuICAgIHdoYXRJc0FXYWxsZXQ6IFwiXFx1MDQyN1xcdTA0NDJcXHUwNDNFIFxcdTA0NDJcXHUwNDMwXFx1MDQzQVxcdTA0M0VcXHUwNDM1IFxcdTA0M0FcXHUwNDNFXFx1MDQ0OFxcdTA0MzVcXHUwNDNCXFx1MDQ1MVxcdTA0M0E/XCIsXG4gICAgc2VjdXJlRGlnaXRhbEFzc2V0czogXCJcXHUwNDFEXFx1MDQzMFxcdTA0MzRcXHUwNDM1XFx1MDQzNlxcdTA0M0RcXHUwNDNFXFx1MDQzNSBcXHUwNDQ1XFx1MDQ0MFxcdTA0MzBcXHUwNDNEXFx1MDQzOFxcdTA0M0JcXHUwNDM4XFx1MDQ0OVxcdTA0MzUgXFx1MDQ0NlxcdTA0MzhcXHUwNDQ0XFx1MDQ0MFxcdTA0M0VcXHUwNDMyXFx1MDQ0QlxcdTA0NDUgXFx1MDQzMFxcdTA0M0FcXHUwNDQyXFx1MDQzOFxcdTA0MzJcXHUwNDNFXFx1MDQzMlwiLFxuICAgIHdhbGxldFByb3RlY3RzOiBcIlxcdTA0MUFcXHUwNDNFXFx1MDQ0OFxcdTA0MzVcXHUwNDNCXFx1MDQ1MVxcdTA0M0EgXFx1MDQzN1xcdTA0MzBcXHUwNDQ5XFx1MDQzOFxcdTA0NDlcXHUwNDMwXFx1MDQzNVxcdTA0NDIgXFx1MDQzMlxcdTA0MzBcXHUwNDQ4XFx1MDQzOCBcXHUwNDQ2XFx1MDQzOFxcdTA0NDRcXHUwNDQwXFx1MDQzRVxcdTA0MzJcXHUwNDRCXFx1MDQzNSBcXHUwNDMwXFx1MDQzQVxcdTA0NDJcXHUwNDM4XFx1MDQzMlxcdTA0NEIsIFxcdTA0MzJcXHUwNDNBXFx1MDQzQlxcdTA0NEVcXHUwNDQ3XFx1MDQzMFxcdTA0NEYgVE9OLCBcXHUwNDQyXFx1MDQzRVxcdTA0M0FcXHUwNDM1XFx1MDQzRFxcdTA0NEIgXFx1MDQzOFxceEEwXFx1MDQzRlxcdTA0NDBcXHUwNDM1XFx1MDQzNFxcdTA0M0NcXHUwNDM1XFx1MDQ0MlxcdTA0NEIgXFx1MDQzQVxcdTA0M0VcXHUwNDNCXFx1MDQzQlxcdTA0MzVcXHUwNDNBXFx1MDQ0NlxcdTA0MzhcXHUwNDNFXFx1MDQzRFxcdTA0MzhcXHUwNDQwXFx1MDQzRVxcdTA0MzJcXHUwNDMwXFx1MDQzRFxcdTA0MzhcXHUwNDRGLCBcXHUwNDM4XFx4QTBcXHUwNDQzXFx1MDQzRlxcdTA0NDBcXHUwNDMwXFx1MDQzMlxcdTA0M0JcXHUwNDRGXFx1MDQzNVxcdTA0NDIgXFx1MDQzOFxcdTA0M0NcXHUwNDM4LlwiLFxuICAgIGNvbnRyb2xJZGVudGl0eTogXCJcXHUwNDFBXFx1MDQzRVxcdTA0M0RcXHUwNDQyXFx1MDQ0MFxcdTA0M0VcXHUwNDNCXFx1MDQ0QyBcXHUwNDQxXFx1MDQzMlxcdTA0M0VcXHUwNDM1XFx1MDQzOSBcXHUwNDNCXFx1MDQzOFxcdTA0NDdcXHUwNDNEXFx1MDQzRVxcdTA0NDFcXHUwNDQyXFx1MDQzOCBXZWIzXCIsXG4gICAgbWFuYWdlSWRlbnRpdHk6IFwiXFx1MDQyM1xcdTA0M0ZcXHUwNDQwXFx1MDQzMFxcdTA0MzJcXHUwNDNCXFx1MDQ0RlxcdTA0MzlcXHUwNDQyXFx1MDQzNSBcXHUwNDQxXFx1MDQzMlxcdTA0M0VcXHUwNDM1XFx1MDQzOSBcXHUwNDQ2XFx1MDQzOFxcdTA0NDRcXHUwNDQwXFx1MDQzRVxcdTA0MzJcXHUwNDNFXFx1MDQzOSBcXHUwNDM4XFx1MDQzNFxcdTA0MzVcXHUwNDNEXFx1MDQ0MlxcdTA0MzhcXHUwNDQ0XFx1MDQzOFxcdTA0M0FcXHUwNDMwXFx1MDQ0NlxcdTA0MzhcXHUwNDM1XFx1MDQzOSBcXHUwNDM4XFx4QTBcXHUwNDQxXFx4QTBcXHUwNDNCXFx1MDQzNVxcdTA0MzNcXHUwNDNBXFx1MDQzRVxcdTA0NDFcXHUwNDQyXFx1MDQ0Q1xcdTA0NEUgXFx1MDQzRlxcdTA0M0VcXHUwNDNCXFx1MDQ0M1xcdTA0NDdcXHUwNDMwXFx1MDQzOVxcdTA0NDJcXHUwNDM1IFxcdTA0MzRcXHUwNDNFXFx1MDQ0MVxcdTA0NDJcXHUwNDQzXFx1MDQzRiBcXHUwNDNBXFx4QTBcXHUwNDM0XFx1MDQzNVxcdTA0NDZcXHUwNDM1XFx1MDQzRFxcdTA0NDJcXHUwNDQwXFx1MDQzMFxcdTA0M0JcXHUwNDM4XFx1MDQzN1xcdTA0M0VcXHUwNDMyXFx1MDQzMFxcdTA0M0RcXHUwNDNEXFx1MDQ0QlxcdTA0M0MgXFx1MDQzRlxcdTA0NDBcXHUwNDM4XFx1MDQzQlxcdTA0M0VcXHUwNDM2XFx1MDQzNVxcdTA0M0RcXHUwNDM4XFx1MDQ0RlxcdTA0M0MuIFxcdTA0MjFcXHUwNDNFXFx1MDQ0NVxcdTA0NDBcXHUwNDMwXFx1MDQzRFxcdTA0NEZcXHUwNDM5XFx1MDQ0MlxcdTA0MzUgXFx1MDQzQVxcdTA0M0VcXHUwNDNEXFx1MDQ0MlxcdTA0NDBcXHUwNDNFXFx1MDQzQlxcdTA0NEMgXFx1MDQzRFxcdTA0MzBcXHUwNDM0XFx4QTBcXHUwNDQxXFx1MDQzMlxcdTA0M0VcXHUwNDM4XFx1MDQzQ1xcdTA0MzggXFx1MDQzNFxcdTA0MzBcXHUwNDNEXFx1MDQzRFxcdTA0NEJcXHUwNDNDXFx1MDQzOCBcXHUwNDM4XFx4QTBcXHUwNDMxXFx1MDQzNVxcdTA0MzdcXHUwNDNFXFx1MDQzRlxcdTA0MzBcXHUwNDQxXFx1MDQzRFxcdTA0M0UgXFx1MDQ0M1xcdTA0NDdcXHUwNDMwXFx1MDQ0MVxcdTA0NDJcXHUwNDMyXFx1MDQ0M1xcdTA0MzlcXHUwNDQyXFx1MDQzNSBcXHUwNDMyXFx4QTBcXHUwNDREXFx1MDQzQVxcdTA0M0VcXHUwNDQxXFx1MDQzOFxcdTA0NDFcXHUwNDQyXFx1MDQzNVxcdTA0M0NcXHUwNDM1XFx4QTBcXHUwNDMxXFx1MDQzQlxcdTA0M0VcXHUwNDNBXFx1MDQ0N1xcdTA0MzVcXHUwNDM5XFx1MDQzRFxcdTA0MzAuXCIsXG4gICAgZWZmb3J0bGVzc0NyeXB0b1RyYW5zYWN0aW9uczogXCJcXHUwNDFGXFx1MDQ0MFxcdTA0M0VcXHUwNDQxXFx1MDQ0MlxcdTA0NEJcXHUwNDM1IFxcdTA0M0FcXHUwNDQwXFx1MDQzOFxcdTA0M0ZcXHUwNDQyXFx1MDQzRVxcdTA0NDJcXHUwNDQwXFx1MDQzMFxcdTA0M0RcXHUwNDM3XFx1MDQzMFxcdTA0M0FcXHUwNDQ2XFx1MDQzOFxcdTA0MzhcIixcbiAgICBlYXNpbHlTZW5kOiBcIlxcdTA0MUJcXHUwNDM1XFx1MDQzM1xcdTA0M0FcXHUwNDNFIFxcdTA0M0VcXHUwNDQyXFx1MDQzRlxcdTA0NDBcXHUwNDMwXFx1MDQzMlxcdTA0M0JcXHUwNDRGXFx1MDQzOVxcdTA0NDJcXHUwNDM1LCBcXHUwNDNGXFx1MDQzRVxcdTA0M0JcXHUwNDQzXFx1MDQ0N1xcdTA0MzBcXHUwNDM5XFx1MDQ0MlxcdTA0MzUgXFx1MDQzOFxceEEwXFx1MDQzRVxcdTA0NDJcXHUwNDQxXFx1MDQzQlxcdTA0MzVcXHUwNDM2XFx1MDQzOFxcdTA0MzJcXHUwNDMwXFx1MDQzOVxcdTA0NDJcXHUwNDM1IFxcdTA0NDFcXHUwNDMyXFx1MDQzRVxcdTA0MzggXFx1MDQzQVxcdTA0NDBcXHUwNDM4XFx1MDQzRlxcdTA0NDJcXHUwNDNFXFx1MDQzMlxcdTA0MzBcXHUwNDNCXFx1MDQ0RVxcdTA0NDJcXHUwNDRCLiBcXHUwNDFFXFx1MDQzRlxcdTA0NDJcXHUwNDM4XFx1MDQzQ1xcdTA0MzhcXHUwNDM3XFx1MDQzOFxcdTA0NDBcXHUwNDQzXFx1MDQzOVxcdTA0NDJcXHUwNDM1IFxcdTA0NDFcXHUwNDMyXFx1MDQzRVxcdTA0MzggXFx1MDQzRVxcdTA0M0ZcXHUwNDM1XFx1MDQ0MFxcdTA0MzBcXHUwNDQ2XFx1MDQzOFxcdTA0MzggXFx1MDQ0MVxceEEwXFx1MDQzRlxcdTA0M0VcXHUwNDNDXFx1MDQzRVxcdTA0NDlcXHUwNDRDXFx1MDQ0RSBcXHUwNDM0XFx1MDQzNVxcdTA0NDZcXHUwNDM1XFx1MDQzRFxcdTA0NDJcXHUwNDQwXFx1MDQzMFxcdTA0M0JcXHUwNDM4XFx1MDQzN1xcdTA0M0VcXHUwNDMyXFx1MDQzMFxcdTA0M0RcXHUwNDNEXFx1MDQ0QlxcdTA0NDUgXFx1MDQzRlxcdTA0NDBcXHUwNDM4XFx1MDQzQlxcdTA0M0VcXHUwNDM2XFx1MDQzNVxcdTA0M0RcXHUwNDM4XFx1MDQzOS5cIixcbiAgICBnZXRBV2FsbGV0OiBcIlxcdTA0MjFcXHUwNDNBXFx1MDQzMFxcdTA0NDdcXHUwNDMwXFx1MDQ0MlxcdTA0NEMgXFx1MDQzQVxcdTA0M0VcXHUwNDQ4XFx1MDQzNVxcdTA0M0JcXHUwNDUxXFx1MDQzQVwiXG4gIH0sXG4gIGFsbFdhbGxldHM6IHtcbiAgICB3YWxsZXRzQmVsb3dOb3RTdXBwb3J0ZWQ6IFwiXFx1MDQxQVxcdTA0M0VcXHUwNDQ4XFx1MDQzNVxcdTA0M0JcXHUwNDRDXFx1MDQzQVxcdTA0MzggXFx1MDQzRFxcdTA0MzhcXHUwNDM2XFx1MDQzNSBcXHUwNDNEXFx1MDQzNSBcXHUwNDNGXFx1MDQzRVxcdTA0MzRcXHUwNDM0XFx1MDQzNVxcdTA0NDBcXHUwNDM2XFx1MDQzOFxcdTA0MzJcXHUwNDMwXFx1MDQ0RVxcdTA0NDIgXFx1MDQzMlxcdTA0NDFcXHUwNDM1IFxcdTA0NDRcXHUwNDQzXFx1MDQzRFxcdTA0M0FcXHUwNDQ2XFx1MDQzOFxcdTA0MzggXFx1MDQzRlxcdTA0M0VcXHUwNDM0XFx1MDQzQVxcdTA0M0JcXHUwNDRFXFx1MDQ0N1xcdTA0NTFcXHUwNDNEXFx1MDQzRFxcdTA0M0VcXHUwNDMzXFx1MDQzRSBcXHUwNDQxXFx1MDQzNVxcdTA0NDBcXHUwNDMyXFx1MDQzOFxcdTA0NDFcXHUwNDMwLiBcXHUwNDEyXFx1MDQ0QiBcXHUwNDNDXFx1MDQzRVxcdTA0MzZcXHUwNDM1XFx1MDQ0MlxcdTA0MzUgXFx1MDQzOFxcdTA0NDFcXHUwNDNGXFx1MDQzRVxcdTA0M0JcXHUwNDRDXFx1MDQzN1xcdTA0M0VcXHUwNDMyXFx1MDQzMFxcdTA0NDJcXHUwNDRDIFxcdTA0NDFcXHUwNDMyXFx1MDQzRVxcdTA0NEUgXFx1MDQ0NFxcdTA0NDBcXHUwNDMwXFx1MDQzN1xcdTA0NDMgXFx1MDQzMlxcdTA0M0VcXHUwNDQxXFx1MDQ0MVxcdTA0NDJcXHUwNDMwXFx1MDQzRFxcdTA0M0VcXHUwNDMyXFx1MDQzQlxcdTA0MzVcXHUwNDNEXFx1MDQzOFxcdTA0NEYgXFx1MDQzMiBcXHUwNDNFXFx1MDQzNFxcdTA0M0RcXHUwNDNFXFx1MDQzQyBcXHUwNDM4XFx1MDQzNyBcXHUwNDNGXFx1MDQzRVxcdTA0MzRcXHUwNDM0XFx1MDQzNVxcdTA0NDBcXHUwNDM2XFx1MDQzOFxcdTA0MzJcXHUwNDMwXFx1MDQzNVxcdTA0M0NcXHUwNDRCXFx1MDQ0NSBcXHUwNDMyXFx1MDQ0QlxcdTA0NDhcXHUwNDM1IFxcdTA0M0FcXHUwNDNFXFx1MDQ0OFxcdTA0MzVcXHUwNDNCXFx1MDQ0Q1xcdTA0M0FcXHUwNDNFXFx1MDQzMi5cIixcbiAgICB3YWxsZXROb3RTdXBwb3J0U2VydmljZTogXCJ7eyBuYW1lIH19IFxcdTA0M0RcXHUwNDM1IFxcdTA0M0ZcXHUwNDNFXFx1MDQzNFxcdTA0MzRcXHUwNDM1XFx1MDQ0MFxcdTA0MzZcXHUwNDM4XFx1MDQzMlxcdTA0MzBcXHUwNDM1XFx1MDQ0MiBcXHUwNDNGXFx1MDQzRVxcdTA0MzRcXHUwNDNBXFx1MDQzQlxcdTA0NEVcXHUwNDQ3XFx1MDQ1MVxcdTA0M0RcXHUwNDNEXFx1MDQ0QlxcdTA0MzkgXFx1MDQ0MVxcdTA0MzVcXHUwNDQwXFx1MDQzMlxcdTA0MzhcXHUwNDQxXCJcbiAgfVxufTtcbmNvbnN0IGFjdGlvbk1vZGFsID0ge1xuICBjb25maXJtVHJhbnNhY3Rpb246IHtcbiAgICBoZWFkZXI6IFwiXFx1MDQxRlxcdTA0M0VcXHUwNDM0XFx1MDQ0MlxcdTA0MzJcXHUwNDM1XFx1MDQ0MFxcdTA0MzRcXHUwNDM4XFx1MDQ0MlxcdTA0MzUgXFx1MDQzNFxcdTA0MzVcXHUwNDM5XFx1MDQ0MVxcdTA0NDJcXHUwNDMyXFx1MDQzOFxcdTA0MzUgXFx1MDQzMlxceEEwe3sgbmFtZSB9fVwiLFxuICAgIHRleHQ6IFwiXFx1MDQyRFxcdTA0NDJcXHUwNDNFIFxcdTA0MzdcXHUwNDMwXFx1MDQzOVxcdTA0M0NcXHUwNDM1XFx1MDQ0MiBcXHUwNDNGXFx1MDQzMFxcdTA0NDBcXHUwNDQzIFxcdTA0NDFcXHUwNDM1XFx1MDQzQVxcdTA0NDNcXHUwNDNEXFx1MDQzNC5cIlxuICB9LFxuICB0cmFuc2FjdGlvblNlbnQ6IFwiJG5vdGlmaWNhdGlvbnMudHJhbnNhY3Rpb25TZW50XCIsXG4gIHRyYW5zYWN0aW9uQ2FuY2VsZWQ6IFwiJG5vdGlmaWNhdGlvbnMudHJhbnNhY3Rpb25DYW5jZWxlZFwiXG59O1xuY29uc3QgcnUgPSB7XG4gIGNvbW1vbixcbiAgYnV0dG9uLFxuICBub3RpZmljYXRpb25zLFxuICB3YWxsZXRJdGVtLFxuICB3YWxsZXRNb2RhbCxcbiAgYWN0aW9uTW9kYWxcbn07XG5jb25zdCBpMThuRGljdGlvbmFyeSA9IHtcbiAgZW46IHBhcnNlRGljdGlvbmFyeShlbiksXG4gIHJ1OiBwYXJzZURpY3Rpb25hcnkocnUpXG59O1xuZnVuY3Rpb24gcGFyc2VEaWN0aW9uYXJ5KGRpY3Rpb25hcnkpIHtcbiAgY29uc3QgcmVmU3ltYm9sID0gXCIkXCI7XG4gIGNvbnN0IGl0ZXJhdGUgPSAoc3ViRGljdGlvbmFyeSkgPT4ge1xuICAgIE9iamVjdC5lbnRyaWVzKHN1YkRpY3Rpb25hcnkpLmZvckVhY2goKFtrZXksIHZhbHVlXSkgPT4ge1xuICAgICAgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gXCJvYmplY3RcIiAmJiB2YWx1ZSkge1xuICAgICAgICByZXR1cm4gaXRlcmF0ZSh2YWx1ZSk7XG4gICAgICB9XG4gICAgICBpZiAodHlwZW9mIHZhbHVlID09PSBcInN0cmluZ1wiKSB7XG4gICAgICAgIGlmICh2YWx1ZVswXSA9PT0gcmVmU3ltYm9sKSB7XG4gICAgICAgICAgY29uc3QgcGF0aCA9IHZhbHVlLnNsaWNlKDEpLnNwbGl0KFwiLlwiKTtcbiAgICAgICAgICBsZXQgb2JqID0gZGljdGlvbmFyeTtcbiAgICAgICAgICBwYXRoLmZvckVhY2goKGl0ZW0pID0+IHtcbiAgICAgICAgICAgIGlmIChpdGVtIGluIG9iaikge1xuICAgICAgICAgICAgICBvYmogPSBvYmpbaXRlbV07XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICAgICAgICAgICAgYENhbm5vdCBwYXJzZSB0cmFuc2xhdGlvbnM6IHRoZXJlIGlzIG5vIHByb3BlcnR5ICR7aXRlbX0gaW4gdHJhbnNsYXRpb25gXG4gICAgICAgICAgICAgICk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSk7XG4gICAgICAgICAgc3ViRGljdGlvbmFyeVtrZXldID0gb2JqO1xuICAgICAgICB9XG4gICAgICAgIGlmICh2YWx1ZS5zbGljZSgwLCAyKSA9PT0gYFxcXFwke3JlZlN5bWJvbH1gKSB7XG4gICAgICAgICAgc3ViRGljdGlvbmFyeVtrZXldID0gdmFsdWUuc2xpY2UoMSk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9KTtcbiAgfTtcbiAgaXRlcmF0ZShkaWN0aW9uYXJ5KTtcbiAgcmV0dXJuIGRpY3Rpb25hcnk7XG59XG5jb25zdCBDb25uZWN0b3JDb250ZXh0ID0gY3JlYXRlQ29udGV4dCgpO1xuY29uc3QgJFJBVyA9IFN5bWJvbChcInN0b3JlLXJhd1wiKSwgJE5PREUgPSBTeW1ib2woXCJzdG9yZS1ub2RlXCIpLCAkTkFNRSA9IFN5bWJvbChcInN0b3JlLW5hbWVcIik7XG5mdW5jdGlvbiB3cmFwJDEodmFsdWUsIG5hbWUpIHtcbiAgbGV0IHAyID0gdmFsdWVbJFBST1hZXTtcbiAgaWYgKCFwMikge1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh2YWx1ZSwgJFBST1hZLCB7XG4gICAgICB2YWx1ZTogcDIgPSBuZXcgUHJveHkodmFsdWUsIHByb3h5VHJhcHMkMSlcbiAgICB9KTtcbiAgICBpZiAoIUFycmF5LmlzQXJyYXkodmFsdWUpKSB7XG4gICAgICBjb25zdCBrZXlzID0gT2JqZWN0LmtleXModmFsdWUpLCBkZXNjID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnModmFsdWUpO1xuICAgICAgZm9yIChsZXQgaTIgPSAwLCBsMiA9IGtleXMubGVuZ3RoOyBpMiA8IGwyOyBpMisrKSB7XG4gICAgICAgIGNvbnN0IHByb3AgPSBrZXlzW2kyXTtcbiAgICAgICAgaWYgKGRlc2NbcHJvcF0uZ2V0KSB7XG4gICAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHZhbHVlLCBwcm9wLCB7XG4gICAgICAgICAgICBlbnVtZXJhYmxlOiBkZXNjW3Byb3BdLmVudW1lcmFibGUsXG4gICAgICAgICAgICBnZXQ6IGRlc2NbcHJvcF0uZ2V0LmJpbmQocDIpXG4gICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH1cbiAgcmV0dXJuIHAyO1xufVxuZnVuY3Rpb24gaXNXcmFwcGFibGUob2JqKSB7XG4gIGxldCBwcm90bztcbiAgcmV0dXJuIG9iaiAhPSBudWxsICYmIHR5cGVvZiBvYmogPT09IFwib2JqZWN0XCIgJiYgKG9ialskUFJPWFldIHx8ICEocHJvdG8gPSBPYmplY3QuZ2V0UHJvdG90eXBlT2Yob2JqKSkgfHwgcHJvdG8gPT09IE9iamVjdC5wcm90b3R5cGUgfHwgQXJyYXkuaXNBcnJheShvYmopKTtcbn1cbmZ1bmN0aW9uIHVud3JhcChpdGVtLCBzZXQgPSAvKiBAX19QVVJFX18gKi8gbmV3IFNldCgpKSB7XG4gIGxldCByZXN1bHQsIHVud3JhcHBlZCwgdiwgcHJvcDtcbiAgaWYgKHJlc3VsdCA9IGl0ZW0gIT0gbnVsbCAmJiBpdGVtWyRSQVddKVxuICAgIHJldHVybiByZXN1bHQ7XG4gIGlmICghaXNXcmFwcGFibGUoaXRlbSkgfHwgc2V0LmhhcyhpdGVtKSlcbiAgICByZXR1cm4gaXRlbTtcbiAgaWYgKEFycmF5LmlzQXJyYXkoaXRlbSkpIHtcbiAgICBpZiAoT2JqZWN0LmlzRnJvemVuKGl0ZW0pKVxuICAgICAgaXRlbSA9IGl0ZW0uc2xpY2UoMCk7XG4gICAgZWxzZVxuICAgICAgc2V0LmFkZChpdGVtKTtcbiAgICBmb3IgKGxldCBpMiA9IDAsIGwyID0gaXRlbS5sZW5ndGg7IGkyIDwgbDI7IGkyKyspIHtcbiAgICAgIHYgPSBpdGVtW2kyXTtcbiAgICAgIGlmICgodW53cmFwcGVkID0gdW53cmFwKHYsIHNldCkpICE9PSB2KVxuICAgICAgICBpdGVtW2kyXSA9IHVud3JhcHBlZDtcbiAgICB9XG4gIH0gZWxzZSB7XG4gICAgaWYgKE9iamVjdC5pc0Zyb3plbihpdGVtKSlcbiAgICAgIGl0ZW0gPSBPYmplY3QuYXNzaWduKHt9LCBpdGVtKTtcbiAgICBlbHNlXG4gICAgICBzZXQuYWRkKGl0ZW0pO1xuICAgIGNvbnN0IGtleXMgPSBPYmplY3Qua2V5cyhpdGVtKSwgZGVzYyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzKGl0ZW0pO1xuICAgIGZvciAobGV0IGkyID0gMCwgbDIgPSBrZXlzLmxlbmd0aDsgaTIgPCBsMjsgaTIrKykge1xuICAgICAgcHJvcCA9IGtleXNbaTJdO1xuICAgICAgaWYgKGRlc2NbcHJvcF0uZ2V0KVxuICAgICAgICBjb250aW51ZTtcbiAgICAgIHYgPSBpdGVtW3Byb3BdO1xuICAgICAgaWYgKCh1bndyYXBwZWQgPSB1bndyYXAodiwgc2V0KSkgIT09IHYpXG4gICAgICAgIGl0ZW1bcHJvcF0gPSB1bndyYXBwZWQ7XG4gICAgfVxuICB9XG4gIHJldHVybiBpdGVtO1xufVxuZnVuY3Rpb24gZ2V0RGF0YU5vZGVzKHRhcmdldCkge1xuICBsZXQgbm9kZXMgPSB0YXJnZXRbJE5PREVdO1xuICBpZiAoIW5vZGVzKVxuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsICROT0RFLCB7XG4gICAgICB2YWx1ZTogbm9kZXMgPSB7fVxuICAgIH0pO1xuICByZXR1cm4gbm9kZXM7XG59XG5mdW5jdGlvbiBnZXREYXRhTm9kZShub2RlcywgcHJvcGVydHksIHZhbHVlKSB7XG4gIHJldHVybiBub2Rlc1twcm9wZXJ0eV0gfHwgKG5vZGVzW3Byb3BlcnR5XSA9IGNyZWF0ZURhdGFOb2RlKHZhbHVlKSk7XG59XG5mdW5jdGlvbiBwcm94eURlc2NyaXB0b3IkMSh0YXJnZXQsIHByb3BlcnR5KSB7XG4gIGNvbnN0IGRlc2MgPSBSZWZsZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcih0YXJnZXQsIHByb3BlcnR5KTtcbiAgaWYgKCFkZXNjIHx8IGRlc2MuZ2V0IHx8ICFkZXNjLmNvbmZpZ3VyYWJsZSB8fCBwcm9wZXJ0eSA9PT0gJFBST1hZIHx8IHByb3BlcnR5ID09PSAkTk9ERSB8fCBwcm9wZXJ0eSA9PT0gJE5BTUUpXG4gICAgcmV0dXJuIGRlc2M7XG4gIGRlbGV0ZSBkZXNjLnZhbHVlO1xuICBkZWxldGUgZGVzYy53cml0YWJsZTtcbiAgZGVzYy5nZXQgPSAoKSA9PiB0YXJnZXRbJFBST1hZXVtwcm9wZXJ0eV07XG4gIHJldHVybiBkZXNjO1xufVxuZnVuY3Rpb24gdHJhY2tTZWxmKHRhcmdldCkge1xuICBpZiAoZ2V0TGlzdGVuZXIoKSkge1xuICAgIGNvbnN0IG5vZGVzID0gZ2V0RGF0YU5vZGVzKHRhcmdldCk7XG4gICAgKG5vZGVzLl8gfHwgKG5vZGVzLl8gPSBjcmVhdGVEYXRhTm9kZSgpKSkoKTtcbiAgfVxufVxuZnVuY3Rpb24gb3duS2V5cyh0YXJnZXQpIHtcbiAgdHJhY2tTZWxmKHRhcmdldCk7XG4gIHJldHVybiBSZWZsZWN0Lm93bktleXModGFyZ2V0KTtcbn1cbmZ1bmN0aW9uIGNyZWF0ZURhdGFOb2RlKHZhbHVlKSB7XG4gIGNvbnN0IFtzMiwgc2V0XSA9IGNyZWF0ZVNpZ25hbCh2YWx1ZSwge1xuICAgIGVxdWFsczogZmFsc2UsXG4gICAgaW50ZXJuYWw6IHRydWVcbiAgfSk7XG4gIHMyLiQgPSBzZXQ7XG4gIHJldHVybiBzMjtcbn1cbmNvbnN0IHByb3h5VHJhcHMkMSA9IHtcbiAgZ2V0KHRhcmdldCwgcHJvcGVydHksIHJlY2VpdmVyKSB7XG4gICAgaWYgKHByb3BlcnR5ID09PSAkUkFXKVxuICAgICAgcmV0dXJuIHRhcmdldDtcbiAgICBpZiAocHJvcGVydHkgPT09ICRQUk9YWSlcbiAgICAgIHJldHVybiByZWNlaXZlcjtcbiAgICBpZiAocHJvcGVydHkgPT09ICRUUkFDSykge1xuICAgICAgdHJhY2tTZWxmKHRhcmdldCk7XG4gICAgICByZXR1cm4gcmVjZWl2ZXI7XG4gICAgfVxuICAgIGNvbnN0IG5vZGVzID0gZ2V0RGF0YU5vZGVzKHRhcmdldCk7XG4gICAgY29uc3QgdHJhY2tlZCA9IG5vZGVzLmhhc093blByb3BlcnR5KHByb3BlcnR5KTtcbiAgICBsZXQgdmFsdWUgPSB0cmFja2VkID8gbm9kZXNbcHJvcGVydHldKCkgOiB0YXJnZXRbcHJvcGVydHldO1xuICAgIGlmIChwcm9wZXJ0eSA9PT0gJE5PREUgfHwgcHJvcGVydHkgPT09IFwiX19wcm90b19fXCIpXG4gICAgICByZXR1cm4gdmFsdWU7XG4gICAgaWYgKCF0cmFja2VkKSB7XG4gICAgICBjb25zdCBkZXNjID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcih0YXJnZXQsIHByb3BlcnR5KTtcbiAgICAgIGlmIChnZXRMaXN0ZW5lcigpICYmICh0eXBlb2YgdmFsdWUgIT09IFwiZnVuY3Rpb25cIiB8fCB0YXJnZXQuaGFzT3duUHJvcGVydHkocHJvcGVydHkpKSAmJiAhKGRlc2MgJiYgZGVzYy5nZXQpKVxuICAgICAgICB2YWx1ZSA9IGdldERhdGFOb2RlKG5vZGVzLCBwcm9wZXJ0eSwgdmFsdWUpKCk7XG4gICAgfVxuICAgIHJldHVybiBpc1dyYXBwYWJsZSh2YWx1ZSkgPyB3cmFwJDEodmFsdWUpIDogdmFsdWU7XG4gIH0sXG4gIGhhcyh0YXJnZXQsIHByb3BlcnR5KSB7XG4gICAgaWYgKHByb3BlcnR5ID09PSAkUkFXIHx8IHByb3BlcnR5ID09PSAkUFJPWFkgfHwgcHJvcGVydHkgPT09ICRUUkFDSyB8fCBwcm9wZXJ0eSA9PT0gJE5PREUgfHwgcHJvcGVydHkgPT09IFwiX19wcm90b19fXCIpXG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICB0aGlzLmdldCh0YXJnZXQsIHByb3BlcnR5LCB0YXJnZXQpO1xuICAgIHJldHVybiBwcm9wZXJ0eSBpbiB0YXJnZXQ7XG4gIH0sXG4gIHNldCgpIHtcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfSxcbiAgZGVsZXRlUHJvcGVydHkoKSB7XG4gICAgcmV0dXJuIHRydWU7XG4gIH0sXG4gIG93bktleXMsXG4gIGdldE93blByb3BlcnR5RGVzY3JpcHRvcjogcHJveHlEZXNjcmlwdG9yJDFcbn07XG5mdW5jdGlvbiBzZXRQcm9wZXJ0eShzdGF0ZSwgcHJvcGVydHksIHZhbHVlLCBkZWxldGluZyA9IGZhbHNlKSB7XG4gIGlmICghZGVsZXRpbmcgJiYgc3RhdGVbcHJvcGVydHldID09PSB2YWx1ZSlcbiAgICByZXR1cm47XG4gIGNvbnN0IHByZXYgPSBzdGF0ZVtwcm9wZXJ0eV0sIGxlbiA9IHN0YXRlLmxlbmd0aDtcbiAgaWYgKHZhbHVlID09PSB2b2lkIDApXG4gICAgZGVsZXRlIHN0YXRlW3Byb3BlcnR5XTtcbiAgZWxzZVxuICAgIHN0YXRlW3Byb3BlcnR5XSA9IHZhbHVlO1xuICBsZXQgbm9kZXMgPSBnZXREYXRhTm9kZXMoc3RhdGUpLCBub2RlO1xuICBpZiAobm9kZSA9IGdldERhdGFOb2RlKG5vZGVzLCBwcm9wZXJ0eSwgcHJldikpXG4gICAgbm9kZS4kKCgpID0+IHZhbHVlKTtcbiAgaWYgKEFycmF5LmlzQXJyYXkoc3RhdGUpICYmIHN0YXRlLmxlbmd0aCAhPT0gbGVuKVxuICAgIChub2RlID0gZ2V0RGF0YU5vZGUobm9kZXMsIFwibGVuZ3RoXCIsIGxlbikpICYmIG5vZGUuJChzdGF0ZS5sZW5ndGgpO1xuICAobm9kZSA9IG5vZGVzLl8pICYmIG5vZGUuJCgpO1xufVxuZnVuY3Rpb24gbWVyZ2VTdG9yZU5vZGUoc3RhdGUsIHZhbHVlKSB7XG4gIGNvbnN0IGtleXMgPSBPYmplY3Qua2V5cyh2YWx1ZSk7XG4gIGZvciAobGV0IGkyID0gMDsgaTIgPCBrZXlzLmxlbmd0aDsgaTIgKz0gMSkge1xuICAgIGNvbnN0IGtleSA9IGtleXNbaTJdO1xuICAgIHNldFByb3BlcnR5KHN0YXRlLCBrZXksIHZhbHVlW2tleV0pO1xuICB9XG59XG5mdW5jdGlvbiB1cGRhdGVBcnJheShjdXJyZW50LCBuZXh0KSB7XG4gIGlmICh0eXBlb2YgbmV4dCA9PT0gXCJmdW5jdGlvblwiKVxuICAgIG5leHQgPSBuZXh0KGN1cnJlbnQpO1xuICBuZXh0ID0gdW53cmFwKG5leHQpO1xuICBpZiAoQXJyYXkuaXNBcnJheShuZXh0KSkge1xuICAgIGlmIChjdXJyZW50ID09PSBuZXh0KVxuICAgICAgcmV0dXJuO1xuICAgIGxldCBpMiA9IDAsIGxlbiA9IG5leHQubGVuZ3RoO1xuICAgIGZvciAoOyBpMiA8IGxlbjsgaTIrKykge1xuICAgICAgY29uc3QgdmFsdWUgPSBuZXh0W2kyXTtcbiAgICAgIGlmIChjdXJyZW50W2kyXSAhPT0gdmFsdWUpXG4gICAgICAgIHNldFByb3BlcnR5KGN1cnJlbnQsIGkyLCB2YWx1ZSk7XG4gICAgfVxuICAgIHNldFByb3BlcnR5KGN1cnJlbnQsIFwibGVuZ3RoXCIsIGxlbik7XG4gIH0gZWxzZVxuICAgIG1lcmdlU3RvcmVOb2RlKGN1cnJlbnQsIG5leHQpO1xufVxuZnVuY3Rpb24gdXBkYXRlUGF0aChjdXJyZW50LCBwYXRoLCB0cmF2ZXJzZWQgPSBbXSkge1xuICBsZXQgcGFydCwgcHJldiA9IGN1cnJlbnQ7XG4gIGlmIChwYXRoLmxlbmd0aCA+IDEpIHtcbiAgICBwYXJ0ID0gcGF0aC5zaGlmdCgpO1xuICAgIGNvbnN0IHBhcnRUeXBlID0gdHlwZW9mIHBhcnQsIGlzQXJyYXkgPSBBcnJheS5pc0FycmF5KGN1cnJlbnQpO1xuICAgIGlmIChBcnJheS5pc0FycmF5KHBhcnQpKSB7XG4gICAgICBmb3IgKGxldCBpMiA9IDA7IGkyIDwgcGFydC5sZW5ndGg7IGkyKyspIHtcbiAgICAgICAgdXBkYXRlUGF0aChjdXJyZW50LCBbcGFydFtpMl1dLmNvbmNhdChwYXRoKSwgdHJhdmVyc2VkKTtcbiAgICAgIH1cbiAgICAgIHJldHVybjtcbiAgICB9IGVsc2UgaWYgKGlzQXJyYXkgJiYgcGFydFR5cGUgPT09IFwiZnVuY3Rpb25cIikge1xuICAgICAgZm9yIChsZXQgaTIgPSAwOyBpMiA8IGN1cnJlbnQubGVuZ3RoOyBpMisrKSB7XG4gICAgICAgIGlmIChwYXJ0KGN1cnJlbnRbaTJdLCBpMikpXG4gICAgICAgICAgdXBkYXRlUGF0aChjdXJyZW50LCBbaTJdLmNvbmNhdChwYXRoKSwgdHJhdmVyc2VkKTtcbiAgICAgIH1cbiAgICAgIHJldHVybjtcbiAgICB9IGVsc2UgaWYgKGlzQXJyYXkgJiYgcGFydFR5cGUgPT09IFwib2JqZWN0XCIpIHtcbiAgICAgIGNvbnN0IHtcbiAgICAgICAgZnJvbSA9IDAsXG4gICAgICAgIHRvID0gY3VycmVudC5sZW5ndGggLSAxLFxuICAgICAgICBieSA9IDFcbiAgICAgIH0gPSBwYXJ0O1xuICAgICAgZm9yIChsZXQgaTIgPSBmcm9tOyBpMiA8PSB0bzsgaTIgKz0gYnkpIHtcbiAgICAgICAgdXBkYXRlUGF0aChjdXJyZW50LCBbaTJdLmNvbmNhdChwYXRoKSwgdHJhdmVyc2VkKTtcbiAgICAgIH1cbiAgICAgIHJldHVybjtcbiAgICB9IGVsc2UgaWYgKHBhdGgubGVuZ3RoID4gMSkge1xuICAgICAgdXBkYXRlUGF0aChjdXJyZW50W3BhcnRdLCBwYXRoLCBbcGFydF0uY29uY2F0KHRyYXZlcnNlZCkpO1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBwcmV2ID0gY3VycmVudFtwYXJ0XTtcbiAgICB0cmF2ZXJzZWQgPSBbcGFydF0uY29uY2F0KHRyYXZlcnNlZCk7XG4gIH1cbiAgbGV0IHZhbHVlID0gcGF0aFswXTtcbiAgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgdmFsdWUgPSB2YWx1ZShwcmV2LCB0cmF2ZXJzZWQpO1xuICAgIGlmICh2YWx1ZSA9PT0gcHJldilcbiAgICAgIHJldHVybjtcbiAgfVxuICBpZiAocGFydCA9PT0gdm9pZCAwICYmIHZhbHVlID09IHZvaWQgMClcbiAgICByZXR1cm47XG4gIHZhbHVlID0gdW53cmFwKHZhbHVlKTtcbiAgaWYgKHBhcnQgPT09IHZvaWQgMCB8fCBpc1dyYXBwYWJsZShwcmV2KSAmJiBpc1dyYXBwYWJsZSh2YWx1ZSkgJiYgIUFycmF5LmlzQXJyYXkodmFsdWUpKSB7XG4gICAgbWVyZ2VTdG9yZU5vZGUocHJldiwgdmFsdWUpO1xuICB9IGVsc2VcbiAgICBzZXRQcm9wZXJ0eShjdXJyZW50LCBwYXJ0LCB2YWx1ZSk7XG59XG5mdW5jdGlvbiBjcmVhdGVTdG9yZSguLi5bc3RvcmUsIG9wdGlvbnNdKSB7XG4gIGNvbnN0IHVud3JhcHBlZFN0b3JlID0gdW53cmFwKHN0b3JlIHx8IHt9KTtcbiAgY29uc3QgaXNBcnJheSA9IEFycmF5LmlzQXJyYXkodW53cmFwcGVkU3RvcmUpO1xuICBjb25zdCB3cmFwcGVkU3RvcmUgPSB3cmFwJDEodW53cmFwcGVkU3RvcmUpO1xuICBmdW5jdGlvbiBzZXRTdG9yZSguLi5hcmdzKSB7XG4gICAgYmF0Y2goKCkgPT4ge1xuICAgICAgaXNBcnJheSAmJiBhcmdzLmxlbmd0aCA9PT0gMSA/IHVwZGF0ZUFycmF5KHVud3JhcHBlZFN0b3JlLCBhcmdzWzBdKSA6IHVwZGF0ZVBhdGgodW53cmFwcGVkU3RvcmUsIGFyZ3MpO1xuICAgIH0pO1xuICB9XG4gIHJldHVybiBbd3JhcHBlZFN0b3JlLCBzZXRTdG9yZV07XG59XG5jb25zdCBkZWZhdWx0TGlnaHRDb2xvcnNTZXQgPSB7XG4gIGNvbnN0YW50OiB7XG4gICAgYmxhY2s6IFwiIzAwMDAwMFwiLFxuICAgIHdoaXRlOiBcIiNGRkZGRkZcIlxuICB9LFxuICBjb25uZWN0QnV0dG9uOiB7XG4gICAgYmFja2dyb3VuZDogXCIjMDA5OEVBXCIsXG4gICAgZm9yZWdyb3VuZDogXCIjRkZGRkZGXCJcbiAgfSxcbiAgYWNjZW50OiBcIiMwMDk4RUFcIixcbiAgdGVsZWdyYW1CdXR0b246IFwiIzAwOThFQVwiLFxuICBpY29uOiB7XG4gICAgcHJpbWFyeTogXCIjMEYwRjBGXCIsXG4gICAgc2Vjb25kYXJ5OiBcIiM3QTg5OTlcIixcbiAgICB0ZXJ0aWFyeTogXCIjQzFDQUQyXCIsXG4gICAgc3VjY2VzczogXCIjMjlDQzZBXCIsXG4gICAgZXJyb3I6IFwiI0Y1QTczQlwiXG4gIH0sXG4gIGJhY2tncm91bmQ6IHtcbiAgICBwcmltYXJ5OiBcIiNGRkZGRkZcIixcbiAgICBzZWNvbmRhcnk6IFwiI0YxRjNGNVwiLFxuICAgIHNlZ21lbnQ6IFwiI0ZGRkZGRlwiLFxuICAgIHRpbnQ6IFwiI0YxRjNGNVwiLFxuICAgIHFyOiBcIiNGMUYzRjVcIlxuICB9LFxuICB0ZXh0OiB7XG4gICAgcHJpbWFyeTogXCIjMEYwRjBGXCIsXG4gICAgc2Vjb25kYXJ5OiBcIiM2QTc3ODVcIlxuICB9XG59O1xuY29uc3QgZGVmYXVsdERhcmtDb2xvcnNTZXQgPSB7XG4gIGNvbnN0YW50OiB7XG4gICAgYmxhY2s6IFwiIzAwMDAwMFwiLFxuICAgIHdoaXRlOiBcIiNGRkZGRkZcIlxuICB9LFxuICBjb25uZWN0QnV0dG9uOiB7XG4gICAgYmFja2dyb3VuZDogXCIjMDA5OEVBXCIsXG4gICAgZm9yZWdyb3VuZDogXCIjRkZGRkZGXCJcbiAgfSxcbiAgYWNjZW50OiBcIiNFNUU1RUFcIixcbiAgdGVsZWdyYW1CdXR0b246IFwiIzMxQTZGNVwiLFxuICBpY29uOiB7XG4gICAgcHJpbWFyeTogXCIjRTVFNUVBXCIsXG4gICAgc2Vjb25kYXJ5OiBcIiM5MDkwOTlcIixcbiAgICB0ZXJ0aWFyeTogXCIjNDM0MzQ3XCIsXG4gICAgc3VjY2VzczogXCIjMjlDQzZBXCIsXG4gICAgZXJyb3I6IFwiI0Y1QTczQlwiXG4gIH0sXG4gIGJhY2tncm91bmQ6IHtcbiAgICBwcmltYXJ5OiBcIiMxMjEyMTRcIixcbiAgICBzZWNvbmRhcnk6IFwiIzE4MTgxQVwiLFxuICAgIHNlZ21lbnQ6IFwiIzI2MjYyOVwiLFxuICAgIHRpbnQ6IFwiIzIyMjIyNFwiLFxuICAgIHFyOiBcIiNGRkZGRkZcIlxuICB9LFxuICB0ZXh0OiB7XG4gICAgcHJpbWFyeTogXCIjRTVFNUVBXCIsXG4gICAgc2Vjb25kYXJ5OiBcIiM3RDdEODVcIlxuICB9XG59O1xuLyohXG4gKiBpcy1wbGFpbi1vYmplY3QgPGh0dHBzOi8vZ2l0aHViLmNvbS9qb25zY2hsaW5rZXJ0L2lzLXBsYWluLW9iamVjdD5cbiAqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTQtMjAxNywgSm9uIFNjaGxpbmtlcnQuXG4gKiBSZWxlYXNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG4gKi9cbmZ1bmN0aW9uIGlzT2JqZWN0KG8yKSB7XG4gIHJldHVybiBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwobzIpID09PSBcIltvYmplY3QgT2JqZWN0XVwiO1xufVxuZnVuY3Rpb24gaXNQbGFpbk9iamVjdChvMikge1xuICB2YXIgY3RvciwgcHJvdDtcbiAgaWYgKGlzT2JqZWN0KG8yKSA9PT0gZmFsc2UpXG4gICAgcmV0dXJuIGZhbHNlO1xuICBjdG9yID0gbzIuY29uc3RydWN0b3I7XG4gIGlmIChjdG9yID09PSB2b2lkIDApXG4gICAgcmV0dXJuIHRydWU7XG4gIHByb3QgPSBjdG9yLnByb3RvdHlwZTtcbiAgaWYgKGlzT2JqZWN0KHByb3QpID09PSBmYWxzZSlcbiAgICByZXR1cm4gZmFsc2U7XG4gIGlmIChwcm90Lmhhc093blByb3BlcnR5KFwiaXNQcm90b3R5cGVPZlwiKSA9PT0gZmFsc2UpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbiAgcmV0dXJuIHRydWU7XG59XG5mdW5jdGlvbiBtZXJnZU9wdGlvbnMob3B0aW9ucywgZGVmYXVsdE9wdGlvbnMpIHtcbiAgaWYgKCFvcHRpb25zKSB7XG4gICAgcmV0dXJuIGRlZmF1bHRPcHRpb25zO1xuICB9XG4gIGNvbnN0IG92ZXJ3cml0ZU1lcmdlID0gKF8sIHNvdXJjZUFycmF5LCBfXykgPT4gc291cmNlQXJyYXk7XG4gIHJldHVybiBkZWVwbWVyZ2UoZGVmYXVsdE9wdGlvbnMsIG9wdGlvbnMsIHtcbiAgICBhcnJheU1lcmdlOiBvdmVyd3JpdGVNZXJnZSxcbiAgICBpc01lcmdlYWJsZU9iamVjdDogaXNQbGFpbk9iamVjdFxuICB9KTtcbn1cbmNvbnN0IFt0aGVtZVN0YXRlLCBzZXRUaGVtZVN0YXRlXSA9IGNyZWF0ZVN0b3JlKHtcbiAgdGhlbWU6IFRIRU1FLkxJR0hULFxuICBjb2xvcnM6IGRlZmF1bHRMaWdodENvbG9yc1NldCxcbiAgYm9yZGVyUmFkaXVzOiBcIm1cIlxufSk7XG5jb25zdCB0aGVtZUNvbG9yc01hcHBpbmdEZWZhdWx0ID0ge1xuICBbVEhFTUUuTElHSFRdOiBkZWZhdWx0TGlnaHRDb2xvcnNTZXQsXG4gIFtUSEVNRS5EQVJLXTogZGVmYXVsdERhcmtDb2xvcnNTZXRcbn07XG5jb25zdCB0aGVtZUN1c3RvbUNvbG9ycyA9IHtcbiAgW1RIRU1FLkxJR0hUXTogdm9pZCAwLFxuICBbVEhFTUUuREFSS106IHZvaWQgMFxufTtcbmZ1bmN0aW9uIHNldFRoZW1lKHRoZW1lLCBjb2xvcnNTZXQpIHtcbiAgaWYgKGNvbG9yc1NldCkge1xuICAgIHRoZW1lQ3VzdG9tQ29sb3JzW1RIRU1FLkRBUktdID0gbWVyZ2VPcHRpb25zKFxuICAgICAgY29sb3JzU2V0W1RIRU1FLkRBUktdLFxuICAgICAgdGhlbWVDdXN0b21Db2xvcnNbVEhFTUUuREFSS11cbiAgICApO1xuICAgIHRoZW1lQ3VzdG9tQ29sb3JzW1RIRU1FLkxJR0hUXSA9IG1lcmdlT3B0aW9ucyhcbiAgICAgIGNvbG9yc1NldFtUSEVNRS5MSUdIVF0sXG4gICAgICB0aGVtZUN1c3RvbUNvbG9yc1tUSEVNRS5MSUdIVF1cbiAgICApO1xuICB9XG4gIHNldFRoZW1lU3RhdGUoe1xuICAgIHRoZW1lLFxuICAgIGNvbG9yczogbWVyZ2VPcHRpb25zKHRoZW1lQ3VzdG9tQ29sb3JzW3RoZW1lXSwgdGhlbWVDb2xvcnNNYXBwaW5nRGVmYXVsdFt0aGVtZV0pXG4gIH0pO1xufVxuZnVuY3Rpb24gc2V0Qm9yZGVyUmFkaXVzKGJvcmRlclJhZGl1cykge1xuICBzZXRUaGVtZVN0YXRlKHsgYm9yZGVyUmFkaXVzIH0pO1xufVxuZnVuY3Rpb24gc2V0Q29sb3JzKGNvbG9yc1NldCkge1xuICB0aGVtZUN1c3RvbUNvbG9yc1tUSEVNRS5EQVJLXSA9IG1lcmdlT3B0aW9ucyhcbiAgICBjb2xvcnNTZXRbVEhFTUUuREFSS10sXG4gICAgdGhlbWVDdXN0b21Db2xvcnNbVEhFTUUuREFSS11cbiAgKTtcbiAgdGhlbWVDdXN0b21Db2xvcnNbVEhFTUUuTElHSFRdID0gbWVyZ2VPcHRpb25zKFxuICAgIGNvbG9yc1NldFtUSEVNRS5MSUdIVF0sXG4gICAgdGhlbWVDdXN0b21Db2xvcnNbVEhFTUUuTElHSFRdXG4gICk7XG4gIHNldFRoZW1lU3RhdGUoKHN0YXRlKSA9PiAoe1xuICAgIGNvbG9yczogbWVyZ2VPcHRpb25zKFxuICAgICAgdGhlbWVDdXN0b21Db2xvcnNbc3RhdGUudGhlbWVdLFxuICAgICAgdGhlbWVDb2xvcnNNYXBwaW5nRGVmYXVsdFtzdGF0ZS50aGVtZV1cbiAgICApXG4gIH0pKTtcbn1cbmNvbnN0IEltYWdlUGxhY2Vob2xkZXIgPSBzdHlsZWQuZGl2YFxuICAgIGJhY2tncm91bmQtY29sb3I6ICR7KHByb3BzKSA9PiBwcm9wcy50aGVtZS5jb2xvcnMuYmFja2dyb3VuZC5zZWNvbmRhcnl9O1xuYDtcbmNvbnN0IEltYWdlID0gKHByb3BzKSA9PiB7XG4gIGxldCBpbWdSZWY7XG4gIGNvbnN0IFtpbWFnZSwgc2V0SW1hZ2VdID0gY3JlYXRlU2lnbmFsKG51bGwpO1xuICBjcmVhdGVFZmZlY3QoKCkgPT4ge1xuICAgIGNvbnN0IGltZyA9IG5ldyB3aW5kb3cuSW1hZ2UoKTtcbiAgICBpbWcuc3JjID0gcHJvcHMuc3JjO1xuICAgIGltZy5hbHQgPSBwcm9wcy5hbHQgfHwgXCJcIjtcbiAgICBpbWcuc2V0QXR0cmlidXRlKFwiZHJhZ2dhYmxlXCIsIFwiZmFsc2VcIik7XG4gICAgaWYgKHByb3BzLmNsYXNzKSB7XG4gICAgICBpbWcuY2xhc3NMaXN0LmFkZChwcm9wcy5jbGFzcyk7XG4gICAgfVxuICAgIGlmIChpbWcuY29tcGxldGUpIHtcbiAgICAgIHJldHVybiBzZXRJbWFnZShpbWcpO1xuICAgIH1cbiAgICBpbWcuYWRkRXZlbnRMaXN0ZW5lcihcImxvYWRcIiwgKCkgPT4gc2V0SW1hZ2UoaW1nKSk7XG4gICAgcmV0dXJuICgpID0+IGltZy5yZW1vdmVFdmVudExpc3RlbmVyKFwibG9hZFwiLCAoKSA9PiBzZXRJbWFnZShpbWcpKTtcbiAgfSk7XG4gIHJldHVybiBbY3JlYXRlQ29tcG9uZW50KFNob3csIHtcbiAgICBnZXQgd2hlbigpIHtcbiAgICAgIHJldHVybiBpbWFnZSgpO1xuICAgIH0sXG4gICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgcmV0dXJuIGltYWdlKCk7XG4gICAgfVxuICB9KSwgY3JlYXRlQ29tcG9uZW50KFNob3csIHtcbiAgICBnZXQgd2hlbigpIHtcbiAgICAgIHJldHVybiAhaW1hZ2UoKTtcbiAgICB9LFxuICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoSW1hZ2VQbGFjZWhvbGRlciwge1xuICAgICAgICBnZXQgW1wiY2xhc3NcIl0oKSB7XG4gICAgICAgICAgcmV0dXJuIHByb3BzLmNsYXNzO1xuICAgICAgICB9LFxuICAgICAgICByZWYociQpIHtcbiAgICAgICAgICBjb25zdCBfcmVmJCA9IGltZ1JlZjtcbiAgICAgICAgICB0eXBlb2YgX3JlZiQgPT09IFwiZnVuY3Rpb25cIiA/IF9yZWYkKHIkKSA6IGltZ1JlZiA9IHIkO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9XG4gIH0pXTtcbn07XG5sZXQgaW5pdFBhcmFtcyA9IHt9O1xudHJ5IHtcbiAgbGV0IGxvY2F0aW9uSGFzaCA9IGxvY2F0aW9uLmhhc2gudG9TdHJpbmcoKTtcbiAgaW5pdFBhcmFtcyA9IHVybFBhcnNlSGFzaFBhcmFtcyhsb2NhdGlvbkhhc2gpO1xufSBjYXRjaCAoZTIpIHtcbn1cbmxldCB0bWFQbGF0Zm9ybSA9IFwidW5rbm93blwiO1xuaWYgKGluaXRQYXJhbXMgPT0gbnVsbCA/IHZvaWQgMCA6IGluaXRQYXJhbXMudGdXZWJBcHBQbGF0Zm9ybSkge1xuICB0bWFQbGF0Zm9ybSA9IChfYSA9IGluaXRQYXJhbXMudGdXZWJBcHBQbGF0Zm9ybSkgIT0gbnVsbCA/IF9hIDogXCJ1bmtub3duXCI7XG59XG5pZiAodG1hUGxhdGZvcm0gPT09IFwidW5rbm93blwiKSB7XG4gIGNvbnN0IHdpbmRvdzIgPSBnZXRXaW5kb3ckMSgpO1xuICB0bWFQbGF0Zm9ybSA9IChfZCA9IChfYyA9IChfYiA9IHdpbmRvdzIgPT0gbnVsbCA/IHZvaWQgMCA6IHdpbmRvdzIuVGVsZWdyYW0pID09IG51bGwgPyB2b2lkIDAgOiBfYi5XZWJBcHApID09IG51bGwgPyB2b2lkIDAgOiBfYy5wbGF0Zm9ybSkgIT0gbnVsbCA/IF9kIDogXCJ1bmtub3duXCI7XG59XG5sZXQgd2ViQXBwVmVyc2lvbiA9IFwiNi4wXCI7XG5pZiAoaW5pdFBhcmFtcyA9PSBudWxsID8gdm9pZCAwIDogaW5pdFBhcmFtcy50Z1dlYkFwcFZlcnNpb24pIHtcbiAgd2ViQXBwVmVyc2lvbiA9IGluaXRQYXJhbXMudGdXZWJBcHBWZXJzaW9uO1xufVxuaWYgKCF3ZWJBcHBWZXJzaW9uKSB7XG4gIGNvbnN0IHdpbmRvdzIgPSBnZXRXaW5kb3ckMSgpO1xuICB3ZWJBcHBWZXJzaW9uID0gKF9nID0gKF9mID0gKF9lID0gd2luZG93MiA9PSBudWxsID8gdm9pZCAwIDogd2luZG93Mi5UZWxlZ3JhbSkgPT0gbnVsbCA/IHZvaWQgMCA6IF9lLldlYkFwcCkgPT0gbnVsbCA/IHZvaWQgMCA6IF9mLnZlcnNpb24pICE9IG51bGwgPyBfZyA6IFwiNi4wXCI7XG59XG5mdW5jdGlvbiBpc1RtYVBsYXRmb3JtKC4uLnBsYXRmb3Jtcykge1xuICByZXR1cm4gcGxhdGZvcm1zLmluY2x1ZGVzKHRtYVBsYXRmb3JtKTtcbn1cbmZ1bmN0aW9uIGlzSW5UTUEoKSB7XG4gIHZhciBfYTI7XG4gIHJldHVybiB0bWFQbGF0Zm9ybSAhPT0gXCJ1bmtub3duXCIgfHwgISEoKF9hMiA9IGdldFdpbmRvdyQxKCkpID09IG51bGwgPyB2b2lkIDAgOiBfYTIuVGVsZWdyYW1XZWJ2aWV3UHJveHkpO1xufVxuZnVuY3Rpb24gaXNJblRlbGVncmFtQnJvd3NlcigpIHtcbiAgdmFyIF9hMjtcbiAgY29uc3QgaXNUZWxlZ3JhbVdlYnZpZXcgPSAhISgoX2EyID0gZ2V0V2luZG93JDEoKSkgPT0gbnVsbCA/IHZvaWQgMCA6IF9hMi5UZWxlZ3JhbVdlYnZpZXcpO1xuICByZXR1cm4gKGlzSW5UTUEoKSB8fCBpc1RlbGVncmFtV2VidmlldykgJiYgdG1hUGxhdGZvcm0gPT09IFwidW5rbm93blwiO1xufVxuZnVuY3Rpb24gc2VuZEV4cGFuZCgpIHtcbiAgcG9zdEV2ZW50KFwid2ViX2FwcF9leHBhbmRcIiwge30pO1xufVxuZnVuY3Rpb24gc2VuZE9wZW5UZWxlZ3JhbUxpbmsobGluaywgZmFsbGJhY2spIHtcbiAgY29uc3QgdXJsID0gbmV3IFVSTChsaW5rKTtcbiAgaWYgKHVybC5wcm90b2NvbCAhPT0gXCJodHRwOlwiICYmIHVybC5wcm90b2NvbCAhPT0gXCJodHRwczpcIikge1xuICAgIGlmIChmYWxsYmFjaykge1xuICAgICAgcmV0dXJuIGZhbGxiYWNrKCk7XG4gICAgfVxuICAgIHRocm93IG5ldyBUb25Db25uZWN0VUlFcnJvcihgVXJsIHByb3RvY29sIGlzIG5vdCBzdXBwb3J0ZWQ6ICR7dXJsfWApO1xuICB9XG4gIGlmICh1cmwuaG9zdG5hbWUgIT09IFwidC5tZVwiKSB7XG4gICAgaWYgKGZhbGxiYWNrKSB7XG4gICAgICByZXR1cm4gZmFsbGJhY2soKTtcbiAgICB9XG4gICAgdGhyb3cgbmV3IFRvbkNvbm5lY3RVSUVycm9yKGBVcmwgaG9zdCBpcyBub3Qgc3VwcG9ydGVkOiAke3VybH1gKTtcbiAgfVxuICBjb25zdCBwYXRoRnVsbCA9IHVybC5wYXRobmFtZSArIHVybC5zZWFyY2g7XG4gIGlmIChpc0lmcmFtZSgpIHx8IHZlcnNpb25BdExlYXN0KFwiNi4xXCIpKSB7XG4gICAgcG9zdEV2ZW50KFwid2ViX2FwcF9vcGVuX3RnX2xpbmtcIiwgeyBwYXRoX2Z1bGw6IHBhdGhGdWxsIH0pO1xuICB9IGVsc2Uge1xuICAgIG9wZW5MaW5rQmxhbmsoXCJodHRwczovL3QubWVcIiArIHBhdGhGdWxsKTtcbiAgfVxufVxuZnVuY3Rpb24gaXNJZnJhbWUoKSB7XG4gIHRyeSB7XG4gICAgY29uc3Qgd2luZG93MiA9IGdldFdpbmRvdyQxKCk7XG4gICAgaWYgKCF3aW5kb3cyKSB7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIHJldHVybiB3aW5kb3cyLnBhcmVudCAhPSBudWxsICYmIHdpbmRvdzIgIT09IHdpbmRvdzIucGFyZW50O1xuICB9IGNhdGNoIChlMikge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxufVxuZnVuY3Rpb24gcG9zdEV2ZW50KGV2ZW50VHlwZSwgZXZlbnREYXRhKSB7XG4gIHRyeSB7XG4gICAgY29uc3Qgd2luZG93MiA9IGdldFdpbmRvdyQxKCk7XG4gICAgaWYgKCF3aW5kb3cyKSB7XG4gICAgICB0aHJvdyBuZXcgVG9uQ29ubmVjdFVJRXJyb3IoYENhbid0IHBvc3QgZXZlbnQgdG8gcGFyZW50IHdpbmRvdzogd2luZG93IGlzIG5vdCBkZWZpbmVkYCk7XG4gICAgfVxuICAgIGlmICh3aW5kb3cyLlRlbGVncmFtV2Vidmlld1Byb3h5ICE9PSB2b2lkIDApIHtcbiAgICAgIGxvZ0RlYnVnKFwicG9zdEV2ZW50XCIsIGV2ZW50VHlwZSwgZXZlbnREYXRhKTtcbiAgICAgIHdpbmRvdzIuVGVsZWdyYW1XZWJ2aWV3UHJveHkucG9zdEV2ZW50KGV2ZW50VHlwZSwgSlNPTi5zdHJpbmdpZnkoZXZlbnREYXRhKSk7XG4gICAgfSBlbHNlIGlmICh3aW5kb3cyLmV4dGVybmFsICYmIFwibm90aWZ5XCIgaW4gd2luZG93Mi5leHRlcm5hbCkge1xuICAgICAgbG9nRGVidWcoXCJwb3N0RXZlbnRcIiwgZXZlbnRUeXBlLCBldmVudERhdGEpO1xuICAgICAgd2luZG93Mi5leHRlcm5hbC5ub3RpZnkoSlNPTi5zdHJpbmdpZnkoeyBldmVudFR5cGUsIGV2ZW50RGF0YSB9KSk7XG4gICAgfSBlbHNlIGlmIChpc0lmcmFtZSgpKSB7XG4gICAgICBjb25zdCB0cnVzdGVkVGFyZ2V0ID0gXCIqXCI7XG4gICAgICBjb25zdCBtZXNzYWdlID0gSlNPTi5zdHJpbmdpZnkoeyBldmVudFR5cGUsIGV2ZW50RGF0YSB9KTtcbiAgICAgIGxvZ0RlYnVnKFwicG9zdEV2ZW50XCIsIGV2ZW50VHlwZSwgZXZlbnREYXRhKTtcbiAgICAgIHdpbmRvdzIucGFyZW50LnBvc3RNZXNzYWdlKG1lc3NhZ2UsIHRydXN0ZWRUYXJnZXQpO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aHJvdyBuZXcgVG9uQ29ubmVjdFVJRXJyb3IoYENhbid0IHBvc3QgZXZlbnQgdG8gVE1BYCk7XG4gICAgfVxuICB9IGNhdGNoIChlMikge1xuICAgIGxvZ0Vycm9yKGBDYW4ndCBwb3N0IGV2ZW50IHRvIHBhcmVudCB3aW5kb3c6ICR7ZTJ9YCk7XG4gIH1cbn1cbmZ1bmN0aW9uIHVybFBhcnNlSGFzaFBhcmFtcyhsb2NhdGlvbkhhc2gpIHtcbiAgbG9jYXRpb25IYXNoID0gbG9jYXRpb25IYXNoLnJlcGxhY2UoL14jLywgXCJcIik7XG4gIGxldCBwYXJhbXMgPSB7fTtcbiAgaWYgKCFsb2NhdGlvbkhhc2gubGVuZ3RoKSB7XG4gICAgcmV0dXJuIHBhcmFtcztcbiAgfVxuICBpZiAobG9jYXRpb25IYXNoLmluZGV4T2YoXCI9XCIpIDwgMCAmJiBsb2NhdGlvbkhhc2guaW5kZXhPZihcIj9cIikgPCAwKSB7XG4gICAgcGFyYW1zLl9wYXRoID0gdXJsU2FmZURlY29kZShsb2NhdGlvbkhhc2gpO1xuICAgIHJldHVybiBwYXJhbXM7XG4gIH1cbiAgbGV0IHFJbmRleCA9IGxvY2F0aW9uSGFzaC5pbmRleE9mKFwiP1wiKTtcbiAgaWYgKHFJbmRleCA+PSAwKSB7XG4gICAgbGV0IHBhdGhQYXJhbSA9IGxvY2F0aW9uSGFzaC5zdWJzdHIoMCwgcUluZGV4KTtcbiAgICBwYXJhbXMuX3BhdGggPSB1cmxTYWZlRGVjb2RlKHBhdGhQYXJhbSk7XG4gICAgbG9jYXRpb25IYXNoID0gbG9jYXRpb25IYXNoLnN1YnN0cihxSW5kZXggKyAxKTtcbiAgfVxuICBsZXQgcXVlcnlfcGFyYW1zID0gdXJsUGFyc2VRdWVyeVN0cmluZyhsb2NhdGlvbkhhc2gpO1xuICBmb3IgKGxldCBrIGluIHF1ZXJ5X3BhcmFtcykge1xuICAgIHBhcmFtc1trXSA9IHF1ZXJ5X3BhcmFtc1trXTtcbiAgfVxuICByZXR1cm4gcGFyYW1zO1xufVxuZnVuY3Rpb24gdXJsU2FmZURlY29kZSh1cmxlbmNvZGVkKSB7XG4gIHRyeSB7XG4gICAgdXJsZW5jb2RlZCA9IHVybGVuY29kZWQucmVwbGFjZSgvXFwrL2csIFwiJTIwXCIpO1xuICAgIHJldHVybiBkZWNvZGVVUklDb21wb25lbnQodXJsZW5jb2RlZCk7XG4gIH0gY2F0Y2ggKGUyKSB7XG4gICAgcmV0dXJuIHVybGVuY29kZWQ7XG4gIH1cbn1cbmZ1bmN0aW9uIHVybFBhcnNlUXVlcnlTdHJpbmcocXVlcnlTdHJpbmcpIHtcbiAgbGV0IHBhcmFtcyA9IHt9O1xuICBpZiAoIXF1ZXJ5U3RyaW5nLmxlbmd0aCkge1xuICAgIHJldHVybiBwYXJhbXM7XG4gIH1cbiAgbGV0IHF1ZXJ5U3RyaW5nUGFyYW1zID0gcXVlcnlTdHJpbmcuc3BsaXQoXCImXCIpO1xuICBsZXQgaTIsIHBhcmFtLCBwYXJhbU5hbWUsIHBhcmFtVmFsdWU7XG4gIGZvciAoaTIgPSAwOyBpMiA8IHF1ZXJ5U3RyaW5nUGFyYW1zLmxlbmd0aDsgaTIrKykge1xuICAgIHBhcmFtID0gcXVlcnlTdHJpbmdQYXJhbXNbaTJdLnNwbGl0KFwiPVwiKTtcbiAgICBwYXJhbU5hbWUgPSB1cmxTYWZlRGVjb2RlKHBhcmFtWzBdKTtcbiAgICBwYXJhbVZhbHVlID0gcGFyYW1bMV0gPT0gbnVsbCA/IG51bGwgOiB1cmxTYWZlRGVjb2RlKHBhcmFtWzFdKTtcbiAgICBwYXJhbXNbcGFyYW1OYW1lXSA9IHBhcmFtVmFsdWU7XG4gIH1cbiAgcmV0dXJuIHBhcmFtcztcbn1cbmZ1bmN0aW9uIHZlcnNpb25Db21wYXJlKHYxLCB2Mikge1xuICBpZiAodHlwZW9mIHYxICE9PSBcInN0cmluZ1wiKVxuICAgIHYxID0gXCJcIjtcbiAgaWYgKHR5cGVvZiB2MiAhPT0gXCJzdHJpbmdcIilcbiAgICB2MiA9IFwiXCI7XG4gIGxldCB2MUxpc3QgPSB2MS5yZXBsYWNlKC9eXFxzK3xcXHMrJC9nLCBcIlwiKS5zcGxpdChcIi5cIik7XG4gIGxldCB2Mkxpc3QgPSB2Mi5yZXBsYWNlKC9eXFxzK3xcXHMrJC9nLCBcIlwiKS5zcGxpdChcIi5cIik7XG4gIGxldCBhMiwgaTIsIHAxLCBwMjtcbiAgYTIgPSBNYXRoLm1heCh2MUxpc3QubGVuZ3RoLCB2Mkxpc3QubGVuZ3RoKTtcbiAgZm9yIChpMiA9IDA7IGkyIDwgYTI7IGkyKyspIHtcbiAgICBwMSA9IHBhcnNlSW50KHYxTGlzdFtpMl0pIHx8IDA7XG4gICAgcDIgPSBwYXJzZUludCh2Mkxpc3RbaTJdKSB8fCAwO1xuICAgIGlmIChwMSA9PT0gcDIpXG4gICAgICBjb250aW51ZTtcbiAgICBpZiAocDEgPiBwMilcbiAgICAgIHJldHVybiAxO1xuICAgIHJldHVybiAtMTtcbiAgfVxuICByZXR1cm4gMDtcbn1cbmZ1bmN0aW9uIHZlcnNpb25BdExlYXN0KHZlcikge1xuICByZXR1cm4gdmVyc2lvbkNvbXBhcmUod2ViQXBwVmVyc2lvbiwgdmVyKSA+PSAwO1xufVxuY29uc3QgbWF4V2lkdGggPSB7XG4gIG1vYmlsZTogNDQwLFxuICB0YWJsZXQ6IDEwMjBcbn07XG5mdW5jdGlvbiBpc0RldmljZShkZXZpY2UpIHtcbiAgY29uc3Qgd2luZG93MiA9IGdldFdpbmRvdyQxKCk7XG4gIGlmICghd2luZG93Mikge1xuICAgIHJldHVybiBkZXZpY2UgPT09IFwiZGVza3RvcFwiO1xuICB9XG4gIGlmIChpc1RtYVBsYXRmb3JtKFwid2ViYVwiKSkge1xuICAgIHJldHVybiB0cnVlO1xuICB9XG4gIGNvbnN0IHdpZHRoID0gd2luZG93Mi5pbm5lcldpZHRoO1xuICBzd2l0Y2ggKGRldmljZSkge1xuICAgIGNhc2UgXCJkZXNrdG9wXCI6XG4gICAgICByZXR1cm4gd2lkdGggPiBtYXhXaWR0aC50YWJsZXQ7XG4gICAgY2FzZSBcInRhYmxldFwiOlxuICAgICAgcmV0dXJuIHdpZHRoID4gbWF4V2lkdGgubW9iaWxlO1xuICAgIGRlZmF1bHQ6XG4gICAgY2FzZSBcIm1vYmlsZVwiOlxuICAgICAgcmV0dXJuIHdpZHRoIDw9IG1heFdpZHRoLm1vYmlsZSB8fCBpc09TKFwiaW9zXCIsIFwiYW5kcm9pZFwiLCBcImlwYWRcIik7XG4gIH1cbn1cbmZ1bmN0aW9uIG1lZGlhKGRldmljZSkge1xuICBzd2l0Y2ggKGRldmljZSkge1xuICAgIGNhc2UgXCJtb2JpbGVcIjpcbiAgICAgIHJldHVybiBgQG1lZGlhIChtYXgtd2lkdGg6ICR7bWF4V2lkdGgubW9iaWxlfXB4KWA7XG4gICAgY2FzZSBcInRhYmxldFwiOlxuICAgICAgcmV0dXJuIGBAbWVkaWEgKG1heC13aWR0aDogJHttYXhXaWR0aC50YWJsZXR9cHgpIChtaW4td2lkdGg6ICR7bWF4V2lkdGgubW9iaWxlfXB4KWA7XG4gICAgZGVmYXVsdDpcbiAgICBjYXNlIFwiZGVza3RvcFwiOlxuICAgICAgcmV0dXJuIGBAbWVkaWEgKG1pbi13aWR0aDogJHttYXhXaWR0aC50YWJsZXR9cHgpYDtcbiAgfVxufVxuY29uc3QgbWVkaWFUb3VjaCA9IFwiQG1lZGlhIChob3Zlcjogbm9uZSlcIjtcbmNvbnN0IG1lZGlhTm90VG91Y2ggPSBcIkBtZWRpYSBub3QgYWxsIGFuZCAoaG92ZXI6IG5vbmUpXCI7XG5jb25zdCBib3JkZXJzJDUgPSB7XG4gIG06IFwiMTAwdmhcIixcbiAgczogXCI4cHhcIixcbiAgbm9uZTogXCIwXCJcbn07XG5jb25zdCBzY2FsZVZhbHVlcyA9IHtcbiAgczogMC4wMixcbiAgbTogMC4wNFxufTtcbmNvbnN0IEJ1dHRvblN0eWxlZCQxID0gc3R5bGVkLmJ1dHRvbmBcbiAgICBkaXNwbGF5OiAkeyhwcm9wcykgPT4gcHJvcHMubGVmdEljb24gfHwgcHJvcHMucmlnaHRJY29uID8gXCJmbGV4XCIgOiBcImlubGluZS1ibG9ja1wifTtcbiAgICBnYXA6ICR7KHByb3BzKSA9PiBwcm9wcy5sZWZ0SWNvbiB8fCBwcm9wcy5yaWdodEljb24gPyBcIjZweFwiIDogXCJ1bnNldFwifTtcbiAgICBhbGlnbi1pdGVtczogJHsocHJvcHMpID0+IHByb3BzLmxlZnRJY29uIHx8IHByb3BzLnJpZ2h0SWNvbiA/IFwiY2VudGVyXCIgOiBcInVuc2V0XCJ9O1xuICAgIGp1c3RpZnktY29udGVudDogJHsocHJvcHMpID0+IHByb3BzLmxlZnRJY29uIHx8IHByb3BzLnJpZ2h0SWNvbiA/IFwic3BhY2UtYmV0d2VlblwiIDogXCJ1bnNldFwifTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkeyhwcm9wcykgPT4gcHJvcHMuYXBwZWFyYW5jZSA9PT0gXCJmbGF0XCIgPyBcInRyYW5zcGFyZW50XCIgOiBwcm9wcy5hcHBlYXJhbmNlID09PSBcInNlY29uZGFyeVwiID8gcHJvcHMudGhlbWUuY29sb3JzLmJhY2tncm91bmQudGludCA6IHJnYmEocHJvcHMudGhlbWUuY29sb3JzLmFjY2VudCwgMC4xMil9O1xuICAgIGNvbG9yOiAkeyhwcm9wcykgPT4gcHJvcHMuYXBwZWFyYW5jZSA9PT0gXCJzZWNvbmRhcnlcIiA/IHByb3BzLnRoZW1lLmNvbG9ycy50ZXh0LnByaW1hcnkgOiBwcm9wcy50aGVtZS5jb2xvcnMuYWNjZW50fTtcblxuICAgIHBhZGRpbmc6ICR7KHByb3BzKSA9PiBwcm9wcy5hcHBlYXJhbmNlID09PSBcImZsYXRcIiA/IFwiMFwiIDogXCI5cHggMTZweFwifTtcbiAgICBwYWRkaW5nLWxlZnQ6ICR7KHByb3BzKSA9PiBwcm9wcy5sZWZ0SWNvbiAmJiBwcm9wcy5hcHBlYXJhbmNlICE9PSBcImZsYXRcIiA/IFwiMTJweFwiIDogXCIxNnB4XCJ9O1xuICAgIHBhZGRpbmctcmlnaHQ6ICR7KHByb3BzKSA9PiBwcm9wcy5yaWdodEljb24gJiYgcHJvcHMuYXBwZWFyYW5jZSAhPT0gXCJmbGF0XCIgPyBcIjEycHhcIiA6IFwiMTZweFwifTtcbiAgICBib3JkZXI6IG5vbmU7XG4gICAgYm9yZGVyLXJhZGl1czogJHsocHJvcHMpID0+IGJvcmRlcnMkNVtwcm9wcy50aGVtZS5ib3JkZXJSYWRpdXNdfTtcbiAgICBjdXJzb3I6ICR7KHByb3BzKSA9PiBwcm9wcy5kaXNhYmxlZCA/IFwibm90LWFsbG93ZWRcIiA6IFwicG9pbnRlclwifTtcblxuICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgICBmb250LXdlaWdodDogNTEwO1xuICAgIGxpbmUtaGVpZ2h0OiAxOHB4O1xuXG4gICAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDAuMTI1cyBlYXNlLWluLW91dDtcblxuICAgICR7bWVkaWFOb3RUb3VjaH0ge1xuICAgICAgICAmOmhvdmVyIHtcbiAgICAgICAgICAgIHRyYW5zZm9ybTogJHsocHJvcHMpID0+IHByb3BzLmRpc2FibGVkID8gXCJ1bnNldFwiIDogYHNjYWxlKCR7MSArIHNjYWxlVmFsdWVzW3Byb3BzLnNjYWxlXX0pYH07XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAmOmFjdGl2ZSB7XG4gICAgICAgIHRyYW5zZm9ybTogJHsocHJvcHMpID0+IHByb3BzLmRpc2FibGVkID8gXCJ1bnNldFwiIDogYHNjYWxlKCR7MSAtIHNjYWxlVmFsdWVzW3Byb3BzLnNjYWxlXX0pYH07XG4gICAgfVxuXG4gICAgJHttZWRpYVRvdWNofSB7XG4gICAgICAgICY6YWN0aXZlIHtcbiAgICAgICAgICAgIHRyYW5zZm9ybTogJHsocHJvcHMpID0+IHByb3BzLmRpc2FibGVkID8gXCJ1bnNldFwiIDogYHNjYWxlKCR7MSAtIHNjYWxlVmFsdWVzW3Byb3BzLnNjYWxlXSAqIDJ9KWB9O1xuICAgICAgICB9XG4gICAgfVxuYDtcbmZ1bmN0aW9uIHVzZURhdGFBdHRyaWJ1dGVzKHByb3BzKSB7XG4gIGNvbnN0IGtleXMgPSB1bnRyYWNrKCgpID0+IE9iamVjdC5rZXlzKHByb3BzKS5maWx0ZXIoKGtleSkgPT4ga2V5LnN0YXJ0c1dpdGgoXCJkYXRhLVwiKSkpO1xuICBjb25zdCBbZGF0YUF0dHJzXSA9IHNwbGl0UHJvcHMocHJvcHMsIGtleXMpO1xuICByZXR1cm4gZGF0YUF0dHJzO1xufVxuY29uc3QgQnV0dG9uID0gKHByb3BzKSA9PiB7XG4gIGNvbnN0IGRhdGFBdHRycyA9IHVzZURhdGFBdHRyaWJ1dGVzKHByb3BzKTtcbiAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChCdXR0b25TdHlsZWQkMSwgbWVyZ2VQcm9wcyh7XG4gICAgZ2V0IGFwcGVhcmFuY2UoKSB7XG4gICAgICByZXR1cm4gcHJvcHMuYXBwZWFyYW5jZSB8fCBcInByaW1hcnlcIjtcbiAgICB9LFxuICAgIGdldCBbXCJjbGFzc1wiXSgpIHtcbiAgICAgIHJldHVybiBwcm9wcy5jbGFzcztcbiAgICB9LFxuICAgIG9uQ2xpY2s6IChlMikgPT4ge1xuICAgICAgdmFyIF9hMjtcbiAgICAgIHJldHVybiAoX2EyID0gcHJvcHMub25DbGljaykgPT0gbnVsbCA/IHZvaWQgMCA6IF9hMi5jYWxsKHByb3BzLCBlMik7XG4gICAgfSxcbiAgICBvbk1vdXNlRW50ZXI6IChlMikgPT4ge1xuICAgICAgdmFyIF9hMjtcbiAgICAgIHJldHVybiAoX2EyID0gcHJvcHMub25Nb3VzZUVudGVyKSA9PSBudWxsID8gdm9pZCAwIDogX2EyLmNhbGwocHJvcHMsIGUyKTtcbiAgICB9LFxuICAgIG9uTW91c2VMZWF2ZTogKGUyKSA9PiB7XG4gICAgICB2YXIgX2EyO1xuICAgICAgcmV0dXJuIChfYTIgPSBwcm9wcy5vbk1vdXNlTGVhdmUpID09IG51bGwgPyB2b2lkIDAgOiBfYTIuY2FsbChwcm9wcywgZTIpO1xuICAgIH0sXG4gICAgcmVmKHIkKSB7XG4gICAgICBjb25zdCBfcmVmJCA9IHByb3BzLnJlZjtcbiAgICAgIHR5cGVvZiBfcmVmJCA9PT0gXCJmdW5jdGlvblwiID8gX3JlZiQociQpIDogcHJvcHMucmVmID0gciQ7XG4gICAgfSxcbiAgICBnZXQgZGlzYWJsZWQoKSB7XG4gICAgICByZXR1cm4gcHJvcHMuZGlzYWJsZWQ7XG4gICAgfSxcbiAgICBnZXQgc2NhbGUoKSB7XG4gICAgICByZXR1cm4gcHJvcHMuc2NhbGUgfHwgXCJtXCI7XG4gICAgfSxcbiAgICBnZXQgbGVmdEljb24oKSB7XG4gICAgICByZXR1cm4gISFwcm9wcy5sZWZ0SWNvbjtcbiAgICB9LFxuICAgIGdldCByaWdodEljb24oKSB7XG4gICAgICByZXR1cm4gISFwcm9wcy5yaWdodEljb247XG4gICAgfSxcbiAgICBcImRhdGEtdGMtYnV0dG9uXCI6IFwidHJ1ZVwiXG4gIH0sIGRhdGFBdHRycywge1xuICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgIHJldHVybiBbY3JlYXRlTWVtbygoKSA9PiBwcm9wcy5sZWZ0SWNvbiksIGNyZWF0ZU1lbW8oKCkgPT4gcHJvcHMuY2hpbGRyZW4pLCBjcmVhdGVNZW1vKCgpID0+IHByb3BzLnJpZ2h0SWNvbildO1xuICAgIH1cbiAgfSkpO1xufTtcbmZ1bmN0aW9uIG5leHRGcmFtZShmbikge1xuICByZXF1ZXN0QW5pbWF0aW9uRnJhbWUoKCkgPT4ge1xuICAgIHJlcXVlc3RBbmltYXRpb25GcmFtZShmbik7XG4gIH0pO1xufVxuY29uc3QgVHJhbnNpdGlvbiA9IChwcm9wcykgPT4ge1xuICBsZXQgZWw7XG4gIGxldCBmaXJzdCA9IHRydWU7XG4gIGNvbnN0IFtzMSwgc2V0MV0gPSBjcmVhdGVTaWduYWwoKTtcbiAgY29uc3QgW3MyLCBzZXQyXSA9IGNyZWF0ZVNpZ25hbCgpO1xuICBjb25zdCByZXNvbHZlZCA9IGNoaWxkcmVuKCgpID0+IHByb3BzLmNoaWxkcmVuKTtcbiAgY29uc3Qge1xuICAgIG9uQmVmb3JlRW50ZXIsXG4gICAgb25FbnRlcixcbiAgICBvbkFmdGVyRW50ZXIsXG4gICAgb25CZWZvcmVFeGl0LFxuICAgIG9uRXhpdCxcbiAgICBvbkFmdGVyRXhpdFxuICB9ID0gcHJvcHM7XG4gIGNvbnN0IGNsYXNzbmFtZXMgPSBjcmVhdGVNZW1vKCgpID0+IHtcbiAgICBjb25zdCBuYW1lID0gcHJvcHMubmFtZSB8fCBcInNcIjtcbiAgICByZXR1cm4ge1xuICAgICAgZW50ZXJBY3RpdmVDbGFzczogcHJvcHMuZW50ZXJBY3RpdmVDbGFzcyB8fCBuYW1lICsgXCItZW50ZXItYWN0aXZlXCIsXG4gICAgICBlbnRlckNsYXNzOiBwcm9wcy5lbnRlckNsYXNzIHx8IG5hbWUgKyBcIi1lbnRlclwiLFxuICAgICAgZW50ZXJUb0NsYXNzOiBwcm9wcy5lbnRlclRvQ2xhc3MgfHwgbmFtZSArIFwiLWVudGVyLXRvXCIsXG4gICAgICBleGl0QWN0aXZlQ2xhc3M6IHByb3BzLmV4aXRBY3RpdmVDbGFzcyB8fCBuYW1lICsgXCItZXhpdC1hY3RpdmVcIixcbiAgICAgIGV4aXRDbGFzczogcHJvcHMuZXhpdENsYXNzIHx8IG5hbWUgKyBcIi1leGl0XCIsXG4gICAgICBleGl0VG9DbGFzczogcHJvcHMuZXhpdFRvQ2xhc3MgfHwgbmFtZSArIFwiLWV4aXQtdG9cIlxuICAgIH07XG4gIH0pO1xuICBmdW5jdGlvbiBlbnRlclRyYW5zaXRpb24oZWwyLCBwcmV2KSB7XG4gICAgaWYgKCFmaXJzdCB8fCBwcm9wcy5hcHBlYXIpIHtcbiAgICAgIGxldCBlbmRUcmFuc2l0aW9uID0gZnVuY3Rpb24oZTIpIHtcbiAgICAgICAgaWYgKGVsMiAmJiAoIWUyIHx8IGUyLnRhcmdldCA9PT0gZWwyKSkge1xuICAgICAgICAgIGVsMi5yZW1vdmVFdmVudExpc3RlbmVyKFwidHJhbnNpdGlvbmVuZFwiLCBlbmRUcmFuc2l0aW9uKTtcbiAgICAgICAgICBlbDIucmVtb3ZlRXZlbnRMaXN0ZW5lcihcImFuaW1hdGlvbmVuZFwiLCBlbmRUcmFuc2l0aW9uKTtcbiAgICAgICAgICBlbDIuY2xhc3NMaXN0LnJlbW92ZSguLi5lbnRlckFjdGl2ZUNsYXNzZXMpO1xuICAgICAgICAgIGVsMi5jbGFzc0xpc3QucmVtb3ZlKC4uLmVudGVyVG9DbGFzc2VzKTtcbiAgICAgICAgICBiYXRjaCgoKSA9PiB7XG4gICAgICAgICAgICBzMSgpICE9PSBlbDIgJiYgc2V0MShlbDIpO1xuICAgICAgICAgICAgczIoKSA9PT0gZWwyICYmIHNldDIodm9pZCAwKTtcbiAgICAgICAgICB9KTtcbiAgICAgICAgICBvbkFmdGVyRW50ZXIgJiYgb25BZnRlckVudGVyKGVsMik7XG4gICAgICAgICAgaWYgKHByb3BzLm1vZGUgPT09IFwiaW5vdXRcIilcbiAgICAgICAgICAgIGV4aXRUcmFuc2l0aW9uKGVsMiwgcHJldik7XG4gICAgICAgIH1cbiAgICAgIH07XG4gICAgICBjb25zdCBlbnRlckNsYXNzZXMgPSBjbGFzc25hbWVzKCkuZW50ZXJDbGFzcy5zcGxpdChcIiBcIik7XG4gICAgICBjb25zdCBlbnRlckFjdGl2ZUNsYXNzZXMgPSBjbGFzc25hbWVzKCkuZW50ZXJBY3RpdmVDbGFzcy5zcGxpdChcIiBcIik7XG4gICAgICBjb25zdCBlbnRlclRvQ2xhc3NlcyA9IGNsYXNzbmFtZXMoKS5lbnRlclRvQ2xhc3Muc3BsaXQoXCIgXCIpO1xuICAgICAgb25CZWZvcmVFbnRlciAmJiBvbkJlZm9yZUVudGVyKGVsMik7XG4gICAgICBlbDIuY2xhc3NMaXN0LmFkZCguLi5lbnRlckNsYXNzZXMpO1xuICAgICAgZWwyLmNsYXNzTGlzdC5hZGQoLi4uZW50ZXJBY3RpdmVDbGFzc2VzKTtcbiAgICAgIG5leHRGcmFtZSgoKSA9PiB7XG4gICAgICAgIGVsMi5jbGFzc0xpc3QucmVtb3ZlKC4uLmVudGVyQ2xhc3Nlcyk7XG4gICAgICAgIGVsMi5jbGFzc0xpc3QuYWRkKC4uLmVudGVyVG9DbGFzc2VzKTtcbiAgICAgICAgb25FbnRlciAmJiBvbkVudGVyKGVsMiwgKCkgPT4gZW5kVHJhbnNpdGlvbigpKTtcbiAgICAgICAgaWYgKCFvbkVudGVyIHx8IG9uRW50ZXIubGVuZ3RoIDwgMikge1xuICAgICAgICAgIGVsMi5hZGRFdmVudExpc3RlbmVyKFwidHJhbnNpdGlvbmVuZFwiLCBlbmRUcmFuc2l0aW9uKTtcbiAgICAgICAgICBlbDIuYWRkRXZlbnRMaXN0ZW5lcihcImFuaW1hdGlvbmVuZFwiLCBlbmRUcmFuc2l0aW9uKTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfVxuICAgIHByZXYgJiYgIXByb3BzLm1vZGUgPyBzZXQyKGVsMikgOiBzZXQxKGVsMik7XG4gIH1cbiAgZnVuY3Rpb24gZXhpdFRyYW5zaXRpb24oZWwyLCBwcmV2KSB7XG4gICAgY29uc3QgZXhpdENsYXNzZXMgPSBjbGFzc25hbWVzKCkuZXhpdENsYXNzLnNwbGl0KFwiIFwiKTtcbiAgICBjb25zdCBleGl0QWN0aXZlQ2xhc3NlcyA9IGNsYXNzbmFtZXMoKS5leGl0QWN0aXZlQ2xhc3Muc3BsaXQoXCIgXCIpO1xuICAgIGNvbnN0IGV4aXRUb0NsYXNzZXMgPSBjbGFzc25hbWVzKCkuZXhpdFRvQ2xhc3Muc3BsaXQoXCIgXCIpO1xuICAgIGlmICghcHJldi5wYXJlbnROb2RlKVxuICAgICAgcmV0dXJuIGVuZFRyYW5zaXRpb24oKTtcbiAgICBvbkJlZm9yZUV4aXQgJiYgb25CZWZvcmVFeGl0KHByZXYpO1xuICAgIHByZXYuY2xhc3NMaXN0LmFkZCguLi5leGl0Q2xhc3Nlcyk7XG4gICAgcHJldi5jbGFzc0xpc3QuYWRkKC4uLmV4aXRBY3RpdmVDbGFzc2VzKTtcbiAgICBuZXh0RnJhbWUoKCkgPT4ge1xuICAgICAgcHJldi5jbGFzc0xpc3QucmVtb3ZlKC4uLmV4aXRDbGFzc2VzKTtcbiAgICAgIHByZXYuY2xhc3NMaXN0LmFkZCguLi5leGl0VG9DbGFzc2VzKTtcbiAgICB9KTtcbiAgICBvbkV4aXQgJiYgb25FeGl0KHByZXYsICgpID0+IGVuZFRyYW5zaXRpb24oKSk7XG4gICAgaWYgKCFvbkV4aXQgfHwgb25FeGl0Lmxlbmd0aCA8IDIpIHtcbiAgICAgIHByZXYuYWRkRXZlbnRMaXN0ZW5lcihcInRyYW5zaXRpb25lbmRcIiwgZW5kVHJhbnNpdGlvbik7XG4gICAgICBwcmV2LmFkZEV2ZW50TGlzdGVuZXIoXCJhbmltYXRpb25lbmRcIiwgZW5kVHJhbnNpdGlvbik7XG4gICAgfVxuICAgIGZ1bmN0aW9uIGVuZFRyYW5zaXRpb24oZTIpIHtcbiAgICAgIGlmICghZTIgfHwgZTIudGFyZ2V0ID09PSBwcmV2KSB7XG4gICAgICAgIHByZXYucmVtb3ZlRXZlbnRMaXN0ZW5lcihcInRyYW5zaXRpb25lbmRcIiwgZW5kVHJhbnNpdGlvbik7XG4gICAgICAgIHByZXYucmVtb3ZlRXZlbnRMaXN0ZW5lcihcImFuaW1hdGlvbmVuZFwiLCBlbmRUcmFuc2l0aW9uKTtcbiAgICAgICAgcHJldi5jbGFzc0xpc3QucmVtb3ZlKC4uLmV4aXRBY3RpdmVDbGFzc2VzKTtcbiAgICAgICAgcHJldi5jbGFzc0xpc3QucmVtb3ZlKC4uLmV4aXRUb0NsYXNzZXMpO1xuICAgICAgICBzMSgpID09PSBwcmV2ICYmIHNldDEodm9pZCAwKTtcbiAgICAgICAgb25BZnRlckV4aXQgJiYgb25BZnRlckV4aXQocHJldik7XG4gICAgICAgIGlmIChwcm9wcy5tb2RlID09PSBcIm91dGluXCIpXG4gICAgICAgICAgZW50ZXJUcmFuc2l0aW9uKGVsMiwgcHJldik7XG4gICAgICB9XG4gICAgfVxuICB9XG4gIGNyZWF0ZUNvbXB1dGVkKChwcmV2KSA9PiB7XG4gICAgZWwgPSByZXNvbHZlZCgpO1xuICAgIHdoaWxlICh0eXBlb2YgZWwgPT09IFwiZnVuY3Rpb25cIilcbiAgICAgIGVsID0gZWwoKTtcbiAgICByZXR1cm4gdW50cmFjaygoKSA9PiB7XG4gICAgICBpZiAoZWwgJiYgZWwgIT09IHByZXYpIHtcbiAgICAgICAgaWYgKHByb3BzLm1vZGUgIT09IFwib3V0aW5cIilcbiAgICAgICAgICBlbnRlclRyYW5zaXRpb24oZWwsIHByZXYpO1xuICAgICAgICBlbHNlIGlmIChmaXJzdClcbiAgICAgICAgICBzZXQxKGVsKTtcbiAgICAgIH1cbiAgICAgIGlmIChwcmV2ICYmIHByZXYgIT09IGVsICYmIHByb3BzLm1vZGUgIT09IFwiaW5vdXRcIilcbiAgICAgICAgZXhpdFRyYW5zaXRpb24oZWwsIHByZXYpO1xuICAgICAgZmlyc3QgPSBmYWxzZTtcbiAgICAgIHJldHVybiBlbDtcbiAgICB9KTtcbiAgfSk7XG4gIHJldHVybiBbczEsIHMyXTtcbn07XG5mdW5jdGlvbiBnZXRSZWN0KGVsZW1lbnQpIHtcbiAgY29uc3Qge1xuICAgIHRvcCxcbiAgICBib3R0b20sXG4gICAgbGVmdCxcbiAgICByaWdodCxcbiAgICB3aWR0aCxcbiAgICBoZWlnaHRcbiAgfSA9IGVsZW1lbnQuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XG4gIGNvbnN0IHBhcmVudFJlY3QgPSBlbGVtZW50LnBhcmVudE5vZGUuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XG4gIHJldHVybiB7XG4gICAgdG9wOiB0b3AgLSBwYXJlbnRSZWN0LnRvcCxcbiAgICBib3R0b20sXG4gICAgbGVmdDogbGVmdCAtIHBhcmVudFJlY3QubGVmdCxcbiAgICByaWdodCxcbiAgICB3aWR0aCxcbiAgICBoZWlnaHRcbiAgfTtcbn1cbmNvbnN0IFRyYW5zaXRpb25Hcm91cCA9IChwcm9wcykgPT4ge1xuICBjb25zdCByZXNvbHZlZCA9IGNoaWxkcmVuKCgpID0+IHByb3BzLmNoaWxkcmVuKTtcbiAgY29uc3QgY2xhc3NuYW1lcyA9IGNyZWF0ZU1lbW8oKCkgPT4ge1xuICAgIGNvbnN0IG5hbWUgPSBwcm9wcy5uYW1lIHx8IFwic1wiO1xuICAgIHJldHVybiB7XG4gICAgICBlbnRlckFjdGl2ZUNsYXNzOiBwcm9wcy5lbnRlckFjdGl2ZUNsYXNzIHx8IG5hbWUgKyBcIi1lbnRlci1hY3RpdmVcIixcbiAgICAgIGVudGVyQ2xhc3M6IHByb3BzLmVudGVyQ2xhc3MgfHwgbmFtZSArIFwiLWVudGVyXCIsXG4gICAgICBlbnRlclRvQ2xhc3M6IHByb3BzLmVudGVyVG9DbGFzcyB8fCBuYW1lICsgXCItZW50ZXItdG9cIixcbiAgICAgIGV4aXRBY3RpdmVDbGFzczogcHJvcHMuZXhpdEFjdGl2ZUNsYXNzIHx8IG5hbWUgKyBcIi1leGl0LWFjdGl2ZVwiLFxuICAgICAgZXhpdENsYXNzOiBwcm9wcy5leGl0Q2xhc3MgfHwgbmFtZSArIFwiLWV4aXRcIixcbiAgICAgIGV4aXRUb0NsYXNzOiBwcm9wcy5leGl0VG9DbGFzcyB8fCBuYW1lICsgXCItZXhpdC10b1wiLFxuICAgICAgbW92ZUNsYXNzOiBwcm9wcy5tb3ZlQ2xhc3MgfHwgbmFtZSArIFwiLW1vdmVcIlxuICAgIH07XG4gIH0pO1xuICBjb25zdCB7XG4gICAgb25CZWZvcmVFbnRlcixcbiAgICBvbkVudGVyLFxuICAgIG9uQWZ0ZXJFbnRlcixcbiAgICBvbkJlZm9yZUV4aXQsXG4gICAgb25FeGl0LFxuICAgIG9uQWZ0ZXJFeGl0XG4gIH0gPSBwcm9wcztcbiAgY29uc3QgW2NvbWJpbmVkLCBzZXRDb21iaW5lZF0gPSBjcmVhdGVTaWduYWwoKTtcbiAgbGV0IHAyID0gW107XG4gIGxldCBmaXJzdCA9IHRydWU7XG4gIGNyZWF0ZUNvbXB1dGVkKCgpID0+IHtcbiAgICBjb25zdCBjMiA9IHJlc29sdmVkKCk7XG4gICAgY29uc3QgY29tYiA9IFsuLi5jMl07XG4gICAgY29uc3QgbmV4dCA9IG5ldyBTZXQoYzIpO1xuICAgIGNvbnN0IHByZXYgPSBuZXcgU2V0KHAyKTtcbiAgICBjb25zdCBlbnRlckNsYXNzZXMgPSBjbGFzc25hbWVzKCkuZW50ZXJDbGFzcy5zcGxpdChcIiBcIik7XG4gICAgY29uc3QgZW50ZXJBY3RpdmVDbGFzc2VzID0gY2xhc3NuYW1lcygpLmVudGVyQWN0aXZlQ2xhc3Muc3BsaXQoXCIgXCIpO1xuICAgIGNvbnN0IGVudGVyVG9DbGFzc2VzID0gY2xhc3NuYW1lcygpLmVudGVyVG9DbGFzcy5zcGxpdChcIiBcIik7XG4gICAgY29uc3QgZXhpdENsYXNzZXMgPSBjbGFzc25hbWVzKCkuZXhpdENsYXNzLnNwbGl0KFwiIFwiKTtcbiAgICBjb25zdCBleGl0QWN0aXZlQ2xhc3NlcyA9IGNsYXNzbmFtZXMoKS5leGl0QWN0aXZlQ2xhc3Muc3BsaXQoXCIgXCIpO1xuICAgIGNvbnN0IGV4aXRUb0NsYXNzZXMgPSBjbGFzc25hbWVzKCkuZXhpdFRvQ2xhc3Muc3BsaXQoXCIgXCIpO1xuICAgIGZvciAobGV0IGkyID0gMDsgaTIgPCBjMi5sZW5ndGg7IGkyKyspIHtcbiAgICAgIGNvbnN0IGVsID0gYzJbaTJdO1xuICAgICAgaWYgKCFmaXJzdCAmJiAhcHJldi5oYXMoZWwpKSB7XG4gICAgICAgIGxldCBlbmRUcmFuc2l0aW9uID0gZnVuY3Rpb24oZTIpIHtcbiAgICAgICAgICBpZiAoZWwgJiYgKCFlMiB8fCBlMi50YXJnZXQgPT09IGVsKSkge1xuICAgICAgICAgICAgZWwucmVtb3ZlRXZlbnRMaXN0ZW5lcihcInRyYW5zaXRpb25lbmRcIiwgZW5kVHJhbnNpdGlvbik7XG4gICAgICAgICAgICBlbC5yZW1vdmVFdmVudExpc3RlbmVyKFwiYW5pbWF0aW9uZW5kXCIsIGVuZFRyYW5zaXRpb24pO1xuICAgICAgICAgICAgZWwuY2xhc3NMaXN0LnJlbW92ZSguLi5lbnRlckFjdGl2ZUNsYXNzZXMpO1xuICAgICAgICAgICAgZWwuY2xhc3NMaXN0LnJlbW92ZSguLi5lbnRlclRvQ2xhc3Nlcyk7XG4gICAgICAgICAgICBvbkFmdGVyRW50ZXIgJiYgb25BZnRlckVudGVyKGVsKTtcbiAgICAgICAgICB9XG4gICAgICAgIH07XG4gICAgICAgIG9uQmVmb3JlRW50ZXIgJiYgb25CZWZvcmVFbnRlcihlbCk7XG4gICAgICAgIGVsLmNsYXNzTGlzdC5hZGQoLi4uZW50ZXJDbGFzc2VzKTtcbiAgICAgICAgZWwuY2xhc3NMaXN0LmFkZCguLi5lbnRlckFjdGl2ZUNsYXNzZXMpO1xuICAgICAgICBuZXh0RnJhbWUoKCkgPT4ge1xuICAgICAgICAgIGVsLmNsYXNzTGlzdC5yZW1vdmUoLi4uZW50ZXJDbGFzc2VzKTtcbiAgICAgICAgICBlbC5jbGFzc0xpc3QuYWRkKC4uLmVudGVyVG9DbGFzc2VzKTtcbiAgICAgICAgICBvbkVudGVyICYmIG9uRW50ZXIoZWwsICgpID0+IGVuZFRyYW5zaXRpb24oKSk7XG4gICAgICAgICAgaWYgKCFvbkVudGVyIHx8IG9uRW50ZXIubGVuZ3RoIDwgMikge1xuICAgICAgICAgICAgZWwuYWRkRXZlbnRMaXN0ZW5lcihcInRyYW5zaXRpb25lbmRcIiwgZW5kVHJhbnNpdGlvbik7XG4gICAgICAgICAgICBlbC5hZGRFdmVudExpc3RlbmVyKFwiYW5pbWF0aW9uZW5kXCIsIGVuZFRyYW5zaXRpb24pO1xuICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgfVxuICAgIGZvciAobGV0IGkyID0gMDsgaTIgPCBwMi5sZW5ndGg7IGkyKyspIHtcbiAgICAgIGNvbnN0IG9sZCA9IHAyW2kyXTtcbiAgICAgIGlmICghbmV4dC5oYXMob2xkKSAmJiBvbGQucGFyZW50Tm9kZSkge1xuICAgICAgICBsZXQgZW5kVHJhbnNpdGlvbiA9IGZ1bmN0aW9uKGUyKSB7XG4gICAgICAgICAgaWYgKCFlMiB8fCBlMi50YXJnZXQgPT09IG9sZCkge1xuICAgICAgICAgICAgb2xkLnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJ0cmFuc2l0aW9uZW5kXCIsIGVuZFRyYW5zaXRpb24pO1xuICAgICAgICAgICAgb2xkLnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJhbmltYXRpb25lbmRcIiwgZW5kVHJhbnNpdGlvbik7XG4gICAgICAgICAgICBvbGQuY2xhc3NMaXN0LnJlbW92ZSguLi5leGl0QWN0aXZlQ2xhc3Nlcyk7XG4gICAgICAgICAgICBvbGQuY2xhc3NMaXN0LnJlbW92ZSguLi5leGl0VG9DbGFzc2VzKTtcbiAgICAgICAgICAgIG9uQWZ0ZXJFeGl0ICYmIG9uQWZ0ZXJFeGl0KG9sZCk7XG4gICAgICAgICAgICBwMiA9IHAyLmZpbHRlcigoaTMpID0+IGkzICE9PSBvbGQpO1xuICAgICAgICAgICAgc2V0Q29tYmluZWQocDIpO1xuICAgICAgICAgIH1cbiAgICAgICAgfTtcbiAgICAgICAgY29tYi5zcGxpY2UoaTIsIDAsIG9sZCk7XG4gICAgICAgIG9uQmVmb3JlRXhpdCAmJiBvbkJlZm9yZUV4aXQob2xkKTtcbiAgICAgICAgb2xkLmNsYXNzTGlzdC5hZGQoLi4uZXhpdENsYXNzZXMpO1xuICAgICAgICBvbGQuY2xhc3NMaXN0LmFkZCguLi5leGl0QWN0aXZlQ2xhc3Nlcyk7XG4gICAgICAgIG5leHRGcmFtZSgoKSA9PiB7XG4gICAgICAgICAgb2xkLmNsYXNzTGlzdC5yZW1vdmUoLi4uZXhpdENsYXNzZXMpO1xuICAgICAgICAgIG9sZC5jbGFzc0xpc3QuYWRkKC4uLmV4aXRUb0NsYXNzZXMpO1xuICAgICAgICB9KTtcbiAgICAgICAgb25FeGl0ICYmIG9uRXhpdChvbGQsICgpID0+IGVuZFRyYW5zaXRpb24oKSk7XG4gICAgICAgIGlmICghb25FeGl0IHx8IG9uRXhpdC5sZW5ndGggPCAyKSB7XG4gICAgICAgICAgb2xkLmFkZEV2ZW50TGlzdGVuZXIoXCJ0cmFuc2l0aW9uZW5kXCIsIGVuZFRyYW5zaXRpb24pO1xuICAgICAgICAgIG9sZC5hZGRFdmVudExpc3RlbmVyKFwiYW5pbWF0aW9uZW5kXCIsIGVuZFRyYW5zaXRpb24pO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICAgIHAyID0gY29tYjtcbiAgICBzZXRDb21iaW5lZChjb21iKTtcbiAgfSk7XG4gIGNyZWF0ZUVmZmVjdCgobm9kZXMpID0+IHtcbiAgICBjb25zdCBjMiA9IGNvbWJpbmVkKCk7XG4gICAgYzIuZm9yRWFjaCgoY2hpbGQpID0+IHtcbiAgICAgIGxldCBuMjtcbiAgICAgIGlmICghKG4yID0gbm9kZXMuZ2V0KGNoaWxkKSkpIHtcbiAgICAgICAgbm9kZXMuc2V0KGNoaWxkLCBuMiA9IHtcbiAgICAgICAgICBwb3M6IGdldFJlY3QoY2hpbGQpLFxuICAgICAgICAgIG5ldzogIWZpcnN0XG4gICAgICAgIH0pO1xuICAgICAgfSBlbHNlIGlmIChuMi5uZXcpIHtcbiAgICAgICAgbjIubmV3ID0gZmFsc2U7XG4gICAgICAgIG4yLm5ld1BvcyA9IGdldFJlY3QoY2hpbGQpO1xuICAgICAgfVxuICAgICAgaWYgKG4yLm5ldykge1xuICAgICAgICBjaGlsZC5hZGRFdmVudExpc3RlbmVyKFwidHJhbnNpdGlvbmVuZFwiLCAoKSA9PiB7XG4gICAgICAgICAgbjIubmV3ID0gZmFsc2U7XG4gICAgICAgICAgY2hpbGQucGFyZW50Tm9kZSAmJiAobjIubmV3UG9zID0gZ2V0UmVjdChjaGlsZCkpO1xuICAgICAgICB9LCB7XG4gICAgICAgICAgb25jZTogdHJ1ZVxuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICAgIG4yLm5ld1BvcyAmJiAobjIucG9zID0gbjIubmV3UG9zKTtcbiAgICAgIG4yLm5ld1BvcyA9IGdldFJlY3QoY2hpbGQpO1xuICAgIH0pO1xuICAgIGlmIChmaXJzdCkge1xuICAgICAgZmlyc3QgPSBmYWxzZTtcbiAgICAgIHJldHVybiBub2RlcztcbiAgICB9XG4gICAgYzIuZm9yRWFjaCgoY2hpbGQpID0+IHtcbiAgICAgIGNvbnN0IGMzID0gbm9kZXMuZ2V0KGNoaWxkKTtcbiAgICAgIGNvbnN0IG9sZFBvcyA9IGMzLnBvcztcbiAgICAgIGNvbnN0IG5ld1BvcyA9IGMzLm5ld1BvcztcbiAgICAgIGNvbnN0IGR4ID0gb2xkUG9zLmxlZnQgLSBuZXdQb3MubGVmdDtcbiAgICAgIGNvbnN0IGR5ID0gb2xkUG9zLnRvcCAtIG5ld1Bvcy50b3A7XG4gICAgICBpZiAoZHggfHwgZHkpIHtcbiAgICAgICAgYzMubW92ZWQgPSB0cnVlO1xuICAgICAgICBjb25zdCBzMiA9IGNoaWxkLnN0eWxlO1xuICAgICAgICBzMi50cmFuc2Zvcm0gPSBgdHJhbnNsYXRlKCR7ZHh9cHgsJHtkeX1weClgO1xuICAgICAgICBzMi50cmFuc2l0aW9uRHVyYXRpb24gPSBcIjBzXCI7XG4gICAgICB9XG4gICAgfSk7XG4gICAgZG9jdW1lbnQuYm9keS5vZmZzZXRIZWlnaHQ7XG4gICAgYzIuZm9yRWFjaCgoY2hpbGQpID0+IHtcbiAgICAgIGNvbnN0IGMzID0gbm9kZXMuZ2V0KGNoaWxkKTtcbiAgICAgIGlmIChjMy5tb3ZlZCkge1xuICAgICAgICBsZXQgZW5kVHJhbnNpdGlvbiA9IGZ1bmN0aW9uKGUyKSB7XG4gICAgICAgICAgaWYgKGUyICYmIGUyLnRhcmdldCAhPT0gY2hpbGQgfHwgIWNoaWxkLnBhcmVudE5vZGUpXG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgaWYgKCFlMiB8fCAvdHJhbnNmb3JtJC8udGVzdChlMi5wcm9wZXJ0eU5hbWUpKSB7XG4gICAgICAgICAgICBjaGlsZC5yZW1vdmVFdmVudExpc3RlbmVyKFwidHJhbnNpdGlvbmVuZFwiLCBlbmRUcmFuc2l0aW9uKTtcbiAgICAgICAgICAgIGNoaWxkLmNsYXNzTGlzdC5yZW1vdmUoLi4ubW92ZUNsYXNzZXMpO1xuICAgICAgICAgIH1cbiAgICAgICAgfTtcbiAgICAgICAgYzMubW92ZWQgPSBmYWxzZTtcbiAgICAgICAgY29uc3QgczIgPSBjaGlsZC5zdHlsZTtcbiAgICAgICAgY29uc3QgbW92ZUNsYXNzZXMgPSBjbGFzc25hbWVzKCkubW92ZUNsYXNzLnNwbGl0KFwiIFwiKTtcbiAgICAgICAgY2hpbGQuY2xhc3NMaXN0LmFkZCguLi5tb3ZlQ2xhc3Nlcyk7XG4gICAgICAgIHMyLnRyYW5zZm9ybSA9IHMyLnRyYW5zaXRpb25EdXJhdGlvbiA9IFwiXCI7XG4gICAgICAgIGNoaWxkLmFkZEV2ZW50TGlzdGVuZXIoXCJ0cmFuc2l0aW9uZW5kXCIsIGVuZFRyYW5zaXRpb24pO1xuICAgICAgfVxuICAgIH0pO1xuICAgIHJldHVybiBub2RlcztcbiAgfSwgLyogQF9fUFVSRV9fICovIG5ldyBNYXAoKSk7XG4gIHJldHVybiBjb21iaW5lZDtcbn07XG5mdW5jdGlvbiBjbGlja091dHNpZGUkMShlbCwgYWNjZXNzb3IpIHtcbiAgY29uc3Qgb25DbGljayA9IChlMikgPT4ge1xuICAgIHZhciBfYTI7XG4gICAgcmV0dXJuICFlbC5jb250YWlucyhlMi50YXJnZXQpICYmICgoX2EyID0gYWNjZXNzb3IoKSkgPT0gbnVsbCA/IHZvaWQgMCA6IF9hMigpKTtcbiAgfTtcbiAgZG9jdW1lbnQuYm9keS5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgb25DbGljayk7XG4gIG9uQ2xlYW51cCgoKSA9PiBkb2N1bWVudC5ib2R5LnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCBvbkNsaWNrKSk7XG59XG5mdW5jdGlvbiBlc2NQcmVzc2VkKF8sIGFjY2Vzc29yKSB7XG4gIGNvbnN0IG9uS2V5UHJlc3MgPSAoZTIpID0+IHtcbiAgICB2YXIgX2EyLCBfYjI7XG4gICAgaWYgKGUyLmtleSA9PT0gXCJFc2NhcGVcIikge1xuICAgICAgKF9hMiA9IGRvY3VtZW50LmFjdGl2ZUVsZW1lbnQpID09IG51bGwgPyB2b2lkIDAgOiBfYTIuYmx1cigpO1xuICAgICAgKF9iMiA9IGFjY2Vzc29yKCkpID09IG51bGwgPyB2b2lkIDAgOiBfYjIoKTtcbiAgICB9XG4gIH07XG4gIGRvY3VtZW50LmJvZHkuYWRkRXZlbnRMaXN0ZW5lcihcImtleWRvd25cIiwgb25LZXlQcmVzcyk7XG4gIG9uQ2xlYW51cCgoKSA9PiBkb2N1bWVudC5ib2R5LnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJrZXlkb3duXCIsIG9uS2V5UHJlc3MpKTtcbn1cbmZ1bmN0aW9uIGFuZHJvaWRCYWNrSGFuZGxlciQxKF8sIGNvbmZpZykge1xuICBjb25zdCB7XG4gICAgaXNFbmFibGVkLFxuICAgIG9uQ2xvc2VcbiAgfSA9IGNvbmZpZygpO1xuICBpZiAoIWlzRW5hYmxlZCkge1xuICAgIHJldHVybjtcbiAgfVxuICBjb25zdCB1c2VyT1NJc0FuZHJvaWQgPSBnZXRVc2VyQWdlbnQoKS5vcyA9PT0gXCJhbmRyb2lkXCI7XG4gIGlmICghdXNlck9TSXNBbmRyb2lkKSB7XG4gICAgcmV0dXJuO1xuICB9XG4gIHdpbmRvdy5oaXN0b3J5LnB1c2hTdGF0ZShST1VURV9TVEFURSwgXCJcIik7XG4gIGNvbnN0IHBvcHN0YXRlSGFuZGxlciA9IChldmVudCkgPT4ge1xuICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgb25DbG9zZSgpO1xuICB9O1xuICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihcInBvcHN0YXRlXCIsIHBvcHN0YXRlSGFuZGxlciwge1xuICAgIG9uY2U6IHRydWVcbiAgfSk7XG4gIG9uQ2xlYW51cCgoKSA9PiB7XG4gICAgd2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJwb3BzdGF0ZVwiLCBwb3BzdGF0ZUhhbmRsZXIpO1xuICAgIGNyZWF0ZU1hY3JvdGFzaygoKSA9PiB7XG4gICAgICB2YXIgX2EyO1xuICAgICAgaWYgKCgoX2EyID0gd2luZG93Lmhpc3Rvcnkuc3RhdGUpID09IG51bGwgPyB2b2lkIDAgOiBfYTJbUk9VVEVfU1RBVEVfS0VZXSkgPT09IHRydWUpIHtcbiAgICAgICAgd2luZG93Lmhpc3RvcnkuYmFjaygpO1xuICAgICAgfVxuICAgIH0pO1xuICB9KTtcbn1cbmNvbnN0IFJPVVRFX1NUQVRFX0tFWSA9IFwiYW5kcm9pZEJhY2tIYW5kbGVyXCI7XG5jb25zdCBST1VURV9TVEFURSA9IHtcbiAgW1JPVVRFX1NUQVRFX0tFWV06IHRydWVcbn07XG5jb25zdCBfdG1wbCQkdiA9IC8qIEBfX1BVUkVfXyAqLyB0ZW1wbGF0ZSQxKGA8c3ZnPjxwYXRoIGZpbGwtcnVsZT1cImV2ZW5vZGRcIiBjbGlwLXJ1bGU9XCJldmVub2RkXCIgZD1cIk0xMC4yMTIyIDE0LjM0MDdDMTAuNTM4NCAxNC4wODU0IDEwLjU5NTkgMTMuNjE0IDEwLjM0MDYgMTMuMjg3OEw2LjIwMjM3IDguMDAwMDNMMTAuMzQwNiAyLjcxMjI3QzEwLjU5NTkgMi4zODYwNyAxMC41Mzg0IDEuOTE0NjkgMTAuMjEyMiAxLjY1OTRDOS44ODYwNCAxLjQwNDEyIDkuNDE0NjUgMS40NjE2MSA5LjE1OTM3IDEuNzg3OEw0LjY1OTM3IDcuNTM3OEM0LjQ0Njg4IDcuODA5MzIgNC40NDY4OCA4LjE5MDc0IDQuNjU5MzcgOC40NjIyNkw5LjE1OTM3IDE0LjIxMjNDOS40MTQ2NSAxNC41Mzg1IDkuODg2MDQgMTQuNTk1OSAxMC4yMTIyIDE0LjM0MDdaXCI+PC9wYXRoPjwvc3ZnPmAsIDQsIHRydWUpO1xuY29uc3Qgcm90YXRpb25EZWdyZWVzID0ge1xuICBsZWZ0OiAwLFxuICB0b3A6IDkwLFxuICByaWdodDogMTgwLFxuICBib3R0b206IDI3MFxufTtcbmNvbnN0IEFycm93SWNvbiA9IChwcm9wcykgPT4ge1xuICBjb25zdCB0aGVtZSA9IHVzZVRoZW1lKCk7XG4gIGNvbnN0IGZpbGwgPSAoKSA9PiBwcm9wcy5maWxsIHx8IHRoZW1lLmNvbG9ycy5pY29uLnNlY29uZGFyeTtcbiAgY29uc3QgZGlyZWN0aW9uID0gKCkgPT4gcHJvcHMuZGlyZWN0aW9uIHx8IFwibGVmdFwiO1xuICBjb25zdCBTdmcgPSBzdHlsZWQoXCJzdmdcIilgXG4gICAgICAgIHRyYW5zZm9ybTogcm90YXRlKCR7KHByb3BzMikgPT4gcm90YXRpb25EZWdyZWVzW3Byb3BzMi5zdmdEaXJlY3Rpb25dfWRlZyk7XG4gICAgICAgIHRyYW5zaXRpb246IHRyYW5zZm9ybSAwLjFzIGVhc2UtaW4tb3V0O1xuICAgIGA7XG4gIHJldHVybiBjcmVhdGVDb21wb25lbnQoU3ZnLCB7XG4gICAgeG1sbnM6IFwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIixcbiAgICB3aWR0aDogXCIxNlwiLFxuICAgIGhlaWdodDogXCIxNlwiLFxuICAgIHZpZXdCb3g6IFwiMCAwIDE2IDE2XCIsXG4gICAgZmlsbDogXCJub25lXCIsXG4gICAgZ2V0IHN2Z0RpcmVjdGlvbigpIHtcbiAgICAgIHJldHVybiBkaXJlY3Rpb24oKTtcbiAgICB9LFxuICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgIGNvbnN0IF9lbCQgPSBfdG1wbCQkdi5jbG9uZU5vZGUodHJ1ZSk7XG4gICAgICBjcmVhdGVSZW5kZXJFZmZlY3QoKCkgPT4gc2V0QXR0cmlidXRlKF9lbCQsIFwiZmlsbFwiLCBmaWxsKCkpKTtcbiAgICAgIHJldHVybiBfZWwkO1xuICAgIH1cbiAgfSk7XG59O1xuY29uc3QgX3RtcGwkJHUgPSAvKiBAX19QVVJFX18gKi8gdGVtcGxhdGUkMShgPHN2ZyB4bWxucz1cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCIgd2lkdGg9XCIxNlwiIGhlaWdodD1cIjE2XCIgdmlld0JveD1cIjAgMCAxNiAxNlwiIGZpbGw9XCJub25lXCI+PHBhdGggZmlsbC1ydWxlPVwiZXZlbm9kZFwiIGNsaXAtcnVsZT1cImV2ZW5vZGRcIiBkPVwiTTIuNzE5NjYgMi43MTk2OEMzLjAxMjU1IDIuNDI2NzggMy40ODc0MyAyLjQyNjc3IDMuNzgwMzIgMi43MTk2Nkw4LjAwMDAyIDYuOTM5MjVMMTIuMjE5NyAyLjcxOTY3QzEyLjUxMjYgMi40MjY3NyAxMi45ODc0IDIuNDI2NzggMTMuMjgwMyAyLjcxOTY3QzEzLjU3MzIgMy4wMTI1NyAxMy41NzMyIDMuNDg3NDQgMTMuMjgwMyAzLjc4MDMzTDkuMDYwNjggNy45OTk5MUwxMy4yODAzIDEyLjIxOTdDMTMuNTczMiAxMi41MTI2IDEzLjU3MzIgMTIuOTg3NCAxMy4yODAzIDEzLjI4MDNDMTIuOTg3NCAxMy41NzMyIDEyLjUxMjYgMTMuNTczMiAxMi4yMTk3IDEzLjI4MDNMOC4wMDAwMiA5LjA2MDU3TDMuNzgwMzMgMTMuMjgwM0MzLjQ4NzQ0IDEzLjU3MzIgMy4wMTI1NyAxMy41NzMyIDIuNzE5NjcgMTMuMjgwM0MyLjQyNjc4IDEyLjk4NzQgMi40MjY3NyAxMi41MTI2IDIuNzE5NjcgMTIuMjE5N0w2LjkzOTM2IDcuOTk5OTFMMi43MTk2OCAzLjc4MDM0QzIuNDI2NzggMy40ODc0NSAyLjQyNjc3IDMuMDEyNTcgMi43MTk2NiAyLjcxOTY4WlwiPjwvcGF0aD48L3N2Zz5gKTtcbmNvbnN0IENsb3NlSWNvbiA9IChwcm9wcykgPT4ge1xuICBjb25zdCB0aGVtZSA9IHVzZVRoZW1lKCk7XG4gIGNvbnN0IGZpbGwgPSAoKSA9PiBwcm9wcy5maWxsIHx8IHRoZW1lLmNvbG9ycy5pY29uLnNlY29uZGFyeTtcbiAgcmV0dXJuICgoKSA9PiB7XG4gICAgY29uc3QgX2VsJCA9IF90bXBsJCR1LmNsb25lTm9kZSh0cnVlKSwgX2VsJDIgPSBfZWwkLmZpcnN0Q2hpbGQ7XG4gICAgY3JlYXRlUmVuZGVyRWZmZWN0KCgpID0+IHNldEF0dHJpYnV0ZShfZWwkMiwgXCJmaWxsXCIsIGZpbGwoKSkpO1xuICAgIHJldHVybiBfZWwkO1xuICB9KSgpO1xufTtcbmNvbnN0IEljb25CdXR0b25TdHlsZWQgPSBzdHlsZWQuYnV0dG9uYFxuICAgIHBhZGRpbmc6IDA7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIHdpZHRoOiAzMnB4O1xuICAgIGhlaWdodDogMzJweDtcbiAgICBib3JkZXItcmFkaXVzOiA1MCU7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogJHsocHJvcHMpID0+IHByb3BzLnRoZW1lLmNvbG9ycy5iYWNrZ3JvdW5kLnRpbnR9O1xuICAgIGJvcmRlcjogbm9uZTtcbiAgICBjdXJzb3I6IHBvaW50ZXI7XG5cbiAgICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMC4xMjVzIGVhc2UtaW4tb3V0O1xuXG4gICAgJHttZWRpYU5vdFRvdWNofSB7XG4gICAgICAgICY6aG92ZXIge1xuICAgICAgICAgICAgdHJhbnNmb3JtOiBzY2FsZSgxLjA0KTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgICY6YWN0aXZlIHtcbiAgICAgICAgdHJhbnNmb3JtOiBzY2FsZSgwLjk2KTtcbiAgICB9XG5cbiAgICAke21lZGlhVG91Y2h9IHtcbiAgICAgICAgJjphY3RpdmUge1xuICAgICAgICAgICAgdHJhbnNmb3JtOiBzY2FsZSgwLjkyKTtcbiAgICAgICAgfVxuICAgIH1cbmA7XG5jb25zdCBJY29uQnV0dG9uID0gKHByb3BzKSA9PiB7XG4gIGNvbnN0IGRhdGFBdHRycyA9IHVzZURhdGFBdHRyaWJ1dGVzKHByb3BzKTtcbiAgY29uc3QgaWNvbiA9ICgpID0+IHByb3BzLmljb24gfHwgXCJjbG9zZVwiO1xuICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KEljb25CdXR0b25TdHlsZWQsIG1lcmdlUHJvcHMoe1xuICAgIGdldCBbXCJjbGFzc1wiXSgpIHtcbiAgICAgIHJldHVybiBwcm9wcy5jbGFzcztcbiAgICB9LFxuICAgIG9uQ2xpY2s6ICgpID0+IHByb3BzLm9uQ2xpY2soKSxcbiAgICBcImRhdGEtdGMtaWNvbi1idXR0b25cIjogXCJ0cnVlXCJcbiAgfSwgZGF0YUF0dHJzLCB7XG4gICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgcmV0dXJuIFtjcmVhdGVDb21wb25lbnQoU2hvdywge1xuICAgICAgICBnZXQgd2hlbigpIHtcbiAgICAgICAgICByZXR1cm4gISFwcm9wcy5jaGlsZHJlbjtcbiAgICAgICAgfSxcbiAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgIHJldHVybiBwcm9wcy5jaGlsZHJlbjtcbiAgICAgICAgfVxuICAgICAgfSksIGNyZWF0ZUNvbXBvbmVudChTaG93LCB7XG4gICAgICAgIGdldCB3aGVuKCkge1xuICAgICAgICAgIHJldHVybiAhcHJvcHMuY2hpbGRyZW47XG4gICAgICAgIH0sXG4gICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KFN3aXRjaCwge1xuICAgICAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgICAgICByZXR1cm4gW2NyZWF0ZUNvbXBvbmVudChNYXRjaCwge1xuICAgICAgICAgICAgICAgIGdldCB3aGVuKCkge1xuICAgICAgICAgICAgICAgICAgcmV0dXJuIGljb24oKSA9PT0gXCJjbG9zZVwiO1xuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgICAgICAgICAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChDbG9zZUljb24sIHtcbiAgICAgICAgICAgICAgICAgICAgZ2V0IGZpbGwoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHByb3BzLmZpbGw7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgfSksIGNyZWF0ZUNvbXBvbmVudChNYXRjaCwge1xuICAgICAgICAgICAgICAgIGdldCB3aGVuKCkge1xuICAgICAgICAgICAgICAgICAgcmV0dXJuIGljb24oKSA9PT0gXCJhcnJvd1wiO1xuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgICAgICAgICAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChBcnJvd0ljb24sIHtcbiAgICAgICAgICAgICAgICAgICAgZ2V0IGZpbGwoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHByb3BzLmZpbGw7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgfSksIGNyZWF0ZUNvbXBvbmVudChNYXRjaCwge1xuICAgICAgICAgICAgICAgIGdldCB3aGVuKCkge1xuICAgICAgICAgICAgICAgICAgcmV0dXJuIGljb24oKSA9PT0gXCJxdWVzdGlvblwiO1xuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgICAgICAgICAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChRdWVzdGlvbkljb24sIHtcbiAgICAgICAgICAgICAgICAgICAgZ2V0IGZpbGwoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHByb3BzLmZpbGw7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgfSksIGNyZWF0ZUNvbXBvbmVudChNYXRjaCwge1xuICAgICAgICAgICAgICAgIGdldCB3aGVuKCkge1xuICAgICAgICAgICAgICAgICAgcmV0dXJuIHR5cGVvZiBpY29uKCkgIT09IFwic3RyaW5nXCI7XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgICAgICAgICByZXR1cm4gaWNvbigpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgfSldO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICB9KV07XG4gICAgfVxuICB9KSk7XG59O1xuY29uc3QgYm9yZGVycyQ0ID0ge1xuICBtOiBcIjI0cHhcIixcbiAgczogXCIxNnB4XCIsXG4gIG5vbmU6IFwiMFwiXG59O1xuY29uc3QgTW9kYWxCYWNrZ3JvdW5kU3R5bGVkID0gc3R5bGVkLmRpdmBcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIHBvc2l0aW9uOiBmaXhlZDtcbiAgICB6LWluZGV4OiAxMDAwO1xuICAgIGxlZnQ6IDA7XG4gICAgdG9wOiAwO1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGhlaWdodDogMTAwJTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuNCk7XG4gICAgcGFkZGluZzogMjBweCAwO1xuICAgIG92ZXJmbG93LXk6IGF1dG87XG5cbiAgICAke21lZGlhKFwibW9iaWxlXCIpfSB7XG4gICAgICAgIHBhZGRpbmctYm90dG9tOiAwO1xuICAgIH1cbmA7XG5jb25zdCBNb2RhbFdyYXBwZXJDbGFzcyA9IHVgXG4gICAgYm94LXNoYWRvdzogMCA0cHggMTZweCByZ2JhKDAsIDAsIDAsIDAuMDgpLCAwIDE2cHggNjRweCByZ2JhKDAsIDAsIDAsIDAuMTYpO1xuICAgIHdpZHRoOiBmaXQtY29udGVudDtcbiAgICBtYXJnaW46IGF1dG87XG5cbiAgICAke21lZGlhKFwibW9iaWxlXCIpfSB7XG4gICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICBoZWlnaHQ6IGZpdC1jb250ZW50O1xuICAgICAgICBtYXJnaW46IGF1dG8gMCAwIDA7XG4gICAgfVxuYDtcbmNvbnN0IE1vZGFsQm9keVN0eWxlZCA9IHN0eWxlZC5kaXZgXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIG1pbi1oZWlnaHQ6IDEwMHB4O1xuICAgIHdpZHRoOiA0MTZweDtcbiAgICBwYWRkaW5nOiA0NHB4IDU2cHggMjRweDtcblxuICAgIGJveC1zaGFkb3c6IDAgMnB4IDhweCAwIHJnYmEoMCwgMCwgMCwgMC4wNCk7XG5cbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkeyhwcm9wcykgPT4gcHJvcHMudGhlbWUuY29sb3JzLmJhY2tncm91bmQucHJpbWFyeX07XG4gICAgYm9yZGVyLXJhZGl1czogJHsocHJvcHMpID0+IGJvcmRlcnMkNFtwcm9wcy50aGVtZS5ib3JkZXJSYWRpdXNdfTtcblxuICAgICR7bWVkaWEoXCJtb2JpbGVcIil9IHtcbiAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgfVxuYDtcbmNvbnN0IENsb3NlQnV0dG9uU3R5bGVkID0gc3R5bGVkKEljb25CdXR0b24pYFxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICByaWdodDogMTZweDtcbiAgICB0b3A6IDE2cHg7XG5gO1xuY29uc3QgTW9kYWxGb290ZXJTdHlsZWQgPSBzdHlsZWQuZGl2YFxuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgcGFkZGluZzogMTZweCAxNnB4IDE2cHggMThweDtcbiAgICBib3JkZXItcmFkaXVzOiAwIDAgJHsocHJvcHMpID0+IGJvcmRlcnMkNFtwcm9wcy50aGVtZS5ib3JkZXJSYWRpdXNdfVxuICAgICAgICAkeyhwcm9wcykgPT4gYm9yZGVycyQ0W3Byb3BzLnRoZW1lLmJvcmRlclJhZGl1c119O1xuYDtcbmNvbnN0IFF1ZXN0aW9uQnV0dG9uU3R5bGVkID0gc3R5bGVkKEljb25CdXR0b24pYFxuICAgIGJhY2tncm91bmQtY29sb3I6ICR7KHByb3BzKSA9PiByZ2JhKHByb3BzLnRoZW1lLmNvbG9ycy5pY29uLnNlY29uZGFyeSwgMC4xMil9O1xuYDtcbmNsYXNzIEFuaW1hdGlvblRpbWVsaW5lTm9vcCB7XG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIF9fcHVibGljRmllbGQodGhpcywgXCJjdXJyZW50VGltZVwiLCAwKTtcbiAgfVxufVxuY29uc3QgX0FuaW1hdGlvbk5vb3AgPSBjbGFzcyB7XG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIF9fcHVibGljRmllbGQodGhpcywgXCJjdXJyZW50VGltZVwiLCAwKTtcbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwicGxheWJhY2tSYXRlXCIsIDEpO1xuICAgIF9fcHVibGljRmllbGQodGhpcywgXCJzdGFydFRpbWVcIiwgbnVsbCk7XG4gICAgX19wdWJsaWNGaWVsZCh0aGlzLCBcInRpbWVsaW5lXCIsIG5ldyBBbmltYXRpb25UaW1lbGluZU5vb3AoKSk7XG4gICAgX19wdWJsaWNGaWVsZCh0aGlzLCBcImZpbmlzaGVkXCIsIFByb21pc2UucmVzb2x2ZSh0aGlzKSk7XG4gICAgX19wdWJsaWNGaWVsZCh0aGlzLCBcImVmZmVjdFwiLCBudWxsKTtcbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwiaWRcIiwgXCJcIik7XG4gICAgX19wdWJsaWNGaWVsZCh0aGlzLCBcInBlbmRpbmdcIiwgZmFsc2UpO1xuICAgIF9fcHVibGljRmllbGQodGhpcywgXCJwbGF5U3RhdGVcIiwgXCJmaW5pc2hlZFwiKTtcbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwicmVwbGFjZVN0YXRlXCIsIFwiYWN0aXZlXCIpO1xuICAgIF9fcHVibGljRmllbGQodGhpcywgXCJyZWFkeVwiLCBQcm9taXNlLnJlc29sdmUodGhpcykpO1xuICAgIF9fcHVibGljRmllbGQodGhpcywgXCJvbmNhbmNlbFwiLCBudWxsKTtcbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwib25maW5pc2hcIiwgbnVsbCk7XG4gICAgX19wdWJsaWNGaWVsZCh0aGlzLCBcIm9ucmVtb3ZlXCIsIG51bGwpO1xuICB9XG4gIHN0YXRpYyBjcmVhdGUoKSB7XG4gICAgaWYgKCFfQW5pbWF0aW9uTm9vcC5faW5zdGFuY2UpIHtcbiAgICAgIGxvZ1dhcm5pbmcoXG4gICAgICAgIFwiQW5pbWF0aW9uIGlzIG5vdCBzdXBwb3J0ZWQgaW4gdGhpcyBlbnZpcm9ubWVudDogcGxlYXNlIGNvbnNpZGVyIHVzaW5nIHRoZSBgd2ViLWFuaW1hdGlvbnMtanNgIHBvbHlmaWxsIHRvIHByb3ZpZGUgYSBmYWxsYmFjayBpbXBsZW1lbnRhdGlvbiBvZiB0aGUgV2ViIEFuaW1hdGlvbnMgQVBJLlwiXG4gICAgICApO1xuICAgICAgX0FuaW1hdGlvbk5vb3AuX2luc3RhbmNlID0gbmV3IF9BbmltYXRpb25Ob29wKCk7XG4gICAgfVxuICAgIHJldHVybiBfQW5pbWF0aW9uTm9vcC5faW5zdGFuY2U7XG4gIH1cbiAgY2FuY2VsKCkge1xuICB9XG4gIGZpbmlzaCgpIHtcbiAgfVxuICBwYXVzZSgpIHtcbiAgfVxuICBwbGF5KCkge1xuICB9XG4gIHJldmVyc2UoKSB7XG4gIH1cbiAgYWRkRXZlbnRMaXN0ZW5lcihfdHlwZSwgX2xpc3RlbmVyLCBfb3B0aW9ucykge1xuICB9XG4gIGRpc3BhdGNoRXZlbnQoX2V2ZW50KSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG4gIHJlbW92ZUV2ZW50TGlzdGVuZXIoX3R5cGUsIF9jYWxsYmFjaywgX29wdGlvbnMpIHtcbiAgfVxuICB1cGRhdGVQbGF5YmFja1JhdGUoX3BsYXliYWNrUmF0ZSkge1xuICB9XG4gIGNvbW1pdFN0eWxlcygpIHtcbiAgfVxuICBwZXJzaXN0KCkge1xuICB9XG59O1xubGV0IEFuaW1hdGlvbk5vb3AgPSBfQW5pbWF0aW9uTm9vcDtcbl9fcHVibGljRmllbGQoQW5pbWF0aW9uTm9vcCwgXCJfaW5zdGFuY2VcIiwgbnVsbCk7XG5mdW5jdGlvbiBhbmltYXRlKGVsZW1lbnQsIGtleWZyYW1lcywgb3B0aW9ucykge1xuICBpZiAoXCJhbmltYXRlXCIgaW4gZWxlbWVudCkge1xuICAgIHJldHVybiBlbGVtZW50LmFuaW1hdGUoa2V5ZnJhbWVzLCBvcHRpb25zKTtcbiAgfVxuICByZXR1cm4gQW5pbWF0aW9uTm9vcC5jcmVhdGUoKTtcbn1cbmNvbnN0IF90bXBsJCR0ID0gLyogQF9fUFVSRV9fICovIHRlbXBsYXRlJDEoYDxkaXY+PC9kaXY+YCk7XG5jb25zdCBjbGlja091dHNpZGUgPSBjbGlja091dHNpZGUkMTtcbmNvbnN0IGtleVByZXNzZWQgPSBlc2NQcmVzc2VkO1xuY29uc3QgYW5kcm9pZEJhY2tIYW5kbGVyID0gYW5kcm9pZEJhY2tIYW5kbGVyJDE7XG5jb25zdCBNb2RhbCA9IChwcm9wcykgPT4ge1xuICBjb25zdCB0aGVtZSA9IHVzZVRoZW1lKCk7XG4gIGNvbnN0IGRhdGFBdHRycyA9IHVzZURhdGFBdHRyaWJ1dGVzKHByb3BzKTtcbiAgY3JlYXRlRWZmZWN0KCgpID0+IHtcbiAgICBpZiAocHJvcHMub3BlbmVkKSB7XG4gICAgICBkaXNhYmxlU2Nyb2xsKCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGVuYWJsZVNjcm9sbCgpO1xuICAgIH1cbiAgfSk7XG4gIHJldHVybiBjcmVhdGVDb21wb25lbnQoVHJhbnNpdGlvbiwge1xuICAgIG9uQmVmb3JlRW50ZXI6IChlbCkgPT4ge1xuICAgICAgY29uc3QgZHVyYXRpb24gPSBpc0RldmljZShcIm1vYmlsZVwiKSA/IDIwMCA6IDEwMDtcbiAgICAgIGFuaW1hdGUoZWwsIFt7XG4gICAgICAgIG9wYWNpdHk6IDBcbiAgICAgIH0sIHtcbiAgICAgICAgb3BhY2l0eTogMVxuICAgICAgfV0sIHtcbiAgICAgICAgZHVyYXRpb25cbiAgICAgIH0pO1xuICAgICAgaWYgKGlzRGV2aWNlKFwibW9iaWxlXCIpKSB7XG4gICAgICAgIGFuaW1hdGUoZWwuZmlyc3RFbGVtZW50Q2hpbGQsIFt7XG4gICAgICAgICAgdHJhbnNmb3JtOiBcInRyYW5zbGF0ZVkoMzkwcHgpXCJcbiAgICAgICAgfSwge1xuICAgICAgICAgIHRyYW5zZm9ybTogXCJ0cmFuc2xhdGVZKDApXCJcbiAgICAgICAgfV0sIHtcbiAgICAgICAgICBkdXJhdGlvblxuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICB9LFxuICAgIG9uRXhpdDogKGVsLCBkb25lKSA9PiB7XG4gICAgICBjb25zdCBkdXJhdGlvbiA9IGlzRGV2aWNlKFwibW9iaWxlXCIpID8gMjAwIDogMTAwO1xuICAgICAgY29uc3QgYmFja2dyb3VuZEFuaW1hdGlvbiA9IGFuaW1hdGUoZWwsIFt7XG4gICAgICAgIG9wYWNpdHk6IDFcbiAgICAgIH0sIHtcbiAgICAgICAgb3BhY2l0eTogMFxuICAgICAgfV0sIHtcbiAgICAgICAgZHVyYXRpb25cbiAgICAgIH0pO1xuICAgICAgaWYgKGlzRGV2aWNlKFwibW9iaWxlXCIpKSB7XG4gICAgICAgIGNvbnN0IGNvbnRlbnRBbmltYXRpb24gPSBhbmltYXRlKGVsLmZpcnN0RWxlbWVudENoaWxkLCBbe1xuICAgICAgICAgIHRyYW5zZm9ybTogXCJ0cmFuc2xhdGVZKDApXCJcbiAgICAgICAgfSwge1xuICAgICAgICAgIHRyYW5zZm9ybTogXCJ0cmFuc2xhdGVZKDM5MHB4KVwiXG4gICAgICAgIH1dLCB7XG4gICAgICAgICAgZHVyYXRpb25cbiAgICAgICAgfSk7XG4gICAgICAgIFByb21pc2UuYWxsKFtiYWNrZ3JvdW5kQW5pbWF0aW9uLmZpbmlzaGVkLCBjb250ZW50QW5pbWF0aW9uLmZpbmlzaGVkXSkudGhlbihkb25lKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGJhY2tncm91bmRBbmltYXRpb24uZmluaXNoZWQudGhlbihkb25lKTtcbiAgICAgIH1cbiAgICB9LFxuICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoU2hvdywge1xuICAgICAgICBnZXQgd2hlbigpIHtcbiAgICAgICAgICByZXR1cm4gcHJvcHMub3BlbmVkO1xuICAgICAgICB9LFxuICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChNb2RhbEJhY2tncm91bmRTdHlsZWQsIG1lcmdlUHJvcHMoe1xuICAgICAgICAgICAgXCJkYXRhLXRjLW1vZGFsXCI6IFwidHJ1ZVwiXG4gICAgICAgICAgfSwgZGF0YUF0dHJzLCB7XG4gICAgICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgICAgIGNvbnN0IF9lbCQgPSBfdG1wbCQkdC5jbG9uZU5vZGUodHJ1ZSk7XG4gICAgICAgICAgICAgIHVzZShhbmRyb2lkQmFja0hhbmRsZXIsIF9lbCQsICgpID0+ICh7XG4gICAgICAgICAgICAgICAgaXNFbmFibGVkOiBwcm9wcy5lbmFibGVBbmRyb2lkQmFja0hhbmRsZXIsXG4gICAgICAgICAgICAgICAgb25DbG9zZTogKCkgPT4gcHJvcHMub25DbG9zZSgpXG4gICAgICAgICAgICAgIH0pKTtcbiAgICAgICAgICAgICAgdXNlKGtleVByZXNzZWQsIF9lbCQsICgpID0+ICgpID0+IHByb3BzLm9uQ2xvc2UoKSk7XG4gICAgICAgICAgICAgIHVzZShjbGlja091dHNpZGUsIF9lbCQsICgpID0+ICgpID0+IHByb3BzLm9uQ2xvc2UoKSk7XG4gICAgICAgICAgICAgIGluc2VydChfZWwkLCBjcmVhdGVDb21wb25lbnQoTW9kYWxCb2R5U3R5bGVkLCB7XG4gICAgICAgICAgICAgICAgZ2V0IFtcImNsYXNzXCJdKCkge1xuICAgICAgICAgICAgICAgICAgcmV0dXJuIHByb3BzLmNsYXNzO1xuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgICAgICAgICAgcmV0dXJuIFtjcmVhdGVDb21wb25lbnQoQ2xvc2VCdXR0b25TdHlsZWQsIHtcbiAgICAgICAgICAgICAgICAgICAgaWNvbjogXCJjbG9zZVwiLFxuICAgICAgICAgICAgICAgICAgICBvbkNsaWNrOiAoKSA9PiBwcm9wcy5vbkNsb3NlKClcbiAgICAgICAgICAgICAgICAgIH0pLCBjcmVhdGVNZW1vKCgpID0+IHByb3BzLmNoaWxkcmVuKV07XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICB9KSwgbnVsbCk7XG4gICAgICAgICAgICAgIGluc2VydChfZWwkLCBjcmVhdGVDb21wb25lbnQoU2hvdywge1xuICAgICAgICAgICAgICAgIGdldCB3aGVuKCkge1xuICAgICAgICAgICAgICAgICAgcmV0dXJuIHByb3BzLm9uQ2xpY2tRdWVzdGlvbjtcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICAgICAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoTW9kYWxGb290ZXJTdHlsZWQsIHtcbiAgICAgICAgICAgICAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBbY3JlYXRlQ29tcG9uZW50KFRvbkNvbm5lY3RCcmFuZCwge30pLCBjcmVhdGVDb21wb25lbnQoUXVlc3Rpb25CdXR0b25TdHlsZWQsIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGdldCBvbkNsaWNrKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gcHJvcHMub25DbGlja1F1ZXN0aW9uO1xuICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgIGljb246IFwicXVlc3Rpb25cIlxuICAgICAgICAgICAgICAgICAgICAgIH0pXTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICB9KSwgbnVsbCk7XG4gICAgICAgICAgICAgIGNyZWF0ZVJlbmRlckVmZmVjdCgoKSA9PiBjbGFzc05hbWUoX2VsJCwgY24oTW9kYWxXcmFwcGVyQ2xhc3MsIHVgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6ICR7Ym9yZGVycyQ0W3RoZW1lLmJvcmRlclJhZGl1c119O1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAke3RoZW1lLmNvbG9ycy5iYWNrZ3JvdW5kLnRpbnR9O1xuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICR7bWVkaWEoXCJtb2JpbGVcIil9IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6ICR7Ym9yZGVycyQ0W3RoZW1lLmJvcmRlclJhZGl1c119XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJHtib3JkZXJzJDRbdGhlbWUuYm9yZGVyUmFkaXVzXX0gMCAwO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYCkpKTtcbiAgICAgICAgICAgICAgcmV0dXJuIF9lbCQ7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSkpO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9XG4gIH0pO1xufTtcbmNvbnN0IHdyYXBwZXJCb3JkZXJSYWRpdXMgPSB7XG4gIG06IFwiMjJweFwiLFxuICBzOiBcIjEycHhcIixcbiAgbm9uZTogXCIwXCJcbn07XG5jb25zdCBzbGlkZXJCb3JkZXJSYWRpdXMgPSB7XG4gIG06IFwiMThweFwiLFxuICBzOiBcIjhweFwiLFxuICBub25lOiBcIjBcIlxufTtcbmNvbnN0IFRhYkJhclN0eWxlZCA9IHN0eWxlZC5kaXZgXG4gICAgZGlzcGxheTogZ3JpZDtcbiAgICBncmlkLXRlbXBsYXRlOiAxZnIgLyAxZnIgMWZyO1xuICAgIHdpZHRoOiBmaXQtY29udGVudDtcbiAgICBqdXN0aWZ5LWl0ZW1zOiBjZW50ZXI7XG4gICAgZ2FwOiA0cHg7XG5cbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgcGFkZGluZzogNHB4O1xuICAgIGJvcmRlci1yYWRpdXM6ICR7KHByb3BzKSA9PiB3cmFwcGVyQm9yZGVyUmFkaXVzW3Byb3BzLnRoZW1lLmJvcmRlclJhZGl1c119O1xuXG4gICAgYmFja2dyb3VuZC1jb2xvcjogJHsocHJvcHMpID0+IHByb3BzLnRoZW1lLmNvbG9ycy5iYWNrZ3JvdW5kLnNlY29uZGFyeX07XG5gO1xuY29uc3QgU2xpZGVyU3R5bGVkID0gc3R5bGVkLmRpdmBcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgdG9wOiA0cHg7XG4gICAgbGVmdDogNHB4O1xuXG4gICAgaGVpZ2h0OiBjYWxjKDEwMCUgLSA4cHgpO1xuICAgIHdpZHRoOiBjYWxjKDUwJSAtIDRweCk7XG5cbiAgICBib3JkZXItcmFkaXVzOiAkeyhwcm9wcykgPT4gc2xpZGVyQm9yZGVyUmFkaXVzW3Byb3BzLnRoZW1lLmJvcmRlclJhZGl1c119O1xuICAgIGJhY2tncm91bmQtY29sb3I6ICR7KHByb3BzKSA9PiBwcm9wcy50aGVtZS5jb2xvcnMuYmFja2dyb3VuZC5zZWdtZW50fTtcblxuICAgIHRyYW5zZm9ybTogJHsocHJvcHMpID0+IHByb3BzLnJpZ2h0ID8gXCJ0cmFuc2xhdGVYKDEwMCUpXCIgOiBcInRyYW5zbGF0ZVgoMClcIn07XG5cbiAgICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMC4xM3MgZWFzZS1pbi1vdXQ7XG5gO1xuY29uc3QgSW5wdXRTdHlsZWQgPSBzdHlsZWQuaW5wdXRgXG4gICAgZGlzcGxheTogbm9uZTtcbmA7XG5jb25zdCBMYWJlbFN0eWxlZCA9IHN0eWxlZC5sYWJlbGBcbiAgICBwYWRkaW5nOiA5cHggMTJweDtcbiAgICB6LWluZGV4OiAxO1xuXG4gICAgY3Vyc29yOiAkeyhwcm9wcykgPT4gcHJvcHMuaXNBY3RpdmUgPyBcImRlZmF1bHRcIiA6IFwicG9pbnRlclwifTtcblxuICAgIHRyYW5zaXRpb246IHRyYW5zZm9ybSAwLjEzcyBlYXNlLWluLW91dDtcblxuICAgICY6aG92ZXIge1xuICAgICAgICB0cmFuc2Zvcm06ICR7KHByb3BzKSA9PiBwcm9wcy5pc0FjdGl2ZSA/IFwibm9uZVwiIDogXCJzY2FsZSgxLjAyNSlcIn07XG4gICAgfVxuXG4gICAgPiAqIHtcbiAgICAgICAgJHsocHJvcHMpID0+ICFwcm9wcy5pc0FjdGl2ZSA/IGBjb2xvcjogJHtwcm9wcy50aGVtZS5jb2xvcnMudGV4dC5zZWNvbmRhcnl9O2AgOiBcIlwifVxuICAgIH1cbmA7XG5jb25zdCBUYWJCYXIgPSAocHJvcHMpID0+IHtcbiAgY29uc3QgZ3JvdXBOYW1lID0gXCJ0YWJCYXJcIiArIE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIDFlNCk7XG4gIHJldHVybiBjcmVhdGVDb21wb25lbnQoVGFiQmFyU3R5bGVkLCB7XG4gICAgZ2V0IFtcImNsYXNzXCJdKCkge1xuICAgICAgcmV0dXJuIHByb3BzLmNsYXNzO1xuICAgIH0sXG4gICAgXCJkYXRhLXRjLXRhYi1iYXJcIjogXCJ0cnVlXCIsXG4gICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgcmV0dXJuIFtjcmVhdGVDb21wb25lbnQoU2xpZGVyU3R5bGVkLCB7XG4gICAgICAgIGdldCByaWdodCgpIHtcbiAgICAgICAgICByZXR1cm4gcHJvcHMuc2VsZWN0ZWRUYWJJbmRleCA9PT0gMTtcbiAgICAgICAgfVxuICAgICAgfSksIGNyZWF0ZUNvbXBvbmVudChMYWJlbFN0eWxlZCwge1xuICAgICAgICBnZXQgaXNBY3RpdmUoKSB7XG4gICAgICAgICAgcmV0dXJuIHByb3BzLnNlbGVjdGVkVGFiSW5kZXggPT09IDA7XG4gICAgICAgIH0sXG4gICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICByZXR1cm4gW2NyZWF0ZUNvbXBvbmVudChJbnB1dFN0eWxlZCwge1xuICAgICAgICAgICAgdHlwZTogXCJyYWRpb1wiLFxuICAgICAgICAgICAgbmFtZTogZ3JvdXBOYW1lLFxuICAgICAgICAgICAgZ2V0IGNoZWNrZWQoKSB7XG4gICAgICAgICAgICAgIHJldHVybiBwcm9wcy5zZWxlY3RlZFRhYkluZGV4ID09PSAwO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIG9uSW5wdXQ6ICgpID0+IHtcbiAgICAgICAgICAgICAgdmFyIF9hMjtcbiAgICAgICAgICAgICAgcmV0dXJuIChfYTIgPSBwcm9wcy5vblNlbGVjdGVkVGFiSW5kZXhDaGFuZ2UpID09IG51bGwgPyB2b2lkIDAgOiBfYTIuY2FsbChwcm9wcywgMCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSksIGNyZWF0ZU1lbW8oKCkgPT4gcHJvcHMudGFiMSldO1xuICAgICAgICB9XG4gICAgICB9KSwgY3JlYXRlQ29tcG9uZW50KExhYmVsU3R5bGVkLCB7XG4gICAgICAgIGdldCBpc0FjdGl2ZSgpIHtcbiAgICAgICAgICByZXR1cm4gcHJvcHMuc2VsZWN0ZWRUYWJJbmRleCA9PT0gMTtcbiAgICAgICAgfSxcbiAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgIHJldHVybiBbY3JlYXRlQ29tcG9uZW50KElucHV0U3R5bGVkLCB7XG4gICAgICAgICAgICB0eXBlOiBcInJhZGlvXCIsXG4gICAgICAgICAgICBnZXQgY2hlY2tlZCgpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIHByb3BzLnNlbGVjdGVkVGFiSW5kZXggPT09IDE7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgbmFtZTogZ3JvdXBOYW1lLFxuICAgICAgICAgICAgb25JbnB1dDogKCkgPT4ge1xuICAgICAgICAgICAgICB2YXIgX2EyO1xuICAgICAgICAgICAgICByZXR1cm4gKF9hMiA9IHByb3BzLm9uU2VsZWN0ZWRUYWJJbmRleENoYW5nZSkgPT0gbnVsbCA/IHZvaWQgMCA6IF9hMi5jYWxsKHByb3BzLCAxKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9KSwgY3JlYXRlTWVtbygoKSA9PiBwcm9wcy50YWIyKV07XG4gICAgICAgIH1cbiAgICAgIH0pXTtcbiAgICB9XG4gIH0pO1xufTtcbmNvbnN0IGJhY2tncm91bmRCb3JkZXJzID0ge1xuICBtOiBcIjE2cHhcIixcbiAgczogXCIxMnB4XCIsXG4gIG5vbmU6IFwiMFwiXG59O1xuY29uc3QgaW1hZ2VCb3JkZXJzID0ge1xuICBtOiBcIjEycHhcIixcbiAgczogXCI4cHhcIixcbiAgbm9uZTogXCIwXCJcbn07XG5jb25zdCBxck5vcm1hbFNpemUgPSAyNTY7XG5jb25zdCBpbWdTaXplRGVmYXVsdCA9IDYwO1xuY29uc3QgcGljU2l6ZURlZmF1bHQgPSA0ODtcbmNvbnN0IHFyUGFkZGluZ1RvcCA9IDI0O1xuY29uc3QgQ29weUljb25CdXR0b24gPSBzdHlsZWQuZGl2YFxuICAgIHdpZHRoOiA1MnB4O1xuICAgIGhlaWdodDogNTJweDtcbiAgICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgcmlnaHQ6IDA7XG4gICAgYm90dG9tOiAwO1xuXG4gICAgZGlzcGxheTogZmxleDtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgIHRyYW5zaXRpb246IHRyYW5zZm9ybSAwLjEyNXMgZWFzZS1pbi1vdXQ7XG5gO1xuY29uc3QgUXJDb2RlQmFja2dyb3VuZCA9IHN0eWxlZC5idXR0b25gXG4gICAgZGlzcGxheTogZmxleDtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkeyhwcm9wcykgPT4gcHJvcHMudGhlbWUuY29sb3JzLmJhY2tncm91bmQucXJ9O1xuICAgIGJvcmRlci1yYWRpdXM6ICR7KHByb3BzKSA9PiBiYWNrZ3JvdW5kQm9yZGVyc1twcm9wcy50aGVtZS5ib3JkZXJSYWRpdXNdfTtcbiAgICBwYWRkaW5nOiAke3RvUHgocXJQYWRkaW5nVG9wKX0gMDtcbiAgICBoZWlnaHQ6ICR7dG9QeChxck5vcm1hbFNpemUgKyBxclBhZGRpbmdUb3AgKiAyKX07XG4gICAgd2lkdGg6IDEwMCU7XG5cbiAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICBib3JkZXI6IG5vbmU7XG5cbiAgICAke21lZGlhTm90VG91Y2h9IHtcbiAgICAgICAgJjpob3ZlciB7XG4gICAgICAgICAgICAke0NvcHlJY29uQnV0dG9uLmNsYXNzfSB7XG4gICAgICAgICAgICAgICAgdHJhbnNmb3JtOiBzY2FsZSgxLjA0KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cblxuICAgICY6YWN0aXZlIHtcbiAgICAgICAgJHtDb3B5SWNvbkJ1dHRvbi5jbGFzc30ge1xuICAgICAgICAgICAgdHJhbnNmb3JtOiBzY2FsZSgwLjk2KTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgICR7bWVkaWFUb3VjaH0ge1xuICAgICAgICAmOmFjdGl2ZSB7XG4gICAgICAgICAgICAke0NvcHlJY29uQnV0dG9uLmNsYXNzfSB7XG4gICAgICAgICAgICAgICAgdHJhbnNmb3JtOiBzY2FsZSgwLjkyKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbmA7XG5jb25zdCBRckNvZGVXcmFwcGVyJDIgPSBzdHlsZWQuZGl2YFxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgbWFyZ2luOiAwIGF1dG87XG5cbiAgICA+IGRpdjpmaXJzdC1jaGlsZCB7XG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgIH1cblxuICAgIHJlY3Qge1xuICAgICAgICBmaWxsOiB0cmFuc3BhcmVudDtcbiAgICB9XG5cbiAgICBwYXRoIHtcbiAgICAgICAgZmlsbDogJHsocHJvcHMpID0+IHByb3BzLnRoZW1lLmNvbG9ycy5jb25zdGFudC5ibGFja307XG4gICAgfVxuYDtcbmNvbnN0IEltYWdlQmFja2dyb3VuZCA9IHN0eWxlZC5kaXZgXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHdpZHRoOiAke3RvUHgoaW1nU2l6ZURlZmF1bHQpfTtcbiAgICBoZWlnaHQ6ICR7dG9QeChpbWdTaXplRGVmYXVsdCl9O1xuICAgIGJhY2tncm91bmQ6ICR7KHByb3BzKSA9PiBwcm9wcy50aGVtZS5jb2xvcnMuYmFja2dyb3VuZC5xcn07XG5cbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG5gO1xuY29uc3QgSW1hZ2VTdHlsZWQkMyA9IHN0eWxlZChJbWFnZSlgXG4gICAgd2lkdGg6ICR7KHByb3BzKSA9PiB0b1B4KHByb3BzLnNpemUpfTtcbiAgICBoZWlnaHQ6ICR7KHByb3BzKSA9PiB0b1B4KHByb3BzLnNpemUpfTtcbiAgICBib3JkZXItcmFkaXVzOiAkeyhwcm9wcykgPT4gaW1hZ2VCb3JkZXJzW3Byb3BzLnRoZW1lLmJvcmRlclJhZGl1c119O1xuICAgIGJhY2tncm91bmQtY29sb3I6ICR7KHByb3BzKSA9PiBwcm9wcy50aGVtZS5jb2xvcnMuYmFja2dyb3VuZC5xcn07XG5gO1xuY29uc3QgQ29waWVkQm94U3R5bGVkID0gc3R5bGVkLmRpdmBcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgYm90dG9tOiAxNHB4O1xuICAgIGxlZnQ6IDUwJTtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAwKTtcblxuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZ2FwOiA2cHg7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBib3JkZXItcmFkaXVzOiAxOHB4O1xuICAgIG1pbi13aWR0aDogMTI2cHg7XG4gICAgcGFkZGluZzogOXB4IDE2cHggOXB4IDEwcHg7XG5cbiAgICBmaWx0ZXI6IGRyb3Atc2hhZG93KDBweCAycHggOHB4IHJnYmEoMCwgMCwgMCwgMC4wOCkpO1xuICAgIGJhY2tncm91bmQtY29sb3I6ICR7KHByb3BzKSA9PiBwcm9wcy50aGVtZS5jb2xvcnMuYmFja2dyb3VuZC5zZWdtZW50fTtcbmA7XG52YXIgcXJjb2RlJDEgPSB7IGV4cG9ydHM6IHt9IH07XG4oZnVuY3Rpb24obW9kdWxlLCBleHBvcnRzKSB7XG4gIHZhciBxcmNvZGUyID0gZnVuY3Rpb24oKSB7XG4gICAgdmFyIHFyY29kZTMgPSBmdW5jdGlvbih0eXBlTnVtYmVyLCBlcnJvckNvcnJlY3Rpb25MZXZlbCkge1xuICAgICAgdmFyIFBBRDAgPSAyMzY7XG4gICAgICB2YXIgUEFEMSA9IDE3O1xuICAgICAgdmFyIF90eXBlTnVtYmVyID0gdHlwZU51bWJlcjtcbiAgICAgIHZhciBfZXJyb3JDb3JyZWN0aW9uTGV2ZWwgPSBRUkVycm9yQ29ycmVjdGlvbkxldmVsW2Vycm9yQ29ycmVjdGlvbkxldmVsXTtcbiAgICAgIHZhciBfbW9kdWxlcyA9IG51bGw7XG4gICAgICB2YXIgX21vZHVsZUNvdW50ID0gMDtcbiAgICAgIHZhciBfZGF0YUNhY2hlID0gbnVsbDtcbiAgICAgIHZhciBfZGF0YUxpc3QgPSBbXTtcbiAgICAgIHZhciBfdGhpcyA9IHt9O1xuICAgICAgdmFyIG1ha2VJbXBsID0gZnVuY3Rpb24odGVzdCwgbWFza1BhdHRlcm4pIHtcbiAgICAgICAgX21vZHVsZUNvdW50ID0gX3R5cGVOdW1iZXIgKiA0ICsgMTc7XG4gICAgICAgIF9tb2R1bGVzID0gZnVuY3Rpb24obW9kdWxlQ291bnQpIHtcbiAgICAgICAgICB2YXIgbW9kdWxlcyA9IG5ldyBBcnJheShtb2R1bGVDb3VudCk7XG4gICAgICAgICAgZm9yICh2YXIgcm93ID0gMDsgcm93IDwgbW9kdWxlQ291bnQ7IHJvdyArPSAxKSB7XG4gICAgICAgICAgICBtb2R1bGVzW3Jvd10gPSBuZXcgQXJyYXkobW9kdWxlQ291bnQpO1xuICAgICAgICAgICAgZm9yICh2YXIgY29sID0gMDsgY29sIDwgbW9kdWxlQ291bnQ7IGNvbCArPSAxKSB7XG4gICAgICAgICAgICAgIG1vZHVsZXNbcm93XVtjb2xdID0gbnVsbDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgICAgcmV0dXJuIG1vZHVsZXM7XG4gICAgICAgIH0oX21vZHVsZUNvdW50KTtcbiAgICAgICAgc2V0dXBQb3NpdGlvblByb2JlUGF0dGVybigwLCAwKTtcbiAgICAgICAgc2V0dXBQb3NpdGlvblByb2JlUGF0dGVybihfbW9kdWxlQ291bnQgLSA3LCAwKTtcbiAgICAgICAgc2V0dXBQb3NpdGlvblByb2JlUGF0dGVybigwLCBfbW9kdWxlQ291bnQgLSA3KTtcbiAgICAgICAgc2V0dXBQb3NpdGlvbkFkanVzdFBhdHRlcm4oKTtcbiAgICAgICAgc2V0dXBUaW1pbmdQYXR0ZXJuKCk7XG4gICAgICAgIHNldHVwVHlwZUluZm8odGVzdCwgbWFza1BhdHRlcm4pO1xuICAgICAgICBpZiAoX3R5cGVOdW1iZXIgPj0gNykge1xuICAgICAgICAgIHNldHVwVHlwZU51bWJlcih0ZXN0KTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoX2RhdGFDYWNoZSA9PSBudWxsKSB7XG4gICAgICAgICAgX2RhdGFDYWNoZSA9IGNyZWF0ZURhdGEoX3R5cGVOdW1iZXIsIF9lcnJvckNvcnJlY3Rpb25MZXZlbCwgX2RhdGFMaXN0KTtcbiAgICAgICAgfVxuICAgICAgICBtYXBEYXRhKF9kYXRhQ2FjaGUsIG1hc2tQYXR0ZXJuKTtcbiAgICAgIH07XG4gICAgICB2YXIgc2V0dXBQb3NpdGlvblByb2JlUGF0dGVybiA9IGZ1bmN0aW9uKHJvdywgY29sKSB7XG4gICAgICAgIGZvciAodmFyIHIgPSAtMTsgciA8PSA3OyByICs9IDEpIHtcbiAgICAgICAgICBpZiAocm93ICsgciA8PSAtMSB8fCBfbW9kdWxlQ291bnQgPD0gcm93ICsgcilcbiAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICAgIGZvciAodmFyIGMyID0gLTE7IGMyIDw9IDc7IGMyICs9IDEpIHtcbiAgICAgICAgICAgIGlmIChjb2wgKyBjMiA8PSAtMSB8fCBfbW9kdWxlQ291bnQgPD0gY29sICsgYzIpXG4gICAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICAgICAgaWYgKDAgPD0gciAmJiByIDw9IDYgJiYgKGMyID09IDAgfHwgYzIgPT0gNikgfHwgMCA8PSBjMiAmJiBjMiA8PSA2ICYmIChyID09IDAgfHwgciA9PSA2KSB8fCAyIDw9IHIgJiYgciA8PSA0ICYmIDIgPD0gYzIgJiYgYzIgPD0gNCkge1xuICAgICAgICAgICAgICBfbW9kdWxlc1tyb3cgKyByXVtjb2wgKyBjMl0gPSB0cnVlO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgX21vZHVsZXNbcm93ICsgcl1bY29sICsgYzJdID0gZmFsc2U7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9O1xuICAgICAgdmFyIGdldEJlc3RNYXNrUGF0dGVybiA9IGZ1bmN0aW9uKCkge1xuICAgICAgICB2YXIgbWluTG9zdFBvaW50ID0gMDtcbiAgICAgICAgdmFyIHBhdHRlcm4gPSAwO1xuICAgICAgICBmb3IgKHZhciBpMiA9IDA7IGkyIDwgODsgaTIgKz0gMSkge1xuICAgICAgICAgIG1ha2VJbXBsKHRydWUsIGkyKTtcbiAgICAgICAgICB2YXIgbG9zdFBvaW50ID0gUVJVdGlsLmdldExvc3RQb2ludChfdGhpcyk7XG4gICAgICAgICAgaWYgKGkyID09IDAgfHwgbWluTG9zdFBvaW50ID4gbG9zdFBvaW50KSB7XG4gICAgICAgICAgICBtaW5Mb3N0UG9pbnQgPSBsb3N0UG9pbnQ7XG4gICAgICAgICAgICBwYXR0ZXJuID0gaTI7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiBwYXR0ZXJuO1xuICAgICAgfTtcbiAgICAgIHZhciBzZXR1cFRpbWluZ1BhdHRlcm4gPSBmdW5jdGlvbigpIHtcbiAgICAgICAgZm9yICh2YXIgciA9IDg7IHIgPCBfbW9kdWxlQ291bnQgLSA4OyByICs9IDEpIHtcbiAgICAgICAgICBpZiAoX21vZHVsZXNbcl1bNl0gIT0gbnVsbCkge1xuICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgICAgfVxuICAgICAgICAgIF9tb2R1bGVzW3JdWzZdID0gciAlIDIgPT0gMDtcbiAgICAgICAgfVxuICAgICAgICBmb3IgKHZhciBjMiA9IDg7IGMyIDwgX21vZHVsZUNvdW50IC0gODsgYzIgKz0gMSkge1xuICAgICAgICAgIGlmIChfbW9kdWxlc1s2XVtjMl0gIT0gbnVsbCkge1xuICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgICAgfVxuICAgICAgICAgIF9tb2R1bGVzWzZdW2MyXSA9IGMyICUgMiA9PSAwO1xuICAgICAgICB9XG4gICAgICB9O1xuICAgICAgdmFyIHNldHVwUG9zaXRpb25BZGp1c3RQYXR0ZXJuID0gZnVuY3Rpb24oKSB7XG4gICAgICAgIHZhciBwb3MgPSBRUlV0aWwuZ2V0UGF0dGVyblBvc2l0aW9uKF90eXBlTnVtYmVyKTtcbiAgICAgICAgZm9yICh2YXIgaTIgPSAwOyBpMiA8IHBvcy5sZW5ndGg7IGkyICs9IDEpIHtcbiAgICAgICAgICBmb3IgKHZhciBqID0gMDsgaiA8IHBvcy5sZW5ndGg7IGogKz0gMSkge1xuICAgICAgICAgICAgdmFyIHJvdyA9IHBvc1tpMl07XG4gICAgICAgICAgICB2YXIgY29sID0gcG9zW2pdO1xuICAgICAgICAgICAgaWYgKF9tb2R1bGVzW3Jvd11bY29sXSAhPSBudWxsKSB7XG4gICAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZm9yICh2YXIgciA9IC0yOyByIDw9IDI7IHIgKz0gMSkge1xuICAgICAgICAgICAgICBmb3IgKHZhciBjMiA9IC0yOyBjMiA8PSAyOyBjMiArPSAxKSB7XG4gICAgICAgICAgICAgICAgaWYgKHIgPT0gLTIgfHwgciA9PSAyIHx8IGMyID09IC0yIHx8IGMyID09IDIgfHwgciA9PSAwICYmIGMyID09IDApIHtcbiAgICAgICAgICAgICAgICAgIF9tb2R1bGVzW3JvdyArIHJdW2NvbCArIGMyXSA9IHRydWU7XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgIF9tb2R1bGVzW3JvdyArIHJdW2NvbCArIGMyXSA9IGZhbHNlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfTtcbiAgICAgIHZhciBzZXR1cFR5cGVOdW1iZXIgPSBmdW5jdGlvbih0ZXN0KSB7XG4gICAgICAgIHZhciBiaXRzID0gUVJVdGlsLmdldEJDSFR5cGVOdW1iZXIoX3R5cGVOdW1iZXIpO1xuICAgICAgICBmb3IgKHZhciBpMiA9IDA7IGkyIDwgMTg7IGkyICs9IDEpIHtcbiAgICAgICAgICB2YXIgbW9kID0gIXRlc3QgJiYgKGJpdHMgPj4gaTIgJiAxKSA9PSAxO1xuICAgICAgICAgIF9tb2R1bGVzW01hdGguZmxvb3IoaTIgLyAzKV1baTIgJSAzICsgX21vZHVsZUNvdW50IC0gOCAtIDNdID0gbW9kO1xuICAgICAgICB9XG4gICAgICAgIGZvciAodmFyIGkyID0gMDsgaTIgPCAxODsgaTIgKz0gMSkge1xuICAgICAgICAgIHZhciBtb2QgPSAhdGVzdCAmJiAoYml0cyA+PiBpMiAmIDEpID09IDE7XG4gICAgICAgICAgX21vZHVsZXNbaTIgJSAzICsgX21vZHVsZUNvdW50IC0gOCAtIDNdW01hdGguZmxvb3IoaTIgLyAzKV0gPSBtb2Q7XG4gICAgICAgIH1cbiAgICAgIH07XG4gICAgICB2YXIgc2V0dXBUeXBlSW5mbyA9IGZ1bmN0aW9uKHRlc3QsIG1hc2tQYXR0ZXJuKSB7XG4gICAgICAgIHZhciBkYXRhID0gX2Vycm9yQ29ycmVjdGlvbkxldmVsIDw8IDMgfCBtYXNrUGF0dGVybjtcbiAgICAgICAgdmFyIGJpdHMgPSBRUlV0aWwuZ2V0QkNIVHlwZUluZm8oZGF0YSk7XG4gICAgICAgIGZvciAodmFyIGkyID0gMDsgaTIgPCAxNTsgaTIgKz0gMSkge1xuICAgICAgICAgIHZhciBtb2QgPSAhdGVzdCAmJiAoYml0cyA+PiBpMiAmIDEpID09IDE7XG4gICAgICAgICAgaWYgKGkyIDwgNikge1xuICAgICAgICAgICAgX21vZHVsZXNbaTJdWzhdID0gbW9kO1xuICAgICAgICAgIH0gZWxzZSBpZiAoaTIgPCA4KSB7XG4gICAgICAgICAgICBfbW9kdWxlc1tpMiArIDFdWzhdID0gbW9kO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBfbW9kdWxlc1tfbW9kdWxlQ291bnQgLSAxNSArIGkyXVs4XSA9IG1vZDtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgZm9yICh2YXIgaTIgPSAwOyBpMiA8IDE1OyBpMiArPSAxKSB7XG4gICAgICAgICAgdmFyIG1vZCA9ICF0ZXN0ICYmIChiaXRzID4+IGkyICYgMSkgPT0gMTtcbiAgICAgICAgICBpZiAoaTIgPCA4KSB7XG4gICAgICAgICAgICBfbW9kdWxlc1s4XVtfbW9kdWxlQ291bnQgLSBpMiAtIDFdID0gbW9kO1xuICAgICAgICAgIH0gZWxzZSBpZiAoaTIgPCA5KSB7XG4gICAgICAgICAgICBfbW9kdWxlc1s4XVsxNSAtIGkyIC0gMSArIDFdID0gbW9kO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBfbW9kdWxlc1s4XVsxNSAtIGkyIC0gMV0gPSBtb2Q7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIF9tb2R1bGVzW19tb2R1bGVDb3VudCAtIDhdWzhdID0gIXRlc3Q7XG4gICAgICB9O1xuICAgICAgdmFyIG1hcERhdGEgPSBmdW5jdGlvbihkYXRhLCBtYXNrUGF0dGVybikge1xuICAgICAgICB2YXIgaW5jID0gLTE7XG4gICAgICAgIHZhciByb3cgPSBfbW9kdWxlQ291bnQgLSAxO1xuICAgICAgICB2YXIgYml0SW5kZXggPSA3O1xuICAgICAgICB2YXIgYnl0ZUluZGV4ID0gMDtcbiAgICAgICAgdmFyIG1hc2tGdW5jID0gUVJVdGlsLmdldE1hc2tGdW5jdGlvbihtYXNrUGF0dGVybik7XG4gICAgICAgIGZvciAodmFyIGNvbCA9IF9tb2R1bGVDb3VudCAtIDE7IGNvbCA+IDA7IGNvbCAtPSAyKSB7XG4gICAgICAgICAgaWYgKGNvbCA9PSA2KVxuICAgICAgICAgICAgY29sIC09IDE7XG4gICAgICAgICAgd2hpbGUgKHRydWUpIHtcbiAgICAgICAgICAgIGZvciAodmFyIGMyID0gMDsgYzIgPCAyOyBjMiArPSAxKSB7XG4gICAgICAgICAgICAgIGlmIChfbW9kdWxlc1tyb3ddW2NvbCAtIGMyXSA9PSBudWxsKSB7XG4gICAgICAgICAgICAgICAgdmFyIGRhcmsgPSBmYWxzZTtcbiAgICAgICAgICAgICAgICBpZiAoYnl0ZUluZGV4IDwgZGF0YS5sZW5ndGgpIHtcbiAgICAgICAgICAgICAgICAgIGRhcmsgPSAoZGF0YVtieXRlSW5kZXhdID4+PiBiaXRJbmRleCAmIDEpID09IDE7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHZhciBtYXNrID0gbWFza0Z1bmMocm93LCBjb2wgLSBjMik7XG4gICAgICAgICAgICAgICAgaWYgKG1hc2spIHtcbiAgICAgICAgICAgICAgICAgIGRhcmsgPSAhZGFyaztcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgX21vZHVsZXNbcm93XVtjb2wgLSBjMl0gPSBkYXJrO1xuICAgICAgICAgICAgICAgIGJpdEluZGV4IC09IDE7XG4gICAgICAgICAgICAgICAgaWYgKGJpdEluZGV4ID09IC0xKSB7XG4gICAgICAgICAgICAgICAgICBieXRlSW5kZXggKz0gMTtcbiAgICAgICAgICAgICAgICAgIGJpdEluZGV4ID0gNztcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJvdyArPSBpbmM7XG4gICAgICAgICAgICBpZiAocm93IDwgMCB8fCBfbW9kdWxlQ291bnQgPD0gcm93KSB7XG4gICAgICAgICAgICAgIHJvdyAtPSBpbmM7XG4gICAgICAgICAgICAgIGluYyA9IC1pbmM7XG4gICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfTtcbiAgICAgIHZhciBjcmVhdGVCeXRlcyA9IGZ1bmN0aW9uKGJ1ZmZlciwgcnNCbG9ja3MpIHtcbiAgICAgICAgdmFyIG9mZnNldCA9IDA7XG4gICAgICAgIHZhciBtYXhEY0NvdW50ID0gMDtcbiAgICAgICAgdmFyIG1heEVjQ291bnQgPSAwO1xuICAgICAgICB2YXIgZGNkYXRhID0gbmV3IEFycmF5KHJzQmxvY2tzLmxlbmd0aCk7XG4gICAgICAgIHZhciBlY2RhdGEgPSBuZXcgQXJyYXkocnNCbG9ja3MubGVuZ3RoKTtcbiAgICAgICAgZm9yICh2YXIgciA9IDA7IHIgPCByc0Jsb2Nrcy5sZW5ndGg7IHIgKz0gMSkge1xuICAgICAgICAgIHZhciBkY0NvdW50ID0gcnNCbG9ja3Nbcl0uZGF0YUNvdW50O1xuICAgICAgICAgIHZhciBlY0NvdW50ID0gcnNCbG9ja3Nbcl0udG90YWxDb3VudCAtIGRjQ291bnQ7XG4gICAgICAgICAgbWF4RGNDb3VudCA9IE1hdGgubWF4KG1heERjQ291bnQsIGRjQ291bnQpO1xuICAgICAgICAgIG1heEVjQ291bnQgPSBNYXRoLm1heChtYXhFY0NvdW50LCBlY0NvdW50KTtcbiAgICAgICAgICBkY2RhdGFbcl0gPSBuZXcgQXJyYXkoZGNDb3VudCk7XG4gICAgICAgICAgZm9yICh2YXIgaTIgPSAwOyBpMiA8IGRjZGF0YVtyXS5sZW5ndGg7IGkyICs9IDEpIHtcbiAgICAgICAgICAgIGRjZGF0YVtyXVtpMl0gPSAyNTUgJiBidWZmZXIuZ2V0QnVmZmVyKClbaTIgKyBvZmZzZXRdO1xuICAgICAgICAgIH1cbiAgICAgICAgICBvZmZzZXQgKz0gZGNDb3VudDtcbiAgICAgICAgICB2YXIgcnNQb2x5ID0gUVJVdGlsLmdldEVycm9yQ29ycmVjdFBvbHlub21pYWwoZWNDb3VudCk7XG4gICAgICAgICAgdmFyIHJhd1BvbHkgPSBxclBvbHlub21pYWwoZGNkYXRhW3JdLCByc1BvbHkuZ2V0TGVuZ3RoKCkgLSAxKTtcbiAgICAgICAgICB2YXIgbW9kUG9seSA9IHJhd1BvbHkubW9kKHJzUG9seSk7XG4gICAgICAgICAgZWNkYXRhW3JdID0gbmV3IEFycmF5KHJzUG9seS5nZXRMZW5ndGgoKSAtIDEpO1xuICAgICAgICAgIGZvciAodmFyIGkyID0gMDsgaTIgPCBlY2RhdGFbcl0ubGVuZ3RoOyBpMiArPSAxKSB7XG4gICAgICAgICAgICB2YXIgbW9kSW5kZXggPSBpMiArIG1vZFBvbHkuZ2V0TGVuZ3RoKCkgLSBlY2RhdGFbcl0ubGVuZ3RoO1xuICAgICAgICAgICAgZWNkYXRhW3JdW2kyXSA9IG1vZEluZGV4ID49IDAgPyBtb2RQb2x5LmdldEF0KG1vZEluZGV4KSA6IDA7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHZhciB0b3RhbENvZGVDb3VudCA9IDA7XG4gICAgICAgIGZvciAodmFyIGkyID0gMDsgaTIgPCByc0Jsb2Nrcy5sZW5ndGg7IGkyICs9IDEpIHtcbiAgICAgICAgICB0b3RhbENvZGVDb3VudCArPSByc0Jsb2Nrc1tpMl0udG90YWxDb3VudDtcbiAgICAgICAgfVxuICAgICAgICB2YXIgZGF0YSA9IG5ldyBBcnJheSh0b3RhbENvZGVDb3VudCk7XG4gICAgICAgIHZhciBpbmRleCA9IDA7XG4gICAgICAgIGZvciAodmFyIGkyID0gMDsgaTIgPCBtYXhEY0NvdW50OyBpMiArPSAxKSB7XG4gICAgICAgICAgZm9yICh2YXIgciA9IDA7IHIgPCByc0Jsb2Nrcy5sZW5ndGg7IHIgKz0gMSkge1xuICAgICAgICAgICAgaWYgKGkyIDwgZGNkYXRhW3JdLmxlbmd0aCkge1xuICAgICAgICAgICAgICBkYXRhW2luZGV4XSA9IGRjZGF0YVtyXVtpMl07XG4gICAgICAgICAgICAgIGluZGV4ICs9IDE7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGZvciAodmFyIGkyID0gMDsgaTIgPCBtYXhFY0NvdW50OyBpMiArPSAxKSB7XG4gICAgICAgICAgZm9yICh2YXIgciA9IDA7IHIgPCByc0Jsb2Nrcy5sZW5ndGg7IHIgKz0gMSkge1xuICAgICAgICAgICAgaWYgKGkyIDwgZWNkYXRhW3JdLmxlbmd0aCkge1xuICAgICAgICAgICAgICBkYXRhW2luZGV4XSA9IGVjZGF0YVtyXVtpMl07XG4gICAgICAgICAgICAgIGluZGV4ICs9IDE7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiBkYXRhO1xuICAgICAgfTtcbiAgICAgIHZhciBjcmVhdGVEYXRhID0gZnVuY3Rpb24odHlwZU51bWJlcjIsIGVycm9yQ29ycmVjdGlvbkxldmVsMiwgZGF0YUxpc3QpIHtcbiAgICAgICAgdmFyIHJzQmxvY2tzID0gUVJSU0Jsb2NrLmdldFJTQmxvY2tzKHR5cGVOdW1iZXIyLCBlcnJvckNvcnJlY3Rpb25MZXZlbDIpO1xuICAgICAgICB2YXIgYnVmZmVyID0gcXJCaXRCdWZmZXIoKTtcbiAgICAgICAgZm9yICh2YXIgaTIgPSAwOyBpMiA8IGRhdGFMaXN0Lmxlbmd0aDsgaTIgKz0gMSkge1xuICAgICAgICAgIHZhciBkYXRhID0gZGF0YUxpc3RbaTJdO1xuICAgICAgICAgIGJ1ZmZlci5wdXQoZGF0YS5nZXRNb2RlKCksIDQpO1xuICAgICAgICAgIGJ1ZmZlci5wdXQoZGF0YS5nZXRMZW5ndGgoKSwgUVJVdGlsLmdldExlbmd0aEluQml0cyhkYXRhLmdldE1vZGUoKSwgdHlwZU51bWJlcjIpKTtcbiAgICAgICAgICBkYXRhLndyaXRlKGJ1ZmZlcik7XG4gICAgICAgIH1cbiAgICAgICAgdmFyIHRvdGFsRGF0YUNvdW50ID0gMDtcbiAgICAgICAgZm9yICh2YXIgaTIgPSAwOyBpMiA8IHJzQmxvY2tzLmxlbmd0aDsgaTIgKz0gMSkge1xuICAgICAgICAgIHRvdGFsRGF0YUNvdW50ICs9IHJzQmxvY2tzW2kyXS5kYXRhQ291bnQ7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGJ1ZmZlci5nZXRMZW5ndGhJbkJpdHMoKSA+IHRvdGFsRGF0YUNvdW50ICogOCkge1xuICAgICAgICAgIHRocm93IFwiY29kZSBsZW5ndGggb3ZlcmZsb3cuIChcIiArIGJ1ZmZlci5nZXRMZW5ndGhJbkJpdHMoKSArIFwiPlwiICsgdG90YWxEYXRhQ291bnQgKiA4ICsgXCIpXCI7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGJ1ZmZlci5nZXRMZW5ndGhJbkJpdHMoKSArIDQgPD0gdG90YWxEYXRhQ291bnQgKiA4KSB7XG4gICAgICAgICAgYnVmZmVyLnB1dCgwLCA0KTtcbiAgICAgICAgfVxuICAgICAgICB3aGlsZSAoYnVmZmVyLmdldExlbmd0aEluQml0cygpICUgOCAhPSAwKSB7XG4gICAgICAgICAgYnVmZmVyLnB1dEJpdChmYWxzZSk7XG4gICAgICAgIH1cbiAgICAgICAgd2hpbGUgKHRydWUpIHtcbiAgICAgICAgICBpZiAoYnVmZmVyLmdldExlbmd0aEluQml0cygpID49IHRvdGFsRGF0YUNvdW50ICogOCkge1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgfVxuICAgICAgICAgIGJ1ZmZlci5wdXQoUEFEMCwgOCk7XG4gICAgICAgICAgaWYgKGJ1ZmZlci5nZXRMZW5ndGhJbkJpdHMoKSA+PSB0b3RhbERhdGFDb3VudCAqIDgpIHtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgIH1cbiAgICAgICAgICBidWZmZXIucHV0KFBBRDEsIDgpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBjcmVhdGVCeXRlcyhidWZmZXIsIHJzQmxvY2tzKTtcbiAgICAgIH07XG4gICAgICBfdGhpcy5hZGREYXRhID0gZnVuY3Rpb24oZGF0YSwgbW9kZSkge1xuICAgICAgICBtb2RlID0gbW9kZSB8fCBcIkJ5dGVcIjtcbiAgICAgICAgdmFyIG5ld0RhdGEgPSBudWxsO1xuICAgICAgICBzd2l0Y2ggKG1vZGUpIHtcbiAgICAgICAgICBjYXNlIFwiTnVtZXJpY1wiOlxuICAgICAgICAgICAgbmV3RGF0YSA9IHFyTnVtYmVyKGRhdGEpO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgY2FzZSBcIkFscGhhbnVtZXJpY1wiOlxuICAgICAgICAgICAgbmV3RGF0YSA9IHFyQWxwaGFOdW0oZGF0YSk7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgICBjYXNlIFwiQnl0ZVwiOlxuICAgICAgICAgICAgbmV3RGF0YSA9IHFyOEJpdEJ5dGUoZGF0YSk7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgICBjYXNlIFwiS2FuamlcIjpcbiAgICAgICAgICAgIG5ld0RhdGEgPSBxckthbmppKGRhdGEpO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgIHRocm93IFwibW9kZTpcIiArIG1vZGU7XG4gICAgICAgIH1cbiAgICAgICAgX2RhdGFMaXN0LnB1c2gobmV3RGF0YSk7XG4gICAgICAgIF9kYXRhQ2FjaGUgPSBudWxsO1xuICAgICAgfTtcbiAgICAgIF90aGlzLmlzRGFyayA9IGZ1bmN0aW9uKHJvdywgY29sKSB7XG4gICAgICAgIGlmIChyb3cgPCAwIHx8IF9tb2R1bGVDb3VudCA8PSByb3cgfHwgY29sIDwgMCB8fCBfbW9kdWxlQ291bnQgPD0gY29sKSB7XG4gICAgICAgICAgdGhyb3cgcm93ICsgXCIsXCIgKyBjb2w7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIF9tb2R1bGVzW3Jvd11bY29sXTtcbiAgICAgIH07XG4gICAgICBfdGhpcy5nZXRNb2R1bGVDb3VudCA9IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gX21vZHVsZUNvdW50O1xuICAgICAgfTtcbiAgICAgIF90aGlzLm1ha2UgPSBmdW5jdGlvbigpIHtcbiAgICAgICAgaWYgKF90eXBlTnVtYmVyIDwgMSkge1xuICAgICAgICAgIHZhciB0eXBlTnVtYmVyMiA9IDE7XG4gICAgICAgICAgZm9yICg7IHR5cGVOdW1iZXIyIDwgNDA7IHR5cGVOdW1iZXIyKyspIHtcbiAgICAgICAgICAgIHZhciByc0Jsb2NrcyA9IFFSUlNCbG9jay5nZXRSU0Jsb2Nrcyh0eXBlTnVtYmVyMiwgX2Vycm9yQ29ycmVjdGlvbkxldmVsKTtcbiAgICAgICAgICAgIHZhciBidWZmZXIgPSBxckJpdEJ1ZmZlcigpO1xuICAgICAgICAgICAgZm9yICh2YXIgaTIgPSAwOyBpMiA8IF9kYXRhTGlzdC5sZW5ndGg7IGkyKyspIHtcbiAgICAgICAgICAgICAgdmFyIGRhdGEgPSBfZGF0YUxpc3RbaTJdO1xuICAgICAgICAgICAgICBidWZmZXIucHV0KGRhdGEuZ2V0TW9kZSgpLCA0KTtcbiAgICAgICAgICAgICAgYnVmZmVyLnB1dChkYXRhLmdldExlbmd0aCgpLCBRUlV0aWwuZ2V0TGVuZ3RoSW5CaXRzKGRhdGEuZ2V0TW9kZSgpLCB0eXBlTnVtYmVyMikpO1xuICAgICAgICAgICAgICBkYXRhLndyaXRlKGJ1ZmZlcik7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB2YXIgdG90YWxEYXRhQ291bnQgPSAwO1xuICAgICAgICAgICAgZm9yICh2YXIgaTIgPSAwOyBpMiA8IHJzQmxvY2tzLmxlbmd0aDsgaTIrKykge1xuICAgICAgICAgICAgICB0b3RhbERhdGFDb3VudCArPSByc0Jsb2Nrc1tpMl0uZGF0YUNvdW50O1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKGJ1ZmZlci5nZXRMZW5ndGhJbkJpdHMoKSA8PSB0b3RhbERhdGFDb3VudCAqIDgpIHtcbiAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICAgIF90eXBlTnVtYmVyID0gdHlwZU51bWJlcjI7XG4gICAgICAgIH1cbiAgICAgICAgbWFrZUltcGwoZmFsc2UsIGdldEJlc3RNYXNrUGF0dGVybigpKTtcbiAgICAgIH07XG4gICAgICBfdGhpcy5jcmVhdGVUYWJsZVRhZyA9IGZ1bmN0aW9uKGNlbGxTaXplLCBtYXJnaW4pIHtcbiAgICAgICAgY2VsbFNpemUgPSBjZWxsU2l6ZSB8fCAyO1xuICAgICAgICBtYXJnaW4gPSB0eXBlb2YgbWFyZ2luID09IFwidW5kZWZpbmVkXCIgPyBjZWxsU2l6ZSAqIDQgOiBtYXJnaW47XG4gICAgICAgIHZhciBxckh0bWwgPSBcIlwiO1xuICAgICAgICBxckh0bWwgKz0gJzx0YWJsZSBzdHlsZT1cIic7XG4gICAgICAgIHFySHRtbCArPSBcIiBib3JkZXItd2lkdGg6IDBweDsgYm9yZGVyLXN0eWxlOiBub25lO1wiO1xuICAgICAgICBxckh0bWwgKz0gXCIgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTtcIjtcbiAgICAgICAgcXJIdG1sICs9IFwiIHBhZGRpbmc6IDBweDsgbWFyZ2luOiBcIiArIG1hcmdpbiArIFwicHg7XCI7XG4gICAgICAgIHFySHRtbCArPSAnXCI+JztcbiAgICAgICAgcXJIdG1sICs9IFwiPHRib2R5PlwiO1xuICAgICAgICBmb3IgKHZhciByID0gMDsgciA8IF90aGlzLmdldE1vZHVsZUNvdW50KCk7IHIgKz0gMSkge1xuICAgICAgICAgIHFySHRtbCArPSBcIjx0cj5cIjtcbiAgICAgICAgICBmb3IgKHZhciBjMiA9IDA7IGMyIDwgX3RoaXMuZ2V0TW9kdWxlQ291bnQoKTsgYzIgKz0gMSkge1xuICAgICAgICAgICAgcXJIdG1sICs9ICc8dGQgc3R5bGU9XCInO1xuICAgICAgICAgICAgcXJIdG1sICs9IFwiIGJvcmRlci13aWR0aDogMHB4OyBib3JkZXItc3R5bGU6IG5vbmU7XCI7XG4gICAgICAgICAgICBxckh0bWwgKz0gXCIgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTtcIjtcbiAgICAgICAgICAgIHFySHRtbCArPSBcIiBwYWRkaW5nOiAwcHg7IG1hcmdpbjogMHB4O1wiO1xuICAgICAgICAgICAgcXJIdG1sICs9IFwiIHdpZHRoOiBcIiArIGNlbGxTaXplICsgXCJweDtcIjtcbiAgICAgICAgICAgIHFySHRtbCArPSBcIiBoZWlnaHQ6IFwiICsgY2VsbFNpemUgKyBcInB4O1wiO1xuICAgICAgICAgICAgcXJIdG1sICs9IFwiIGJhY2tncm91bmQtY29sb3I6IFwiO1xuICAgICAgICAgICAgcXJIdG1sICs9IF90aGlzLmlzRGFyayhyLCBjMikgPyBcIiMwMDAwMDBcIiA6IFwiI2ZmZmZmZlwiO1xuICAgICAgICAgICAgcXJIdG1sICs9IFwiO1wiO1xuICAgICAgICAgICAgcXJIdG1sICs9ICdcIi8+JztcbiAgICAgICAgICB9XG4gICAgICAgICAgcXJIdG1sICs9IFwiPC90cj5cIjtcbiAgICAgICAgfVxuICAgICAgICBxckh0bWwgKz0gXCI8L3Rib2R5PlwiO1xuICAgICAgICBxckh0bWwgKz0gXCI8L3RhYmxlPlwiO1xuICAgICAgICByZXR1cm4gcXJIdG1sO1xuICAgICAgfTtcbiAgICAgIF90aGlzLmNyZWF0ZVN2Z1RhZyA9IGZ1bmN0aW9uKGNlbGxTaXplLCBtYXJnaW4sIGFsdCwgdGl0bGUpIHtcbiAgICAgICAgdmFyIG9wdHMgPSB7fTtcbiAgICAgICAgaWYgKHR5cGVvZiBhcmd1bWVudHNbMF0gPT0gXCJvYmplY3RcIikge1xuICAgICAgICAgIG9wdHMgPSBhcmd1bWVudHNbMF07XG4gICAgICAgICAgY2VsbFNpemUgPSBvcHRzLmNlbGxTaXplO1xuICAgICAgICAgIG1hcmdpbiA9IG9wdHMubWFyZ2luO1xuICAgICAgICAgIGFsdCA9IG9wdHMuYWx0O1xuICAgICAgICAgIHRpdGxlID0gb3B0cy50aXRsZTtcbiAgICAgICAgfVxuICAgICAgICBjZWxsU2l6ZSA9IGNlbGxTaXplIHx8IDI7XG4gICAgICAgIG1hcmdpbiA9IHR5cGVvZiBtYXJnaW4gPT0gXCJ1bmRlZmluZWRcIiA/IGNlbGxTaXplICogNCA6IG1hcmdpbjtcbiAgICAgICAgYWx0ID0gdHlwZW9mIGFsdCA9PT0gXCJzdHJpbmdcIiA/IHsgdGV4dDogYWx0IH0gOiBhbHQgfHwge307XG4gICAgICAgIGFsdC50ZXh0ID0gYWx0LnRleHQgfHwgbnVsbDtcbiAgICAgICAgYWx0LmlkID0gYWx0LnRleHQgPyBhbHQuaWQgfHwgXCJxcmNvZGUtZGVzY3JpcHRpb25cIiA6IG51bGw7XG4gICAgICAgIHRpdGxlID0gdHlwZW9mIHRpdGxlID09PSBcInN0cmluZ1wiID8geyB0ZXh0OiB0aXRsZSB9IDogdGl0bGUgfHwge307XG4gICAgICAgIHRpdGxlLnRleHQgPSB0aXRsZS50ZXh0IHx8IG51bGw7XG4gICAgICAgIHRpdGxlLmlkID0gdGl0bGUudGV4dCA/IHRpdGxlLmlkIHx8IFwicXJjb2RlLXRpdGxlXCIgOiBudWxsO1xuICAgICAgICB2YXIgc2l6ZSA9IF90aGlzLmdldE1vZHVsZUNvdW50KCkgKiBjZWxsU2l6ZSArIG1hcmdpbiAqIDI7XG4gICAgICAgIHZhciBjMiwgbWMsIHIsIG1yLCBxclN2ZyA9IFwiXCIsIHJlY3Q7XG4gICAgICAgIHJlY3QgPSBcImxcIiArIGNlbGxTaXplICsgXCIsMCAwLFwiICsgY2VsbFNpemUgKyBcIiAtXCIgKyBjZWxsU2l6ZSArIFwiLDAgMCwtXCIgKyBjZWxsU2l6ZSArIFwieiBcIjtcbiAgICAgICAgcXJTdmcgKz0gJzxzdmcgdmVyc2lvbj1cIjEuMVwiIHhtbG5zPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIic7XG4gICAgICAgIHFyU3ZnICs9ICFvcHRzLnNjYWxhYmxlID8gJyB3aWR0aD1cIicgKyBzaXplICsgJ3B4XCIgaGVpZ2h0PVwiJyArIHNpemUgKyAncHhcIicgOiBcIlwiO1xuICAgICAgICBxclN2ZyArPSAnIHZpZXdCb3g9XCIwIDAgJyArIHNpemUgKyBcIiBcIiArIHNpemUgKyAnXCIgJztcbiAgICAgICAgcXJTdmcgKz0gJyBwcmVzZXJ2ZUFzcGVjdFJhdGlvPVwieE1pbllNaW4gbWVldFwiJztcbiAgICAgICAgcXJTdmcgKz0gdGl0bGUudGV4dCB8fCBhbHQudGV4dCA/ICcgcm9sZT1cImltZ1wiIGFyaWEtbGFiZWxsZWRieT1cIicgKyBlc2NhcGVYbWwoW3RpdGxlLmlkLCBhbHQuaWRdLmpvaW4oXCIgXCIpLnRyaW0oKSkgKyAnXCInIDogXCJcIjtcbiAgICAgICAgcXJTdmcgKz0gXCI+XCI7XG4gICAgICAgIHFyU3ZnICs9IHRpdGxlLnRleHQgPyAnPHRpdGxlIGlkPVwiJyArIGVzY2FwZVhtbCh0aXRsZS5pZCkgKyAnXCI+JyArIGVzY2FwZVhtbCh0aXRsZS50ZXh0KSArIFwiPC90aXRsZT5cIiA6IFwiXCI7XG4gICAgICAgIHFyU3ZnICs9IGFsdC50ZXh0ID8gJzxkZXNjcmlwdGlvbiBpZD1cIicgKyBlc2NhcGVYbWwoYWx0LmlkKSArICdcIj4nICsgZXNjYXBlWG1sKGFsdC50ZXh0KSArIFwiPC9kZXNjcmlwdGlvbj5cIiA6IFwiXCI7XG4gICAgICAgIHFyU3ZnICs9ICc8cmVjdCB3aWR0aD1cIjEwMCVcIiBoZWlnaHQ9XCIxMDAlXCIgZmlsbD1cIndoaXRlXCIgY3g9XCIwXCIgY3k9XCIwXCIvPic7XG4gICAgICAgIHFyU3ZnICs9ICc8cGF0aCBkPVwiJztcbiAgICAgICAgZm9yIChyID0gMDsgciA8IF90aGlzLmdldE1vZHVsZUNvdW50KCk7IHIgKz0gMSkge1xuICAgICAgICAgIG1yID0gciAqIGNlbGxTaXplICsgbWFyZ2luO1xuICAgICAgICAgIGZvciAoYzIgPSAwOyBjMiA8IF90aGlzLmdldE1vZHVsZUNvdW50KCk7IGMyICs9IDEpIHtcbiAgICAgICAgICAgIGlmIChfdGhpcy5pc0RhcmsociwgYzIpKSB7XG4gICAgICAgICAgICAgIG1jID0gYzIgKiBjZWxsU2l6ZSArIG1hcmdpbjtcbiAgICAgICAgICAgICAgcXJTdmcgKz0gXCJNXCIgKyBtYyArIFwiLFwiICsgbXIgKyByZWN0O1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBxclN2ZyArPSAnXCIgc3Ryb2tlPVwidHJhbnNwYXJlbnRcIiBmaWxsPVwiYmxhY2tcIi8+JztcbiAgICAgICAgcXJTdmcgKz0gXCI8L3N2Zz5cIjtcbiAgICAgICAgcmV0dXJuIHFyU3ZnO1xuICAgICAgfTtcbiAgICAgIF90aGlzLmNyZWF0ZURhdGFVUkwgPSBmdW5jdGlvbihjZWxsU2l6ZSwgbWFyZ2luKSB7XG4gICAgICAgIGNlbGxTaXplID0gY2VsbFNpemUgfHwgMjtcbiAgICAgICAgbWFyZ2luID0gdHlwZW9mIG1hcmdpbiA9PSBcInVuZGVmaW5lZFwiID8gY2VsbFNpemUgKiA0IDogbWFyZ2luO1xuICAgICAgICB2YXIgc2l6ZSA9IF90aGlzLmdldE1vZHVsZUNvdW50KCkgKiBjZWxsU2l6ZSArIG1hcmdpbiAqIDI7XG4gICAgICAgIHZhciBtaW4yID0gbWFyZ2luO1xuICAgICAgICB2YXIgbWF4MiA9IHNpemUgLSBtYXJnaW47XG4gICAgICAgIHJldHVybiBjcmVhdGVEYXRhVVJMKHNpemUsIHNpemUsIGZ1bmN0aW9uKHgsIHkpIHtcbiAgICAgICAgICBpZiAobWluMiA8PSB4ICYmIHggPCBtYXgyICYmIG1pbjIgPD0geSAmJiB5IDwgbWF4Mikge1xuICAgICAgICAgICAgdmFyIGMyID0gTWF0aC5mbG9vcigoeCAtIG1pbjIpIC8gY2VsbFNpemUpO1xuICAgICAgICAgICAgdmFyIHIgPSBNYXRoLmZsb29yKCh5IC0gbWluMikgLyBjZWxsU2l6ZSk7XG4gICAgICAgICAgICByZXR1cm4gX3RoaXMuaXNEYXJrKHIsIGMyKSA/IDAgOiAxO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICByZXR1cm4gMTtcbiAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgfTtcbiAgICAgIF90aGlzLmNyZWF0ZUltZ1RhZyA9IGZ1bmN0aW9uKGNlbGxTaXplLCBtYXJnaW4sIGFsdCkge1xuICAgICAgICBjZWxsU2l6ZSA9IGNlbGxTaXplIHx8IDI7XG4gICAgICAgIG1hcmdpbiA9IHR5cGVvZiBtYXJnaW4gPT0gXCJ1bmRlZmluZWRcIiA/IGNlbGxTaXplICogNCA6IG1hcmdpbjtcbiAgICAgICAgdmFyIHNpemUgPSBfdGhpcy5nZXRNb2R1bGVDb3VudCgpICogY2VsbFNpemUgKyBtYXJnaW4gKiAyO1xuICAgICAgICB2YXIgaW1nID0gXCJcIjtcbiAgICAgICAgaW1nICs9IFwiPGltZ1wiO1xuICAgICAgICBpbWcgKz0gJyBzcmM9XCInO1xuICAgICAgICBpbWcgKz0gX3RoaXMuY3JlYXRlRGF0YVVSTChjZWxsU2l6ZSwgbWFyZ2luKTtcbiAgICAgICAgaW1nICs9ICdcIic7XG4gICAgICAgIGltZyArPSAnIHdpZHRoPVwiJztcbiAgICAgICAgaW1nICs9IHNpemU7XG4gICAgICAgIGltZyArPSAnXCInO1xuICAgICAgICBpbWcgKz0gJyBoZWlnaHQ9XCInO1xuICAgICAgICBpbWcgKz0gc2l6ZTtcbiAgICAgICAgaW1nICs9ICdcIic7XG4gICAgICAgIGlmIChhbHQpIHtcbiAgICAgICAgICBpbWcgKz0gJyBhbHQ9XCInO1xuICAgICAgICAgIGltZyArPSBlc2NhcGVYbWwoYWx0KTtcbiAgICAgICAgICBpbWcgKz0gJ1wiJztcbiAgICAgICAgfVxuICAgICAgICBpbWcgKz0gXCIvPlwiO1xuICAgICAgICByZXR1cm4gaW1nO1xuICAgICAgfTtcbiAgICAgIHZhciBlc2NhcGVYbWwgPSBmdW5jdGlvbihzMikge1xuICAgICAgICB2YXIgZXNjYXBlZCA9IFwiXCI7XG4gICAgICAgIGZvciAodmFyIGkyID0gMDsgaTIgPCBzMi5sZW5ndGg7IGkyICs9IDEpIHtcbiAgICAgICAgICB2YXIgYzIgPSBzMi5jaGFyQXQoaTIpO1xuICAgICAgICAgIHN3aXRjaCAoYzIpIHtcbiAgICAgICAgICAgIGNhc2UgXCI8XCI6XG4gICAgICAgICAgICAgIGVzY2FwZWQgKz0gXCImbHQ7XCI7XG4gICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSBcIj5cIjpcbiAgICAgICAgICAgICAgZXNjYXBlZCArPSBcIiZndDtcIjtcbiAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlIFwiJlwiOlxuICAgICAgICAgICAgICBlc2NhcGVkICs9IFwiJmFtcDtcIjtcbiAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlICdcIic6XG4gICAgICAgICAgICAgIGVzY2FwZWQgKz0gXCImcXVvdDtcIjtcbiAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgICBlc2NhcGVkICs9IGMyO1xuICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGVzY2FwZWQ7XG4gICAgICB9O1xuICAgICAgdmFyIF9jcmVhdGVIYWxmQVNDSUkgPSBmdW5jdGlvbihtYXJnaW4pIHtcbiAgICAgICAgdmFyIGNlbGxTaXplID0gMTtcbiAgICAgICAgbWFyZ2luID0gdHlwZW9mIG1hcmdpbiA9PSBcInVuZGVmaW5lZFwiID8gY2VsbFNpemUgKiAyIDogbWFyZ2luO1xuICAgICAgICB2YXIgc2l6ZSA9IF90aGlzLmdldE1vZHVsZUNvdW50KCkgKiBjZWxsU2l6ZSArIG1hcmdpbiAqIDI7XG4gICAgICAgIHZhciBtaW4yID0gbWFyZ2luO1xuICAgICAgICB2YXIgbWF4MiA9IHNpemUgLSBtYXJnaW47XG4gICAgICAgIHZhciB5LCB4LCByMSwgcjIsIHAyO1xuICAgICAgICB2YXIgYmxvY2tzID0ge1xuICAgICAgICAgIFwiXFx1MjU4OFxcdTI1ODhcIjogXCJcXHUyNTg4XCIsXG4gICAgICAgICAgXCJcXHUyNTg4IFwiOiBcIlxcdTI1ODBcIixcbiAgICAgICAgICBcIiBcXHUyNTg4XCI6IFwiXFx1MjU4NFwiLFxuICAgICAgICAgIFwiICBcIjogXCIgXCJcbiAgICAgICAgfTtcbiAgICAgICAgdmFyIGJsb2Nrc0xhc3RMaW5lTm9NYXJnaW4gPSB7XG4gICAgICAgICAgXCJcXHUyNTg4XFx1MjU4OFwiOiBcIlxcdTI1ODBcIixcbiAgICAgICAgICBcIlxcdTI1ODggXCI6IFwiXFx1MjU4MFwiLFxuICAgICAgICAgIFwiIFxcdTI1ODhcIjogXCIgXCIsXG4gICAgICAgICAgXCIgIFwiOiBcIiBcIlxuICAgICAgICB9O1xuICAgICAgICB2YXIgYXNjaWkgPSBcIlwiO1xuICAgICAgICBmb3IgKHkgPSAwOyB5IDwgc2l6ZTsgeSArPSAyKSB7XG4gICAgICAgICAgcjEgPSBNYXRoLmZsb29yKCh5IC0gbWluMikgLyBjZWxsU2l6ZSk7XG4gICAgICAgICAgcjIgPSBNYXRoLmZsb29yKCh5ICsgMSAtIG1pbjIpIC8gY2VsbFNpemUpO1xuICAgICAgICAgIGZvciAoeCA9IDA7IHggPCBzaXplOyB4ICs9IDEpIHtcbiAgICAgICAgICAgIHAyID0gXCJcXHUyNTg4XCI7XG4gICAgICAgICAgICBpZiAobWluMiA8PSB4ICYmIHggPCBtYXgyICYmIG1pbjIgPD0geSAmJiB5IDwgbWF4MiAmJiBfdGhpcy5pc0RhcmsocjEsIE1hdGguZmxvb3IoKHggLSBtaW4yKSAvIGNlbGxTaXplKSkpIHtcbiAgICAgICAgICAgICAgcDIgPSBcIiBcIjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChtaW4yIDw9IHggJiYgeCA8IG1heDIgJiYgbWluMiA8PSB5ICsgMSAmJiB5ICsgMSA8IG1heDIgJiYgX3RoaXMuaXNEYXJrKHIyLCBNYXRoLmZsb29yKCh4IC0gbWluMikgLyBjZWxsU2l6ZSkpKSB7XG4gICAgICAgICAgICAgIHAyICs9IFwiIFwiO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgcDIgKz0gXCJcXHUyNTg4XCI7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBhc2NpaSArPSBtYXJnaW4gPCAxICYmIHkgKyAxID49IG1heDIgPyBibG9ja3NMYXN0TGluZU5vTWFyZ2luW3AyXSA6IGJsb2Nrc1twMl07XG4gICAgICAgICAgfVxuICAgICAgICAgIGFzY2lpICs9IFwiXFxuXCI7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHNpemUgJSAyICYmIG1hcmdpbiA+IDApIHtcbiAgICAgICAgICByZXR1cm4gYXNjaWkuc3Vic3RyaW5nKDAsIGFzY2lpLmxlbmd0aCAtIHNpemUgLSAxKSArIEFycmF5KHNpemUgKyAxKS5qb2luKFwiXFx1MjU4MFwiKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gYXNjaWkuc3Vic3RyaW5nKDAsIGFzY2lpLmxlbmd0aCAtIDEpO1xuICAgICAgfTtcbiAgICAgIF90aGlzLmNyZWF0ZUFTQ0lJID0gZnVuY3Rpb24oY2VsbFNpemUsIG1hcmdpbikge1xuICAgICAgICBjZWxsU2l6ZSA9IGNlbGxTaXplIHx8IDE7XG4gICAgICAgIGlmIChjZWxsU2l6ZSA8IDIpIHtcbiAgICAgICAgICByZXR1cm4gX2NyZWF0ZUhhbGZBU0NJSShtYXJnaW4pO1xuICAgICAgICB9XG4gICAgICAgIGNlbGxTaXplIC09IDE7XG4gICAgICAgIG1hcmdpbiA9IHR5cGVvZiBtYXJnaW4gPT0gXCJ1bmRlZmluZWRcIiA/IGNlbGxTaXplICogMiA6IG1hcmdpbjtcbiAgICAgICAgdmFyIHNpemUgPSBfdGhpcy5nZXRNb2R1bGVDb3VudCgpICogY2VsbFNpemUgKyBtYXJnaW4gKiAyO1xuICAgICAgICB2YXIgbWluMiA9IG1hcmdpbjtcbiAgICAgICAgdmFyIG1heDIgPSBzaXplIC0gbWFyZ2luO1xuICAgICAgICB2YXIgeSwgeCwgciwgcDI7XG4gICAgICAgIHZhciB3aGl0ZSA9IEFycmF5KGNlbGxTaXplICsgMSkuam9pbihcIlxcdTI1ODhcXHUyNTg4XCIpO1xuICAgICAgICB2YXIgYmxhY2sgPSBBcnJheShjZWxsU2l6ZSArIDEpLmpvaW4oXCIgIFwiKTtcbiAgICAgICAgdmFyIGFzY2lpID0gXCJcIjtcbiAgICAgICAgdmFyIGxpbmUgPSBcIlwiO1xuICAgICAgICBmb3IgKHkgPSAwOyB5IDwgc2l6ZTsgeSArPSAxKSB7XG4gICAgICAgICAgciA9IE1hdGguZmxvb3IoKHkgLSBtaW4yKSAvIGNlbGxTaXplKTtcbiAgICAgICAgICBsaW5lID0gXCJcIjtcbiAgICAgICAgICBmb3IgKHggPSAwOyB4IDwgc2l6ZTsgeCArPSAxKSB7XG4gICAgICAgICAgICBwMiA9IDE7XG4gICAgICAgICAgICBpZiAobWluMiA8PSB4ICYmIHggPCBtYXgyICYmIG1pbjIgPD0geSAmJiB5IDwgbWF4MiAmJiBfdGhpcy5pc0RhcmsociwgTWF0aC5mbG9vcigoeCAtIG1pbjIpIC8gY2VsbFNpemUpKSkge1xuICAgICAgICAgICAgICBwMiA9IDA7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBsaW5lICs9IHAyID8gd2hpdGUgOiBibGFjaztcbiAgICAgICAgICB9XG4gICAgICAgICAgZm9yIChyID0gMDsgciA8IGNlbGxTaXplOyByICs9IDEpIHtcbiAgICAgICAgICAgIGFzY2lpICs9IGxpbmUgKyBcIlxcblwiO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gYXNjaWkuc3Vic3RyaW5nKDAsIGFzY2lpLmxlbmd0aCAtIDEpO1xuICAgICAgfTtcbiAgICAgIF90aGlzLnJlbmRlclRvMmRDb250ZXh0ID0gZnVuY3Rpb24oY29udGV4dCwgY2VsbFNpemUpIHtcbiAgICAgICAgY2VsbFNpemUgPSBjZWxsU2l6ZSB8fCAyO1xuICAgICAgICB2YXIgbGVuZ3RoID0gX3RoaXMuZ2V0TW9kdWxlQ291bnQoKTtcbiAgICAgICAgZm9yICh2YXIgcm93ID0gMDsgcm93IDwgbGVuZ3RoOyByb3crKykge1xuICAgICAgICAgIGZvciAodmFyIGNvbCA9IDA7IGNvbCA8IGxlbmd0aDsgY29sKyspIHtcbiAgICAgICAgICAgIGNvbnRleHQuZmlsbFN0eWxlID0gX3RoaXMuaXNEYXJrKHJvdywgY29sKSA/IFwiYmxhY2tcIiA6IFwid2hpdGVcIjtcbiAgICAgICAgICAgIGNvbnRleHQuZmlsbFJlY3Qocm93ICogY2VsbFNpemUsIGNvbCAqIGNlbGxTaXplLCBjZWxsU2l6ZSwgY2VsbFNpemUpO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfTtcbiAgICAgIHJldHVybiBfdGhpcztcbiAgICB9O1xuICAgIHFyY29kZTMuc3RyaW5nVG9CeXRlc0Z1bmNzID0ge1xuICAgICAgXCJkZWZhdWx0XCI6IGZ1bmN0aW9uKHMyKSB7XG4gICAgICAgIHZhciBieXRlcyA9IFtdO1xuICAgICAgICBmb3IgKHZhciBpMiA9IDA7IGkyIDwgczIubGVuZ3RoOyBpMiArPSAxKSB7XG4gICAgICAgICAgdmFyIGMyID0gczIuY2hhckNvZGVBdChpMik7XG4gICAgICAgICAgYnl0ZXMucHVzaChjMiAmIDI1NSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGJ5dGVzO1xuICAgICAgfVxuICAgIH07XG4gICAgcXJjb2RlMy5zdHJpbmdUb0J5dGVzID0gcXJjb2RlMy5zdHJpbmdUb0J5dGVzRnVuY3NbXCJkZWZhdWx0XCJdO1xuICAgIHFyY29kZTMuY3JlYXRlU3RyaW5nVG9CeXRlcyA9IGZ1bmN0aW9uKHVuaWNvZGVEYXRhLCBudW1DaGFycykge1xuICAgICAgdmFyIHVuaWNvZGVNYXAgPSBmdW5jdGlvbigpIHtcbiAgICAgICAgdmFyIGJpbiA9IGJhc2U2NERlY29kZUlucHV0U3RyZWFtKHVuaWNvZGVEYXRhKTtcbiAgICAgICAgdmFyIHJlYWQgPSBmdW5jdGlvbigpIHtcbiAgICAgICAgICB2YXIgYiA9IGJpbi5yZWFkKCk7XG4gICAgICAgICAgaWYgKGIgPT0gLTEpXG4gICAgICAgICAgICB0aHJvdyBcImVvZlwiO1xuICAgICAgICAgIHJldHVybiBiO1xuICAgICAgICB9O1xuICAgICAgICB2YXIgY291bnQgPSAwO1xuICAgICAgICB2YXIgdW5pY29kZU1hcDIgPSB7fTtcbiAgICAgICAgd2hpbGUgKHRydWUpIHtcbiAgICAgICAgICB2YXIgYjAgPSBiaW4ucmVhZCgpO1xuICAgICAgICAgIGlmIChiMCA9PSAtMSlcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgIHZhciBiMSA9IHJlYWQoKTtcbiAgICAgICAgICB2YXIgYjIgPSByZWFkKCk7XG4gICAgICAgICAgdmFyIGIzID0gcmVhZCgpO1xuICAgICAgICAgIHZhciBrID0gU3RyaW5nLmZyb21DaGFyQ29kZShiMCA8PCA4IHwgYjEpO1xuICAgICAgICAgIHZhciB2ID0gYjIgPDwgOCB8IGIzO1xuICAgICAgICAgIHVuaWNvZGVNYXAyW2tdID0gdjtcbiAgICAgICAgICBjb3VudCArPSAxO1xuICAgICAgICB9XG4gICAgICAgIGlmIChjb3VudCAhPSBudW1DaGFycykge1xuICAgICAgICAgIHRocm93IGNvdW50ICsgXCIgIT0gXCIgKyBudW1DaGFycztcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdW5pY29kZU1hcDI7XG4gICAgICB9KCk7XG4gICAgICB2YXIgdW5rbm93bkNoYXIgPSBcIj9cIi5jaGFyQ29kZUF0KDApO1xuICAgICAgcmV0dXJuIGZ1bmN0aW9uKHMyKSB7XG4gICAgICAgIHZhciBieXRlcyA9IFtdO1xuICAgICAgICBmb3IgKHZhciBpMiA9IDA7IGkyIDwgczIubGVuZ3RoOyBpMiArPSAxKSB7XG4gICAgICAgICAgdmFyIGMyID0gczIuY2hhckNvZGVBdChpMik7XG4gICAgICAgICAgaWYgKGMyIDwgMTI4KSB7XG4gICAgICAgICAgICBieXRlcy5wdXNoKGMyKTtcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgdmFyIGIgPSB1bmljb2RlTWFwW3MyLmNoYXJBdChpMildO1xuICAgICAgICAgICAgaWYgKHR5cGVvZiBiID09IFwibnVtYmVyXCIpIHtcbiAgICAgICAgICAgICAgaWYgKChiICYgMjU1KSA9PSBiKSB7XG4gICAgICAgICAgICAgICAgYnl0ZXMucHVzaChiKTtcbiAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICBieXRlcy5wdXNoKGIgPj4+IDgpO1xuICAgICAgICAgICAgICAgIGJ5dGVzLnB1c2goYiAmIDI1NSk7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgIGJ5dGVzLnB1c2godW5rbm93bkNoYXIpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gYnl0ZXM7XG4gICAgICB9O1xuICAgIH07XG4gICAgdmFyIFFSTW9kZSA9IHtcbiAgICAgIE1PREVfTlVNQkVSOiAxIDw8IDAsXG4gICAgICBNT0RFX0FMUEhBX05VTTogMSA8PCAxLFxuICAgICAgTU9ERV84QklUX0JZVEU6IDEgPDwgMixcbiAgICAgIE1PREVfS0FOSkk6IDEgPDwgM1xuICAgIH07XG4gICAgdmFyIFFSRXJyb3JDb3JyZWN0aW9uTGV2ZWwgPSB7XG4gICAgICBMOiAxLFxuICAgICAgTTogMCxcbiAgICAgIFE6IDMsXG4gICAgICBIOiAyXG4gICAgfTtcbiAgICB2YXIgUVJNYXNrUGF0dGVybiA9IHtcbiAgICAgIFBBVFRFUk4wMDA6IDAsXG4gICAgICBQQVRURVJOMDAxOiAxLFxuICAgICAgUEFUVEVSTjAxMDogMixcbiAgICAgIFBBVFRFUk4wMTE6IDMsXG4gICAgICBQQVRURVJOMTAwOiA0LFxuICAgICAgUEFUVEVSTjEwMTogNSxcbiAgICAgIFBBVFRFUk4xMTA6IDYsXG4gICAgICBQQVRURVJOMTExOiA3XG4gICAgfTtcbiAgICB2YXIgUVJVdGlsID0gZnVuY3Rpb24oKSB7XG4gICAgICB2YXIgUEFUVEVSTl9QT1NJVElPTl9UQUJMRSA9IFtcbiAgICAgICAgW10sXG4gICAgICAgIFs2LCAxOF0sXG4gICAgICAgIFs2LCAyMl0sXG4gICAgICAgIFs2LCAyNl0sXG4gICAgICAgIFs2LCAzMF0sXG4gICAgICAgIFs2LCAzNF0sXG4gICAgICAgIFs2LCAyMiwgMzhdLFxuICAgICAgICBbNiwgMjQsIDQyXSxcbiAgICAgICAgWzYsIDI2LCA0Nl0sXG4gICAgICAgIFs2LCAyOCwgNTBdLFxuICAgICAgICBbNiwgMzAsIDU0XSxcbiAgICAgICAgWzYsIDMyLCA1OF0sXG4gICAgICAgIFs2LCAzNCwgNjJdLFxuICAgICAgICBbNiwgMjYsIDQ2LCA2Nl0sXG4gICAgICAgIFs2LCAyNiwgNDgsIDcwXSxcbiAgICAgICAgWzYsIDI2LCA1MCwgNzRdLFxuICAgICAgICBbNiwgMzAsIDU0LCA3OF0sXG4gICAgICAgIFs2LCAzMCwgNTYsIDgyXSxcbiAgICAgICAgWzYsIDMwLCA1OCwgODZdLFxuICAgICAgICBbNiwgMzQsIDYyLCA5MF0sXG4gICAgICAgIFs2LCAyOCwgNTAsIDcyLCA5NF0sXG4gICAgICAgIFs2LCAyNiwgNTAsIDc0LCA5OF0sXG4gICAgICAgIFs2LCAzMCwgNTQsIDc4LCAxMDJdLFxuICAgICAgICBbNiwgMjgsIDU0LCA4MCwgMTA2XSxcbiAgICAgICAgWzYsIDMyLCA1OCwgODQsIDExMF0sXG4gICAgICAgIFs2LCAzMCwgNTgsIDg2LCAxMTRdLFxuICAgICAgICBbNiwgMzQsIDYyLCA5MCwgMTE4XSxcbiAgICAgICAgWzYsIDI2LCA1MCwgNzQsIDk4LCAxMjJdLFxuICAgICAgICBbNiwgMzAsIDU0LCA3OCwgMTAyLCAxMjZdLFxuICAgICAgICBbNiwgMjYsIDUyLCA3OCwgMTA0LCAxMzBdLFxuICAgICAgICBbNiwgMzAsIDU2LCA4MiwgMTA4LCAxMzRdLFxuICAgICAgICBbNiwgMzQsIDYwLCA4NiwgMTEyLCAxMzhdLFxuICAgICAgICBbNiwgMzAsIDU4LCA4NiwgMTE0LCAxNDJdLFxuICAgICAgICBbNiwgMzQsIDYyLCA5MCwgMTE4LCAxNDZdLFxuICAgICAgICBbNiwgMzAsIDU0LCA3OCwgMTAyLCAxMjYsIDE1MF0sXG4gICAgICAgIFs2LCAyNCwgNTAsIDc2LCAxMDIsIDEyOCwgMTU0XSxcbiAgICAgICAgWzYsIDI4LCA1NCwgODAsIDEwNiwgMTMyLCAxNThdLFxuICAgICAgICBbNiwgMzIsIDU4LCA4NCwgMTEwLCAxMzYsIDE2Ml0sXG4gICAgICAgIFs2LCAyNiwgNTQsIDgyLCAxMTAsIDEzOCwgMTY2XSxcbiAgICAgICAgWzYsIDMwLCA1OCwgODYsIDExNCwgMTQyLCAxNzBdXG4gICAgICBdO1xuICAgICAgdmFyIEcxNSA9IDEgPDwgMTAgfCAxIDw8IDggfCAxIDw8IDUgfCAxIDw8IDQgfCAxIDw8IDIgfCAxIDw8IDEgfCAxIDw8IDA7XG4gICAgICB2YXIgRzE4ID0gMSA8PCAxMiB8IDEgPDwgMTEgfCAxIDw8IDEwIHwgMSA8PCA5IHwgMSA8PCA4IHwgMSA8PCA1IHwgMSA8PCAyIHwgMSA8PCAwO1xuICAgICAgdmFyIEcxNV9NQVNLID0gMSA8PCAxNCB8IDEgPDwgMTIgfCAxIDw8IDEwIHwgMSA8PCA0IHwgMSA8PCAxO1xuICAgICAgdmFyIF90aGlzID0ge307XG4gICAgICB2YXIgZ2V0QkNIRGlnaXQgPSBmdW5jdGlvbihkYXRhKSB7XG4gICAgICAgIHZhciBkaWdpdCA9IDA7XG4gICAgICAgIHdoaWxlIChkYXRhICE9IDApIHtcbiAgICAgICAgICBkaWdpdCArPSAxO1xuICAgICAgICAgIGRhdGEgPj4+PSAxO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBkaWdpdDtcbiAgICAgIH07XG4gICAgICBfdGhpcy5nZXRCQ0hUeXBlSW5mbyA9IGZ1bmN0aW9uKGRhdGEpIHtcbiAgICAgICAgdmFyIGQgPSBkYXRhIDw8IDEwO1xuICAgICAgICB3aGlsZSAoZ2V0QkNIRGlnaXQoZCkgLSBnZXRCQ0hEaWdpdChHMTUpID49IDApIHtcbiAgICAgICAgICBkIF49IEcxNSA8PCBnZXRCQ0hEaWdpdChkKSAtIGdldEJDSERpZ2l0KEcxNSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIChkYXRhIDw8IDEwIHwgZCkgXiBHMTVfTUFTSztcbiAgICAgIH07XG4gICAgICBfdGhpcy5nZXRCQ0hUeXBlTnVtYmVyID0gZnVuY3Rpb24oZGF0YSkge1xuICAgICAgICB2YXIgZCA9IGRhdGEgPDwgMTI7XG4gICAgICAgIHdoaWxlIChnZXRCQ0hEaWdpdChkKSAtIGdldEJDSERpZ2l0KEcxOCkgPj0gMCkge1xuICAgICAgICAgIGQgXj0gRzE4IDw8IGdldEJDSERpZ2l0KGQpIC0gZ2V0QkNIRGlnaXQoRzE4KTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gZGF0YSA8PCAxMiB8IGQ7XG4gICAgICB9O1xuICAgICAgX3RoaXMuZ2V0UGF0dGVyblBvc2l0aW9uID0gZnVuY3Rpb24odHlwZU51bWJlcikge1xuICAgICAgICByZXR1cm4gUEFUVEVSTl9QT1NJVElPTl9UQUJMRVt0eXBlTnVtYmVyIC0gMV07XG4gICAgICB9O1xuICAgICAgX3RoaXMuZ2V0TWFza0Z1bmN0aW9uID0gZnVuY3Rpb24obWFza1BhdHRlcm4pIHtcbiAgICAgICAgc3dpdGNoIChtYXNrUGF0dGVybikge1xuICAgICAgICAgIGNhc2UgUVJNYXNrUGF0dGVybi5QQVRURVJOMDAwOlxuICAgICAgICAgICAgcmV0dXJuIGZ1bmN0aW9uKGkyLCBqKSB7XG4gICAgICAgICAgICAgIHJldHVybiAoaTIgKyBqKSAlIDIgPT0gMDtcbiAgICAgICAgICAgIH07XG4gICAgICAgICAgY2FzZSBRUk1hc2tQYXR0ZXJuLlBBVFRFUk4wMDE6XG4gICAgICAgICAgICByZXR1cm4gZnVuY3Rpb24oaTIsIGopIHtcbiAgICAgICAgICAgICAgcmV0dXJuIGkyICUgMiA9PSAwO1xuICAgICAgICAgICAgfTtcbiAgICAgICAgICBjYXNlIFFSTWFza1BhdHRlcm4uUEFUVEVSTjAxMDpcbiAgICAgICAgICAgIHJldHVybiBmdW5jdGlvbihpMiwgaikge1xuICAgICAgICAgICAgICByZXR1cm4gaiAlIDMgPT0gMDtcbiAgICAgICAgICAgIH07XG4gICAgICAgICAgY2FzZSBRUk1hc2tQYXR0ZXJuLlBBVFRFUk4wMTE6XG4gICAgICAgICAgICByZXR1cm4gZnVuY3Rpb24oaTIsIGopIHtcbiAgICAgICAgICAgICAgcmV0dXJuIChpMiArIGopICUgMyA9PSAwO1xuICAgICAgICAgICAgfTtcbiAgICAgICAgICBjYXNlIFFSTWFza1BhdHRlcm4uUEFUVEVSTjEwMDpcbiAgICAgICAgICAgIHJldHVybiBmdW5jdGlvbihpMiwgaikge1xuICAgICAgICAgICAgICByZXR1cm4gKE1hdGguZmxvb3IoaTIgLyAyKSArIE1hdGguZmxvb3IoaiAvIDMpKSAlIDIgPT0gMDtcbiAgICAgICAgICAgIH07XG4gICAgICAgICAgY2FzZSBRUk1hc2tQYXR0ZXJuLlBBVFRFUk4xMDE6XG4gICAgICAgICAgICByZXR1cm4gZnVuY3Rpb24oaTIsIGopIHtcbiAgICAgICAgICAgICAgcmV0dXJuIGkyICogaiAlIDIgKyBpMiAqIGogJSAzID09IDA7XG4gICAgICAgICAgICB9O1xuICAgICAgICAgIGNhc2UgUVJNYXNrUGF0dGVybi5QQVRURVJOMTEwOlxuICAgICAgICAgICAgcmV0dXJuIGZ1bmN0aW9uKGkyLCBqKSB7XG4gICAgICAgICAgICAgIHJldHVybiAoaTIgKiBqICUgMiArIGkyICogaiAlIDMpICUgMiA9PSAwO1xuICAgICAgICAgICAgfTtcbiAgICAgICAgICBjYXNlIFFSTWFza1BhdHRlcm4uUEFUVEVSTjExMTpcbiAgICAgICAgICAgIHJldHVybiBmdW5jdGlvbihpMiwgaikge1xuICAgICAgICAgICAgICByZXR1cm4gKGkyICogaiAlIDMgKyAoaTIgKyBqKSAlIDIpICUgMiA9PSAwO1xuICAgICAgICAgICAgfTtcbiAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgdGhyb3cgXCJiYWQgbWFza1BhdHRlcm46XCIgKyBtYXNrUGF0dGVybjtcbiAgICAgICAgfVxuICAgICAgfTtcbiAgICAgIF90aGlzLmdldEVycm9yQ29ycmVjdFBvbHlub21pYWwgPSBmdW5jdGlvbihlcnJvckNvcnJlY3RMZW5ndGgpIHtcbiAgICAgICAgdmFyIGEyID0gcXJQb2x5bm9taWFsKFsxXSwgMCk7XG4gICAgICAgIGZvciAodmFyIGkyID0gMDsgaTIgPCBlcnJvckNvcnJlY3RMZW5ndGg7IGkyICs9IDEpIHtcbiAgICAgICAgICBhMiA9IGEyLm11bHRpcGx5KHFyUG9seW5vbWlhbChbMSwgUVJNYXRoLmdleHAoaTIpXSwgMCkpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBhMjtcbiAgICAgIH07XG4gICAgICBfdGhpcy5nZXRMZW5ndGhJbkJpdHMgPSBmdW5jdGlvbihtb2RlLCB0eXBlKSB7XG4gICAgICAgIGlmICgxIDw9IHR5cGUgJiYgdHlwZSA8IDEwKSB7XG4gICAgICAgICAgc3dpdGNoIChtb2RlKSB7XG4gICAgICAgICAgICBjYXNlIFFSTW9kZS5NT0RFX05VTUJFUjpcbiAgICAgICAgICAgICAgcmV0dXJuIDEwO1xuICAgICAgICAgICAgY2FzZSBRUk1vZGUuTU9ERV9BTFBIQV9OVU06XG4gICAgICAgICAgICAgIHJldHVybiA5O1xuICAgICAgICAgICAgY2FzZSBRUk1vZGUuTU9ERV84QklUX0JZVEU6XG4gICAgICAgICAgICAgIHJldHVybiA4O1xuICAgICAgICAgICAgY2FzZSBRUk1vZGUuTU9ERV9LQU5KSTpcbiAgICAgICAgICAgICAgcmV0dXJuIDg7XG4gICAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgICB0aHJvdyBcIm1vZGU6XCIgKyBtb2RlO1xuICAgICAgICAgIH1cbiAgICAgICAgfSBlbHNlIGlmICh0eXBlIDwgMjcpIHtcbiAgICAgICAgICBzd2l0Y2ggKG1vZGUpIHtcbiAgICAgICAgICAgIGNhc2UgUVJNb2RlLk1PREVfTlVNQkVSOlxuICAgICAgICAgICAgICByZXR1cm4gMTI7XG4gICAgICAgICAgICBjYXNlIFFSTW9kZS5NT0RFX0FMUEhBX05VTTpcbiAgICAgICAgICAgICAgcmV0dXJuIDExO1xuICAgICAgICAgICAgY2FzZSBRUk1vZGUuTU9ERV84QklUX0JZVEU6XG4gICAgICAgICAgICAgIHJldHVybiAxNjtcbiAgICAgICAgICAgIGNhc2UgUVJNb2RlLk1PREVfS0FOSkk6XG4gICAgICAgICAgICAgIHJldHVybiAxMDtcbiAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAgIHRocm93IFwibW9kZTpcIiArIG1vZGU7XG4gICAgICAgICAgfVxuICAgICAgICB9IGVsc2UgaWYgKHR5cGUgPCA0MSkge1xuICAgICAgICAgIHN3aXRjaCAobW9kZSkge1xuICAgICAgICAgICAgY2FzZSBRUk1vZGUuTU9ERV9OVU1CRVI6XG4gICAgICAgICAgICAgIHJldHVybiAxNDtcbiAgICAgICAgICAgIGNhc2UgUVJNb2RlLk1PREVfQUxQSEFfTlVNOlxuICAgICAgICAgICAgICByZXR1cm4gMTM7XG4gICAgICAgICAgICBjYXNlIFFSTW9kZS5NT0RFXzhCSVRfQllURTpcbiAgICAgICAgICAgICAgcmV0dXJuIDE2O1xuICAgICAgICAgICAgY2FzZSBRUk1vZGUuTU9ERV9LQU5KSTpcbiAgICAgICAgICAgICAgcmV0dXJuIDEyO1xuICAgICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgICAgdGhyb3cgXCJtb2RlOlwiICsgbW9kZTtcbiAgICAgICAgICB9XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgdGhyb3cgXCJ0eXBlOlwiICsgdHlwZTtcbiAgICAgICAgfVxuICAgICAgfTtcbiAgICAgIF90aGlzLmdldExvc3RQb2ludCA9IGZ1bmN0aW9uKHFyY29kZTQpIHtcbiAgICAgICAgdmFyIG1vZHVsZUNvdW50ID0gcXJjb2RlNC5nZXRNb2R1bGVDb3VudCgpO1xuICAgICAgICB2YXIgbG9zdFBvaW50ID0gMDtcbiAgICAgICAgZm9yICh2YXIgcm93ID0gMDsgcm93IDwgbW9kdWxlQ291bnQ7IHJvdyArPSAxKSB7XG4gICAgICAgICAgZm9yICh2YXIgY29sID0gMDsgY29sIDwgbW9kdWxlQ291bnQ7IGNvbCArPSAxKSB7XG4gICAgICAgICAgICB2YXIgc2FtZUNvdW50ID0gMDtcbiAgICAgICAgICAgIHZhciBkYXJrID0gcXJjb2RlNC5pc0Rhcmsocm93LCBjb2wpO1xuICAgICAgICAgICAgZm9yICh2YXIgciA9IC0xOyByIDw9IDE7IHIgKz0gMSkge1xuICAgICAgICAgICAgICBpZiAocm93ICsgciA8IDAgfHwgbW9kdWxlQ291bnQgPD0gcm93ICsgcikge1xuICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIGZvciAodmFyIGMyID0gLTE7IGMyIDw9IDE7IGMyICs9IDEpIHtcbiAgICAgICAgICAgICAgICBpZiAoY29sICsgYzIgPCAwIHx8IG1vZHVsZUNvdW50IDw9IGNvbCArIGMyKSB7XG4gICAgICAgICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYgKHIgPT0gMCAmJiBjMiA9PSAwKSB7XG4gICAgICAgICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYgKGRhcmsgPT0gcXJjb2RlNC5pc0Rhcmsocm93ICsgciwgY29sICsgYzIpKSB7XG4gICAgICAgICAgICAgICAgICBzYW1lQ291bnQgKz0gMTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChzYW1lQ291bnQgPiA1KSB7XG4gICAgICAgICAgICAgIGxvc3RQb2ludCArPSAzICsgc2FtZUNvdW50IC0gNTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgZm9yICh2YXIgcm93ID0gMDsgcm93IDwgbW9kdWxlQ291bnQgLSAxOyByb3cgKz0gMSkge1xuICAgICAgICAgIGZvciAodmFyIGNvbCA9IDA7IGNvbCA8IG1vZHVsZUNvdW50IC0gMTsgY29sICs9IDEpIHtcbiAgICAgICAgICAgIHZhciBjb3VudCA9IDA7XG4gICAgICAgICAgICBpZiAocXJjb2RlNC5pc0Rhcmsocm93LCBjb2wpKVxuICAgICAgICAgICAgICBjb3VudCArPSAxO1xuICAgICAgICAgICAgaWYgKHFyY29kZTQuaXNEYXJrKHJvdyArIDEsIGNvbCkpXG4gICAgICAgICAgICAgIGNvdW50ICs9IDE7XG4gICAgICAgICAgICBpZiAocXJjb2RlNC5pc0Rhcmsocm93LCBjb2wgKyAxKSlcbiAgICAgICAgICAgICAgY291bnQgKz0gMTtcbiAgICAgICAgICAgIGlmIChxcmNvZGU0LmlzRGFyayhyb3cgKyAxLCBjb2wgKyAxKSlcbiAgICAgICAgICAgICAgY291bnQgKz0gMTtcbiAgICAgICAgICAgIGlmIChjb3VudCA9PSAwIHx8IGNvdW50ID09IDQpIHtcbiAgICAgICAgICAgICAgbG9zdFBvaW50ICs9IDM7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGZvciAodmFyIHJvdyA9IDA7IHJvdyA8IG1vZHVsZUNvdW50OyByb3cgKz0gMSkge1xuICAgICAgICAgIGZvciAodmFyIGNvbCA9IDA7IGNvbCA8IG1vZHVsZUNvdW50IC0gNjsgY29sICs9IDEpIHtcbiAgICAgICAgICAgIGlmIChxcmNvZGU0LmlzRGFyayhyb3csIGNvbCkgJiYgIXFyY29kZTQuaXNEYXJrKHJvdywgY29sICsgMSkgJiYgcXJjb2RlNC5pc0Rhcmsocm93LCBjb2wgKyAyKSAmJiBxcmNvZGU0LmlzRGFyayhyb3csIGNvbCArIDMpICYmIHFyY29kZTQuaXNEYXJrKHJvdywgY29sICsgNCkgJiYgIXFyY29kZTQuaXNEYXJrKHJvdywgY29sICsgNSkgJiYgcXJjb2RlNC5pc0Rhcmsocm93LCBjb2wgKyA2KSkge1xuICAgICAgICAgICAgICBsb3N0UG9pbnQgKz0gNDA7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGZvciAodmFyIGNvbCA9IDA7IGNvbCA8IG1vZHVsZUNvdW50OyBjb2wgKz0gMSkge1xuICAgICAgICAgIGZvciAodmFyIHJvdyA9IDA7IHJvdyA8IG1vZHVsZUNvdW50IC0gNjsgcm93ICs9IDEpIHtcbiAgICAgICAgICAgIGlmIChxcmNvZGU0LmlzRGFyayhyb3csIGNvbCkgJiYgIXFyY29kZTQuaXNEYXJrKHJvdyArIDEsIGNvbCkgJiYgcXJjb2RlNC5pc0Rhcmsocm93ICsgMiwgY29sKSAmJiBxcmNvZGU0LmlzRGFyayhyb3cgKyAzLCBjb2wpICYmIHFyY29kZTQuaXNEYXJrKHJvdyArIDQsIGNvbCkgJiYgIXFyY29kZTQuaXNEYXJrKHJvdyArIDUsIGNvbCkgJiYgcXJjb2RlNC5pc0Rhcmsocm93ICsgNiwgY29sKSkge1xuICAgICAgICAgICAgICBsb3N0UG9pbnQgKz0gNDA7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHZhciBkYXJrQ291bnQgPSAwO1xuICAgICAgICBmb3IgKHZhciBjb2wgPSAwOyBjb2wgPCBtb2R1bGVDb3VudDsgY29sICs9IDEpIHtcbiAgICAgICAgICBmb3IgKHZhciByb3cgPSAwOyByb3cgPCBtb2R1bGVDb3VudDsgcm93ICs9IDEpIHtcbiAgICAgICAgICAgIGlmIChxcmNvZGU0LmlzRGFyayhyb3csIGNvbCkpIHtcbiAgICAgICAgICAgICAgZGFya0NvdW50ICs9IDE7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHZhciByYXRpbyA9IE1hdGguYWJzKDEwMCAqIGRhcmtDb3VudCAvIG1vZHVsZUNvdW50IC8gbW9kdWxlQ291bnQgLSA1MCkgLyA1O1xuICAgICAgICBsb3N0UG9pbnQgKz0gcmF0aW8gKiAxMDtcbiAgICAgICAgcmV0dXJuIGxvc3RQb2ludDtcbiAgICAgIH07XG4gICAgICByZXR1cm4gX3RoaXM7XG4gICAgfSgpO1xuICAgIHZhciBRUk1hdGggPSBmdW5jdGlvbigpIHtcbiAgICAgIHZhciBFWFBfVEFCTEUgPSBuZXcgQXJyYXkoMjU2KTtcbiAgICAgIHZhciBMT0dfVEFCTEUgPSBuZXcgQXJyYXkoMjU2KTtcbiAgICAgIGZvciAodmFyIGkyID0gMDsgaTIgPCA4OyBpMiArPSAxKSB7XG4gICAgICAgIEVYUF9UQUJMRVtpMl0gPSAxIDw8IGkyO1xuICAgICAgfVxuICAgICAgZm9yICh2YXIgaTIgPSA4OyBpMiA8IDI1NjsgaTIgKz0gMSkge1xuICAgICAgICBFWFBfVEFCTEVbaTJdID0gRVhQX1RBQkxFW2kyIC0gNF0gXiBFWFBfVEFCTEVbaTIgLSA1XSBeIEVYUF9UQUJMRVtpMiAtIDZdIF4gRVhQX1RBQkxFW2kyIC0gOF07XG4gICAgICB9XG4gICAgICBmb3IgKHZhciBpMiA9IDA7IGkyIDwgMjU1OyBpMiArPSAxKSB7XG4gICAgICAgIExPR19UQUJMRVtFWFBfVEFCTEVbaTJdXSA9IGkyO1xuICAgICAgfVxuICAgICAgdmFyIF90aGlzID0ge307XG4gICAgICBfdGhpcy5nbG9nID0gZnVuY3Rpb24objIpIHtcbiAgICAgICAgaWYgKG4yIDwgMSkge1xuICAgICAgICAgIHRocm93IFwiZ2xvZyhcIiArIG4yICsgXCIpXCI7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIExPR19UQUJMRVtuMl07XG4gICAgICB9O1xuICAgICAgX3RoaXMuZ2V4cCA9IGZ1bmN0aW9uKG4yKSB7XG4gICAgICAgIHdoaWxlIChuMiA8IDApIHtcbiAgICAgICAgICBuMiArPSAyNTU7XG4gICAgICAgIH1cbiAgICAgICAgd2hpbGUgKG4yID49IDI1Nikge1xuICAgICAgICAgIG4yIC09IDI1NTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gRVhQX1RBQkxFW24yXTtcbiAgICAgIH07XG4gICAgICByZXR1cm4gX3RoaXM7XG4gICAgfSgpO1xuICAgIGZ1bmN0aW9uIHFyUG9seW5vbWlhbChudW0sIHNoaWZ0KSB7XG4gICAgICBpZiAodHlwZW9mIG51bS5sZW5ndGggPT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgICB0aHJvdyBudW0ubGVuZ3RoICsgXCIvXCIgKyBzaGlmdDtcbiAgICAgIH1cbiAgICAgIHZhciBfbnVtID0gZnVuY3Rpb24oKSB7XG4gICAgICAgIHZhciBvZmZzZXQgPSAwO1xuICAgICAgICB3aGlsZSAob2Zmc2V0IDwgbnVtLmxlbmd0aCAmJiBudW1bb2Zmc2V0XSA9PSAwKSB7XG4gICAgICAgICAgb2Zmc2V0ICs9IDE7XG4gICAgICAgIH1cbiAgICAgICAgdmFyIF9udW0yID0gbmV3IEFycmF5KG51bS5sZW5ndGggLSBvZmZzZXQgKyBzaGlmdCk7XG4gICAgICAgIGZvciAodmFyIGkyID0gMDsgaTIgPCBudW0ubGVuZ3RoIC0gb2Zmc2V0OyBpMiArPSAxKSB7XG4gICAgICAgICAgX251bTJbaTJdID0gbnVtW2kyICsgb2Zmc2V0XTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gX251bTI7XG4gICAgICB9KCk7XG4gICAgICB2YXIgX3RoaXMgPSB7fTtcbiAgICAgIF90aGlzLmdldEF0ID0gZnVuY3Rpb24oaW5kZXgpIHtcbiAgICAgICAgcmV0dXJuIF9udW1baW5kZXhdO1xuICAgICAgfTtcbiAgICAgIF90aGlzLmdldExlbmd0aCA9IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gX251bS5sZW5ndGg7XG4gICAgICB9O1xuICAgICAgX3RoaXMubXVsdGlwbHkgPSBmdW5jdGlvbihlMikge1xuICAgICAgICB2YXIgbnVtMiA9IG5ldyBBcnJheShfdGhpcy5nZXRMZW5ndGgoKSArIGUyLmdldExlbmd0aCgpIC0gMSk7XG4gICAgICAgIGZvciAodmFyIGkyID0gMDsgaTIgPCBfdGhpcy5nZXRMZW5ndGgoKTsgaTIgKz0gMSkge1xuICAgICAgICAgIGZvciAodmFyIGogPSAwOyBqIDwgZTIuZ2V0TGVuZ3RoKCk7IGogKz0gMSkge1xuICAgICAgICAgICAgbnVtMltpMiArIGpdIF49IFFSTWF0aC5nZXhwKFFSTWF0aC5nbG9nKF90aGlzLmdldEF0KGkyKSkgKyBRUk1hdGguZ2xvZyhlMi5nZXRBdChqKSkpO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gcXJQb2x5bm9taWFsKG51bTIsIDApO1xuICAgICAgfTtcbiAgICAgIF90aGlzLm1vZCA9IGZ1bmN0aW9uKGUyKSB7XG4gICAgICAgIGlmIChfdGhpcy5nZXRMZW5ndGgoKSAtIGUyLmdldExlbmd0aCgpIDwgMCkge1xuICAgICAgICAgIHJldHVybiBfdGhpcztcbiAgICAgICAgfVxuICAgICAgICB2YXIgcmF0aW8gPSBRUk1hdGguZ2xvZyhfdGhpcy5nZXRBdCgwKSkgLSBRUk1hdGguZ2xvZyhlMi5nZXRBdCgwKSk7XG4gICAgICAgIHZhciBudW0yID0gbmV3IEFycmF5KF90aGlzLmdldExlbmd0aCgpKTtcbiAgICAgICAgZm9yICh2YXIgaTIgPSAwOyBpMiA8IF90aGlzLmdldExlbmd0aCgpOyBpMiArPSAxKSB7XG4gICAgICAgICAgbnVtMltpMl0gPSBfdGhpcy5nZXRBdChpMik7XG4gICAgICAgIH1cbiAgICAgICAgZm9yICh2YXIgaTIgPSAwOyBpMiA8IGUyLmdldExlbmd0aCgpOyBpMiArPSAxKSB7XG4gICAgICAgICAgbnVtMltpMl0gXj0gUVJNYXRoLmdleHAoUVJNYXRoLmdsb2coZTIuZ2V0QXQoaTIpKSArIHJhdGlvKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gcXJQb2x5bm9taWFsKG51bTIsIDApLm1vZChlMik7XG4gICAgICB9O1xuICAgICAgcmV0dXJuIF90aGlzO1xuICAgIH1cbiAgICB2YXIgUVJSU0Jsb2NrID0gZnVuY3Rpb24oKSB7XG4gICAgICB2YXIgUlNfQkxPQ0tfVEFCTEUgPSBbXG4gICAgICAgIFsxLCAyNiwgMTldLFxuICAgICAgICBbMSwgMjYsIDE2XSxcbiAgICAgICAgWzEsIDI2LCAxM10sXG4gICAgICAgIFsxLCAyNiwgOV0sXG4gICAgICAgIFsxLCA0NCwgMzRdLFxuICAgICAgICBbMSwgNDQsIDI4XSxcbiAgICAgICAgWzEsIDQ0LCAyMl0sXG4gICAgICAgIFsxLCA0NCwgMTZdLFxuICAgICAgICBbMSwgNzAsIDU1XSxcbiAgICAgICAgWzEsIDcwLCA0NF0sXG4gICAgICAgIFsyLCAzNSwgMTddLFxuICAgICAgICBbMiwgMzUsIDEzXSxcbiAgICAgICAgWzEsIDEwMCwgODBdLFxuICAgICAgICBbMiwgNTAsIDMyXSxcbiAgICAgICAgWzIsIDUwLCAyNF0sXG4gICAgICAgIFs0LCAyNSwgOV0sXG4gICAgICAgIFsxLCAxMzQsIDEwOF0sXG4gICAgICAgIFsyLCA2NywgNDNdLFxuICAgICAgICBbMiwgMzMsIDE1LCAyLCAzNCwgMTZdLFxuICAgICAgICBbMiwgMzMsIDExLCAyLCAzNCwgMTJdLFxuICAgICAgICBbMiwgODYsIDY4XSxcbiAgICAgICAgWzQsIDQzLCAyN10sXG4gICAgICAgIFs0LCA0MywgMTldLFxuICAgICAgICBbNCwgNDMsIDE1XSxcbiAgICAgICAgWzIsIDk4LCA3OF0sXG4gICAgICAgIFs0LCA0OSwgMzFdLFxuICAgICAgICBbMiwgMzIsIDE0LCA0LCAzMywgMTVdLFxuICAgICAgICBbNCwgMzksIDEzLCAxLCA0MCwgMTRdLFxuICAgICAgICBbMiwgMTIxLCA5N10sXG4gICAgICAgIFsyLCA2MCwgMzgsIDIsIDYxLCAzOV0sXG4gICAgICAgIFs0LCA0MCwgMTgsIDIsIDQxLCAxOV0sXG4gICAgICAgIFs0LCA0MCwgMTQsIDIsIDQxLCAxNV0sXG4gICAgICAgIFsyLCAxNDYsIDExNl0sXG4gICAgICAgIFszLCA1OCwgMzYsIDIsIDU5LCAzN10sXG4gICAgICAgIFs0LCAzNiwgMTYsIDQsIDM3LCAxN10sXG4gICAgICAgIFs0LCAzNiwgMTIsIDQsIDM3LCAxM10sXG4gICAgICAgIFsyLCA4NiwgNjgsIDIsIDg3LCA2OV0sXG4gICAgICAgIFs0LCA2OSwgNDMsIDEsIDcwLCA0NF0sXG4gICAgICAgIFs2LCA0MywgMTksIDIsIDQ0LCAyMF0sXG4gICAgICAgIFs2LCA0MywgMTUsIDIsIDQ0LCAxNl0sXG4gICAgICAgIFs0LCAxMDEsIDgxXSxcbiAgICAgICAgWzEsIDgwLCA1MCwgNCwgODEsIDUxXSxcbiAgICAgICAgWzQsIDUwLCAyMiwgNCwgNTEsIDIzXSxcbiAgICAgICAgWzMsIDM2LCAxMiwgOCwgMzcsIDEzXSxcbiAgICAgICAgWzIsIDExNiwgOTIsIDIsIDExNywgOTNdLFxuICAgICAgICBbNiwgNTgsIDM2LCAyLCA1OSwgMzddLFxuICAgICAgICBbNCwgNDYsIDIwLCA2LCA0NywgMjFdLFxuICAgICAgICBbNywgNDIsIDE0LCA0LCA0MywgMTVdLFxuICAgICAgICBbNCwgMTMzLCAxMDddLFxuICAgICAgICBbOCwgNTksIDM3LCAxLCA2MCwgMzhdLFxuICAgICAgICBbOCwgNDQsIDIwLCA0LCA0NSwgMjFdLFxuICAgICAgICBbMTIsIDMzLCAxMSwgNCwgMzQsIDEyXSxcbiAgICAgICAgWzMsIDE0NSwgMTE1LCAxLCAxNDYsIDExNl0sXG4gICAgICAgIFs0LCA2NCwgNDAsIDUsIDY1LCA0MV0sXG4gICAgICAgIFsxMSwgMzYsIDE2LCA1LCAzNywgMTddLFxuICAgICAgICBbMTEsIDM2LCAxMiwgNSwgMzcsIDEzXSxcbiAgICAgICAgWzUsIDEwOSwgODcsIDEsIDExMCwgODhdLFxuICAgICAgICBbNSwgNjUsIDQxLCA1LCA2NiwgNDJdLFxuICAgICAgICBbNSwgNTQsIDI0LCA3LCA1NSwgMjVdLFxuICAgICAgICBbMTEsIDM2LCAxMiwgNywgMzcsIDEzXSxcbiAgICAgICAgWzUsIDEyMiwgOTgsIDEsIDEyMywgOTldLFxuICAgICAgICBbNywgNzMsIDQ1LCAzLCA3NCwgNDZdLFxuICAgICAgICBbMTUsIDQzLCAxOSwgMiwgNDQsIDIwXSxcbiAgICAgICAgWzMsIDQ1LCAxNSwgMTMsIDQ2LCAxNl0sXG4gICAgICAgIFsxLCAxMzUsIDEwNywgNSwgMTM2LCAxMDhdLFxuICAgICAgICBbMTAsIDc0LCA0NiwgMSwgNzUsIDQ3XSxcbiAgICAgICAgWzEsIDUwLCAyMiwgMTUsIDUxLCAyM10sXG4gICAgICAgIFsyLCA0MiwgMTQsIDE3LCA0MywgMTVdLFxuICAgICAgICBbNSwgMTUwLCAxMjAsIDEsIDE1MSwgMTIxXSxcbiAgICAgICAgWzksIDY5LCA0MywgNCwgNzAsIDQ0XSxcbiAgICAgICAgWzE3LCA1MCwgMjIsIDEsIDUxLCAyM10sXG4gICAgICAgIFsyLCA0MiwgMTQsIDE5LCA0MywgMTVdLFxuICAgICAgICBbMywgMTQxLCAxMTMsIDQsIDE0MiwgMTE0XSxcbiAgICAgICAgWzMsIDcwLCA0NCwgMTEsIDcxLCA0NV0sXG4gICAgICAgIFsxNywgNDcsIDIxLCA0LCA0OCwgMjJdLFxuICAgICAgICBbOSwgMzksIDEzLCAxNiwgNDAsIDE0XSxcbiAgICAgICAgWzMsIDEzNSwgMTA3LCA1LCAxMzYsIDEwOF0sXG4gICAgICAgIFszLCA2NywgNDEsIDEzLCA2OCwgNDJdLFxuICAgICAgICBbMTUsIDU0LCAyNCwgNSwgNTUsIDI1XSxcbiAgICAgICAgWzE1LCA0MywgMTUsIDEwLCA0NCwgMTZdLFxuICAgICAgICBbNCwgMTQ0LCAxMTYsIDQsIDE0NSwgMTE3XSxcbiAgICAgICAgWzE3LCA2OCwgNDJdLFxuICAgICAgICBbMTcsIDUwLCAyMiwgNiwgNTEsIDIzXSxcbiAgICAgICAgWzE5LCA0NiwgMTYsIDYsIDQ3LCAxN10sXG4gICAgICAgIFsyLCAxMzksIDExMSwgNywgMTQwLCAxMTJdLFxuICAgICAgICBbMTcsIDc0LCA0Nl0sXG4gICAgICAgIFs3LCA1NCwgMjQsIDE2LCA1NSwgMjVdLFxuICAgICAgICBbMzQsIDM3LCAxM10sXG4gICAgICAgIFs0LCAxNTEsIDEyMSwgNSwgMTUyLCAxMjJdLFxuICAgICAgICBbNCwgNzUsIDQ3LCAxNCwgNzYsIDQ4XSxcbiAgICAgICAgWzExLCA1NCwgMjQsIDE0LCA1NSwgMjVdLFxuICAgICAgICBbMTYsIDQ1LCAxNSwgMTQsIDQ2LCAxNl0sXG4gICAgICAgIFs2LCAxNDcsIDExNywgNCwgMTQ4LCAxMThdLFxuICAgICAgICBbNiwgNzMsIDQ1LCAxNCwgNzQsIDQ2XSxcbiAgICAgICAgWzExLCA1NCwgMjQsIDE2LCA1NSwgMjVdLFxuICAgICAgICBbMzAsIDQ2LCAxNiwgMiwgNDcsIDE3XSxcbiAgICAgICAgWzgsIDEzMiwgMTA2LCA0LCAxMzMsIDEwN10sXG4gICAgICAgIFs4LCA3NSwgNDcsIDEzLCA3NiwgNDhdLFxuICAgICAgICBbNywgNTQsIDI0LCAyMiwgNTUsIDI1XSxcbiAgICAgICAgWzIyLCA0NSwgMTUsIDEzLCA0NiwgMTZdLFxuICAgICAgICBbMTAsIDE0MiwgMTE0LCAyLCAxNDMsIDExNV0sXG4gICAgICAgIFsxOSwgNzQsIDQ2LCA0LCA3NSwgNDddLFxuICAgICAgICBbMjgsIDUwLCAyMiwgNiwgNTEsIDIzXSxcbiAgICAgICAgWzMzLCA0NiwgMTYsIDQsIDQ3LCAxN10sXG4gICAgICAgIFs4LCAxNTIsIDEyMiwgNCwgMTUzLCAxMjNdLFxuICAgICAgICBbMjIsIDczLCA0NSwgMywgNzQsIDQ2XSxcbiAgICAgICAgWzgsIDUzLCAyMywgMjYsIDU0LCAyNF0sXG4gICAgICAgIFsxMiwgNDUsIDE1LCAyOCwgNDYsIDE2XSxcbiAgICAgICAgWzMsIDE0NywgMTE3LCAxMCwgMTQ4LCAxMThdLFxuICAgICAgICBbMywgNzMsIDQ1LCAyMywgNzQsIDQ2XSxcbiAgICAgICAgWzQsIDU0LCAyNCwgMzEsIDU1LCAyNV0sXG4gICAgICAgIFsxMSwgNDUsIDE1LCAzMSwgNDYsIDE2XSxcbiAgICAgICAgWzcsIDE0NiwgMTE2LCA3LCAxNDcsIDExN10sXG4gICAgICAgIFsyMSwgNzMsIDQ1LCA3LCA3NCwgNDZdLFxuICAgICAgICBbMSwgNTMsIDIzLCAzNywgNTQsIDI0XSxcbiAgICAgICAgWzE5LCA0NSwgMTUsIDI2LCA0NiwgMTZdLFxuICAgICAgICBbNSwgMTQ1LCAxMTUsIDEwLCAxNDYsIDExNl0sXG4gICAgICAgIFsxOSwgNzUsIDQ3LCAxMCwgNzYsIDQ4XSxcbiAgICAgICAgWzE1LCA1NCwgMjQsIDI1LCA1NSwgMjVdLFxuICAgICAgICBbMjMsIDQ1LCAxNSwgMjUsIDQ2LCAxNl0sXG4gICAgICAgIFsxMywgMTQ1LCAxMTUsIDMsIDE0NiwgMTE2XSxcbiAgICAgICAgWzIsIDc0LCA0NiwgMjksIDc1LCA0N10sXG4gICAgICAgIFs0MiwgNTQsIDI0LCAxLCA1NSwgMjVdLFxuICAgICAgICBbMjMsIDQ1LCAxNSwgMjgsIDQ2LCAxNl0sXG4gICAgICAgIFsxNywgMTQ1LCAxMTVdLFxuICAgICAgICBbMTAsIDc0LCA0NiwgMjMsIDc1LCA0N10sXG4gICAgICAgIFsxMCwgNTQsIDI0LCAzNSwgNTUsIDI1XSxcbiAgICAgICAgWzE5LCA0NSwgMTUsIDM1LCA0NiwgMTZdLFxuICAgICAgICBbMTcsIDE0NSwgMTE1LCAxLCAxNDYsIDExNl0sXG4gICAgICAgIFsxNCwgNzQsIDQ2LCAyMSwgNzUsIDQ3XSxcbiAgICAgICAgWzI5LCA1NCwgMjQsIDE5LCA1NSwgMjVdLFxuICAgICAgICBbMTEsIDQ1LCAxNSwgNDYsIDQ2LCAxNl0sXG4gICAgICAgIFsxMywgMTQ1LCAxMTUsIDYsIDE0NiwgMTE2XSxcbiAgICAgICAgWzE0LCA3NCwgNDYsIDIzLCA3NSwgNDddLFxuICAgICAgICBbNDQsIDU0LCAyNCwgNywgNTUsIDI1XSxcbiAgICAgICAgWzU5LCA0NiwgMTYsIDEsIDQ3LCAxN10sXG4gICAgICAgIFsxMiwgMTUxLCAxMjEsIDcsIDE1MiwgMTIyXSxcbiAgICAgICAgWzEyLCA3NSwgNDcsIDI2LCA3NiwgNDhdLFxuICAgICAgICBbMzksIDU0LCAyNCwgMTQsIDU1LCAyNV0sXG4gICAgICAgIFsyMiwgNDUsIDE1LCA0MSwgNDYsIDE2XSxcbiAgICAgICAgWzYsIDE1MSwgMTIxLCAxNCwgMTUyLCAxMjJdLFxuICAgICAgICBbNiwgNzUsIDQ3LCAzNCwgNzYsIDQ4XSxcbiAgICAgICAgWzQ2LCA1NCwgMjQsIDEwLCA1NSwgMjVdLFxuICAgICAgICBbMiwgNDUsIDE1LCA2NCwgNDYsIDE2XSxcbiAgICAgICAgWzE3LCAxNTIsIDEyMiwgNCwgMTUzLCAxMjNdLFxuICAgICAgICBbMjksIDc0LCA0NiwgMTQsIDc1LCA0N10sXG4gICAgICAgIFs0OSwgNTQsIDI0LCAxMCwgNTUsIDI1XSxcbiAgICAgICAgWzI0LCA0NSwgMTUsIDQ2LCA0NiwgMTZdLFxuICAgICAgICBbNCwgMTUyLCAxMjIsIDE4LCAxNTMsIDEyM10sXG4gICAgICAgIFsxMywgNzQsIDQ2LCAzMiwgNzUsIDQ3XSxcbiAgICAgICAgWzQ4LCA1NCwgMjQsIDE0LCA1NSwgMjVdLFxuICAgICAgICBbNDIsIDQ1LCAxNSwgMzIsIDQ2LCAxNl0sXG4gICAgICAgIFsyMCwgMTQ3LCAxMTcsIDQsIDE0OCwgMTE4XSxcbiAgICAgICAgWzQwLCA3NSwgNDcsIDcsIDc2LCA0OF0sXG4gICAgICAgIFs0MywgNTQsIDI0LCAyMiwgNTUsIDI1XSxcbiAgICAgICAgWzEwLCA0NSwgMTUsIDY3LCA0NiwgMTZdLFxuICAgICAgICBbMTksIDE0OCwgMTE4LCA2LCAxNDksIDExOV0sXG4gICAgICAgIFsxOCwgNzUsIDQ3LCAzMSwgNzYsIDQ4XSxcbiAgICAgICAgWzM0LCA1NCwgMjQsIDM0LCA1NSwgMjVdLFxuICAgICAgICBbMjAsIDQ1LCAxNSwgNjEsIDQ2LCAxNl1cbiAgICAgIF07XG4gICAgICB2YXIgcXJSU0Jsb2NrID0gZnVuY3Rpb24odG90YWxDb3VudCwgZGF0YUNvdW50KSB7XG4gICAgICAgIHZhciBfdGhpczIgPSB7fTtcbiAgICAgICAgX3RoaXMyLnRvdGFsQ291bnQgPSB0b3RhbENvdW50O1xuICAgICAgICBfdGhpczIuZGF0YUNvdW50ID0gZGF0YUNvdW50O1xuICAgICAgICByZXR1cm4gX3RoaXMyO1xuICAgICAgfTtcbiAgICAgIHZhciBfdGhpcyA9IHt9O1xuICAgICAgdmFyIGdldFJzQmxvY2tUYWJsZSA9IGZ1bmN0aW9uKHR5cGVOdW1iZXIsIGVycm9yQ29ycmVjdGlvbkxldmVsKSB7XG4gICAgICAgIHN3aXRjaCAoZXJyb3JDb3JyZWN0aW9uTGV2ZWwpIHtcbiAgICAgICAgICBjYXNlIFFSRXJyb3JDb3JyZWN0aW9uTGV2ZWwuTDpcbiAgICAgICAgICAgIHJldHVybiBSU19CTE9DS19UQUJMRVsodHlwZU51bWJlciAtIDEpICogNCArIDBdO1xuICAgICAgICAgIGNhc2UgUVJFcnJvckNvcnJlY3Rpb25MZXZlbC5NOlxuICAgICAgICAgICAgcmV0dXJuIFJTX0JMT0NLX1RBQkxFWyh0eXBlTnVtYmVyIC0gMSkgKiA0ICsgMV07XG4gICAgICAgICAgY2FzZSBRUkVycm9yQ29ycmVjdGlvbkxldmVsLlE6XG4gICAgICAgICAgICByZXR1cm4gUlNfQkxPQ0tfVEFCTEVbKHR5cGVOdW1iZXIgLSAxKSAqIDQgKyAyXTtcbiAgICAgICAgICBjYXNlIFFSRXJyb3JDb3JyZWN0aW9uTGV2ZWwuSDpcbiAgICAgICAgICAgIHJldHVybiBSU19CTE9DS19UQUJMRVsodHlwZU51bWJlciAtIDEpICogNCArIDNdO1xuICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICByZXR1cm4gdm9pZCAwO1xuICAgICAgICB9XG4gICAgICB9O1xuICAgICAgX3RoaXMuZ2V0UlNCbG9ja3MgPSBmdW5jdGlvbih0eXBlTnVtYmVyLCBlcnJvckNvcnJlY3Rpb25MZXZlbCkge1xuICAgICAgICB2YXIgcnNCbG9jayA9IGdldFJzQmxvY2tUYWJsZSh0eXBlTnVtYmVyLCBlcnJvckNvcnJlY3Rpb25MZXZlbCk7XG4gICAgICAgIGlmICh0eXBlb2YgcnNCbG9jayA9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICAgICAgdGhyb3cgXCJiYWQgcnMgYmxvY2sgQCB0eXBlTnVtYmVyOlwiICsgdHlwZU51bWJlciArIFwiL2Vycm9yQ29ycmVjdGlvbkxldmVsOlwiICsgZXJyb3JDb3JyZWN0aW9uTGV2ZWw7XG4gICAgICAgIH1cbiAgICAgICAgdmFyIGxlbmd0aCA9IHJzQmxvY2subGVuZ3RoIC8gMztcbiAgICAgICAgdmFyIGxpc3QgPSBbXTtcbiAgICAgICAgZm9yICh2YXIgaTIgPSAwOyBpMiA8IGxlbmd0aDsgaTIgKz0gMSkge1xuICAgICAgICAgIHZhciBjb3VudCA9IHJzQmxvY2tbaTIgKiAzICsgMF07XG4gICAgICAgICAgdmFyIHRvdGFsQ291bnQgPSByc0Jsb2NrW2kyICogMyArIDFdO1xuICAgICAgICAgIHZhciBkYXRhQ291bnQgPSByc0Jsb2NrW2kyICogMyArIDJdO1xuICAgICAgICAgIGZvciAodmFyIGogPSAwOyBqIDwgY291bnQ7IGogKz0gMSkge1xuICAgICAgICAgICAgbGlzdC5wdXNoKHFyUlNCbG9jayh0b3RhbENvdW50LCBkYXRhQ291bnQpKTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGxpc3Q7XG4gICAgICB9O1xuICAgICAgcmV0dXJuIF90aGlzO1xuICAgIH0oKTtcbiAgICB2YXIgcXJCaXRCdWZmZXIgPSBmdW5jdGlvbigpIHtcbiAgICAgIHZhciBfYnVmZmVyID0gW107XG4gICAgICB2YXIgX2xlbmd0aCA9IDA7XG4gICAgICB2YXIgX3RoaXMgPSB7fTtcbiAgICAgIF90aGlzLmdldEJ1ZmZlciA9IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gX2J1ZmZlcjtcbiAgICAgIH07XG4gICAgICBfdGhpcy5nZXRBdCA9IGZ1bmN0aW9uKGluZGV4KSB7XG4gICAgICAgIHZhciBidWZJbmRleCA9IE1hdGguZmxvb3IoaW5kZXggLyA4KTtcbiAgICAgICAgcmV0dXJuIChfYnVmZmVyW2J1ZkluZGV4XSA+Pj4gNyAtIGluZGV4ICUgOCAmIDEpID09IDE7XG4gICAgICB9O1xuICAgICAgX3RoaXMucHV0ID0gZnVuY3Rpb24obnVtLCBsZW5ndGgpIHtcbiAgICAgICAgZm9yICh2YXIgaTIgPSAwOyBpMiA8IGxlbmd0aDsgaTIgKz0gMSkge1xuICAgICAgICAgIF90aGlzLnB1dEJpdCgobnVtID4+PiBsZW5ndGggLSBpMiAtIDEgJiAxKSA9PSAxKTtcbiAgICAgICAgfVxuICAgICAgfTtcbiAgICAgIF90aGlzLmdldExlbmd0aEluQml0cyA9IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gX2xlbmd0aDtcbiAgICAgIH07XG4gICAgICBfdGhpcy5wdXRCaXQgPSBmdW5jdGlvbihiaXQpIHtcbiAgICAgICAgdmFyIGJ1ZkluZGV4ID0gTWF0aC5mbG9vcihfbGVuZ3RoIC8gOCk7XG4gICAgICAgIGlmIChfYnVmZmVyLmxlbmd0aCA8PSBidWZJbmRleCkge1xuICAgICAgICAgIF9idWZmZXIucHVzaCgwKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoYml0KSB7XG4gICAgICAgICAgX2J1ZmZlcltidWZJbmRleF0gfD0gMTI4ID4+PiBfbGVuZ3RoICUgODtcbiAgICAgICAgfVxuICAgICAgICBfbGVuZ3RoICs9IDE7XG4gICAgICB9O1xuICAgICAgcmV0dXJuIF90aGlzO1xuICAgIH07XG4gICAgdmFyIHFyTnVtYmVyID0gZnVuY3Rpb24oZGF0YSkge1xuICAgICAgdmFyIF9tb2RlID0gUVJNb2RlLk1PREVfTlVNQkVSO1xuICAgICAgdmFyIF9kYXRhID0gZGF0YTtcbiAgICAgIHZhciBfdGhpcyA9IHt9O1xuICAgICAgX3RoaXMuZ2V0TW9kZSA9IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gX21vZGU7XG4gICAgICB9O1xuICAgICAgX3RoaXMuZ2V0TGVuZ3RoID0gZnVuY3Rpb24oYnVmZmVyKSB7XG4gICAgICAgIHJldHVybiBfZGF0YS5sZW5ndGg7XG4gICAgICB9O1xuICAgICAgX3RoaXMud3JpdGUgPSBmdW5jdGlvbihidWZmZXIpIHtcbiAgICAgICAgdmFyIGRhdGEyID0gX2RhdGE7XG4gICAgICAgIHZhciBpMiA9IDA7XG4gICAgICAgIHdoaWxlIChpMiArIDIgPCBkYXRhMi5sZW5ndGgpIHtcbiAgICAgICAgICBidWZmZXIucHV0KHN0clRvTnVtKGRhdGEyLnN1YnN0cmluZyhpMiwgaTIgKyAzKSksIDEwKTtcbiAgICAgICAgICBpMiArPSAzO1xuICAgICAgICB9XG4gICAgICAgIGlmIChpMiA8IGRhdGEyLmxlbmd0aCkge1xuICAgICAgICAgIGlmIChkYXRhMi5sZW5ndGggLSBpMiA9PSAxKSB7XG4gICAgICAgICAgICBidWZmZXIucHV0KHN0clRvTnVtKGRhdGEyLnN1YnN0cmluZyhpMiwgaTIgKyAxKSksIDQpO1xuICAgICAgICAgIH0gZWxzZSBpZiAoZGF0YTIubGVuZ3RoIC0gaTIgPT0gMikge1xuICAgICAgICAgICAgYnVmZmVyLnB1dChzdHJUb051bShkYXRhMi5zdWJzdHJpbmcoaTIsIGkyICsgMikpLCA3KTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH07XG4gICAgICB2YXIgc3RyVG9OdW0gPSBmdW5jdGlvbihzMikge1xuICAgICAgICB2YXIgbnVtID0gMDtcbiAgICAgICAgZm9yICh2YXIgaTIgPSAwOyBpMiA8IHMyLmxlbmd0aDsgaTIgKz0gMSkge1xuICAgICAgICAgIG51bSA9IG51bSAqIDEwICsgY2hhdFRvTnVtKHMyLmNoYXJBdChpMikpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBudW07XG4gICAgICB9O1xuICAgICAgdmFyIGNoYXRUb051bSA9IGZ1bmN0aW9uKGMyKSB7XG4gICAgICAgIGlmIChcIjBcIiA8PSBjMiAmJiBjMiA8PSBcIjlcIikge1xuICAgICAgICAgIHJldHVybiBjMi5jaGFyQ29kZUF0KDApIC0gXCIwXCIuY2hhckNvZGVBdCgwKTtcbiAgICAgICAgfVxuICAgICAgICB0aHJvdyBcImlsbGVnYWwgY2hhciA6XCIgKyBjMjtcbiAgICAgIH07XG4gICAgICByZXR1cm4gX3RoaXM7XG4gICAgfTtcbiAgICB2YXIgcXJBbHBoYU51bSA9IGZ1bmN0aW9uKGRhdGEpIHtcbiAgICAgIHZhciBfbW9kZSA9IFFSTW9kZS5NT0RFX0FMUEhBX05VTTtcbiAgICAgIHZhciBfZGF0YSA9IGRhdGE7XG4gICAgICB2YXIgX3RoaXMgPSB7fTtcbiAgICAgIF90aGlzLmdldE1vZGUgPSBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIF9tb2RlO1xuICAgICAgfTtcbiAgICAgIF90aGlzLmdldExlbmd0aCA9IGZ1bmN0aW9uKGJ1ZmZlcikge1xuICAgICAgICByZXR1cm4gX2RhdGEubGVuZ3RoO1xuICAgICAgfTtcbiAgICAgIF90aGlzLndyaXRlID0gZnVuY3Rpb24oYnVmZmVyKSB7XG4gICAgICAgIHZhciBzMiA9IF9kYXRhO1xuICAgICAgICB2YXIgaTIgPSAwO1xuICAgICAgICB3aGlsZSAoaTIgKyAxIDwgczIubGVuZ3RoKSB7XG4gICAgICAgICAgYnVmZmVyLnB1dChcbiAgICAgICAgICAgIGdldENvZGUoczIuY2hhckF0KGkyKSkgKiA0NSArIGdldENvZGUoczIuY2hhckF0KGkyICsgMSkpLFxuICAgICAgICAgICAgMTFcbiAgICAgICAgICApO1xuICAgICAgICAgIGkyICs9IDI7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGkyIDwgczIubGVuZ3RoKSB7XG4gICAgICAgICAgYnVmZmVyLnB1dChnZXRDb2RlKHMyLmNoYXJBdChpMikpLCA2KTtcbiAgICAgICAgfVxuICAgICAgfTtcbiAgICAgIHZhciBnZXRDb2RlID0gZnVuY3Rpb24oYzIpIHtcbiAgICAgICAgaWYgKFwiMFwiIDw9IGMyICYmIGMyIDw9IFwiOVwiKSB7XG4gICAgICAgICAgcmV0dXJuIGMyLmNoYXJDb2RlQXQoMCkgLSBcIjBcIi5jaGFyQ29kZUF0KDApO1xuICAgICAgICB9IGVsc2UgaWYgKFwiQVwiIDw9IGMyICYmIGMyIDw9IFwiWlwiKSB7XG4gICAgICAgICAgcmV0dXJuIGMyLmNoYXJDb2RlQXQoMCkgLSBcIkFcIi5jaGFyQ29kZUF0KDApICsgMTA7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgc3dpdGNoIChjMikge1xuICAgICAgICAgICAgY2FzZSBcIiBcIjpcbiAgICAgICAgICAgICAgcmV0dXJuIDM2O1xuICAgICAgICAgICAgY2FzZSBcIiRcIjpcbiAgICAgICAgICAgICAgcmV0dXJuIDM3O1xuICAgICAgICAgICAgY2FzZSBcIiVcIjpcbiAgICAgICAgICAgICAgcmV0dXJuIDM4O1xuICAgICAgICAgICAgY2FzZSBcIipcIjpcbiAgICAgICAgICAgICAgcmV0dXJuIDM5O1xuICAgICAgICAgICAgY2FzZSBcIitcIjpcbiAgICAgICAgICAgICAgcmV0dXJuIDQwO1xuICAgICAgICAgICAgY2FzZSBcIi1cIjpcbiAgICAgICAgICAgICAgcmV0dXJuIDQxO1xuICAgICAgICAgICAgY2FzZSBcIi5cIjpcbiAgICAgICAgICAgICAgcmV0dXJuIDQyO1xuICAgICAgICAgICAgY2FzZSBcIi9cIjpcbiAgICAgICAgICAgICAgcmV0dXJuIDQzO1xuICAgICAgICAgICAgY2FzZSBcIjpcIjpcbiAgICAgICAgICAgICAgcmV0dXJuIDQ0O1xuICAgICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgICAgdGhyb3cgXCJpbGxlZ2FsIGNoYXIgOlwiICsgYzI7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9O1xuICAgICAgcmV0dXJuIF90aGlzO1xuICAgIH07XG4gICAgdmFyIHFyOEJpdEJ5dGUgPSBmdW5jdGlvbihkYXRhKSB7XG4gICAgICB2YXIgX21vZGUgPSBRUk1vZGUuTU9ERV84QklUX0JZVEU7XG4gICAgICB2YXIgX2J5dGVzID0gcXJjb2RlMy5zdHJpbmdUb0J5dGVzKGRhdGEpO1xuICAgICAgdmFyIF90aGlzID0ge307XG4gICAgICBfdGhpcy5nZXRNb2RlID0gZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiBfbW9kZTtcbiAgICAgIH07XG4gICAgICBfdGhpcy5nZXRMZW5ndGggPSBmdW5jdGlvbihidWZmZXIpIHtcbiAgICAgICAgcmV0dXJuIF9ieXRlcy5sZW5ndGg7XG4gICAgICB9O1xuICAgICAgX3RoaXMud3JpdGUgPSBmdW5jdGlvbihidWZmZXIpIHtcbiAgICAgICAgZm9yICh2YXIgaTIgPSAwOyBpMiA8IF9ieXRlcy5sZW5ndGg7IGkyICs9IDEpIHtcbiAgICAgICAgICBidWZmZXIucHV0KF9ieXRlc1tpMl0sIDgpO1xuICAgICAgICB9XG4gICAgICB9O1xuICAgICAgcmV0dXJuIF90aGlzO1xuICAgIH07XG4gICAgdmFyIHFyS2FuamkgPSBmdW5jdGlvbihkYXRhKSB7XG4gICAgICB2YXIgX21vZGUgPSBRUk1vZGUuTU9ERV9LQU5KSTtcbiAgICAgIHZhciBzdHJpbmdUb0J5dGVzID0gcXJjb2RlMy5zdHJpbmdUb0J5dGVzRnVuY3NbXCJTSklTXCJdO1xuICAgICAgaWYgKCFzdHJpbmdUb0J5dGVzKSB7XG4gICAgICAgIHRocm93IFwic2ppcyBub3Qgc3VwcG9ydGVkLlwiO1xuICAgICAgfVxuICAgICAgIWZ1bmN0aW9uKGMyLCBjb2RlKSB7XG4gICAgICAgIHZhciB0ZXN0ID0gc3RyaW5nVG9CeXRlcyhjMik7XG4gICAgICAgIGlmICh0ZXN0Lmxlbmd0aCAhPSAyIHx8ICh0ZXN0WzBdIDw8IDggfCB0ZXN0WzFdKSAhPSBjb2RlKSB7XG4gICAgICAgICAgdGhyb3cgXCJzamlzIG5vdCBzdXBwb3J0ZWQuXCI7XG4gICAgICAgIH1cbiAgICAgIH0oXCJcXHU1M0NCXCIsIDM4NzI2KTtcbiAgICAgIHZhciBfYnl0ZXMgPSBzdHJpbmdUb0J5dGVzKGRhdGEpO1xuICAgICAgdmFyIF90aGlzID0ge307XG4gICAgICBfdGhpcy5nZXRNb2RlID0gZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiBfbW9kZTtcbiAgICAgIH07XG4gICAgICBfdGhpcy5nZXRMZW5ndGggPSBmdW5jdGlvbihidWZmZXIpIHtcbiAgICAgICAgcmV0dXJuIH5+KF9ieXRlcy5sZW5ndGggLyAyKTtcbiAgICAgIH07XG4gICAgICBfdGhpcy53cml0ZSA9IGZ1bmN0aW9uKGJ1ZmZlcikge1xuICAgICAgICB2YXIgZGF0YTIgPSBfYnl0ZXM7XG4gICAgICAgIHZhciBpMiA9IDA7XG4gICAgICAgIHdoaWxlIChpMiArIDEgPCBkYXRhMi5sZW5ndGgpIHtcbiAgICAgICAgICB2YXIgYzIgPSAoMjU1ICYgZGF0YTJbaTJdKSA8PCA4IHwgMjU1ICYgZGF0YTJbaTIgKyAxXTtcbiAgICAgICAgICBpZiAoMzMwODggPD0gYzIgJiYgYzIgPD0gNDA5NTYpIHtcbiAgICAgICAgICAgIGMyIC09IDMzMDg4O1xuICAgICAgICAgIH0gZWxzZSBpZiAoNTc0MDggPD0gYzIgJiYgYzIgPD0gNjAzNTEpIHtcbiAgICAgICAgICAgIGMyIC09IDQ5NDcyO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICB0aHJvdyBcImlsbGVnYWwgY2hhciBhdCBcIiArIChpMiArIDEpICsgXCIvXCIgKyBjMjtcbiAgICAgICAgICB9XG4gICAgICAgICAgYzIgPSAoYzIgPj4+IDggJiAyNTUpICogMTkyICsgKGMyICYgMjU1KTtcbiAgICAgICAgICBidWZmZXIucHV0KGMyLCAxMyk7XG4gICAgICAgICAgaTIgKz0gMjtcbiAgICAgICAgfVxuICAgICAgICBpZiAoaTIgPCBkYXRhMi5sZW5ndGgpIHtcbiAgICAgICAgICB0aHJvdyBcImlsbGVnYWwgY2hhciBhdCBcIiArIChpMiArIDEpO1xuICAgICAgICB9XG4gICAgICB9O1xuICAgICAgcmV0dXJuIF90aGlzO1xuICAgIH07XG4gICAgdmFyIGJ5dGVBcnJheU91dHB1dFN0cmVhbSA9IGZ1bmN0aW9uKCkge1xuICAgICAgdmFyIF9ieXRlcyA9IFtdO1xuICAgICAgdmFyIF90aGlzID0ge307XG4gICAgICBfdGhpcy53cml0ZUJ5dGUgPSBmdW5jdGlvbihiKSB7XG4gICAgICAgIF9ieXRlcy5wdXNoKGIgJiAyNTUpO1xuICAgICAgfTtcbiAgICAgIF90aGlzLndyaXRlU2hvcnQgPSBmdW5jdGlvbihpMikge1xuICAgICAgICBfdGhpcy53cml0ZUJ5dGUoaTIpO1xuICAgICAgICBfdGhpcy53cml0ZUJ5dGUoaTIgPj4+IDgpO1xuICAgICAgfTtcbiAgICAgIF90aGlzLndyaXRlQnl0ZXMgPSBmdW5jdGlvbihiLCBvZmYsIGxlbikge1xuICAgICAgICBvZmYgPSBvZmYgfHwgMDtcbiAgICAgICAgbGVuID0gbGVuIHx8IGIubGVuZ3RoO1xuICAgICAgICBmb3IgKHZhciBpMiA9IDA7IGkyIDwgbGVuOyBpMiArPSAxKSB7XG4gICAgICAgICAgX3RoaXMud3JpdGVCeXRlKGJbaTIgKyBvZmZdKTtcbiAgICAgICAgfVxuICAgICAgfTtcbiAgICAgIF90aGlzLndyaXRlU3RyaW5nID0gZnVuY3Rpb24oczIpIHtcbiAgICAgICAgZm9yICh2YXIgaTIgPSAwOyBpMiA8IHMyLmxlbmd0aDsgaTIgKz0gMSkge1xuICAgICAgICAgIF90aGlzLndyaXRlQnl0ZShzMi5jaGFyQ29kZUF0KGkyKSk7XG4gICAgICAgIH1cbiAgICAgIH07XG4gICAgICBfdGhpcy50b0J5dGVBcnJheSA9IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gX2J5dGVzO1xuICAgICAgfTtcbiAgICAgIF90aGlzLnRvU3RyaW5nID0gZnVuY3Rpb24oKSB7XG4gICAgICAgIHZhciBzMiA9IFwiXCI7XG4gICAgICAgIHMyICs9IFwiW1wiO1xuICAgICAgICBmb3IgKHZhciBpMiA9IDA7IGkyIDwgX2J5dGVzLmxlbmd0aDsgaTIgKz0gMSkge1xuICAgICAgICAgIGlmIChpMiA+IDApIHtcbiAgICAgICAgICAgIHMyICs9IFwiLFwiO1xuICAgICAgICAgIH1cbiAgICAgICAgICBzMiArPSBfYnl0ZXNbaTJdO1xuICAgICAgICB9XG4gICAgICAgIHMyICs9IFwiXVwiO1xuICAgICAgICByZXR1cm4gczI7XG4gICAgICB9O1xuICAgICAgcmV0dXJuIF90aGlzO1xuICAgIH07XG4gICAgdmFyIGJhc2U2NEVuY29kZU91dHB1dFN0cmVhbSA9IGZ1bmN0aW9uKCkge1xuICAgICAgdmFyIF9idWZmZXIgPSAwO1xuICAgICAgdmFyIF9idWZsZW4gPSAwO1xuICAgICAgdmFyIF9sZW5ndGggPSAwO1xuICAgICAgdmFyIF9iYXNlNjQgPSBcIlwiO1xuICAgICAgdmFyIF90aGlzID0ge307XG4gICAgICB2YXIgd3JpdGVFbmNvZGVkID0gZnVuY3Rpb24oYikge1xuICAgICAgICBfYmFzZTY0ICs9IFN0cmluZy5mcm9tQ2hhckNvZGUoZW5jb2RlKGIgJiA2MykpO1xuICAgICAgfTtcbiAgICAgIHZhciBlbmNvZGUgPSBmdW5jdGlvbihuMikge1xuICAgICAgICBpZiAobjIgPCAwKVxuICAgICAgICAgIDtcbiAgICAgICAgZWxzZSBpZiAobjIgPCAyNikge1xuICAgICAgICAgIHJldHVybiA2NSArIG4yO1xuICAgICAgICB9IGVsc2UgaWYgKG4yIDwgNTIpIHtcbiAgICAgICAgICByZXR1cm4gOTcgKyAobjIgLSAyNik7XG4gICAgICAgIH0gZWxzZSBpZiAobjIgPCA2Mikge1xuICAgICAgICAgIHJldHVybiA0OCArIChuMiAtIDUyKTtcbiAgICAgICAgfSBlbHNlIGlmIChuMiA9PSA2Mikge1xuICAgICAgICAgIHJldHVybiA0MztcbiAgICAgICAgfSBlbHNlIGlmIChuMiA9PSA2Mykge1xuICAgICAgICAgIHJldHVybiA0NztcbiAgICAgICAgfVxuICAgICAgICB0aHJvdyBcIm46XCIgKyBuMjtcbiAgICAgIH07XG4gICAgICBfdGhpcy53cml0ZUJ5dGUgPSBmdW5jdGlvbihuMikge1xuICAgICAgICBfYnVmZmVyID0gX2J1ZmZlciA8PCA4IHwgbjIgJiAyNTU7XG4gICAgICAgIF9idWZsZW4gKz0gODtcbiAgICAgICAgX2xlbmd0aCArPSAxO1xuICAgICAgICB3aGlsZSAoX2J1ZmxlbiA+PSA2KSB7XG4gICAgICAgICAgd3JpdGVFbmNvZGVkKF9idWZmZXIgPj4+IF9idWZsZW4gLSA2KTtcbiAgICAgICAgICBfYnVmbGVuIC09IDY7XG4gICAgICAgIH1cbiAgICAgIH07XG4gICAgICBfdGhpcy5mbHVzaCA9IGZ1bmN0aW9uKCkge1xuICAgICAgICBpZiAoX2J1ZmxlbiA+IDApIHtcbiAgICAgICAgICB3cml0ZUVuY29kZWQoX2J1ZmZlciA8PCA2IC0gX2J1Zmxlbik7XG4gICAgICAgICAgX2J1ZmZlciA9IDA7XG4gICAgICAgICAgX2J1ZmxlbiA9IDA7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKF9sZW5ndGggJSAzICE9IDApIHtcbiAgICAgICAgICB2YXIgcGFkbGVuID0gMyAtIF9sZW5ndGggJSAzO1xuICAgICAgICAgIGZvciAodmFyIGkyID0gMDsgaTIgPCBwYWRsZW47IGkyICs9IDEpIHtcbiAgICAgICAgICAgIF9iYXNlNjQgKz0gXCI9XCI7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9O1xuICAgICAgX3RoaXMudG9TdHJpbmcgPSBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIF9iYXNlNjQ7XG4gICAgICB9O1xuICAgICAgcmV0dXJuIF90aGlzO1xuICAgIH07XG4gICAgdmFyIGJhc2U2NERlY29kZUlucHV0U3RyZWFtID0gZnVuY3Rpb24oc3RyKSB7XG4gICAgICB2YXIgX3N0ciA9IHN0cjtcbiAgICAgIHZhciBfcG9zID0gMDtcbiAgICAgIHZhciBfYnVmZmVyID0gMDtcbiAgICAgIHZhciBfYnVmbGVuID0gMDtcbiAgICAgIHZhciBfdGhpcyA9IHt9O1xuICAgICAgX3RoaXMucmVhZCA9IGZ1bmN0aW9uKCkge1xuICAgICAgICB3aGlsZSAoX2J1ZmxlbiA8IDgpIHtcbiAgICAgICAgICBpZiAoX3BvcyA+PSBfc3RyLmxlbmd0aCkge1xuICAgICAgICAgICAgaWYgKF9idWZsZW4gPT0gMCkge1xuICAgICAgICAgICAgICByZXR1cm4gLTE7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB0aHJvdyBcInVuZXhwZWN0ZWQgZW5kIG9mIGZpbGUuL1wiICsgX2J1ZmxlbjtcbiAgICAgICAgICB9XG4gICAgICAgICAgdmFyIGMyID0gX3N0ci5jaGFyQXQoX3Bvcyk7XG4gICAgICAgICAgX3BvcyArPSAxO1xuICAgICAgICAgIGlmIChjMiA9PSBcIj1cIikge1xuICAgICAgICAgICAgX2J1ZmxlbiA9IDA7XG4gICAgICAgICAgICByZXR1cm4gLTE7XG4gICAgICAgICAgfSBlbHNlIGlmIChjMi5tYXRjaCgvXlxccyQvKSkge1xuICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgICAgfVxuICAgICAgICAgIF9idWZmZXIgPSBfYnVmZmVyIDw8IDYgfCBkZWNvZGUoYzIuY2hhckNvZGVBdCgwKSk7XG4gICAgICAgICAgX2J1ZmxlbiArPSA2O1xuICAgICAgICB9XG4gICAgICAgIHZhciBuMiA9IF9idWZmZXIgPj4+IF9idWZsZW4gLSA4ICYgMjU1O1xuICAgICAgICBfYnVmbGVuIC09IDg7XG4gICAgICAgIHJldHVybiBuMjtcbiAgICAgIH07XG4gICAgICB2YXIgZGVjb2RlID0gZnVuY3Rpb24oYzIpIHtcbiAgICAgICAgaWYgKDY1IDw9IGMyICYmIGMyIDw9IDkwKSB7XG4gICAgICAgICAgcmV0dXJuIGMyIC0gNjU7XG4gICAgICAgIH0gZWxzZSBpZiAoOTcgPD0gYzIgJiYgYzIgPD0gMTIyKSB7XG4gICAgICAgICAgcmV0dXJuIGMyIC0gOTcgKyAyNjtcbiAgICAgICAgfSBlbHNlIGlmICg0OCA8PSBjMiAmJiBjMiA8PSA1Nykge1xuICAgICAgICAgIHJldHVybiBjMiAtIDQ4ICsgNTI7XG4gICAgICAgIH0gZWxzZSBpZiAoYzIgPT0gNDMpIHtcbiAgICAgICAgICByZXR1cm4gNjI7XG4gICAgICAgIH0gZWxzZSBpZiAoYzIgPT0gNDcpIHtcbiAgICAgICAgICByZXR1cm4gNjM7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgdGhyb3cgXCJjOlwiICsgYzI7XG4gICAgICAgIH1cbiAgICAgIH07XG4gICAgICByZXR1cm4gX3RoaXM7XG4gICAgfTtcbiAgICB2YXIgZ2lmSW1hZ2UgPSBmdW5jdGlvbih3aWR0aCwgaGVpZ2h0KSB7XG4gICAgICB2YXIgX3dpZHRoID0gd2lkdGg7XG4gICAgICB2YXIgX2hlaWdodCA9IGhlaWdodDtcbiAgICAgIHZhciBfZGF0YSA9IG5ldyBBcnJheSh3aWR0aCAqIGhlaWdodCk7XG4gICAgICB2YXIgX3RoaXMgPSB7fTtcbiAgICAgIF90aGlzLnNldFBpeGVsID0gZnVuY3Rpb24oeCwgeSwgcGl4ZWwpIHtcbiAgICAgICAgX2RhdGFbeSAqIF93aWR0aCArIHhdID0gcGl4ZWw7XG4gICAgICB9O1xuICAgICAgX3RoaXMud3JpdGUgPSBmdW5jdGlvbihvdXQpIHtcbiAgICAgICAgb3V0LndyaXRlU3RyaW5nKFwiR0lGODdhXCIpO1xuICAgICAgICBvdXQud3JpdGVTaG9ydChfd2lkdGgpO1xuICAgICAgICBvdXQud3JpdGVTaG9ydChfaGVpZ2h0KTtcbiAgICAgICAgb3V0LndyaXRlQnl0ZSgxMjgpO1xuICAgICAgICBvdXQud3JpdGVCeXRlKDApO1xuICAgICAgICBvdXQud3JpdGVCeXRlKDApO1xuICAgICAgICBvdXQud3JpdGVCeXRlKDApO1xuICAgICAgICBvdXQud3JpdGVCeXRlKDApO1xuICAgICAgICBvdXQud3JpdGVCeXRlKDApO1xuICAgICAgICBvdXQud3JpdGVCeXRlKDI1NSk7XG4gICAgICAgIG91dC53cml0ZUJ5dGUoMjU1KTtcbiAgICAgICAgb3V0LndyaXRlQnl0ZSgyNTUpO1xuICAgICAgICBvdXQud3JpdGVTdHJpbmcoXCIsXCIpO1xuICAgICAgICBvdXQud3JpdGVTaG9ydCgwKTtcbiAgICAgICAgb3V0LndyaXRlU2hvcnQoMCk7XG4gICAgICAgIG91dC53cml0ZVNob3J0KF93aWR0aCk7XG4gICAgICAgIG91dC53cml0ZVNob3J0KF9oZWlnaHQpO1xuICAgICAgICBvdXQud3JpdGVCeXRlKDApO1xuICAgICAgICB2YXIgbHp3TWluQ29kZVNpemUgPSAyO1xuICAgICAgICB2YXIgcmFzdGVyID0gZ2V0TFpXUmFzdGVyKGx6d01pbkNvZGVTaXplKTtcbiAgICAgICAgb3V0LndyaXRlQnl0ZShsendNaW5Db2RlU2l6ZSk7XG4gICAgICAgIHZhciBvZmZzZXQgPSAwO1xuICAgICAgICB3aGlsZSAocmFzdGVyLmxlbmd0aCAtIG9mZnNldCA+IDI1NSkge1xuICAgICAgICAgIG91dC53cml0ZUJ5dGUoMjU1KTtcbiAgICAgICAgICBvdXQud3JpdGVCeXRlcyhyYXN0ZXIsIG9mZnNldCwgMjU1KTtcbiAgICAgICAgICBvZmZzZXQgKz0gMjU1O1xuICAgICAgICB9XG4gICAgICAgIG91dC53cml0ZUJ5dGUocmFzdGVyLmxlbmd0aCAtIG9mZnNldCk7XG4gICAgICAgIG91dC53cml0ZUJ5dGVzKHJhc3Rlciwgb2Zmc2V0LCByYXN0ZXIubGVuZ3RoIC0gb2Zmc2V0KTtcbiAgICAgICAgb3V0LndyaXRlQnl0ZSgwKTtcbiAgICAgICAgb3V0LndyaXRlU3RyaW5nKFwiO1wiKTtcbiAgICAgIH07XG4gICAgICB2YXIgYml0T3V0cHV0U3RyZWFtID0gZnVuY3Rpb24ob3V0KSB7XG4gICAgICAgIHZhciBfb3V0ID0gb3V0O1xuICAgICAgICB2YXIgX2JpdExlbmd0aCA9IDA7XG4gICAgICAgIHZhciBfYml0QnVmZmVyID0gMDtcbiAgICAgICAgdmFyIF90aGlzMiA9IHt9O1xuICAgICAgICBfdGhpczIud3JpdGUgPSBmdW5jdGlvbihkYXRhLCBsZW5ndGgpIHtcbiAgICAgICAgICBpZiAoZGF0YSA+Pj4gbGVuZ3RoICE9IDApIHtcbiAgICAgICAgICAgIHRocm93IFwibGVuZ3RoIG92ZXJcIjtcbiAgICAgICAgICB9XG4gICAgICAgICAgd2hpbGUgKF9iaXRMZW5ndGggKyBsZW5ndGggPj0gOCkge1xuICAgICAgICAgICAgX291dC53cml0ZUJ5dGUoMjU1ICYgKGRhdGEgPDwgX2JpdExlbmd0aCB8IF9iaXRCdWZmZXIpKTtcbiAgICAgICAgICAgIGxlbmd0aCAtPSA4IC0gX2JpdExlbmd0aDtcbiAgICAgICAgICAgIGRhdGEgPj4+PSA4IC0gX2JpdExlbmd0aDtcbiAgICAgICAgICAgIF9iaXRCdWZmZXIgPSAwO1xuICAgICAgICAgICAgX2JpdExlbmd0aCA9IDA7XG4gICAgICAgICAgfVxuICAgICAgICAgIF9iaXRCdWZmZXIgPSBkYXRhIDw8IF9iaXRMZW5ndGggfCBfYml0QnVmZmVyO1xuICAgICAgICAgIF9iaXRMZW5ndGggPSBfYml0TGVuZ3RoICsgbGVuZ3RoO1xuICAgICAgICB9O1xuICAgICAgICBfdGhpczIuZmx1c2ggPSBmdW5jdGlvbigpIHtcbiAgICAgICAgICBpZiAoX2JpdExlbmd0aCA+IDApIHtcbiAgICAgICAgICAgIF9vdXQud3JpdGVCeXRlKF9iaXRCdWZmZXIpO1xuICAgICAgICAgIH1cbiAgICAgICAgfTtcbiAgICAgICAgcmV0dXJuIF90aGlzMjtcbiAgICAgIH07XG4gICAgICB2YXIgZ2V0TFpXUmFzdGVyID0gZnVuY3Rpb24obHp3TWluQ29kZVNpemUpIHtcbiAgICAgICAgdmFyIGNsZWFyQ29kZSA9IDEgPDwgbHp3TWluQ29kZVNpemU7XG4gICAgICAgIHZhciBlbmRDb2RlID0gKDEgPDwgbHp3TWluQ29kZVNpemUpICsgMTtcbiAgICAgICAgdmFyIGJpdExlbmd0aCA9IGx6d01pbkNvZGVTaXplICsgMTtcbiAgICAgICAgdmFyIHRhYmxlID0gbHp3VGFibGUoKTtcbiAgICAgICAgZm9yICh2YXIgaTIgPSAwOyBpMiA8IGNsZWFyQ29kZTsgaTIgKz0gMSkge1xuICAgICAgICAgIHRhYmxlLmFkZChTdHJpbmcuZnJvbUNoYXJDb2RlKGkyKSk7XG4gICAgICAgIH1cbiAgICAgICAgdGFibGUuYWRkKFN0cmluZy5mcm9tQ2hhckNvZGUoY2xlYXJDb2RlKSk7XG4gICAgICAgIHRhYmxlLmFkZChTdHJpbmcuZnJvbUNoYXJDb2RlKGVuZENvZGUpKTtcbiAgICAgICAgdmFyIGJ5dGVPdXQgPSBieXRlQXJyYXlPdXRwdXRTdHJlYW0oKTtcbiAgICAgICAgdmFyIGJpdE91dCA9IGJpdE91dHB1dFN0cmVhbShieXRlT3V0KTtcbiAgICAgICAgYml0T3V0LndyaXRlKGNsZWFyQ29kZSwgYml0TGVuZ3RoKTtcbiAgICAgICAgdmFyIGRhdGFJbmRleCA9IDA7XG4gICAgICAgIHZhciBzMiA9IFN0cmluZy5mcm9tQ2hhckNvZGUoX2RhdGFbZGF0YUluZGV4XSk7XG4gICAgICAgIGRhdGFJbmRleCArPSAxO1xuICAgICAgICB3aGlsZSAoZGF0YUluZGV4IDwgX2RhdGEubGVuZ3RoKSB7XG4gICAgICAgICAgdmFyIGMyID0gU3RyaW5nLmZyb21DaGFyQ29kZShfZGF0YVtkYXRhSW5kZXhdKTtcbiAgICAgICAgICBkYXRhSW5kZXggKz0gMTtcbiAgICAgICAgICBpZiAodGFibGUuY29udGFpbnMoczIgKyBjMikpIHtcbiAgICAgICAgICAgIHMyID0gczIgKyBjMjtcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgYml0T3V0LndyaXRlKHRhYmxlLmluZGV4T2YoczIpLCBiaXRMZW5ndGgpO1xuICAgICAgICAgICAgaWYgKHRhYmxlLnNpemUoKSA8IDQwOTUpIHtcbiAgICAgICAgICAgICAgaWYgKHRhYmxlLnNpemUoKSA9PSAxIDw8IGJpdExlbmd0aCkge1xuICAgICAgICAgICAgICAgIGJpdExlbmd0aCArPSAxO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIHRhYmxlLmFkZChzMiArIGMyKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHMyID0gYzI7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGJpdE91dC53cml0ZSh0YWJsZS5pbmRleE9mKHMyKSwgYml0TGVuZ3RoKTtcbiAgICAgICAgYml0T3V0LndyaXRlKGVuZENvZGUsIGJpdExlbmd0aCk7XG4gICAgICAgIGJpdE91dC5mbHVzaCgpO1xuICAgICAgICByZXR1cm4gYnl0ZU91dC50b0J5dGVBcnJheSgpO1xuICAgICAgfTtcbiAgICAgIHZhciBsendUYWJsZSA9IGZ1bmN0aW9uKCkge1xuICAgICAgICB2YXIgX21hcCA9IHt9O1xuICAgICAgICB2YXIgX3NpemUgPSAwO1xuICAgICAgICB2YXIgX3RoaXMyID0ge307XG4gICAgICAgIF90aGlzMi5hZGQgPSBmdW5jdGlvbihrZXkpIHtcbiAgICAgICAgICBpZiAoX3RoaXMyLmNvbnRhaW5zKGtleSkpIHtcbiAgICAgICAgICAgIHRocm93IFwiZHVwIGtleTpcIiArIGtleTtcbiAgICAgICAgICB9XG4gICAgICAgICAgX21hcFtrZXldID0gX3NpemU7XG4gICAgICAgICAgX3NpemUgKz0gMTtcbiAgICAgICAgfTtcbiAgICAgICAgX3RoaXMyLnNpemUgPSBmdW5jdGlvbigpIHtcbiAgICAgICAgICByZXR1cm4gX3NpemU7XG4gICAgICAgIH07XG4gICAgICAgIF90aGlzMi5pbmRleE9mID0gZnVuY3Rpb24oa2V5KSB7XG4gICAgICAgICAgcmV0dXJuIF9tYXBba2V5XTtcbiAgICAgICAgfTtcbiAgICAgICAgX3RoaXMyLmNvbnRhaW5zID0gZnVuY3Rpb24oa2V5KSB7XG4gICAgICAgICAgcmV0dXJuIHR5cGVvZiBfbWFwW2tleV0gIT0gXCJ1bmRlZmluZWRcIjtcbiAgICAgICAgfTtcbiAgICAgICAgcmV0dXJuIF90aGlzMjtcbiAgICAgIH07XG4gICAgICByZXR1cm4gX3RoaXM7XG4gICAgfTtcbiAgICB2YXIgY3JlYXRlRGF0YVVSTCA9IGZ1bmN0aW9uKHdpZHRoLCBoZWlnaHQsIGdldFBpeGVsKSB7XG4gICAgICB2YXIgZ2lmID0gZ2lmSW1hZ2Uod2lkdGgsIGhlaWdodCk7XG4gICAgICBmb3IgKHZhciB5ID0gMDsgeSA8IGhlaWdodDsgeSArPSAxKSB7XG4gICAgICAgIGZvciAodmFyIHggPSAwOyB4IDwgd2lkdGg7IHggKz0gMSkge1xuICAgICAgICAgIGdpZi5zZXRQaXhlbCh4LCB5LCBnZXRQaXhlbCh4LCB5KSk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIHZhciBiID0gYnl0ZUFycmF5T3V0cHV0U3RyZWFtKCk7XG4gICAgICBnaWYud3JpdGUoYik7XG4gICAgICB2YXIgYmFzZTY0ID0gYmFzZTY0RW5jb2RlT3V0cHV0U3RyZWFtKCk7XG4gICAgICB2YXIgYnl0ZXMgPSBiLnRvQnl0ZUFycmF5KCk7XG4gICAgICBmb3IgKHZhciBpMiA9IDA7IGkyIDwgYnl0ZXMubGVuZ3RoOyBpMiArPSAxKSB7XG4gICAgICAgIGJhc2U2NC53cml0ZUJ5dGUoYnl0ZXNbaTJdKTtcbiAgICAgIH1cbiAgICAgIGJhc2U2NC5mbHVzaCgpO1xuICAgICAgcmV0dXJuIFwiZGF0YTppbWFnZS9naWY7YmFzZTY0LFwiICsgYmFzZTY0O1xuICAgIH07XG4gICAgcmV0dXJuIHFyY29kZTM7XG4gIH0oKTtcbiAgIWZ1bmN0aW9uKCkge1xuICAgIHFyY29kZTIuc3RyaW5nVG9CeXRlc0Z1bmNzW1wiVVRGLThcIl0gPSBmdW5jdGlvbihzMikge1xuICAgICAgZnVuY3Rpb24gdG9VVEY4QXJyYXkoc3RyKSB7XG4gICAgICAgIHZhciB1dGY4ID0gW107XG4gICAgICAgIGZvciAodmFyIGkyID0gMDsgaTIgPCBzdHIubGVuZ3RoOyBpMisrKSB7XG4gICAgICAgICAgdmFyIGNoYXJjb2RlID0gc3RyLmNoYXJDb2RlQXQoaTIpO1xuICAgICAgICAgIGlmIChjaGFyY29kZSA8IDEyOClcbiAgICAgICAgICAgIHV0ZjgucHVzaChjaGFyY29kZSk7XG4gICAgICAgICAgZWxzZSBpZiAoY2hhcmNvZGUgPCAyMDQ4KSB7XG4gICAgICAgICAgICB1dGY4LnB1c2goXG4gICAgICAgICAgICAgIDE5MiB8IGNoYXJjb2RlID4+IDYsXG4gICAgICAgICAgICAgIDEyOCB8IGNoYXJjb2RlICYgNjNcbiAgICAgICAgICAgICk7XG4gICAgICAgICAgfSBlbHNlIGlmIChjaGFyY29kZSA8IDU1Mjk2IHx8IGNoYXJjb2RlID49IDU3MzQ0KSB7XG4gICAgICAgICAgICB1dGY4LnB1c2goXG4gICAgICAgICAgICAgIDIyNCB8IGNoYXJjb2RlID4+IDEyLFxuICAgICAgICAgICAgICAxMjggfCBjaGFyY29kZSA+PiA2ICYgNjMsXG4gICAgICAgICAgICAgIDEyOCB8IGNoYXJjb2RlICYgNjNcbiAgICAgICAgICAgICk7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGkyKys7XG4gICAgICAgICAgICBjaGFyY29kZSA9IDY1NTM2ICsgKChjaGFyY29kZSAmIDEwMjMpIDw8IDEwIHwgc3RyLmNoYXJDb2RlQXQoaTIpICYgMTAyMyk7XG4gICAgICAgICAgICB1dGY4LnB1c2goXG4gICAgICAgICAgICAgIDI0MCB8IGNoYXJjb2RlID4+IDE4LFxuICAgICAgICAgICAgICAxMjggfCBjaGFyY29kZSA+PiAxMiAmIDYzLFxuICAgICAgICAgICAgICAxMjggfCBjaGFyY29kZSA+PiA2ICYgNjMsXG4gICAgICAgICAgICAgIDEyOCB8IGNoYXJjb2RlICYgNjNcbiAgICAgICAgICAgICk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiB1dGY4O1xuICAgICAgfVxuICAgICAgcmV0dXJuIHRvVVRGOEFycmF5KHMyKTtcbiAgICB9O1xuICB9KCk7XG4gIChmdW5jdGlvbihmYWN0b3J5KSB7XG4gICAge1xuICAgICAgbW9kdWxlLmV4cG9ydHMgPSBmYWN0b3J5KCk7XG4gICAgfVxuICB9KShmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gcXJjb2RlMjtcbiAgfSk7XG59KShxcmNvZGUkMSk7XG5jb25zdCBxcmNvZGUgPSBxcmNvZGUkMS5leHBvcnRzO1xuZnVuY3Rpb24gY29weVRvQ2xpcGJvYXJkKHRleHQpIHtcbiAgcmV0dXJuIF9fYXN5bmModGhpcywgbnVsbCwgZnVuY3Rpb24qICgpIHtcbiAgICB0cnkge1xuICAgICAgaWYgKCEobmF2aWdhdG9yID09IG51bGwgPyB2b2lkIDAgOiBuYXZpZ2F0b3IuY2xpcGJvYXJkKSkge1xuICAgICAgICB0aHJvdyBuZXcgVG9uQ29ubmVjdFVJRXJyb3IoXCJDbGlwYm9hcmQgQVBJIG5vdCBhdmFpbGFibGVcIik7XG4gICAgICB9XG4gICAgICByZXR1cm4geWllbGQgbmF2aWdhdG9yLmNsaXBib2FyZC53cml0ZVRleHQodGV4dCk7XG4gICAgfSBjYXRjaCAoZTIpIHtcbiAgICB9XG4gICAgZmFsbGJhY2tDb3B5VGV4dFRvQ2xpcGJvYXJkKHRleHQpO1xuICB9KTtcbn1cbmZ1bmN0aW9uIGZhbGxiYWNrQ29weVRleHRUb0NsaXBib2FyZCh0ZXh0KSB7XG4gIGNvbnN0IHRleHRBcmVhID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInRleHRhcmVhXCIpO1xuICB0ZXh0QXJlYS52YWx1ZSA9IHRleHQ7XG4gIHRleHRBcmVhLnN0eWxlLnRvcCA9IFwiMFwiO1xuICB0ZXh0QXJlYS5zdHlsZS5sZWZ0ID0gXCIwXCI7XG4gIHRleHRBcmVhLnN0eWxlLnBvc2l0aW9uID0gXCJmaXhlZFwiO1xuICBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKHRleHRBcmVhKTtcbiAgdGV4dEFyZWEuZm9jdXMoKTtcbiAgdGV4dEFyZWEuc2VsZWN0KCk7XG4gIHRyeSB7XG4gICAgZG9jdW1lbnQuZXhlY0NvbW1hbmQoXCJjb3B5XCIpO1xuICB9IGZpbmFsbHkge1xuICAgIGRvY3VtZW50LmJvZHkucmVtb3ZlQ2hpbGQodGV4dEFyZWEpO1xuICB9XG59XG5jb25zdCBfdG1wbCQkcyA9IC8qIEBfX1BVUkVfXyAqLyB0ZW1wbGF0ZSQxKGA8ZGl2PjwvZGl2PmApO1xuY29uc3QgUVJDb2RlID0gKHByb3BzKSA9PiB7XG4gIGxldCBxckNvZGVDYW52YXNSZWY7XG4gIGxldCBxckNvZGVXcmFwcGVyUmVmO1xuICBsZXQgaW1hZ2VSZWY7XG4gIGNvbnN0IFtjb3B5QnV0dG9uT3BlbmVkLCBzZXRDb3B5QnV0dG9uT3BlbmVkXSA9IGNyZWF0ZVNpZ25hbChmYWxzZSk7XG4gIGNvbnN0IFtwaWNTaXplLCBzZXRQaWNTaXplXSA9IGNyZWF0ZVNpZ25hbChwaWNTaXplRGVmYXVsdCk7XG4gIGNyZWF0ZUVmZmVjdCgoKSA9PiB7XG4gICAgY29uc3QgZXJyb3JDb3JyZWN0aW9uTGV2ZWwgPSBcIkxcIjtcbiAgICBjb25zdCBjZWxsU2l6ZSA9IDQ7XG4gICAgY29uc3QgcXIgPSBxcmNvZGUoMCwgZXJyb3JDb3JyZWN0aW9uTGV2ZWwpO1xuICAgIHFyLmFkZERhdGEocHJvcHMuc291cmNlVXJsKTtcbiAgICBxci5tYWtlKCk7XG4gICAgcXJDb2RlQ2FudmFzUmVmLmlubmVySFRNTCA9IHFyLmNyZWF0ZVN2Z1RhZyhjZWxsU2l6ZSwgMCk7XG4gICAgY29uc3QgcXJTaXplID0gcXJDb2RlQ2FudmFzUmVmLmZpcnN0RWxlbWVudENoaWxkLmNsaWVudFdpZHRoO1xuICAgIGNvbnN0IHNjYWxlID0gTWF0aC5yb3VuZChxck5vcm1hbFNpemUgLyBxclNpemUgKiAxZTUpIC8gMWU1O1xuICAgIGlmIChpbWFnZVJlZikge1xuICAgICAgY29uc3QgaW1nU2l6ZSA9IE1hdGguY2VpbChpbWdTaXplRGVmYXVsdCAvIChzY2FsZSAqIGNlbGxTaXplKSkgKiBjZWxsU2l6ZTtcbiAgICAgIGNvbnN0IGltZ09mZnNldCA9IHRvUHgoTWF0aC5jZWlsKChxclNpemUgLSBpbWdTaXplKSAvICgyICogY2VsbFNpemUpKSAqIGNlbGxTaXplKTtcbiAgICAgIGltYWdlUmVmLnN0eWxlLnRvcCA9IGltZ09mZnNldDtcbiAgICAgIGltYWdlUmVmLnN0eWxlLmxlZnQgPSBpbWdPZmZzZXQ7XG4gICAgICBpbWFnZVJlZi5zdHlsZS5oZWlnaHQgPSB0b1B4KGltZ1NpemUpO1xuICAgICAgaW1hZ2VSZWYuc3R5bGUud2lkdGggPSB0b1B4KGltZ1NpemUpO1xuICAgICAgc2V0UGljU2l6ZShNYXRoLnJvdW5kKHBpY1NpemVEZWZhdWx0IC8gc2NhbGUpKTtcbiAgICB9XG4gICAgcXJDb2RlV3JhcHBlclJlZi5zdHlsZS50cmFuc2Zvcm0gPSBgc2NhbGUoJHtzY2FsZX0pYDtcbiAgfSk7XG4gIGxldCB0aW1lb3V0SWQgPSBudWxsO1xuICBjb25zdCBvbkNvcHlDbGljayA9ICgpID0+IHtcbiAgICBzZXRDb3B5QnV0dG9uT3BlbmVkKHRydWUpO1xuICAgIGNvcHlUb0NsaXBib2FyZChwcm9wcy5zb3VyY2VVcmwpO1xuICAgIGlmICh0aW1lb3V0SWQgIT0gbnVsbCkge1xuICAgICAgY2xlYXJUaW1lb3V0KHRpbWVvdXRJZCk7XG4gICAgfVxuICAgIHRpbWVvdXRJZCA9IHNldFRpbWVvdXQoKCkgPT4gc2V0Q29weUJ1dHRvbk9wZW5lZChmYWxzZSksIDE1MDApO1xuICB9O1xuICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KFFyQ29kZUJhY2tncm91bmQsIHtcbiAgICBnZXQgW1wiY2xhc3NcIl0oKSB7XG4gICAgICByZXR1cm4gcHJvcHMuY2xhc3M7XG4gICAgfSxcbiAgICBvbkNsaWNrOiBvbkNvcHlDbGljayxcbiAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICByZXR1cm4gW2NyZWF0ZUNvbXBvbmVudChRckNvZGVXcmFwcGVyJDIsIHtcbiAgICAgICAgcmVmKHIkKSB7XG4gICAgICAgICAgY29uc3QgX3JlZiQgPSBxckNvZGVXcmFwcGVyUmVmO1xuICAgICAgICAgIHR5cGVvZiBfcmVmJCA9PT0gXCJmdW5jdGlvblwiID8gX3JlZiQociQpIDogcXJDb2RlV3JhcHBlclJlZiA9IHIkO1xuICAgICAgICB9LFxuICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgcmV0dXJuIFsoKCkgPT4ge1xuICAgICAgICAgICAgY29uc3QgX2VsJCA9IF90bXBsJCRzLmNsb25lTm9kZSh0cnVlKTtcbiAgICAgICAgICAgIGNvbnN0IF9yZWYkMiA9IHFyQ29kZUNhbnZhc1JlZjtcbiAgICAgICAgICAgIHR5cGVvZiBfcmVmJDIgPT09IFwiZnVuY3Rpb25cIiA/IHVzZShfcmVmJDIsIF9lbCQpIDogcXJDb2RlQ2FudmFzUmVmID0gX2VsJDtcbiAgICAgICAgICAgIHJldHVybiBfZWwkO1xuICAgICAgICAgIH0pKCksIGNyZWF0ZUNvbXBvbmVudChTaG93LCB7XG4gICAgICAgICAgICBnZXQgd2hlbigpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIHByb3BzLmltYWdlVXJsO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChJbWFnZUJhY2tncm91bmQsIHtcbiAgICAgICAgICAgICAgICByZWYociQpIHtcbiAgICAgICAgICAgICAgICAgIGNvbnN0IF9yZWYkMyA9IGltYWdlUmVmO1xuICAgICAgICAgICAgICAgICAgdHlwZW9mIF9yZWYkMyA9PT0gXCJmdW5jdGlvblwiID8gX3JlZiQzKHIkKSA6IGltYWdlUmVmID0gciQ7XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgICAgICAgICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KEltYWdlU3R5bGVkJDMsIHtcbiAgICAgICAgICAgICAgICAgICAgZ2V0IHNyYygpIHtcbiAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gcHJvcHMuaW1hZ2VVcmw7XG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgIGFsdDogXCJcIixcbiAgICAgICAgICAgICAgICAgICAgZ2V0IHNpemUoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHBpY1NpemUoKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9KV07XG4gICAgICAgIH1cbiAgICAgIH0pLCBjcmVhdGVDb21wb25lbnQoVHJhbnNpdGlvbiwge1xuICAgICAgICBvbkJlZm9yZUVudGVyOiAoZWwpID0+IHtcbiAgICAgICAgICBhbmltYXRlKGVsLCBbe1xuICAgICAgICAgICAgb3BhY2l0eTogMCxcbiAgICAgICAgICAgIHRyYW5zZm9ybTogXCJ0cmFuc2xhdGUoLTUwJSwgNDRweClcIlxuICAgICAgICAgIH0sIHtcbiAgICAgICAgICAgIG9wYWNpdHk6IDEsXG4gICAgICAgICAgICB0cmFuc2Zvcm06IFwidHJhbnNsYXRlKC01MCUsIDApXCJcbiAgICAgICAgICB9XSwge1xuICAgICAgICAgICAgZHVyYXRpb246IDE1MCxcbiAgICAgICAgICAgIGVhc2luZzogXCJlYXNlLW91dFwiXG4gICAgICAgICAgfSk7XG4gICAgICAgIH0sXG4gICAgICAgIG9uRXhpdDogKGVsLCBkb25lKSA9PiB7XG4gICAgICAgICAgYW5pbWF0ZShlbCwgW3tcbiAgICAgICAgICAgIG9wYWNpdHk6IDEsXG4gICAgICAgICAgICB0cmFuc2Zvcm06IFwidHJhbnNsYXRlKC01MCUsIDApXCJcbiAgICAgICAgICB9LCB7XG4gICAgICAgICAgICBvcGFjaXR5OiAwLFxuICAgICAgICAgICAgdHJhbnNmb3JtOiBcInRyYW5zbGF0ZSgtNTAlLCA0NHB4KVwiXG4gICAgICAgICAgfV0sIHtcbiAgICAgICAgICAgIGR1cmF0aW9uOiAxNTAsXG4gICAgICAgICAgICBlYXNpbmc6IFwiZWFzZS1vdXRcIlxuICAgICAgICAgIH0pLmZpbmlzaGVkLnRoZW4oKCkgPT4ge1xuICAgICAgICAgICAgZG9uZSgpO1xuICAgICAgICAgIH0pO1xuICAgICAgICB9LFxuICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChTaG93LCB7XG4gICAgICAgICAgICBnZXQgd2hlbigpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIGNvcHlCdXR0b25PcGVuZWQoKSAmJiAhcHJvcHMuZGlzYWJsZUNvcHk7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgICAgICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KENvcGllZEJveFN0eWxlZCwge1xuICAgICAgICAgICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICAgICAgICAgIHJldHVybiBbY3JlYXRlQ29tcG9uZW50KFN1Y2Nlc3NJY29uLCB7XG4gICAgICAgICAgICAgICAgICAgIHNpemU6IFwieHNcIlxuICAgICAgICAgICAgICAgICAgfSksIGNyZWF0ZUNvbXBvbmVudChUZXh0LCB7XG4gICAgICAgICAgICAgICAgICAgIHRyYW5zbGF0aW9uS2V5OiBcImNvbW1vbi5saW5rQ29waWVkXCIsXG4gICAgICAgICAgICAgICAgICAgIGNoaWxkcmVuOiBcIkxpbmsgQ29waWVkXCJcbiAgICAgICAgICAgICAgICAgIH0pXTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICB9KSwgY3JlYXRlQ29tcG9uZW50KFNob3csIHtcbiAgICAgICAgZ2V0IHdoZW4oKSB7XG4gICAgICAgICAgcmV0dXJuICFwcm9wcy5kaXNhYmxlQ29weTtcbiAgICAgICAgfSxcbiAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoQ29weUljb25CdXR0b24sIHtcbiAgICAgICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChDb3B5TGlnaHRJY29uLCB7fSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgIH0pXTtcbiAgICB9XG4gIH0pO1xufTtcbnZhciBkZWVwUmVhZE9iamVjdCA9IChvYmosIHBhdGgsIGRlZmF1bHRWYWx1ZSkgPT4ge1xuICBjb25zdCB2YWx1ZSA9IHBhdGgudHJpbSgpLnNwbGl0KFwiLlwiKS5yZWR1Y2UoKGEyLCBiKSA9PiBhMiA/IGEyW2JdIDogdm9pZCAwLCBvYmopO1xuICByZXR1cm4gdmFsdWUgIT09IHZvaWQgMCA/IHZhbHVlIDogZGVmYXVsdFZhbHVlO1xufTtcbnZhciB0ZW1wbGF0ZSA9IChzdHIsIHBhcmFtcywgcmVnID0gL3t7KC4qPyl9fS9nKSA9PiBzdHIucmVwbGFjZShyZWcsIChfLCBrZXkpID0+IGRlZXBSZWFkT2JqZWN0KHBhcmFtcywga2V5LCBcIlwiKSk7XG52YXIgY3JlYXRlSTE4bkNvbnRleHQgPSAoaW5pdCA9IHt9LCBsYW5nID0gbmF2aWdhdG9yLmxhbmd1YWdlIGluIGluaXQgPyBuYXZpZ2F0b3IubGFuZ3VhZ2UgOiBPYmplY3Qua2V5cyhpbml0KVswXSkgPT4ge1xuICBjb25zdCBbbG9jYWxlLCBzZXRMb2NhbGVdID0gY3JlYXRlU2lnbmFsKGxhbmcpO1xuICBjb25zdCBbZGljdCwgc2V0RGljdF0gPSBjcmVhdGVTdG9yZShpbml0KTtcbiAgY29uc3QgdHJhbnNsYXRlID0gKGtleSwgcGFyYW1zLCBkZWZhdWx0VmFsdWUpID0+IHtcbiAgICBjb25zdCB2YWwgPSBkZWVwUmVhZE9iamVjdChkaWN0W2xvY2FsZSgpXSwga2V5LCBkZWZhdWx0VmFsdWUgfHwgXCJcIik7XG4gICAgaWYgKHR5cGVvZiB2YWwgPT09IFwiZnVuY3Rpb25cIilcbiAgICAgIHJldHVybiB2YWwocGFyYW1zKTtcbiAgICBpZiAodHlwZW9mIHZhbCA9PT0gXCJzdHJpbmdcIilcbiAgICAgIHJldHVybiB0ZW1wbGF0ZSh2YWwsIHBhcmFtcyB8fCB7fSk7XG4gICAgcmV0dXJuIHZhbDtcbiAgfTtcbiAgY29uc3QgYWN0aW9ucyA9IHtcbiAgICBhZGQobGFuZzIsIHRhYmxlKSB7XG4gICAgICBzZXREaWN0KGxhbmcyLCAodDIpID0+IE9iamVjdC5hc3NpZ24odDIgfHwge30sIHRhYmxlKSk7XG4gICAgfSxcbiAgICBsb2NhbGU6IChsYW5nMikgPT4gbGFuZzIgPyBzZXRMb2NhbGUobGFuZzIpIDogbG9jYWxlKCksXG4gICAgZGljdDogKGxhbmcyKSA9PiBkZWVwUmVhZE9iamVjdChkaWN0LCBsYW5nMilcbiAgfTtcbiAgcmV0dXJuIFt0cmFuc2xhdGUsIGFjdGlvbnNdO1xufTtcbnZhciBJMThuQ29udGV4dCA9IGNyZWF0ZUNvbnRleHQoe30pO1xudmFyIHVzZUkxOG4gPSAoKSA9PiB1c2VDb250ZXh0KEkxOG5Db250ZXh0KTtcbmNvbnN0IFRleHRTdHlsZWQkMyA9IHN0eWxlZC5kaXZgXG4gICAgZm9udC1zdHlsZTogbm9ybWFsO1xuICAgIGZvbnQtd2VpZ2h0OiAkeyhwcm9wcykgPT4gcHJvcHMuZm9udFdlaWdodH07XG4gICAgZm9udC1zaXplOiAkeyhwcm9wcykgPT4gcHJvcHMuZm9udFNpemV9O1xuICAgIGxpbmUtaGVpZ2h0OiAkeyhwcm9wcykgPT4gcHJvcHMubGluZUhlaWdodH07XG5cbiAgICBjb2xvcjogJHsocHJvcHMpID0+IHByb3BzLmNvbG9yfTtcbmA7XG5jb25zdCBUZXh0ID0gKGlucHV0cykgPT4ge1xuICBjb25zdCB0aGVtZSA9IHVzZVRoZW1lKCk7XG4gIGNvbnN0IFt0Ml0gPSB1c2VJMThuKCk7XG4gIGxldCB0ZXh0UmVmO1xuICBjb25zdCBjb2xvciA9ICgpID0+IGlucHV0cy5jb2xvciB8fCB0aGVtZS5jb2xvcnMudGV4dC5wcmltYXJ5O1xuICBjb25zdCBwcm9wcyA9IG1lcmdlUHJvcHMoe1xuICAgIGZvbnRTaXplOiBcIjE0cHhcIixcbiAgICBmb250V2VpZ2h0OiBcIjUxMFwiLFxuICAgIGxpbmVIZWlnaHQ6IFwiMTMwJVwiXG4gIH0sIGlucHV0cyk7XG4gIGNyZWF0ZUVmZmVjdCgoKSA9PiB7XG4gICAgaWYgKCF0ZXh0UmVmKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIGlmIChwcm9wcy5jdXJzb3IgPT09IFwidW5zZXRcIikge1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBpZiAoZ2V0Q29tcHV0ZWRTdHlsZSh0ZXh0UmVmKS5jdXJzb3IgIT09IFwicG9pbnRlclwiKSB7XG4gICAgICB0ZXh0UmVmLnN0eWxlLmN1cnNvciA9IFwiZGVmYXVsdFwiO1xuICAgIH1cbiAgfSk7XG4gIHJldHVybiBjcmVhdGVDb21wb25lbnQoVGV4dFN0eWxlZCQzLCB7XG4gICAgZ2V0IGZvbnRTaXplKCkge1xuICAgICAgcmV0dXJuIHByb3BzLmZvbnRTaXplO1xuICAgIH0sXG4gICAgZ2V0IGZvbnRXZWlnaHQoKSB7XG4gICAgICByZXR1cm4gcHJvcHMuZm9udFdlaWdodDtcbiAgICB9LFxuICAgIGdldCBsaW5lSGVpZ2h0KCkge1xuICAgICAgcmV0dXJuIHByb3BzLmxpbmVIZWlnaHQ7XG4gICAgfSxcbiAgICBnZXQgY29sb3IoKSB7XG4gICAgICByZXR1cm4gY29sb3IoKTtcbiAgICB9LFxuICAgIGdldCBbXCJjbGFzc1wiXSgpIHtcbiAgICAgIHJldHVybiBwcm9wcy5jbGFzcztcbiAgICB9LFxuICAgIHJlZihyJCkge1xuICAgICAgY29uc3QgX3JlZiQgPSB0ZXh0UmVmO1xuICAgICAgdHlwZW9mIF9yZWYkID09PSBcImZ1bmN0aW9uXCIgPyBfcmVmJChyJCkgOiB0ZXh0UmVmID0gciQ7XG4gICAgfSxcbiAgICBcImRhdGEtdGMtdGV4dFwiOiBcInRydWVcIixcbiAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICB2YXIgX2EyO1xuICAgICAgcmV0dXJuIGNyZWF0ZU1lbW8oKCkgPT4gISFwcm9wcy50cmFuc2xhdGlvbktleSkoKSA/IHQyKHByb3BzLnRyYW5zbGF0aW9uS2V5LCBwcm9wcy50cmFuc2xhdGlvblZhbHVlcywgKF9hMiA9IHByb3BzLmNoaWxkcmVuKSA9PSBudWxsID8gdm9pZCAwIDogX2EyLnRvU3RyaW5nKCkpIDogcHJvcHMuY2hpbGRyZW47XG4gICAgfVxuICB9KTtcbn07XG5jb25zdCBJbWFnZUNvbnRhaW5lciA9IHN0eWxlZC5kaXZgXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuXG4gICAgJjo6YWZ0ZXIge1xuICAgICAgICBjb250ZW50OiAnJztcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgdG9wOiAwO1xuICAgICAgICBib3R0b206IDA7XG4gICAgICAgIGxlZnQ6IDA7XG4gICAgICAgIHJpZ2h0OiAwO1xuICAgICAgICBib3JkZXI6IDAuNXB4IHNvbGlkIHJnYmEoMCwgMCwgMCwgMC4wOCk7XG4gICAgICAgIGJvcmRlci1yYWRpdXM6IGluaGVyaXQ7XG4gICAgfVxuYDtcbmNvbnN0IEltYWdlU3R5bGVkJDIgPSBzdHlsZWQoSW1hZ2UpYFxuICAgIHdpZHRoOiAxMDAlO1xuICAgIGhlaWdodDogMTAwJTtcbiAgICBib3JkZXItcmFkaXVzOiBpbmhlcml0O1xuYDtcbmNvbnN0IFdhbGxldEltYWdlID0gKHByb3BzKSA9PiB7XG4gIHJldHVybiBjcmVhdGVDb21wb25lbnQoSW1hZ2VDb250YWluZXIsIHtcbiAgICBnZXQgW1wiY2xhc3NcIl0oKSB7XG4gICAgICByZXR1cm4gcHJvcHMuY2xhc3M7XG4gICAgfSxcbiAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICByZXR1cm4gW2NyZWF0ZUNvbXBvbmVudChJbWFnZVN0eWxlZCQyLCB7XG4gICAgICAgIGdldCBzcmMoKSB7XG4gICAgICAgICAgcmV0dXJuIHByb3BzLnNyYztcbiAgICAgICAgfVxuICAgICAgfSksIGNyZWF0ZU1lbW8oKCkgPT4gcHJvcHMuYmFkZ2UpXTtcbiAgICB9XG4gIH0pO1xufTtcbmNvbnN0IGJvcmRlcnMkMyA9IHtcbiAgbTogXCIxNnB4XCIsXG4gIHM6IFwiMTJweFwiLFxuICBub25lOiBcIjBcIlxufTtcbmNvbnN0IGJhZGdlQm9yZGVycyA9IHtcbiAgbTogXCI2cHhcIixcbiAgczogXCI2cHhcIixcbiAgbm9uZTogXCIwXCJcbn07XG5jb25zdCBXYWxsZXRVbENvbnRhaW5lciA9IHN0eWxlZC51bGBcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGdhcDogMDtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBvdmVyZmxvdy14OiBhdXRvO1xuICAgIHBhZGRpbmc6IDhweCAxMnB4IDE2cHggMTJweDtcbiAgICBtYXJnaW46IDA7XG4gICAgbGlzdC1zdHlsZTogbm9uZTtcbiAgICBmbGV4LXdyYXA6IG5vd3JhcDtcblxuICAgICYmOjotd2Via2l0LXNjcm9sbGJhciB7XG4gICAgICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgfVxuICAgIC1tcy1vdmVyZmxvdy1zdHlsZTogbm9uZTtcbiAgICBzY3JvbGxiYXItd2lkdGg6IG5vbmU7XG5cbiAgICA+IGxpIHtcbiAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgZmxleDogMTtcbiAgICAgICAgbWluLXdpZHRoOiA3OHB4O1xuICAgICAgICBoZWlnaHQ6IGZpdC1jb250ZW50O1xuICAgIH1cblxuICAgID4gbGkgPiBidXR0b24ge1xuICAgICAgICB3aWR0aDogMTAwJTtcbiAgICB9XG5gO1xuY29uc3QgV2FsbGV0SXRlbVN0eWxlZCA9IHN0eWxlZC5idXR0b25gXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICBib3JkZXI6IG5vbmU7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogdW5zZXQ7XG4gICAgcGFkZGluZzogOHB4IDRweDtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBtaW4td2lkdGg6IDc4cHg7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG5cbiAgICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMC4xMjVzIGVhc2UtaW4tb3V0O1xuXG4gICAgJHttZWRpYU5vdFRvdWNofSB7XG4gICAgICAgICY6aG92ZXIge1xuICAgICAgICAgICAgdHJhbnNmb3JtOiBzY2FsZSgxLjA0KTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgICY6YWN0aXZlIHtcbiAgICAgICAgdHJhbnNmb3JtOiBzY2FsZSgwLjk2KTtcbiAgICB9XG5cbiAgICAke21lZGlhVG91Y2h9IHtcbiAgICAgICAgJjphY3RpdmUge1xuICAgICAgICAgICAgdHJhbnNmb3JtOiBzY2FsZSgwLjkyKTtcbiAgICAgICAgfVxuICAgIH1cbmA7XG5jb25zdCBJbWFnZVN0eWxlZCQxID0gc3R5bGVkKFdhbGxldEltYWdlKWBcbiAgICB3aWR0aDogNjBweDtcbiAgICBoZWlnaHQ6IDYwcHg7XG4gICAgYm9yZGVyLXJhZGl1czogJHsocHJvcHMpID0+IGJvcmRlcnMkM1twcm9wcy50aGVtZS5ib3JkZXJSYWRpdXNdfTtcbiAgICBtYXJnaW4tYm90dG9tOiA4cHg7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuYDtcbmNvbnN0IEJhZGdlU3R5bGVkID0gc3R5bGVkKEltYWdlKWBcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgcmlnaHQ6IC02cHg7XG4gICAgYm90dG9tOiAtNnB4O1xuICAgIHdpZHRoOiAyNHB4O1xuICAgIGhlaWdodDogMjRweDtcbiAgICBib3JkZXItcmFkaXVzOiAkeyhwcm9wcykgPT4gYmFkZ2VCb3JkZXJzW3Byb3BzLnRoZW1lLmJvcmRlclJhZGl1c119O1xuICAgIGJveC1zaGFkb3c6IDAgMnB4IDhweCAwIHJnYmEoMCwgMCwgMCwgMC4wOCk7XG5gO1xuY29uc3QgU3R5bGVkVGV4dCA9IHN0eWxlZChUZXh0KWBcbiAgICBtYXgtd2lkdGg6IDkwcHg7XG4gICAgZm9udC13ZWlnaHQ6IDUxMDtcbiAgICB3aGl0ZS1zcGFjZTogbm93cmFwO1xuICAgIHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzO1xuICAgIG92ZXJmbG93OiBoaWRkZW47XG5cbiAgICAke21lZGlhKFwibW9iaWxlXCIpfSB7XG4gICAgICAgIG1heC13aWR0aDogODBweDtcbiAgICB9XG5gO1xuY29uc3QgU3R5bGVkU2Vjb25kTGluZSA9IHN0eWxlZChUZXh0KWBcbiAgICBmb250LXdlaWdodDogJHsocHJvcHMpID0+IHByb3BzLmNvbG9yUHJpbWFyeSA/IFwiNTEwXCIgOiBcIjQwMFwifTtcbiAgICBtYXgtd2lkdGg6IDkwcHg7XG4gICAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcbiAgICB0ZXh0LW92ZXJmbG93OiBlbGxpcHNpcztcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgIGNvbG9yOiAkeyhwcm9wcykgPT4gcHJvcHMuY29sb3JQcmltYXJ5ID8gcHJvcHMudGhlbWUuY29sb3JzLnRleHQucHJpbWFyeSA6IHByb3BzLnRoZW1lLmNvbG9ycy50ZXh0LnNlY29uZGFyeX07XG5cbiAgICAke21lZGlhKFwibW9iaWxlXCIpfSB7XG4gICAgICAgIG1heC13aWR0aDogODBweDtcbiAgICB9XG5gO1xuY29uc3QgX3RtcGwkJHIgPSAvKiBAX19QVVJFX18gKi8gdGVtcGxhdGUkMShgPGRpdj48L2Rpdj5gKTtcbmNvbnN0IFdhbGxldEl0ZW0gPSAocHJvcHMpID0+IHtcbiAgbGV0IGN0eFJlZiA9IG51bGw7XG4gIGNvbnN0IGFkanVzdExldHRlclNwYWNpbmcgPSAoKSA9PiB7XG4gICAgY29uc3QgbmFtZSA9IGN0eFJlZiA9PSBudWxsID8gdm9pZCAwIDogY3R4UmVmLnF1ZXJ5U2VsZWN0b3IoXCJkaXZcIik7XG4gICAgaWYgKG5hbWUgJiYgbmFtZS5zY3JvbGxXaWR0aCA+IG5hbWUuY2xpZW50V2lkdGgpIHtcbiAgICAgIGxldCBzcGFjaW5nID0gMDtcbiAgICAgIGNvbnN0IG1pblNwYWNpbmcgPSAtMC40O1xuICAgICAgY29uc3Qgc3RlcCA9IDAuMDU7XG4gICAgICB3aGlsZSAobmFtZS5zY3JvbGxXaWR0aCA+IG5hbWUuY2xpZW50V2lkdGggJiYgc3BhY2luZyA+PSBtaW5TcGFjaW5nKSB7XG4gICAgICAgIHNwYWNpbmcgLT0gc3RlcDtcbiAgICAgICAgbmFtZS5zdHlsZS5sZXR0ZXJTcGFjaW5nID0gYCR7c3BhY2luZ31weGA7XG4gICAgICB9XG4gICAgICBpZiAoc3BhY2luZyAhPT0gMCkge1xuICAgICAgICBzcGFjaW5nIC09IHN0ZXA7XG4gICAgICAgIG5hbWUuc3R5bGUubGV0dGVyU3BhY2luZyA9IGAke3NwYWNpbmd9cHhgO1xuICAgICAgfVxuICAgIH1cbiAgfTtcbiAgb25Nb3VudCgoKSA9PiBhZGp1c3RMZXR0ZXJTcGFjaW5nKCkpO1xuICBjcmVhdGVFZmZlY3QoKCkgPT4ge1xuICAgIGFkanVzdExldHRlclNwYWNpbmcoKTtcbiAgfSk7XG4gIHJldHVybiBjcmVhdGVDb21wb25lbnQoV2FsbGV0SXRlbVN0eWxlZCwge1xuICAgIGdldCBbXCJjbGFzc1wiXSgpIHtcbiAgICAgIHJldHVybiBwcm9wcy5jbGFzcztcbiAgICB9LFxuICAgIG9uQ2xpY2s6ICgpID0+IHByb3BzLm9uQ2xpY2soKSxcbiAgICBcImRhdGEtdGMtd2FsbGV0LWl0ZW1cIjogXCJ0cnVlXCIsXG4gICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgcmV0dXJuIFtjcmVhdGVNZW1vKCgpID0+IGNyZWF0ZU1lbW8oKCkgPT4gdHlwZW9mIHByb3BzLmljb24gPT09IFwic3RyaW5nXCIpKCkgPyBjcmVhdGVDb21wb25lbnQoSW1hZ2VTdHlsZWQkMSwge1xuICAgICAgICBnZXQgc3JjKCkge1xuICAgICAgICAgIHJldHVybiBwcm9wcy5pY29uO1xuICAgICAgICB9LFxuICAgICAgICBnZXQgYmFkZ2UoKSB7XG4gICAgICAgICAgcmV0dXJuIGNyZWF0ZU1lbW8oKCkgPT4gISFwcm9wcy5iYWRnZVVybCkoKSAmJiBjcmVhdGVDb21wb25lbnQoQmFkZ2VTdHlsZWQsIHtcbiAgICAgICAgICAgIGdldCBzcmMoKSB7XG4gICAgICAgICAgICAgIHJldHVybiBwcm9wcy5iYWRnZVVybDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgfSkgOiBwcm9wcy5pY29uKSwgKCgpID0+IHtcbiAgICAgICAgY29uc3QgX2VsJCA9IF90bXBsJCRyLmNsb25lTm9kZSh0cnVlKTtcbiAgICAgICAgdXNlKChlbCkgPT4gY3R4UmVmID0gZWwsIF9lbCQpO1xuICAgICAgICBpbnNlcnQoX2VsJCwgY3JlYXRlQ29tcG9uZW50KFN0eWxlZFRleHQsIHtcbiAgICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgICByZXR1cm4gcHJvcHMubmFtZTtcbiAgICAgICAgICB9XG4gICAgICAgIH0pKTtcbiAgICAgICAgcmV0dXJuIF9lbCQ7XG4gICAgICB9KSgpLCBjcmVhdGVNZW1vKCgpID0+IGNyZWF0ZU1lbW8oKCkgPT4gISFwcm9wcy5zZWNvbmRMaW5lKSgpICYmIGNyZWF0ZUNvbXBvbmVudChTdHlsZWRTZWNvbmRMaW5lLCB7XG4gICAgICAgIGdldCBjb2xvclByaW1hcnkoKSB7XG4gICAgICAgICAgdmFyIF9hMjtcbiAgICAgICAgICByZXR1cm4gKF9hMiA9IHByb3BzLnNlY29uZExpbmVDb2xvclByaW1hcnkpICE9IG51bGwgPyBfYTIgOiB0cnVlO1xuICAgICAgICB9LFxuICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgcmV0dXJuIHByb3BzLnNlY29uZExpbmU7XG4gICAgICAgIH1cbiAgICAgIH0pKV07XG4gICAgfVxuICB9KTtcbn07XG5jb25zdCBIMVN0eWxlZCQ5ID0gc3R5bGVkLmgxYFxuICAgIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgICBmb250LXdlaWdodDogNTkwO1xuICAgIGZvbnQtc2l6ZTogMjBweDtcbiAgICBsaW5lLWhlaWdodDogMjhweDtcblxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcblxuICAgIGNvbG9yOiAkeyhwcm9wcykgPT4gcHJvcHMudGhlbWUuY29sb3JzLnRleHQucHJpbWFyeX07XG5cbiAgICBtYXJnaW4tdG9wOiAwO1xuICAgIG1hcmdpbi1ib3R0b206IDA7XG5cbiAgICBjdXJzb3I6IGRlZmF1bHQ7XG5gO1xuY29uc3QgSDEgPSAocHJvcHMpID0+IHtcbiAgY29uc3QgW3QyXSA9IHVzZUkxOG4oKTtcbiAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChIMVN0eWxlZCQ5LCB7XG4gICAgZ2V0IFtcImNsYXNzXCJdKCkge1xuICAgICAgcmV0dXJuIHByb3BzLmNsYXNzO1xuICAgIH0sXG4gICAgXCJkYXRhLXRjLWgxXCI6IFwidHJ1ZVwiLFxuICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgIHZhciBfYTI7XG4gICAgICByZXR1cm4gY3JlYXRlTWVtbygoKSA9PiAhIXByb3BzLnRyYW5zbGF0aW9uS2V5KSgpID8gdDIocHJvcHMudHJhbnNsYXRpb25LZXksIHByb3BzLnRyYW5zbGF0aW9uVmFsdWVzLCAoX2EyID0gcHJvcHMuY2hpbGRyZW4pID09IG51bGwgPyB2b2lkIDAgOiBfYTIudG9TdHJpbmcoKSkgOiBwcm9wcy5jaGlsZHJlbjtcbiAgICB9XG4gIH0pO1xufTtcbmNvbnN0IEgyU3R5bGVkJDUgPSBzdHlsZWQuaDJgXG4gICAgZm9udC1zdHlsZTogbm9ybWFsO1xuICAgIGZvbnQtd2VpZ2h0OiA0MDA7XG4gICAgZm9udC1zaXplOiAxNnB4O1xuICAgIGxpbmUtaGVpZ2h0OiAyMnB4O1xuXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuXG4gICAgY29sb3I6ICR7KHByb3BzKSA9PiBwcm9wcy50aGVtZS5jb2xvcnMudGV4dC5zZWNvbmRhcnl9O1xuXG4gICAgbWFyZ2luLXRvcDogMDtcbiAgICBtYXJnaW4tYm90dG9tOiAzMnB4O1xuXG4gICAgY3Vyc29yOiBkZWZhdWx0O1xuYDtcbmNvbnN0IEgyID0gKHByb3BzKSA9PiB7XG4gIGNvbnN0IFt0Ml0gPSB1c2VJMThuKCk7XG4gIHJldHVybiBjcmVhdGVDb21wb25lbnQoSDJTdHlsZWQkNSwge1xuICAgIGdldCBbXCJjbGFzc1wiXSgpIHtcbiAgICAgIHJldHVybiBwcm9wcy5jbGFzcztcbiAgICB9LFxuICAgIFwiZGF0YS10Yy1oMlwiOiBcInRydWVcIixcbiAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICB2YXIgX2EyO1xuICAgICAgcmV0dXJuIGNyZWF0ZU1lbW8oKCkgPT4gISFwcm9wcy50cmFuc2xhdGlvbktleSkoKSA/IHQyKHByb3BzLnRyYW5zbGF0aW9uS2V5LCBwcm9wcy50cmFuc2xhdGlvblZhbHVlcywgKF9hMiA9IHByb3BzLmNoaWxkcmVuKSA9PSBudWxsID8gdm9pZCAwIDogX2EyLnRvU3RyaW5nKCkpIDogcHJvcHMuY2hpbGRyZW47XG4gICAgfVxuICB9KTtcbn07XG5jb25zdCBIM1N0eWxlZCQxID0gc3R5bGVkLmgzYFxuICAgIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgICBmb250LXdlaWdodDogNTEwO1xuICAgIGZvbnQtc2l6ZTogMTZweDtcbiAgICBsaW5lLWhlaWdodDogMjBweDtcblxuICAgIGNvbG9yOiAkeyhwcm9wcykgPT4gcHJvcHMudGhlbWUuY29sb3JzLnRleHQucHJpbWFyeX07XG5cbiAgICBtYXJnaW4tdG9wOiAwO1xuICAgIG1hcmdpbi1ib3R0b206IDA7XG5cbiAgICBjdXJzb3I6IGRlZmF1bHQ7XG5gO1xuY29uc3QgSDMgPSAocHJvcHMpID0+IHtcbiAgY29uc3QgW3QyXSA9IHVzZUkxOG4oKTtcbiAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChIM1N0eWxlZCQxLCB7XG4gICAgXCJkYXRhLXRjLWgzXCI6IFwidHJ1ZVwiLFxuICAgIGdldCBbXCJjbGFzc1wiXSgpIHtcbiAgICAgIHJldHVybiBwcm9wcy5jbGFzcztcbiAgICB9LFxuICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgIHZhciBfYTI7XG4gICAgICByZXR1cm4gY3JlYXRlTWVtbygoKSA9PiAhIXByb3BzLnRyYW5zbGF0aW9uS2V5KSgpID8gdDIocHJvcHMudHJhbnNsYXRpb25LZXksIHByb3BzLnRyYW5zbGF0aW9uVmFsdWVzLCAoX2EyID0gcHJvcHMuY2hpbGRyZW4pID09IG51bGwgPyB2b2lkIDAgOiBfYTIudG9TdHJpbmcoKSkgOiBwcm9wcy5jaGlsZHJlbjtcbiAgICB9XG4gIH0pO1xufTtcbmNvbnN0IF90bXBsJCRxID0gLyogQF9fUFVSRV9fICovIHRlbXBsYXRlJDEoYDxzdmcgd2lkdGg9XCIyNFwiIGhlaWdodD1cIjI0XCIgdmlld0JveD1cIjAgMCAyNCAyNFwiIGZpbGw9XCJub25lXCIgeG1sbnM9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiPjxwYXRoIGZpbGwtcnVsZT1cImV2ZW5vZGRcIiBjbGlwLXJ1bGU9XCJldmVub2RkXCIgZD1cIk0xNC4xODM5IDE3LjcwNjlDMTMuNjQwNSAxOC42NTA3IDEzLjM2ODggMTkuMTIyNiAxMy4wNTkxIDE5LjM0OEMxMi40Mjc4IDE5LjgwNzQgMTEuNTcyMyAxOS44MDc0IDEwLjk0MSAxOS4zNDhDMTAuNjMxMiAxOS4xMjI2IDEwLjM1OTUgMTguNjUwNyA5LjgxNjEzIDE3LjcwNjlMNS41MjA2NiAxMC4yNDY0QzQuNzY4NjQgOC45NDAyNCA0LjM5MjYzIDguMjg3MTcgNC4zMzc2MiA3Ljc1ODk0QzQuMjI1NSA2LjY4MjM2IDQuODE4OTQgNS42NTU5MSA1LjgwNzg4IDUuMjE1ODlDNi4yOTMwOSA1IDcuMDQ2NjcgNSA4LjU1MzgzIDVIMTUuNDQ2MkMxNi45NTM0IDUgMTcuNzA2OSA1IDE4LjE5MjIgNS4yMTU4OUMxOS4xODExIDUuNjU1OTEgMTkuNzc0NSA2LjY4MjM2IDE5LjY2MjQgNy43NTg5NEMxOS42MDc0IDguMjg3MTcgMTkuMjMxNCA4Ljk0MDI0IDE4LjQ3OTQgMTAuMjQ2NEwxNC4xODM5IDE3LjcwNjlaTTExLjEgMTYuMzQxMkw2LjU2MTM5IDguNDgwMDJDNi4zMTk5NSA4LjA2MTg1IDYuMTk5MjQgNy44NTI3NiA2LjE4MTQ2IDcuNjgzNjVDNi4xNDUyMyA3LjMzODk2IDYuMzM1MDcgNy4wMTAxNSA2LjY1MTY5IDYuODY5MTlDNi44MDcwMyA2LjgwMDAyIDcuMDQ4NDcgNi44MDAwMiA3LjUzMTMzIDYuODAwMDJINy41MzEzNEwxMS4xIDYuODAwMDJWMTYuMzQxMlpNMTIuOSAxNi4zNDEyTDE3LjQzODcgOC40ODAwMkMxNy42ODAxIDguMDYxODUgMTcuODAwOCA3Ljg1Mjc2IDE3LjgxODYgNy42ODM2NUMxNy44NTQ4IDcuMzM4OTYgMTcuNjY1IDcuMDEwMTUgMTcuMzQ4NCA2Ljg2OTE5QzE3LjE5MyA2LjgwMDAyIDE2Ljk1MTYgNi44MDAwMiAxNi40Njg3IDYuODAwMDJMMTIuOSA2LjgwMDAyVjE2LjM0MTJaXCI+PC9wYXRoPjwvc3ZnPmApO1xuY29uc3QgVG9uSWNvbiA9IChwcm9wcykgPT4ge1xuICBjb25zdCB0aGVtZSA9IHVzZVRoZW1lKCk7XG4gIGNvbnN0IGZpbGwgPSAoKSA9PiBwcm9wcy5maWxsIHx8IHRoZW1lLmNvbG9ycy5pY29uLnByaW1hcnk7XG4gIHJldHVybiAoKCkgPT4ge1xuICAgIGNvbnN0IF9lbCQgPSBfdG1wbCQkcS5jbG9uZU5vZGUodHJ1ZSksIF9lbCQyID0gX2VsJC5maXJzdENoaWxkO1xuICAgIGNyZWF0ZVJlbmRlckVmZmVjdCgoKSA9PiBzZXRBdHRyaWJ1dGUoX2VsJDIsIFwiZmlsbFwiLCBmaWxsKCkpKTtcbiAgICByZXR1cm4gX2VsJDtcbiAgfSkoKTtcbn07XG5jb25zdCBfdG1wbCQkcCA9IC8qIEBfX1BVUkVfXyAqLyB0ZW1wbGF0ZSQxKGA8c3ZnIHhtbG5zPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIiB3aWR0aD1cIjE2XCIgaGVpZ2h0PVwiMTZcIiB2aWV3Qm94PVwiMCAwIDE2IDE2XCIgZmlsbD1cIm5vbmVcIj48ZyBjbGlwLXBhdGg9XCJ1cmwoI2NsaXAwXzM3ODNfMjA0NSlcIj48Y2lyY2xlIGN4PVwiOFwiIGN5PVwiOC4wMDA5OFwiIHI9XCI4XCI+PC9jaXJjbGU+PHBhdGggZD1cIk00Ljc1IDguNTAwOThMNyAxMC43NTFMMTEuNzUgNi4wMDA5OFwiIHN0cm9rZS13aWR0aD1cIjEuNVwiIHN0cm9rZS1saW5lY2FwPVwicm91bmRcIiBzdHJva2UtbGluZWpvaW49XCJyb3VuZFwiPjwvcGF0aD48L2c+PGRlZnM+PGNsaXBQYXRoIGlkPVwiY2xpcDBfMzc4M18yMDQ1XCI+PHJlY3Qgd2lkdGg9XCIxNlwiIGhlaWdodD1cIjE2XCIgZmlsbD1cIndoaXRlXCIgdHJhbnNmb3JtPVwidHJhbnNsYXRlKDAgMC4wMDA5NzY1NjIpXCI+PC9yZWN0PjwvY2xpcFBhdGg+PC9kZWZzPjwvc3ZnPmApLCBfdG1wbCQyJDQgPSAvKiBAX19QVVJFX18gKi8gdGVtcGxhdGUkMShgPHN2ZyB3aWR0aD1cIjI0XCIgaGVpZ2h0PVwiMjRcIiB2aWV3Qm94PVwiMCAwIDI0IDI0XCIgZmlsbD1cIm5vbmVcIiB4bWxucz1cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCI+PGNpcmNsZSBjeD1cIjEyXCIgY3k9XCIxMlwiIHI9XCIxMVwiPjwvY2lyY2xlPjxwYXRoIGQ9XCJNMTcuMTM2NCA5LjYzNjRDMTcuNDg3OSA5LjI4NDkzIDE3LjQ4NzkgOC43MTUwOCAxNy4xMzY0IDguMzYzNjFDMTYuNzg0OSA4LjAxMjE0IDE2LjIxNTEgOC4wMTIxNCAxNS44NjM2IDguMzYzNjFMMTAgMTQuMjI3Mkw4LjEzNjQgMTIuMzYzNkM3Ljc4NDkzIDEyLjAxMjEgNy4yMTUwOCAxMi4wMTIxIDYuODYzNjEgMTIuMzYzNkM2LjUxMjE0IDEyLjcxNTEgNi41MTIxNCAxMy4yODQ5IDYuODYzNjEgMTMuNjM2NEw5LjM2MzYxIDE2LjEzNjRDOS43MTUwOCAxNi40ODc5IDEwLjI4NDkgMTYuNDg3OSAxMC42MzY0IDE2LjEzNjRMMTcuMTM2NCA5LjYzNjRaXCI+PC9wYXRoPjwvc3ZnPmApLCBfdG1wbCQzJDIgPSAvKiBAX19QVVJFX18gKi8gdGVtcGxhdGUkMShgPHN2ZyB3aWR0aD1cIjcyXCIgaGVpZ2h0PVwiNzJcIiB2aWV3Qm94PVwiMCAwIDcyIDcyXCIgZmlsbD1cIm5vbmVcIiB4bWxucz1cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCI+PGNpcmNsZSBjeD1cIjM2XCIgY3k9XCIzNlwiIHI9XCIzM1wiPjwvY2lyY2xlPjxwYXRoIGQ9XCJNNTAuOTE0MiAyOC40MTQyQzUxLjY5NTMgMjcuNjMzMiA1MS42OTUzIDI2LjM2NjggNTAuOTE0MiAyNS41ODU4QzUwLjEzMzIgMjQuODA0NyA0OC44NjY4IDI0LjgwNDcgNDguMDg1OCAyNS41ODU4TDMwIDQzLjY3MTZMMjMuOTE0MiAzNy41ODU4QzIzLjEzMzIgMzYuODA0NyAyMS44NjY4IDM2LjgwNDcgMjEuMDg1OCAzNy41ODU4QzIwLjMwNDcgMzguMzY2OCAyMC4zMDQ3IDM5LjYzMzIgMjEuMDg1OCA0MC40MTQyTDI4LjU4NTggNDcuOTE0MkMyOS4zNjY4IDQ4LjY5NTMgMzAuNjMzMiA0OC42OTUzIDMxLjQxNDIgNDcuOTE0Mkw1MC45MTQyIDI4LjQxNDJaXCI+PC9wYXRoPjwvc3ZnPmApO1xuY29uc3QgU3VjY2Vzc0ljb24gPSAocHJvcHMpID0+IHtcbiAgY29uc3QgdGhlbWUgPSB1c2VUaGVtZSgpO1xuICBjb25zdCBzaXplID0gKCkgPT4gcHJvcHMuc2l6ZSB8fCBcInNcIjtcbiAgY29uc3QgZmlsbCA9ICgpID0+IHByb3BzLmZpbGwgfHwgdGhlbWUuY29sb3JzLmljb24uc3VjY2VzcztcbiAgcmV0dXJuIGNyZWF0ZU1lbW8oKCgpID0+IHtcbiAgICBjb25zdCBfYyQgPSBjcmVhdGVNZW1vKCgpID0+IHNpemUoKSA9PT0gXCJ4c1wiKTtcbiAgICByZXR1cm4gKCkgPT4gX2MkKCkgPyAoKCkgPT4ge1xuICAgICAgY29uc3QgX2VsJCA9IF90bXBsJCRwLmNsb25lTm9kZSh0cnVlKSwgX2VsJDIgPSBfZWwkLmZpcnN0Q2hpbGQsIF9lbCQzID0gX2VsJDIuZmlyc3RDaGlsZCwgX2VsJDQgPSBfZWwkMy5uZXh0U2libGluZztcbiAgICAgIGNyZWF0ZVJlbmRlckVmZmVjdCgoX3AkKSA9PiB7XG4gICAgICAgIGNvbnN0IF92JCA9IHByb3BzLmNsYXNzLCBfdiQyID0gZmlsbCgpLCBfdiQzID0gdGhlbWUuY29sb3JzLmNvbnN0YW50LndoaXRlO1xuICAgICAgICBfdiQgIT09IF9wJC5fdiQgJiYgc2V0QXR0cmlidXRlKF9lbCQsIFwiY2xhc3NcIiwgX3AkLl92JCA9IF92JCk7XG4gICAgICAgIF92JDIgIT09IF9wJC5fdiQyICYmIHNldEF0dHJpYnV0ZShfZWwkMywgXCJmaWxsXCIsIF9wJC5fdiQyID0gX3YkMik7XG4gICAgICAgIF92JDMgIT09IF9wJC5fdiQzICYmIHNldEF0dHJpYnV0ZShfZWwkNCwgXCJzdHJva2VcIiwgX3AkLl92JDMgPSBfdiQzKTtcbiAgICAgICAgcmV0dXJuIF9wJDtcbiAgICAgIH0sIHtcbiAgICAgICAgX3YkOiB2b2lkIDAsXG4gICAgICAgIF92JDI6IHZvaWQgMCxcbiAgICAgICAgX3YkMzogdm9pZCAwXG4gICAgICB9KTtcbiAgICAgIHJldHVybiBfZWwkO1xuICAgIH0pKCkgOiAoKCkgPT4ge1xuICAgICAgY29uc3QgX2MkMiA9IGNyZWF0ZU1lbW8oKCkgPT4gc2l6ZSgpID09PSBcInNcIik7XG4gICAgICByZXR1cm4gKCkgPT4gX2MkMigpID8gKCgpID0+IHtcbiAgICAgICAgY29uc3QgX2VsJDUgPSBfdG1wbCQyJDQuY2xvbmVOb2RlKHRydWUpLCBfZWwkNiA9IF9lbCQ1LmZpcnN0Q2hpbGQsIF9lbCQ3ID0gX2VsJDYubmV4dFNpYmxpbmc7XG4gICAgICAgIGNyZWF0ZVJlbmRlckVmZmVjdCgoX3AkKSA9PiB7XG4gICAgICAgICAgY29uc3QgX3YkNCA9IHByb3BzLmNsYXNzLCBfdiQ1ID0gZmlsbCgpLCBfdiQ2ID0gdGhlbWUuY29sb3JzLmNvbnN0YW50LndoaXRlO1xuICAgICAgICAgIF92JDQgIT09IF9wJC5fdiQ0ICYmIHNldEF0dHJpYnV0ZShfZWwkNSwgXCJjbGFzc1wiLCBfcCQuX3YkNCA9IF92JDQpO1xuICAgICAgICAgIF92JDUgIT09IF9wJC5fdiQ1ICYmIHNldEF0dHJpYnV0ZShfZWwkNiwgXCJmaWxsXCIsIF9wJC5fdiQ1ID0gX3YkNSk7XG4gICAgICAgICAgX3YkNiAhPT0gX3AkLl92JDYgJiYgc2V0QXR0cmlidXRlKF9lbCQ3LCBcImZpbGxcIiwgX3AkLl92JDYgPSBfdiQ2KTtcbiAgICAgICAgICByZXR1cm4gX3AkO1xuICAgICAgICB9LCB7XG4gICAgICAgICAgX3YkNDogdm9pZCAwLFxuICAgICAgICAgIF92JDU6IHZvaWQgMCxcbiAgICAgICAgICBfdiQ2OiB2b2lkIDBcbiAgICAgICAgfSk7XG4gICAgICAgIHJldHVybiBfZWwkNTtcbiAgICAgIH0pKCkgOiAoKCkgPT4ge1xuICAgICAgICBjb25zdCBfZWwkOCA9IF90bXBsJDMkMi5jbG9uZU5vZGUodHJ1ZSksIF9lbCQ5ID0gX2VsJDguZmlyc3RDaGlsZCwgX2VsJDEwID0gX2VsJDkubmV4dFNpYmxpbmc7XG4gICAgICAgIGNyZWF0ZVJlbmRlckVmZmVjdCgoX3AkKSA9PiB7XG4gICAgICAgICAgY29uc3QgX3YkNyA9IHByb3BzLmNsYXNzLCBfdiQ4ID0gZmlsbCgpLCBfdiQ5ID0gdGhlbWUuY29sb3JzLmNvbnN0YW50LndoaXRlO1xuICAgICAgICAgIF92JDcgIT09IF9wJC5fdiQ3ICYmIHNldEF0dHJpYnV0ZShfZWwkOCwgXCJjbGFzc1wiLCBfcCQuX3YkNyA9IF92JDcpO1xuICAgICAgICAgIF92JDggIT09IF9wJC5fdiQ4ICYmIHNldEF0dHJpYnV0ZShfZWwkOSwgXCJmaWxsXCIsIF9wJC5fdiQ4ID0gX3YkOCk7XG4gICAgICAgICAgX3YkOSAhPT0gX3AkLl92JDkgJiYgc2V0QXR0cmlidXRlKF9lbCQxMCwgXCJmaWxsXCIsIF9wJC5fdiQ5ID0gX3YkOSk7XG4gICAgICAgICAgcmV0dXJuIF9wJDtcbiAgICAgICAgfSwge1xuICAgICAgICAgIF92JDc6IHZvaWQgMCxcbiAgICAgICAgICBfdiQ4OiB2b2lkIDAsXG4gICAgICAgICAgX3YkOTogdm9pZCAwXG4gICAgICAgIH0pO1xuICAgICAgICByZXR1cm4gX2VsJDg7XG4gICAgICB9KSgpO1xuICAgIH0pKCk7XG4gIH0pKCkpO1xufTtcbmNvbnN0IF90bXBsJCRvID0gLyogQF9fUFVSRV9fICovIHRlbXBsYXRlJDEoYDxzdmcgd2lkdGg9XCI3MlwiIGhlaWdodD1cIjcyXCIgdmlld0JveD1cIjAgMCA3MiA3MlwiIGZpbGw9XCJub25lXCIgeG1sbnM9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiPjxjaXJjbGUgY3g9XCIzNlwiIGN5PVwiMzZcIiByPVwiMzNcIj48L2NpcmNsZT48cGF0aCBkPVwiTTI0LjA4NTggMjYuOTE0MkMyMy4zMDQ3IDI2LjEzMzIgMjMuMzA0NyAyNC44NjY4IDI0LjA4NTggMjQuMDg1OEMyNC44NjY4IDIzLjMwNDcgMjYuMTMzMiAyMy4zMDQ3IDI2LjkxNDIgMjQuMDg1OEwzNiAzMy4xNzE2TDQ1LjA4NTggMjQuMDg1OEM0NS44NjY4IDIzLjMwNDcgNDcuMTMzMiAyMy4zMDQ3IDQ3LjkxNDIgMjQuMDg1OEM0OC42OTUzIDI0Ljg2NjggNDguNjk1MyAyNi4xMzMyIDQ3LjkxNDIgMjYuOTE0MkwzOC44Mjg0IDM2TDQ3LjkxNDIgNDUuMDg1OEM0OC42OTUzIDQ1Ljg2NjggNDguNjk1MyA0Ny4xMzMyIDQ3LjkxNDIgNDcuOTE0MkM0Ny4xMzMyIDQ4LjY5NTMgNDUuODY2OCA0OC42OTUzIDQ1LjA4NTggNDcuOTE0MkwzNiAzOC44Mjg0TDI2LjkxNDIgNDcuOTE0MkMyNi4xMzMyIDQ4LjY5NTMgMjQuODY2OCA0OC42OTUzIDI0LjA4NTggNDcuOTE0MkMyMy4zMDQ3IDQ3LjEzMzIgMjMuMzA0NyA0NS44NjY4IDI0LjA4NTggNDUuMDg1OEwzMy4xNzE2IDM2TDI0LjA4NTggMjYuOTE0MlpcIj48L3BhdGg+PC9zdmc+YCksIF90bXBsJDIkMyA9IC8qIEBfX1BVUkVfXyAqLyB0ZW1wbGF0ZSQxKGA8c3ZnIHhtbG5zPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIiB3aWR0aD1cIjQ4XCIgaGVpZ2h0PVwiNDhcIiB2aWV3Qm94PVwiMCAwIDQ4IDQ4XCIgZmlsbD1cIm5vbmVcIj48Y2lyY2xlIGN4PVwiMjRcIiBjeT1cIjI0LjAwMVwiIHI9XCIyMlwiPjwvY2lyY2xlPjxwYXRoIGQ9XCJNMjQgMjQuMDAxTDMxLjUgMTYuNTAxTTI0IDI0LjAwMUwxNi41IDE2LjUwMU0yNCAyNC4wMDFMMTYuNSAzMS41MDFNMjQgMjQuMDAxTDMxLjUgMzEuNTAxXCIgc3Ryb2tlLXdpZHRoPVwiM1wiIHN0cm9rZS1saW5lY2FwPVwicm91bmRcIiBzdHJva2UtbGluZWpvaW49XCJyb3VuZFwiPjwvcGF0aD48L3N2Zz5gKSwgX3RtcGwkMyQxID0gLyogQF9fUFVSRV9fICovIHRlbXBsYXRlJDEoYDxzdmcgd2lkdGg9XCIyNFwiIGhlaWdodD1cIjI0XCIgdmlld0JveD1cIjAgMCAyNCAyNFwiIGZpbGw9XCJub25lXCIgeG1sbnM9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiPjxjaXJjbGUgY3g9XCIxMlwiIGN5PVwiMTJcIiByPVwiMTFcIj48L2NpcmNsZT48cGF0aCBkPVwiTTcuODYzNjEgOS4xMzY0QzcuNTEyMTQgOC43ODQ5MyA3LjUxMjE0IDguMjE1MDggNy44NjM2MSA3Ljg2MzYxQzguMjE1MDggNy41MTIxNCA4Ljc4NDkzIDcuNTEyMTQgOS4xMzY0IDcuODYzNjFMMTIgMTAuNzI3MkwxNC44NjM2IDcuODYzNjFDMTUuMjE1MSA3LjUxMjE0IDE1Ljc4NDkgNy41MTIxNCAxNi4xMzY0IDcuODYzNjFDMTYuNDg3OSA4LjIxNTA4IDE2LjQ4NzkgOC43ODQ5MyAxNi4xMzY0IDkuMTM2NEwxMy4yNzI4IDEyTDE2LjEzNjQgMTQuODYzNkMxNi40ODc5IDE1LjIxNTEgMTYuNDg3OSAxNS43ODQ5IDE2LjEzNjQgMTYuMTM2NEMxNS43ODQ5IDE2LjQ4NzkgMTUuMjE1MSAxNi40ODc5IDE0Ljg2MzYgMTYuMTM2NEwxMiAxMy4yNzI4TDkuMTM2NCAxNi4xMzY0QzguNzg0OTMgMTYuNDg3OSA4LjIxNTA4IDE2LjQ4NzkgNy44NjM2MSAxNi4xMzY0QzcuNTEyMTQgMTUuNzg0OSA3LjUxMjE0IDE1LjIxNTEgNy44NjM2MSAxNC44NjM2TDEwLjcyNzIgMTJMNy44NjM2MSA5LjEzNjRaXCI+PC9wYXRoPjwvc3ZnPmApO1xuY29uc3QgRXJyb3JJY29uID0gKHByb3BzKSA9PiB7XG4gIGNvbnN0IHRoZW1lID0gdXNlVGhlbWUoKTtcbiAgY29uc3Qgc2l6ZSA9ICgpID0+IHByb3BzLnNpemUgfHwgXCJtXCI7XG4gIGNvbnN0IGZpbGwgPSAoKSA9PiBwcm9wcy5maWxsIHx8IHRoZW1lLmNvbG9ycy5pY29uLmVycm9yO1xuICByZXR1cm4gY3JlYXRlTWVtbygoKCkgPT4ge1xuICAgIGNvbnN0IF9jJCA9IGNyZWF0ZU1lbW8oKCkgPT4gc2l6ZSgpID09PSBcIm1cIik7XG4gICAgcmV0dXJuICgpID0+IF9jJCgpID8gKCgpID0+IHtcbiAgICAgIGNvbnN0IF9lbCQgPSBfdG1wbCQkby5jbG9uZU5vZGUodHJ1ZSksIF9lbCQyID0gX2VsJC5maXJzdENoaWxkLCBfZWwkMyA9IF9lbCQyLm5leHRTaWJsaW5nO1xuICAgICAgY3JlYXRlUmVuZGVyRWZmZWN0KChfcCQpID0+IHtcbiAgICAgICAgY29uc3QgX3YkID0gcHJvcHMuY2xhc3MsIF92JDIgPSBmaWxsKCksIF92JDMgPSB0aGVtZS5jb2xvcnMuY29uc3RhbnQud2hpdGU7XG4gICAgICAgIF92JCAhPT0gX3AkLl92JCAmJiBzZXRBdHRyaWJ1dGUoX2VsJCwgXCJjbGFzc1wiLCBfcCQuX3YkID0gX3YkKTtcbiAgICAgICAgX3YkMiAhPT0gX3AkLl92JDIgJiYgc2V0QXR0cmlidXRlKF9lbCQyLCBcImZpbGxcIiwgX3AkLl92JDIgPSBfdiQyKTtcbiAgICAgICAgX3YkMyAhPT0gX3AkLl92JDMgJiYgc2V0QXR0cmlidXRlKF9lbCQzLCBcImZpbGxcIiwgX3AkLl92JDMgPSBfdiQzKTtcbiAgICAgICAgcmV0dXJuIF9wJDtcbiAgICAgIH0sIHtcbiAgICAgICAgX3YkOiB2b2lkIDAsXG4gICAgICAgIF92JDI6IHZvaWQgMCxcbiAgICAgICAgX3YkMzogdm9pZCAwXG4gICAgICB9KTtcbiAgICAgIHJldHVybiBfZWwkO1xuICAgIH0pKCkgOiAoKCkgPT4ge1xuICAgICAgY29uc3QgX2MkMiA9IGNyZWF0ZU1lbW8oKCkgPT4gc2l6ZSgpID09PSBcInNcIik7XG4gICAgICByZXR1cm4gKCkgPT4gX2MkMigpID8gKCgpID0+IHtcbiAgICAgICAgY29uc3QgX2VsJDQgPSBfdG1wbCQyJDMuY2xvbmVOb2RlKHRydWUpLCBfZWwkNSA9IF9lbCQ0LmZpcnN0Q2hpbGQsIF9lbCQ2ID0gX2VsJDUubmV4dFNpYmxpbmc7XG4gICAgICAgIGNyZWF0ZVJlbmRlckVmZmVjdCgoX3AkKSA9PiB7XG4gICAgICAgICAgY29uc3QgX3YkNCA9IHByb3BzLmNsYXNzLCBfdiQ1ID0gZmlsbCgpLCBfdiQ2ID0gdGhlbWUuY29sb3JzLmNvbnN0YW50LndoaXRlO1xuICAgICAgICAgIF92JDQgIT09IF9wJC5fdiQ0ICYmIHNldEF0dHJpYnV0ZShfZWwkNCwgXCJjbGFzc1wiLCBfcCQuX3YkNCA9IF92JDQpO1xuICAgICAgICAgIF92JDUgIT09IF9wJC5fdiQ1ICYmIHNldEF0dHJpYnV0ZShfZWwkNSwgXCJmaWxsXCIsIF9wJC5fdiQ1ID0gX3YkNSk7XG4gICAgICAgICAgX3YkNiAhPT0gX3AkLl92JDYgJiYgc2V0QXR0cmlidXRlKF9lbCQ2LCBcInN0cm9rZVwiLCBfcCQuX3YkNiA9IF92JDYpO1xuICAgICAgICAgIHJldHVybiBfcCQ7XG4gICAgICAgIH0sIHtcbiAgICAgICAgICBfdiQ0OiB2b2lkIDAsXG4gICAgICAgICAgX3YkNTogdm9pZCAwLFxuICAgICAgICAgIF92JDY6IHZvaWQgMFxuICAgICAgICB9KTtcbiAgICAgICAgcmV0dXJuIF9lbCQ0O1xuICAgICAgfSkoKSA6ICgoKSA9PiB7XG4gICAgICAgIGNvbnN0IF9lbCQ3ID0gX3RtcGwkMyQxLmNsb25lTm9kZSh0cnVlKSwgX2VsJDggPSBfZWwkNy5maXJzdENoaWxkLCBfZWwkOSA9IF9lbCQ4Lm5leHRTaWJsaW5nO1xuICAgICAgICBjcmVhdGVSZW5kZXJFZmZlY3QoKF9wJCkgPT4ge1xuICAgICAgICAgIGNvbnN0IF92JDcgPSBwcm9wcy5jbGFzcywgX3YkOCA9IGZpbGwoKSwgX3YkOSA9IHRoZW1lLmNvbG9ycy5jb25zdGFudC53aGl0ZTtcbiAgICAgICAgICBfdiQ3ICE9PSBfcCQuX3YkNyAmJiBzZXRBdHRyaWJ1dGUoX2VsJDcsIFwiY2xhc3NcIiwgX3AkLl92JDcgPSBfdiQ3KTtcbiAgICAgICAgICBfdiQ4ICE9PSBfcCQuX3YkOCAmJiBzZXRBdHRyaWJ1dGUoX2VsJDgsIFwiZmlsbFwiLCBfcCQuX3YkOCA9IF92JDgpO1xuICAgICAgICAgIF92JDkgIT09IF9wJC5fdiQ5ICYmIHNldEF0dHJpYnV0ZShfZWwkOSwgXCJmaWxsXCIsIF9wJC5fdiQ5ID0gX3YkOSk7XG4gICAgICAgICAgcmV0dXJuIF9wJDtcbiAgICAgICAgfSwge1xuICAgICAgICAgIF92JDc6IHZvaWQgMCxcbiAgICAgICAgICBfdiQ4OiB2b2lkIDAsXG4gICAgICAgICAgX3YkOTogdm9pZCAwXG4gICAgICAgIH0pO1xuICAgICAgICByZXR1cm4gX2VsJDc7XG4gICAgICB9KSgpO1xuICAgIH0pKCk7XG4gIH0pKCkpO1xufTtcbmNvbnN0IF90bXBsJCRuID0gLyogQF9fUFVSRV9fICovIHRlbXBsYXRlJDEoYDxzdmcgd2lkdGg9XCIyNFwiIGhlaWdodD1cIjI0XCIgdmlld0JveD1cIjAgMCAyNCAyNFwiIGZpbGw9XCJub25lXCIgeG1sbnM9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiPjxwYXRoIGQ9XCJNMTUuNTUgNS44NTEyM0MxOC45NDU5IDcuODExODQgMjAuMTA5NCAxMi4xNTQxIDE4LjE0ODggMTUuNTVDMTYuMTg4MiAxOC45NDU5IDExLjg0NTkgMjAuMTA5NCA4LjQ0OTk4IDE4LjE0ODhDOC4wMTk1MiAxNy45MDAzIDcuNDY5MDkgMTguMDQ3OCA3LjIyMDU2IDE4LjQ3ODJDNi45NzIwMyAxOC45MDg3IDcuMTE5NTIgMTkuNDU5MSA3LjU0OTk4IDE5LjcwNzZDMTEuODA2OCAyMi4xNjUzIDE3LjI0OTkgMjAuNzA2OCAxOS43MDc2IDE2LjQ1QzIyLjE2NTMgMTIuMTkzMiAyMC43MDY4IDYuNzUwMDUgMTYuNDUgNC4yOTIzOUMxMi4xOTMyIDEuODM0NzIgNi43NTAwMyAzLjI5MzIxIDQuMjkyMzYgNy41NTAwMUM0LjA0MzgzIDcuOTgwNDcgNC4xOTEzMiA4LjUzMDkxIDQuNjIxNzggOC43Nzk0M0M1LjA1MjI0IDkuMDI3OTYgNS42MDI2OCA4Ljg4MDQ4IDUuODUxMiA4LjQ1MDAxQzcuODExODEgNS4wNTQxMyAxMi4xNTQxIDMuODkwNjIgMTUuNTUgNS44NTEyM1pcIj48L3BhdGg+PC9zdmc+YCksIF90bXBsJDIkMiA9IC8qIEBfX1BVUkVfXyAqLyB0ZW1wbGF0ZSQxKGA8c3ZnIHhtbG5zPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIiB3aWR0aD1cIjQ0XCIgaGVpZ2h0PVwiNDRcIiB2aWV3Qm94PVwiMCAwIDQ0IDQ0XCIgZmlsbD1cIm5vbmVcIj48cGF0aCBmaWxsLXJ1bGU9XCJldmVub2RkXCIgY2xpcC1ydWxlPVwiZXZlbm9kZFwiIGQ9XCJNMjIgMi45OTk1MUMxMS41MDY2IDIuOTk5NTEgMyAxMS41MDYxIDMgMjEuOTk5NUMzIDMyLjQ5MjkgMTEuNTA2NiA0MC45OTk1IDIyIDQwLjk5OTVDMjIuODI4NCA0MC45OTk1IDIzLjUgNDEuNjcxMSAyMy41IDQyLjQ5OTVDMjMuNSA0My4zMjc5IDIyLjgyODQgNDMuOTk5NSAyMiA0My45OTk1QzkuODQ5NzQgNDMuOTk5NSAwIDM0LjE0OTggMCAyMS45OTk1QzAgOS44NDkyNSA5Ljg0OTc0IC0wLjAwMDQ4ODI4MSAyMiAtMC4wMDA0ODgyODFDMzQuMTUwMyAtMC4wMDA0ODgyODEgNDQgOS44NDkyNSA0NCAyMS45OTk1QzQ0IDIyLjgyNzkgNDMuMzI4NCAyMy40OTk1IDQyLjUgMjMuNDk5NUM0MS42NzE2IDIzLjQ5OTUgNDEgMjIuODI3OSA0MSAyMS45OTk1QzQxIDExLjUwNjEgMzIuNDkzNCAyLjk5OTUxIDIyIDIuOTk5NTFaXCI+PC9wYXRoPjwvc3ZnPmApLCBfdG1wbCQzID0gLyogQF9fUFVSRV9fICovIHRlbXBsYXRlJDEoYDxzdmcgd2lkdGg9XCI3MlwiIGhlaWdodD1cIjcyXCIgdmlld0JveD1cIjAgMCA3MiA3MlwiIGZpbGw9XCJub25lXCIgeG1sbnM9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiPjxwYXRoIGQ9XCJNMjQgNTYuNzg0NkMzNS40NzkgNjMuNDEyIDUwLjE1NzIgNTkuNDc5IDU2Ljc4NDYgNDcuOTk5OUM2My40MTIgMzYuNTIwOSA1OS40NzkgMjEuODQyNyA0OCAxNS4yMTUzQzM2LjUyMSA4LjU4NzkxIDIxLjg0MjggMTIuNTIwOSAxNS4yMTU0IDIzLjk5OTlcIiBzdHJva2Utd2lkdGg9XCI0XCIgc3Ryb2tlLWxpbmVjYXA9XCJyb3VuZFwiIHN0cm9rZS1saW5lam9pbj1cInJvdW5kXCI+PC9wYXRoPjwvc3ZnPmApO1xuY29uc3QgTG9hZGVySWNvbiA9IChwcm9wcykgPT4ge1xuICBjb25zdCB0aGVtZSA9IHVzZVRoZW1lKCk7XG4gIGNvbnN0IHNpemUgPSAoKSA9PiBwcm9wcy5zaXplIHx8IFwieHNcIjtcbiAgY29uc3QgZmlsbCA9ICgpID0+IHByb3BzLmZpbGwgfHwgdGhlbWUuY29sb3JzLmljb24udGVydGlhcnk7XG4gIGNvbnN0IHJvdGF0ZUFuaW1hdGlvbiA9IGhgXG4gICAgICAgIDAlIHtcbiAgICAgICAgICB0cmFuc2Zvcm06IHJvdGF0ZSgwZGVnKTtcbiAgICAgICAgfVxuICAgICAgICAxMDAlIHtcbiAgICAgICAgICB0cmFuc2Zvcm06IHJvdGF0ZSgzNjBkZWcpO1xuICAgICAgICB9XG4gICAgYDtcbiAgY29uc3Qgc3ZnQ2xhc3MgPSB1YFxuICAgICAgICBhbmltYXRpb246ICR7cm90YXRlQW5pbWF0aW9ufSAxcyBsaW5lYXIgaW5maW5pdGU7XG4gICAgYDtcbiAgcmV0dXJuIGNyZWF0ZU1lbW8oKCgpID0+IHtcbiAgICBjb25zdCBfYyQgPSBjcmVhdGVNZW1vKCgpID0+IHNpemUoKSA9PT0gXCJ4c1wiKTtcbiAgICByZXR1cm4gKCkgPT4gX2MkKCkgPyAoKCkgPT4ge1xuICAgICAgY29uc3QgX2VsJCA9IF90bXBsJCRuLmNsb25lTm9kZSh0cnVlKSwgX2VsJDIgPSBfZWwkLmZpcnN0Q2hpbGQ7XG4gICAgICBjcmVhdGVSZW5kZXJFZmZlY3QoKF9wJCkgPT4ge1xuICAgICAgICBjb25zdCBfdiQgPSBjbihzdmdDbGFzcywgcHJvcHMuY2xhc3MpLCBfdiQyID0gZmlsbCgpO1xuICAgICAgICBfdiQgIT09IF9wJC5fdiQgJiYgc2V0QXR0cmlidXRlKF9lbCQsIFwiY2xhc3NcIiwgX3AkLl92JCA9IF92JCk7XG4gICAgICAgIF92JDIgIT09IF9wJC5fdiQyICYmIHNldEF0dHJpYnV0ZShfZWwkMiwgXCJmaWxsXCIsIF9wJC5fdiQyID0gX3YkMik7XG4gICAgICAgIHJldHVybiBfcCQ7XG4gICAgICB9LCB7XG4gICAgICAgIF92JDogdm9pZCAwLFxuICAgICAgICBfdiQyOiB2b2lkIDBcbiAgICAgIH0pO1xuICAgICAgcmV0dXJuIF9lbCQ7XG4gICAgfSkoKSA6ICgoKSA9PiB7XG4gICAgICBjb25zdCBfYyQyID0gY3JlYXRlTWVtbygoKSA9PiBzaXplKCkgPT09IFwic1wiKTtcbiAgICAgIHJldHVybiAoKSA9PiBfYyQyKCkgPyAoKCkgPT4ge1xuICAgICAgICBjb25zdCBfZWwkMyA9IF90bXBsJDIkMi5jbG9uZU5vZGUodHJ1ZSksIF9lbCQ0ID0gX2VsJDMuZmlyc3RDaGlsZDtcbiAgICAgICAgY3JlYXRlUmVuZGVyRWZmZWN0KChfcCQpID0+IHtcbiAgICAgICAgICBjb25zdCBfdiQzID0gY24oc3ZnQ2xhc3MsIHByb3BzLmNsYXNzKSwgX3YkNCA9IGZpbGwoKTtcbiAgICAgICAgICBfdiQzICE9PSBfcCQuX3YkMyAmJiBzZXRBdHRyaWJ1dGUoX2VsJDMsIFwiY2xhc3NcIiwgX3AkLl92JDMgPSBfdiQzKTtcbiAgICAgICAgICBfdiQ0ICE9PSBfcCQuX3YkNCAmJiBzZXRBdHRyaWJ1dGUoX2VsJDQsIFwiZmlsbFwiLCBfcCQuX3YkNCA9IF92JDQpO1xuICAgICAgICAgIHJldHVybiBfcCQ7XG4gICAgICAgIH0sIHtcbiAgICAgICAgICBfdiQzOiB2b2lkIDAsXG4gICAgICAgICAgX3YkNDogdm9pZCAwXG4gICAgICAgIH0pO1xuICAgICAgICByZXR1cm4gX2VsJDM7XG4gICAgICB9KSgpIDogKCgpID0+IHtcbiAgICAgICAgY29uc3QgX2VsJDUgPSBfdG1wbCQzLmNsb25lTm9kZSh0cnVlKSwgX2VsJDYgPSBfZWwkNS5maXJzdENoaWxkO1xuICAgICAgICBjcmVhdGVSZW5kZXJFZmZlY3QoKF9wJCkgPT4ge1xuICAgICAgICAgIGNvbnN0IF92JDUgPSBjbihzdmdDbGFzcywgcHJvcHMuY2xhc3MpLCBfdiQ2ID0gZmlsbCgpO1xuICAgICAgICAgIF92JDUgIT09IF9wJC5fdiQ1ICYmIHNldEF0dHJpYnV0ZShfZWwkNSwgXCJjbGFzc1wiLCBfcCQuX3YkNSA9IF92JDUpO1xuICAgICAgICAgIF92JDYgIT09IF9wJC5fdiQ2ICYmIHNldEF0dHJpYnV0ZShfZWwkNiwgXCJzdHJva2VcIiwgX3AkLl92JDYgPSBfdiQ2KTtcbiAgICAgICAgICByZXR1cm4gX3AkO1xuICAgICAgICB9LCB7XG4gICAgICAgICAgX3YkNTogdm9pZCAwLFxuICAgICAgICAgIF92JDY6IHZvaWQgMFxuICAgICAgICB9KTtcbiAgICAgICAgcmV0dXJuIF9lbCQ1O1xuICAgICAgfSkoKTtcbiAgICB9KSgpO1xuICB9KSgpKTtcbn07XG5jb25zdCBfdG1wbCQkbSA9IC8qIEBfX1BVUkVfXyAqLyB0ZW1wbGF0ZSQxKGA8c3ZnIHdpZHRoPVwiMTU4XCIgaGVpZ2h0PVwiMjhcIiB2aWV3Qm94PVwiMCAwIDE1OCAyOFwiIGZpbGw9XCJub25lXCIgeG1sbnM9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiPjxwYXRoIGZpbGwtcnVsZT1cImV2ZW5vZGRcIiBjbGlwLXJ1bGU9XCJldmVub2RkXCIgZD1cIk0yOCAxNC4wMDFDMjggMjEuNzMzIDIxLjczMiAyOC4wMDEgMTQgMjguMDAxQzYuMjY4MDEgMjguMDAxIDAgMjEuNzMzIDAgMTQuMDAxQzAgNi4yNjg5OSA2LjI2ODAxIDAuMDAwOTc2NTYyIDE0IDAuMDAwOTc2NTYyQzIxLjczMiAwLjAwMDk3NjU2MiAyOCA2LjI2ODk5IDI4IDE0LjAwMVpNOS4yMTkzMSA4LjAwMDk4SDE4Ljc4MDFIMTguNzgxM0MyMC41MzggOC4wMDA5OCAyMS42NTIyIDkuODk5NjYgMjAuNzY5MSAxMS40MzAyTDE0Ljg2NzIgMjEuNjU3NkMxNC40ODIyIDIyLjMyNTQgMTMuNTE3MiAyMi4zMjU0IDEzLjEzMjIgMjEuNjU3Nkw3LjIzMTU4IDExLjQzMDJDNi4zNDcyMSA5Ljg5NzI2IDcuNDYxNCA4LjAwMDk4IDkuMjE5MzEgOC4wMDA5OFpNMTMuMTI2MiAxOC41ODgyVjkuNzQ4MDZIOS4yMTgxMUM4Ljc4OTc2IDkuNzQ4MDYgOC41MzcwOCAxMC4yMDI5IDguNzQxNjMgMTAuNTU3OEwxMS44NDIzIDE2LjEwMzVMMTMuMTI2MiAxOC41ODgyWk0xNi4xNTU5IDE2LjEwNDdMMTkuMjU1NCAxMC41NTY2QzE5LjQ1OTkgMTAuMjAxNyAxOS4yMDczIDkuNzQ2ODUgMTguNzc4OSA5Ljc0Njg1SDE0Ljg3MDlWMTguNTkwNkwxNi4xNTU5IDE2LjEwNDdaXCIgZmlsbD1cIiMwMDk4RUFcIj48L3BhdGg+PHBhdGggZD1cIk0xOC43ODAyIDguMDAwOThIOS4yMTkzNkM3LjQ2MTQ1IDguMDAwOTggNi4zNDcyNyA5Ljg5NzI2IDcuMjMxNjQgMTEuNDMwMkwxMy4xMzIyIDIxLjY1NzZDMTMuNTE3MyAyMi4zMjU0IDE0LjQ4MjMgMjIuMzI1NCAxNC44NjczIDIxLjY1NzZMMjAuNzY5MSAxMS40MzAyQzIxLjY1MjMgOS44OTk2NiAyMC41MzgxIDguMDAwOTggMTguNzgxNCA4LjAwMDk4SDE4Ljc4MDJaTTEzLjEyNzQgMTguNTkwNkwxMS44NDI0IDE2LjEwMzVMOC43NDE2OCAxMC41NTc4QzguNTM3MTQgMTAuMjAyOSA4Ljc4OTgxIDkuNzQ4MDYgOS4yMTgxNiA5Ljc0ODA2SDEzLjEyNjJWMTguNTkxOEwxMy4xMjc0IDE4LjU5MDZaTTE5LjI1NTUgMTAuNTU2NkwxNi4xNTYgMTYuMTA0N0wxNC44NzA5IDE4LjU5MDZWOS43NDY4NUgxOC43NzlDMTkuMjA3MyA5Ljc0Njg1IDE5LjQ2IDEwLjIwMTcgMTkuMjU1NSAxMC41NTY2WlwiIGZpbGw9XCJ3aGl0ZVwiPjwvcGF0aD48cGF0aCBmaWxsLXJ1bGU9XCJldmVub2RkXCIgY2xpcC1ydWxlPVwiZXZlbm9kZFwiIGQ9XCJNNTEuNzQ4MyAyMi4xOTY3QzU1LjcxODIgMjIuMTk2NyA1OC45NjA5IDE4Ljk1NCA1OC45NjA5IDE0Ljk4NDFDNTguOTYwOSAxMS4wMTQyIDU1LjcxODIgNy43NzE0OCA1MS43NDgzIDcuNzcxNDhDNDcuNzU4OCA3Ljc3MTQ4IDQ0LjUzNTcgMTEuMDE0MiA0NC41MzU3IDE0Ljk4NDFDNDQuNTM1NyAxOC45NTQgNDcuNzU4OCAyMi4xOTY3IDUxLjc0ODMgMjIuMTk2N1pNNTEuNzQ4MyAxOS4xNzAyQzQ5LjQ2ODYgMTkuMTcwMiA0Ny42ODAyIDE3LjI0NDIgNDcuNjgwMiAxNC45ODQxQzQ3LjY4MDIgMTIuNzI0IDQ5LjQ2ODYgMTAuNzk4IDUxLjc0ODMgMTAuNzk4QzU0LjAwODQgMTAuNzk4IDU1Ljc5NjggMTIuNzI0IDU1Ljc5NjggMTQuOTg0MUM1NS43OTY4IDE3LjI0NDIgNTQuMDA4NCAxOS4xNzAyIDUxLjc0ODMgMTkuMTcwMlpNMzcuMDY5OCAyMS45NjA5SDQwLjIxNDJWMTAuOTk0Nkg0NC4yODQzVjguMDA3MzJIMzNWMTAuOTk0NkgzNy4wNjk4VjIxLjk2MDlaTTY5LjkzNzkgOC4wMDczMkg3My4wODIzVjIxLjk2MDlINzAuMzg5OUw2My41OSAxMy4zMzMzVjIxLjk2MDlINjAuNDY1MlY4LjAwNzMySDYzLjE1NzZMNjkuOTM3OSAxNi42MTUzVjguMDA3MzJaTTc5LjIyNTkgMTQuOTg4N0M3OS4yMjU5IDEwLjkyMDIgODIuMzUxIDcuNzc1MzkgODYuNDk4MiA3Ljc3NTM5Qzg5Ljg1OTIgNy43NzUzOSA5Mi41NTE5IDkuOTU3MDkgOTMuMjIwMiAxMi42ODkxSDkwLjc0MzdDOTAuMTU0IDExLjA5NzEgODguNDYzNyA5Ljk5NjQgODYuNDk4MiA5Ljk5NjRDODMuNTg5MyA5Ljk5NjQgODEuNTQ1MiAxMi4xNzgxIDgxLjU0NTIgMTQuOTg4N0M4MS41NDUyIDE3Ljc5OTQgODMuNTg5MyAxOS45ODExIDg2LjQ5ODIgMTkuOTgxMUM4OC40NjM3IDE5Ljk4MTEgOTAuMTU0IDE4Ljg4MDQgOTAuNzQzNyAxNy4yODg0SDkzLjIyMDJDOTIuNTUxOSAyMC4wMjA0IDg5Ljg1OTIgMjIuMjAyMSA4Ni40OTgyIDIyLjIwMjFDODIuMzUxIDIyLjIwMjEgNzkuMjI1OSAxOS4wNTczIDc5LjIyNTkgMTQuOTg4N1pNMTA0LjU4NCAxNy4wNTI1QzEwNC41ODQgMTkuOTAyNSAxMDIuMzQzIDIyLjE2MjggOTkuNDM0MiAyMi4xNjI4Qzk2LjUyNTMgMjIuMTYyOCA5NC4yODQ2IDE5LjkwMjUgOTQuMjg0NiAxNy4wNTI1Qzk0LjI4NDYgMTQuMjAyNSA5Ni41MjUzIDExLjk0MjIgOTkuNDM0MiAxMS45NDIyQzEwMi4zNDMgMTEuOTQyMiAxMDQuNTg0IDE0LjIwMjUgMTA0LjU4NCAxNy4wNTI1Wk05Ni40NjYzIDE3LjA1MjVDOTYuNDY2MyAxOC44MDE4IDk3LjY4NDkgMjAuMTU4IDk5LjQzNDIgMjAuMTU4QzEwMS4xNjQgMjAuMTU4IDEwMi4zODIgMTguODAxOCAxMDIuMzgyIDE3LjA1MjVDMTAyLjM4MiAxNS4zMDMyIDEwMS4xNjQgMTMuOTQ3IDk5LjQzNDIgMTMuOTQ3Qzk3LjY4NDkgMTMuOTQ3IDk2LjQ2NjMgMTUuMzAzMiA5Ni40NjYzIDE3LjA1MjVaTTEwOC42MjYgMTIuMTM4OEgxMDYuNDYzVjIxLjk2NjJIMTA4LjYyNlYxNy4xMzExQzEwOC42MjYgMTUuMDI4MSAxMDkuNzI2IDEzLjkwNzcgMTExLjE2MSAxMy45MDc3QzExMi40MTkgMTMuOTA3NyAxMTMuMjA1IDE0Ljg1MTIgMTEzLjIwNSAxNi40MDM5VjIxLjk2NjJIMTE1LjM2N1YxNi4wNTAxQzExNS4zNjcgMTMuNTUzOSAxMTMuODkzIDExLjk0MjIgMTExLjYxMyAxMS45NDIyQzExMC4zMzUgMTEuOTQyMiAxMDkuMjE1IDEyLjQ5MjYgMTA4LjYyNiAxMy40NzUzVjEyLjEzODhaTTExNy44MzkgMTIuMTM4OEgxMjAuMDAxVjEzLjQ3NTNDMTIwLjU5IDEyLjQ5MjYgMTIxLjcxMSAxMS45NDIyIDEyMi45ODggMTEuOTQyMkMxMjUuMjY4IDExLjk0MjIgMTI2Ljc0MiAxMy41NTM5IDEyNi43NDIgMTYuMDUwMVYyMS45NjYySDEyNC41OFYxNi40MDM5QzEyNC41OCAxNC44NTEyIDEyMy43OTQgMTMuOTA3NyAxMjIuNTM2IDEzLjkwNzdDMTIxLjEwMSAxMy45MDc3IDEyMC4wMDEgMTUuMDI4MSAxMjAuMDAxIDE3LjEzMTFWMjEuOTY2MkgxMTcuODM5VjEyLjEzODhaTTEzMy41NTggMjIuMTYyOEMxMzYuMDU0IDIyLjE2MjggMTM3LjgyMyAyMC43MjggMTM4LjM3MyAxOC44ODA0SDEzNi4xMTNDMTM1LjY2MSAxOS44MjM4IDEzNC43MTcgMjAuMjU2MyAxMzMuNjM2IDIwLjI1NjNDMTMxLjg4NyAyMC4yNTYzIDEzMC43NDcgMTkuMDc3IDEzMC42NjggMTcuNTgzMkgxMzguNDkxQzEzOC42ODggMTQuMjQxOSAxMzYuNTg1IDExLjk0MjIgMTMzLjU3NyAxMS45NDIyQzEzMC41NTEgMTEuOTQyMiAxMjguNTI2IDE0LjE0MzYgMTI4LjUyNiAxNy4wNTI1QzEyOC41MjYgMjAuMDAwNyAxMzAuNjI5IDIyLjE2MjggMTMzLjU1OCAyMi4xNjI4Wk0xMzAuNzQ3IDE2LjA1MDFDMTMxLjA0MiAxNC41MzY3IDEzMi4xNjIgMTMuNzUwNSAxMzMuNTE4IDEzLjc1MDVDMTM0LjcxNyAxMy43NTA1IDEzNS44MzggMTQuNDU4MSAxMzYuMTcyIDE2LjA1MDFIMTMwLjc0N1pNMTQ5Ljg1MSAxOC4zNjk0QzE0OS4zMiAyMC41NTExIDE0Ny40NTMgMjIuMTYyOCAxNDQuODU5IDIyLjE2MjhDMTQxLjg3MSAyMi4xNjI4IDEzOS43MDkgMTkuODgyOCAxMzkuNzA5IDE3LjA1MjVDMTM5LjcwOSAxNC4yMjIyIDE0MS44NzEgMTEuOTQyMiAxNDQuODU5IDExLjk0MjJDMTQ3LjQ1MyAxMS45NDIyIDE0OS4zMiAxMy41NTM5IDE0OS44NTEgMTUuNzM1NkgxNDcuNTcxQzE0Ny4xNzggMTQuNjc0MyAxNDYuMjE1IDEzLjkwNzcgMTQ0Ljg1OSAxMy45MDc3QzE0My4xMDkgMTMuOTA3NyAxNDEuOTEgMTUuMjI0NiAxNDEuOTEgMTcuMDUyNUMxNDEuOTEgMTguODgwNCAxNDMuMTA5IDIwLjE5NzMgMTQ0Ljg1OSAyMC4xOTczQzE0Ni4yMTUgMjAuMTk3MyAxNDcuMTc4IDE5LjQzMDcgMTQ3LjU3MSAxOC4zNjk0SDE0OS44NTFaTTE1NS43NSAyMi4wNjQ1QzE1Ni40MTggMjIuMDY0NSAxNTYuOTI5IDIxLjk4NTkgMTU3LjM2MiAyMS44NDgzVjE5LjkyMjFDMTU3LjA0NyAyMC4wNDAxIDE1Ni42MTUgMjAuMTE4NyAxNTYuMjAyIDIwLjExODdDMTU1LjA4MiAyMC4xMTg3IDE1NC41NTEgMTkuNjY2NiAxNTQuNTUxIDE4LjQ0OFYxNC4wNjVIMTU3LjM2MlYxMi4xMzg4SDE1NC41NTFWOS40MDY3NUgxNTIuMzg5VjEyLjEzODhIMTUwLjM0NVYxNC4wNjVIMTUyLjM4OVYxOC44MDE4QzE1Mi4zODkgMjEuMDIyOCAxNTMuODYzIDIyLjA2NDUgMTU1Ljc1IDIyLjA2NDVaXCI+PC9wYXRoPjwvc3ZnPmApO1xuY29uc3QgVG9uQ29ubmVjdEJyYW5kID0gKCkgPT4ge1xuICBjb25zdCB0aGVtZSA9IHVzZVRoZW1lKCk7XG4gIGNvbnN0IGZpbGwgPSAoKSA9PiB0aGVtZS50aGVtZSA9PT0gVEhFTUUuREFSSyA/IHRoZW1lLmNvbG9ycy5jb25zdGFudC53aGl0ZSA6IHRoZW1lLmNvbG9ycy5jb25zdGFudC5ibGFjaztcbiAgcmV0dXJuICgoKSA9PiB7XG4gICAgY29uc3QgX2VsJCA9IF90bXBsJCRtLmNsb25lTm9kZSh0cnVlKSwgX2VsJDIgPSBfZWwkLmZpcnN0Q2hpbGQsIF9lbCQzID0gX2VsJDIubmV4dFNpYmxpbmcsIF9lbCQ0ID0gX2VsJDMubmV4dFNpYmxpbmc7XG4gICAgY3JlYXRlUmVuZGVyRWZmZWN0KCgpID0+IHNldEF0dHJpYnV0ZShfZWwkNCwgXCJmaWxsXCIsIGZpbGwoKSkpO1xuICAgIHJldHVybiBfZWwkO1xuICB9KSgpO1xufTtcbmNvbnN0IF90bXBsJCRsID0gLyogQF9fUFVSRV9fICovIHRlbXBsYXRlJDEoYDxzdmcgeG1sbnM9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiIHdpZHRoPVwiMTZcIiBoZWlnaHQ9XCIxNlwiIHZpZXdCb3g9XCIwIDAgMTYgMTZcIiBmaWxsPVwibm9uZVwiPjxwYXRoIGZpbGwtcnVsZT1cImV2ZW5vZGRcIiBjbGlwLXJ1bGU9XCJldmVub2RkXCIgZD1cIk01LjU2NjA4IDQuNDI1ODRDNS44MjUyNyAzLjMyMTU4IDYuODE3NiAyLjUgOC4wMDAwMSAyLjVDOS4zODA3MiAyLjUgMTAuNSAzLjYxOTI5IDEwLjUgNUMxMC41IDUuNjMwMjYgMTAuMzM5MSA2LjAzODYgMTAuMTI2NCA2LjM0NDU1QzkuOTAwMTggNi42Njk5MyA5LjU4NTYxIDYuOTI0NzggOS4xODg2NCA3LjIwODc3QzkuMTI1NzkgNy4yNTM3MiA5LjA1ODczIDcuMzAwMjUgOC45ODg3IDcuMzQ4ODNDOC4yNzM5MiA3Ljg0NDcyIDcuMjUwMDEgOC41NTUwNyA3LjI1MDAxIDEwVjEwLjI1QzcuMjUwMDEgMTAuNjY0MiA3LjU4NTggMTEgOC4wMDAwMSAxMUM4LjQxNDIyIDExIDguNzUwMDEgMTAuNjY0MiA4Ljc1MDAxIDEwLjI1VjEwQzguNzUwMDEgOS4zNjUwMiA5LjEwNzc3IDkuMTA5NiA5Ljk0NTU0IDguNTExNDlMMTAuMDYxNCA4LjQyODczQzEwLjQ3NjkgOC4xMzE0NyAxMC45NzQ4IDcuNzUxOTQgMTEuMzU4IDcuMjAwNzZDMTEuNzU0NyA2LjYzMDE1IDEyIDUuOTE5NzMgMTIgNUMxMiAyLjc5MDg2IDEwLjIwOTEgMSA4LjAwMDAxIDFDNi4xMDU2NCAxIDQuNTIwNSAyLjMxNjE1IDQuMTA1NzcgNC4wODMwOEM0LjAxMTEyIDQuNDg2MzQgNC4yNjEyOSA0Ljg4OTk3IDQuNjY0NTQgNC45ODQ2MkM1LjA2NzggNS4wNzkyNyA1LjQ3MTQzIDQuODI5MSA1LjU2NjA4IDQuNDI1ODRaTTguMDAwMDEgMTVDOC42MDc1MiAxNSA5LjEwMDAxIDE0LjUwNzUgOS4xMDAwMSAxMy45QzkuMTAwMDEgMTMuMjkyNSA4LjYwNzUyIDEyLjggOC4wMDAwMSAxMi44QzcuMzkyNDkgMTIuOCA2LjkwMDAxIDEzLjI5MjUgNi45MDAwMSAxMy45QzYuOTAwMDEgMTQuNTA3NSA3LjM5MjQ5IDE1IDguMDAwMDEgMTVaXCI+PC9wYXRoPjwvc3ZnPmApO1xuY29uc3QgUXVlc3Rpb25JY29uID0gKHByb3BzKSA9PiB7XG4gIGNvbnN0IHRoZW1lID0gdXNlVGhlbWUoKTtcbiAgY29uc3QgZmlsbCA9ICgpID0+IHByb3BzLmZpbGwgfHwgdGhlbWUuY29sb3JzLmljb24uc2Vjb25kYXJ5O1xuICByZXR1cm4gKCgpID0+IHtcbiAgICBjb25zdCBfZWwkID0gX3RtcGwkJGwuY2xvbmVOb2RlKHRydWUpLCBfZWwkMiA9IF9lbCQuZmlyc3RDaGlsZDtcbiAgICBjcmVhdGVSZW5kZXJFZmZlY3QoKCkgPT4gc2V0QXR0cmlidXRlKF9lbCQyLCBcImZpbGxcIiwgZmlsbCgpKSk7XG4gICAgcmV0dXJuIF9lbCQ7XG4gIH0pKCk7XG59O1xuY29uc3QgX3RtcGwkJGsgPSAvKiBAX19QVVJFX18gKi8gdGVtcGxhdGUkMShgPHN2ZyB4bWxucz1cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCIgd2lkdGg9XCIxNlwiIGhlaWdodD1cIjE2XCIgdmlld0JveD1cIjAgMCAxNiAxNlwiIGZpbGw9XCJub25lXCI+PHBhdGggZmlsbC1ydWxlPVwiZXZlbm9kZFwiIGNsaXAtcnVsZT1cImV2ZW5vZGRcIiBkPVwiTTkuOTgxNTYgOC43NUM5Ljg0ODU0IDExLjQzMjggOS4wMTIwNiAxMy41IDggMTMuNUM2Ljk4Nzk0IDEzLjUgNi4xNTE0NiAxMS40MzI4IDYuMDE4NDQgOC43NUg5Ljk4MTU2Wk0xMS40ODMyIDguNzVDMTEuNDIxNyAxMC4xMTU1IDExLjE5MjkgMTEuMzg2OSAxMC44MjM5IDEyLjQwMTdDMTAuNzczNCAxMi41NDA1IDEwLjcxODggMTIuNjc4OSAxMC42NTk1IDEyLjgxNTRDMTIuMTQ1NCAxMS45OTMgMTMuMjEwMyAxMC41MDI5IDEzLjQ0OTMgOC43NUgxMS40ODMyWk0xMy40NDkzIDcuMjVIMTEuNDgzMkMxMS40MjE3IDUuODg0NTMgMTEuMTkyOSA0LjYxMzE0IDEwLjgyMzkgMy41OTgzQzEwLjc3MzQgMy40NTk1IDEwLjcxODggMy4zMjExMSAxMC42NTk1IDMuMTg0NTlDMTIuMTQ1NCA0LjAwNjk3IDEzLjIxMDMgNS40OTcwOSAxMy40NDkzIDcuMjVaTTkuOTgxNTYgNy4yNUg2LjAxODQ0QzYuMTUxNDQgNC41Njc2NCA2Ljk4NzY5IDIuNTAwNjIgNy45OTk1NSAyLjVIOEM5LjAxMjA2IDIuNSA5Ljg0ODU0IDQuNTY3MjQgOS45ODE1NiA3LjI1Wk00LjUxNjc4IDcuMjVDNC41NzgyNiA1Ljg4NDUzIDQuODA3MDYgNC42MTMxNCA1LjE3NjEgMy41OTgzQzUuMjI2NTcgMy40NTk1IDUuMjgxMjQgMy4zMjExMSA1LjM0MDUgMy4xODQ1OUMzLjg1NDYzIDQuMDA2OTcgMi43ODk3MiA1LjQ5NzA5IDIuNTUwNzEgNy4yNUg0LjUxNjc4Wk0yLjU1MDcxIDguNzVDMi43ODk3MiAxMC41MDI5IDMuODU0NjMgMTEuOTkzIDUuMzQwNSAxMi44MTU0QzUuMjgxMjQgMTIuNjc4OSA1LjIyNjU3IDEyLjU0MDUgNS4xNzYxIDEyLjQwMTdDNC44MDcwNiAxMS4zODY5IDQuNTc4MjYgMTAuMTE1NSA0LjUxNjc4IDguNzVIMi41NTA3MVpNMTUgOEMxNSAxMS44NjYgMTEuODY2IDE1IDggMTVDNC4xMzQwMSAxNSAxIDExLjg2NiAxIDhDMSA0LjEzNDAxIDQuMTM0MDEgMSA4IDFDMTEuODY2IDEgMTUgNC4xMzQwMSAxNSA4WlwiPjwvcGF0aD48L3N2Zz5gKTtcbmNvbnN0IEJyb3dzZXJJY29uID0gKHByb3BzKSA9PiB7XG4gIGNvbnN0IHRoZW1lID0gdXNlVGhlbWUoKTtcbiAgY29uc3QgZmlsbCA9ICgpID0+IHByb3BzLmZpbGwgfHwgdGhlbWUuY29sb3JzLmljb24ucHJpbWFyeTtcbiAgcmV0dXJuICgoKSA9PiB7XG4gICAgY29uc3QgX2VsJCA9IF90bXBsJCRrLmNsb25lTm9kZSh0cnVlKSwgX2VsJDIgPSBfZWwkLmZpcnN0Q2hpbGQ7XG4gICAgY3JlYXRlUmVuZGVyRWZmZWN0KCgpID0+IHNldEF0dHJpYnV0ZShfZWwkMiwgXCJmaWxsXCIsIGZpbGwoKSkpO1xuICAgIHJldHVybiBfZWwkO1xuICB9KSgpO1xufTtcbmNvbnN0IF90bXBsJCRqID0gLyogQF9fUFVSRV9fICovIHRlbXBsYXRlJDEoYDxzdmcgeG1sbnM9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiIHdpZHRoPVwiMTZcIiBoZWlnaHQ9XCIxNlwiIHZpZXdCb3g9XCIwIDAgMTYgMTZcIiBmaWxsPVwibm9uZVwiPjxwYXRoIGZpbGwtcnVsZT1cImV2ZW5vZGRcIiBjbGlwLXJ1bGU9XCJldmVub2RkXCIgZD1cIk0yLjUgNC44QzIuNSAzLjExOTg0IDIuNSAyLjI3OTc2IDIuODI2OTggMS42MzgwM0MzLjExNDYgMS4wNzM1NCAzLjU3MzU0IDAuNjE0NjAxIDQuMTM4MDMgMC4zMjY5OEM0Ljc3OTc2IDAgNS42MTk4NCAwIDcuMyAwSDguN0MxMC4zODAyIDAgMTEuMjIwMiAwIDExLjg2MiAwLjMyNjk4QzEyLjQyNjUgMC42MTQ2MDEgMTIuODg1NCAxLjA3MzU0IDEzLjE3MyAxLjYzODAzQzEzLjUgMi4yNzk3NiAxMy41IDMuMTE5ODQgMTMuNSA0LjhWMTEuMkMxMy41IDEyLjg4MDIgMTMuNSAxMy43MjAyIDEzLjE3MyAxNC4zNjJDMTIuODg1NCAxNC45MjY1IDEyLjQyNjUgMTUuMzg1NCAxMS44NjIgMTUuNjczQzExLjIyMDIgMTYgMTAuMzgwMiAxNiA4LjcgMTZINy4zQzUuNjE5ODQgMTYgNC43Nzk3NiAxNiA0LjEzODAzIDE1LjY3M0MzLjU3MzU0IDE1LjM4NTQgMy4xMTQ2IDE0LjkyNjUgMi44MjY5OCAxNC4zNjJDMi41IDEzLjcyMDIgMi41IDEyLjg4MDIgMi41IDExLjJWNC44Wk00IDMuOUM0IDMuMDU5OTIgNCAyLjYzOTg4IDQuMTYzNDkgMi4zMTkwMUM0LjMwNzMgMi4wMzY3NyA0LjUzNjc3IDEuODA3MyA0LjgxOTAxIDEuNjYzNDlDNS4xMzk4OCAxLjUgNS41NTk5MiAxLjUgNi40IDEuNUg5LjZDMTAuNDQwMSAxLjUgMTAuODYwMSAxLjUgMTEuMTgxIDEuNjYzNDlDMTEuNDYzMiAxLjgwNzMgMTEuNjkyNyAyLjAzNjc3IDExLjgzNjUgMi4zMTkwMUMxMiAyLjYzOTg4IDEyIDMuMDU5OTIgMTIgMy45VjEyLjFDMTIgMTIuOTQwMSAxMiAxMy4zNjAxIDExLjgzNjUgMTMuNjgxQzExLjY5MjcgMTMuOTYzMiAxMS40NjMyIDE0LjE5MjcgMTEuMTgxIDE0LjMzNjVDMTAuODYwMSAxNC41IDEwLjQ0MDEgMTQuNSA5LjYgMTQuNUg2LjRDNS41NTk5MiAxNC41IDUuMTM5ODggMTQuNSA0LjgxOTAxIDE0LjMzNjVDNC41MzY3NyAxNC4xOTI3IDQuMzA3MyAxMy45NjMyIDQuMTYzNDkgMTMuNjgxQzQgMTMuMzYwMSA0IDEyLjk0MDEgNCAxMi4xVjMuOVpNNyAyLjVDNi41ODU3OSAyLjUgNi4yNSAyLjgzNTc5IDYuMjUgMy4yNUM2LjI1IDMuNjY0MjEgNi41ODU3OSA0IDcgNEg5QzkuNDE0MjEgNCA5Ljc1IDMuNjY0MjEgOS43NSAzLjI1QzkuNzUgMi44MzU3OSA5LjQxNDIxIDIuNSA5IDIuNUg3WlwiPjwvcGF0aD48L3N2Zz5gKTtcbmNvbnN0IE1vYmlsZUljb24gPSAocHJvcHMpID0+IHtcbiAgY29uc3QgdGhlbWUgPSB1c2VUaGVtZSgpO1xuICBjb25zdCBmaWxsID0gKCkgPT4gcHJvcHMuZmlsbCB8fCB0aGVtZS5jb2xvcnMuaWNvbi5wcmltYXJ5O1xuICByZXR1cm4gKCgpID0+IHtcbiAgICBjb25zdCBfZWwkID0gX3RtcGwkJGouY2xvbmVOb2RlKHRydWUpLCBfZWwkMiA9IF9lbCQuZmlyc3RDaGlsZDtcbiAgICBjcmVhdGVSZW5kZXJFZmZlY3QoKCkgPT4gc2V0QXR0cmlidXRlKF9lbCQyLCBcImZpbGxcIiwgZmlsbCgpKSk7XG4gICAgcmV0dXJuIF9lbCQ7XG4gIH0pKCk7XG59O1xuY29uc3QgX3RtcGwkJGkgPSAvKiBAX19QVVJFX18gKi8gdGVtcGxhdGUkMShgPHN2ZyB4bWxucz1cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCIgd2lkdGg9XCIxNlwiIGhlaWdodD1cIjE2XCIgdmlld0JveD1cIjAgMCAxNiAxNlwiIGZpbGw9XCJub25lXCI+PHBhdGggZmlsbC1ydWxlPVwiZXZlbm9kZFwiIGNsaXAtcnVsZT1cImV2ZW5vZGRcIiBkPVwiTTEuNSA2LjhDMS41IDUuMTE5ODQgMS41IDQuMjc5NzYgMS44MjY5OCAzLjYzODAzQzIuMTE0NiAzLjA3MzU0IDIuNTczNTQgMi42MTQ2IDMuMTM4MDMgMi4zMjY5OEMzLjc3OTc2IDIgNC42MTk4NCAyIDYuMyAySDkuN0MxMS4zODAyIDIgMTIuMjIwMiAyIDEyLjg2MiAyLjMyNjk4QzEzLjQyNjUgMi42MTQ2IDEzLjg4NTQgMy4wNzM1NCAxNC4xNzMgMy42MzgwM0MxNC41IDQuMjc5NzYgMTQuNSA1LjExOTg0IDE0LjUgNi44VjExLjVIMTUuMjVDMTUuNjY0MiAxMS41IDE2IDExLjgzNTggMTYgMTIuMjVDMTYgMTIuNjY0MiAxNS42NjQyIDEzIDE1LjI1IDEzSDAuNzVDMC4zMzU3ODYgMTMgMCAxMi42NjQyIDAgMTIuMjVDMCAxMS44MzU4IDAuMzM1Nzg2IDExLjUgMC43NSAxMS41SDEuNVY2LjhaTTMgMTEuNUgxM1Y1LjlDMTMgNS4wNTk5MiAxMyA0LjYzOTg4IDEyLjgzNjUgNC4zMTkwMUMxMi42OTI3IDQuMDM2NzcgMTIuNDYzMiAzLjgwNzMgMTIuMTgxIDMuNjYzNDlDMTEuODYwMSAzLjUgMTEuNDQwMSAzLjUgMTAuNiAzLjVINS40QzQuNTU5OTIgMy41IDQuMTM5ODggMy41IDMuODE5MDEgMy42NjM0OUMzLjUzNjc3IDMuODA3MyAzLjMwNzMgNC4wMzY3NyAzLjE2MzQ5IDQuMzE5MDFDMyA0LjYzOTg4IDMgNS4wNTk5MiAzIDUuOVYxMS41WlwiPjwvcGF0aD48L3N2Zz5gKTtcbmNvbnN0IERlc2t0b3BJY29uID0gKHByb3BzKSA9PiB7XG4gIGNvbnN0IHRoZW1lID0gdXNlVGhlbWUoKTtcbiAgY29uc3QgZmlsbCA9ICgpID0+IHByb3BzLmZpbGwgfHwgdGhlbWUuY29sb3JzLmljb24ucHJpbWFyeTtcbiAgcmV0dXJuICgoKSA9PiB7XG4gICAgY29uc3QgX2VsJCA9IF90bXBsJCRpLmNsb25lTm9kZSh0cnVlKSwgX2VsJDIgPSBfZWwkLmZpcnN0Q2hpbGQ7XG4gICAgY3JlYXRlUmVuZGVyRWZmZWN0KCgpID0+IHNldEF0dHJpYnV0ZShfZWwkMiwgXCJmaWxsXCIsIGZpbGwoKSkpO1xuICAgIHJldHVybiBfZWwkO1xuICB9KSgpO1xufTtcbmNvbnN0IF90bXBsJCRoID0gLyogQF9fUFVSRV9fICovIHRlbXBsYXRlJDEoYDxzdmcgeG1sbnM9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiIHdpZHRoPVwiMTdcIiBoZWlnaHQ9XCIxNlwiIHZpZXdCb3g9XCIwIDAgMTcgMTZcIiBmaWxsPVwibm9uZVwiPjxnIGNsaXAtcGF0aD1cInVybCgjY2xpcDBfMzY3Nl8xNjAzKVwiPjxwYXRoIGZpbGwtcnVsZT1cImV2ZW5vZGRcIiBjbGlwLXJ1bGU9XCJldmVub2RkXCIgZD1cIk0xNS41IDEuMjUwNDlDMTUuNSAwLjgzNjI3NSAxNS4xNjQyIDAuNTAwNDg4IDE0Ljc1IDAuNTAwNDg4QzE0LjMzNTggMC41MDA0ODggMTQgMC44MzYyNzUgMTQgMS4yNTA0OVYzLjY3MDEyQzEyLjcxODcgMi4wNDQ4NyAxMC43MzE4IDEuMDAwNDkgOC41IDEuMDAwNDlDNC42MzQwMSAxLjAwMDQ5IDEuNSA0LjEzNDUgMS41IDguMDAwNDlDMS41IDExLjg2NjUgNC42MzQwMSAxNS4wMDA1IDguNSAxNS4wMDA1QzExLjY4NDQgMTUuMDAwNSAxNC4zNzAzIDEyLjg3NDggMTUuMjE5OSA5Ljk2NjYxQzE1LjMzNjEgOS41NjkwMiAxNS4xMDc5IDkuMTUyNTQgMTQuNzEwMyA5LjAzNjM4QzE0LjMxMjcgOC45MjAyMyAxMy44OTYyIDkuMTQ4MzggMTMuNzgwMSA5LjU0NTk3QzEzLjExMjMgMTEuODMxOSAxMSAxMy41MDA1IDguNSAxMy41MDA1QzUuNDYyNDMgMTMuNTAwNSAzIDExLjAzODEgMyA4LjAwMDQ5QzMgNC45NjI5MiA1LjQ2MjQzIDIuNTAwNDkgOC41IDIuNTAwNDlDMTAuMzIxIDIuNTAwNDkgMTEuOTM2MyAzLjM4NTUgMTIuOTM3NyA0Ljc1MDQ5SDEwLjVDMTAuMDg1OCA0Ljc1MDQ5IDkuNzUgNS4wODYyNyA5Ljc1IDUuNTAwNDlDOS43NSA1LjkxNDcgMTAuMDg1OCA2LjI1MDQ5IDEwLjUgNi4yNTA0OUgxNC43NUMxNS4xNjQyIDYuMjUwNDkgMTUuNSA1LjkxNDcgMTUuNSA1LjUwMDQ5VjEuMjUwNDlaXCI+PC9wYXRoPjwvZz48ZGVmcz48Y2xpcFBhdGggaWQ9XCJjbGlwMF8zNjc2XzE2MDNcIj48cmVjdCB3aWR0aD1cIjE2XCIgaGVpZ2h0PVwiMTZcIiBmaWxsPVwid2hpdGVcIiB0cmFuc2Zvcm09XCJ0cmFuc2xhdGUoMC41IDAuMDAwNDg4MjgxKVwiPjwvcmVjdD48L2NsaXBQYXRoPjwvZGVmcz48L3N2Zz5gKTtcbmNvbnN0IFJldHJ5SWNvbiA9IChwcm9wcykgPT4ge1xuICBjb25zdCB0aGVtZSA9IHVzZVRoZW1lKCk7XG4gIGNvbnN0IGZpbGwgPSAoKSA9PiBwcm9wcy5maWxsIHx8IHRoZW1lLmNvbG9ycy5hY2NlbnQ7XG4gIHJldHVybiAoKCkgPT4ge1xuICAgIGNvbnN0IF9lbCQgPSBfdG1wbCQkaC5jbG9uZU5vZGUodHJ1ZSksIF9lbCQyID0gX2VsJC5maXJzdENoaWxkLCBfZWwkMyA9IF9lbCQyLmZpcnN0Q2hpbGQ7XG4gICAgY3JlYXRlUmVuZGVyRWZmZWN0KCgpID0+IHNldEF0dHJpYnV0ZShfZWwkMywgXCJmaWxsXCIsIGZpbGwoKSkpO1xuICAgIHJldHVybiBfZWwkO1xuICB9KSgpO1xufTtcbmNvbnN0IF90bXBsJCRnID0gLyogQF9fUFVSRV9fICovIHRlbXBsYXRlJDEoYDxzdmcgeG1sbnM9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiIHdpZHRoPVwiMTZcIiBoZWlnaHQ9XCIxNlwiIHZpZXdCb3g9XCIwIDAgMTYgMTZcIiBmaWxsPVwibm9uZVwiPjxwYXRoIGZpbGwtcnVsZT1cImV2ZW5vZGRcIiBjbGlwLXJ1bGU9XCJldmVub2RkXCIgZD1cIk0xMyA0LjA2MTE5VjYuNzUwNTNDMTMgNy4xNjQ3NCAxMy4zMzU4IDcuNTAwNTMgMTMuNzUgNy41MDA1M0MxNC4xNjQyIDcuNTAwNTMgMTQuNSA3LjE2NDc0IDE0LjUgNi43NTA1M1YyLjc1MDUzTDE0LjUgMi43MjgwN0MxNC41MDAxIDIuNjMxOTEgMTQuNTAwMyAyLjQ5NjI3IDE0LjQ4NDIgMi4zNzYyN0MxNC40NjM4IDIuMjI1MDMgMTQuNDA2MyAxLjk5MjYxIDE0LjIwNzEgMS43OTM0MkMxNC4wMDc5IDEuNTk0MjMgMTMuNzc1NSAxLjUzNjcgMTMuNjI0MyAxLjUxNjM3QzEzLjUwNDMgMS41MDAyMyAxMy4zNjg2IDEuNTAwMzkgMTMuMjcyNSAxLjUwMDUxTDEzLjI1IDEuNTAwNTNIOS4yNUM4LjgzNTc5IDEuNTAwNTMgOC41IDEuODM2MzEgOC41IDIuMjUwNTNDOC41IDIuNjY0NzQgOC44MzU3OSAzLjAwMDUzIDkuMjUgMy4wMDA1M0gxMS45MzkzTDcuMjE5NjcgNy43MjAyQzYuOTI2NzggOC4wMTMwOSA2LjkyNjc4IDguNDg3OTYgNy4yMTk2NyA4Ljc4MDg2QzcuNTEyNTYgOS4wNzM3NSA3Ljk4NzQ0IDkuMDczNzUgOC4yODAzMyA4Ljc4MDg2TDEzIDQuMDYxMTlaTTUuODUgMS41MDA1M0g1LjgxOTAzSDUuODE4OTlDNS4yMTUyOCAxLjUwMDUyIDQuNzE3MDIgMS41MDA1MSA0LjMxMTEzIDEuNTMzNjdDMy44ODk1NiAxLjU2ODEyIDMuNTAyMDMgMS42NDIwNCAzLjEzODAzIDEuODI3NTFDMi41NzM1NCAyLjExNTEzIDIuMTE0NiAyLjU3NDA3IDEuODI2OTggMy4xMzg1NkMxLjY0MTUxIDMuNTAyNTYgMS41Njc1OSAzLjg5MDA5IDEuNTMzMTUgNC4zMTE2NkMxLjQ5OTk4IDQuNzE3NTUgMS40OTk5OSA1LjIxNTgxIDEuNSA1LjgxOTUzVjUuODE5NTVWNS44NTA1M1YxMC4xNTA1VjEwLjE4MTVWMTAuMTgxNUMxLjQ5OTk5IDEwLjc4NTIgMS40OTk5OCAxMS4yODM1IDEuNTMzMTUgMTEuNjg5NEMxLjU2NzU5IDEyLjExMSAxLjY0MTUxIDEyLjQ5ODUgMS44MjY5OCAxMi44NjI1QzIuMTE0NiAxMy40MjcgMi41NzM1NCAxMy44ODU5IDMuMTM4MDMgMTQuMTczNUMzLjUwMjAzIDE0LjM1OSAzLjg4OTU2IDE0LjQzMjkgNC4zMTExMyAxNC40Njc0QzQuNzE3MDIgMTQuNTAwNSA1LjIxNTI3IDE0LjUwMDUgNS44MTg5NyAxNC41MDA1SDUuODE5MDFINS44NUgxMC4xNUgxMC4xODFIMTAuMTgxQzEwLjc4NDcgMTQuNTAwNSAxMS4yODMgMTQuNTAwNSAxMS42ODg5IDE0LjQ2NzRDMTIuMTEwNCAxNC40MzI5IDEyLjQ5OCAxNC4zNTkgMTIuODYyIDE0LjE3MzVDMTMuNDI2NSAxMy44ODU5IDEzLjg4NTQgMTMuNDI3IDE0LjE3MyAxMi44NjI1QzE0LjM1ODUgMTIuNDk4NSAxNC40MzI0IDEyLjExMSAxNC40NjY5IDExLjY4OTRDMTQuNSAxMS4yODM1IDE0LjUgMTAuNzg1MyAxNC41IDEwLjE4MTZWMTAuMTgxNVYxMC4xNTA1VjkuNzUwNTNDMTQuNSA5LjMzNjMxIDE0LjE2NDIgOS4wMDA1MyAxMy43NSA5LjAwMDUzQzEzLjMzNTggOS4wMDA1MyAxMyA5LjMzNjMxIDEzIDkuNzUwNTNWMTAuMTUwNUMxMyAxMC43OTMgMTIuOTk5NCAxMS4yMjk3IDEyLjk3MTggMTEuNTY3MkMxMi45NDUgMTEuODk2MSAxMi44OTYzIDEyLjA2NDIgMTIuODM2NSAxMi4xODE1QzEyLjY5MjcgMTIuNDYzOCAxMi40NjMyIDEyLjY5MzIgMTIuMTgxIDEyLjgzN0MxMi4wNjM3IDEyLjg5NjggMTEuODk1NSAxMi45NDU1IDExLjU2NjcgMTIuOTcyNEMxMS4yMjkyIDEyLjk5OTkgMTAuNzkyNCAxMy4wMDA1IDEwLjE1IDEzLjAwMDVINS44NUM1LjIwNzU3IDEzLjAwMDUgNC43NzA4NSAxMi45OTk5IDQuNDMzMjggMTIuOTcyNEM0LjEwNDQ3IDEyLjk0NTUgMy45MzYzMiAxMi44OTY4IDMuODE5MDIgMTIuODM3QzMuNTM2NzcgMTIuNjkzMiAzLjMwNzMgMTIuNDYzOCAzLjE2MzQ5IDEyLjE4MTVDMy4xMDM3MiAxMi4wNjQyIDMuMDU1MDMgMTEuODk2MSAzLjAyODE2IDExLjU2NzJDMy4wMDA1OCAxMS4yMjk3IDMgMTAuNzkzIDMgMTAuMTUwNVY1Ljg1MDUzQzMgNS4yMDgwOSAzLjAwMDU4IDQuNzcxMzcgMy4wMjgxNiA0LjQzMzgxQzMuMDU1MDMgNC4xMDQ5OSAzLjEwMzcyIDMuOTM2ODQgMy4xNjM0OSAzLjgxOTU0QzMuMzA3MyAzLjUzNzMgMy41MzY3NyAzLjMwNzgzIDMuODE5MDIgMy4xNjQwMkMzLjkzNjMyIDMuMTA0MjUgNC4xMDQ0NyAzLjA1NTU2IDQuNDMzMjggMy4wMjg2OUM0Ljc3MDg1IDMuMDAxMTEgNS4yMDc1NyAzLjAwMDUzIDUuODUgMy4wMDA1M0g2LjI1QzYuNjY0MjIgMy4wMDA1MyA3IDIuNjY0NzQgNyAyLjI1MDUzQzcgMS44MzYzMSA2LjY2NDIyIDEuNTAwNTMgNi4yNSAxLjUwMDUzSDUuODVaXCI+PC9wYXRoPjwvc3ZnPmApO1xuY29uc3QgTGlua0ljb24gPSAocHJvcHMpID0+IHtcbiAgY29uc3QgdGhlbWUgPSB1c2VUaGVtZSgpO1xuICBjb25zdCBmaWxsID0gKCkgPT4gcHJvcHMuZmlsbCB8fCB0aGVtZS5jb2xvcnMuYWNjZW50O1xuICByZXR1cm4gKCgpID0+IHtcbiAgICBjb25zdCBfZWwkID0gX3RtcGwkJGcuY2xvbmVOb2RlKHRydWUpLCBfZWwkMiA9IF9lbCQuZmlyc3RDaGlsZDtcbiAgICBjcmVhdGVSZW5kZXJFZmZlY3QoKCkgPT4gc2V0QXR0cmlidXRlKF9lbCQyLCBcImZpbGxcIiwgZmlsbCgpKSk7XG4gICAgcmV0dXJuIF9lbCQ7XG4gIH0pKCk7XG59O1xuY29uc3QgX3RtcGwkJGYgPSAvKiBAX19QVVJFX18gKi8gdGVtcGxhdGUkMShgPHN2ZyB4bWxucz1cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCIgd2lkdGg9XCIxN1wiIGhlaWdodD1cIjE2XCIgdmlld0JveD1cIjAgMCAxNyAxNlwiIGZpbGw9XCJub25lXCI+PGcgY2xpcC1wYXRoPVwidXJsKCNjbGlwMF8zNjc2XzEyNzQpXCI+PHBhdGggZmlsbC1ydWxlPVwiZXZlbm9kZFwiIGNsaXAtcnVsZT1cImV2ZW5vZGRcIiBkPVwiTTEuODI2OTggMi42MzkwMUMxLjUgMy4yODA3NCAxLjUgNC4xMjA4MiAxLjUgNS44MDA5OFY4LjgwMDk4VjkuMDAwOThWMTAuMjAxQzEuNSAxMS44ODExIDEuNSAxMi43MjEyIDEuODI2OTggMTMuMzYyOUMyLjExNDYgMTMuOTI3NCAyLjU3MzU0IDE0LjM4NjQgMy4xMzgwMyAxNC42NzRDMy43Nzk3NiAxNS4wMDEgNC42MTk4NCAxNS4wMDEgNi4zIDE1LjAwMUgxMS43QzEzLjM4MDIgMTUuMDAxIDE0LjIyMDIgMTUuMDAxIDE0Ljg2MiAxNC42NzRDMTUuNDI2NSAxNC4zODY0IDE1Ljg4NTQgMTMuOTI3NCAxNi4xNzMgMTMuMzYyOUMxNi41IDEyLjcyMTIgMTYuNSAxMS44ODExIDE2LjUgMTAuMjAxVjguODAwOThDMTYuNSA3LjEyMDgyIDE2LjUgNi4yODA3NCAxNi4xNzMgNS42MzkwMUMxNS44ODU0IDUuMDc0NTIgMTUuNDI2NSA0LjYxNTU4IDE0Ljg2MiA0LjMyNzk2QzE0Ljc0MyA0LjI2NzMzIDE0LjYxNzIgNC4yMTc5NSAxNC40ODA1IDQuMTc3NzJDMTQuNDUwMSAzLjQ5NDQ5IDE0LjM3MjIgMy4wMjk5NCAxNC4xNzMgMi42MzkwMUMxMy44ODU0IDIuMDc0NTIgMTMuNDI2NSAxLjYxNTU4IDEyLjg2MiAxLjMyNzk2QzEyLjIyMDIgMS4wMDA5OCAxMS4zODAyIDEuMDAwOTggOS43IDEuMDAwOThINi4zQzQuNjE5ODQgMS4wMDA5OCAzLjc3OTc2IDEuMDAwOTggMy4xMzgwMyAxLjMyNzk2QzIuNTczNTQgMS42MTU1OCAyLjExNDYgMi4wNzQ1MiAxLjgyNjk4IDIuNjM5MDFaTTEyLjk4NjEgNC4wMDk0MkMxMi45Njg0IDMuNzEwOCAxMi45MjgxIDMuNDk5ODIgMTIuODM2NSAzLjMxOTk5QzEyLjY5MjcgMy4wMzc3NSAxMi40NjMyIDIuODA4MjggMTIuMTgxIDIuNjY0NDdDMTEuODYwMSAyLjUwMDk4IDExLjQ0MDEgMi41MDA5OCAxMC42IDIuNTAwOThINS40QzQuNTU5OTIgMi41MDA5OCA0LjEzOTg4IDIuNTAwOTggMy44MTkwMSAyLjY2NDQ3QzMuNTM2NzcgMi44MDgyOCAzLjMwNzMgMy4wMzc3NSAzLjE2MzQ5IDMuMzE5OTlDMy4wMzYxNSAzLjU2OTkxIDMuMDA3OTkgMy44OCAzLjAwMTc3IDQuNDAxODhDMy4wNDY0NiA0LjM3NjEyIDMuMDkxODkgNC4zNTE0NiAzLjEzODAzIDQuMzI3OTZDMy43Nzk3NiA0LjAwMDk4IDQuNjE5ODQgNC4wMDA5OCA2LjMgNC4wMDA5OEgxMS43QzEyLjE5NjYgNC4wMDA5OCAxMi42MTk3IDQuMDAwOTggMTIuOTg2MSA0LjAwOTQyWk0zIDcuOTAwOThWOC4xMDA5OEMzIDguNDc0NjggMyA4Ljc2NTI3IDMuMDE0MzkgOS4wMDA5OEgzVjExLjEwMUMzIDExLjk0MTEgMyAxMi4zNjExIDMuMTYzNDkgMTIuNjgyQzMuMzA3MyAxMi45NjQyIDMuNTM2NzcgMTMuMTkzNyAzLjgxOTAxIDEzLjMzNzVDNC4xMzk4OCAxMy41MDEgNC41NTk5MiAxMy41MDEgNS40IDEzLjUwMUgxMi42QzEzLjQ0MDEgMTMuNTAxIDEzLjg2MDEgMTMuNTAxIDE0LjE4MSAxMy4zMzc1QzE0LjQ2MzIgMTMuMTkzNyAxNC42OTI3IDEyLjk2NDIgMTQuODM2NSAxMi42ODJDMTUgMTIuMzYxMSAxNSAxMS45NDExIDE1IDExLjEwMVY3LjkwMDk4QzE1IDcuMDYwOSAxNSA2LjY0MDg2IDE0LjgzNjUgNi4zMTk5OUMxNC42OTI3IDYuMDM3NzUgMTQuNDYzMiA1LjgwODI4IDE0LjE4MSA1LjY2NDQ3QzEzLjg2MDEgNS41MDA5OCAxMy40NDAxIDUuNTAwOTggMTIuNiA1LjUwMDk4SDUuNEM0LjU1OTkyIDUuNTAwOTggNC4xMzk4OCA1LjUwMDk4IDMuODE5MDEgNS42NjQ0N0MzLjUzNjc3IDUuODA4MjggMy4zMDczIDYuMDM3NzUgMy4xNjM0OSA2LjMxOTk5QzMgNi42NDA4NiAzIDcuMDYwOSAzIDcuOTAwOThaTTEwLjUgOS43NTA5OEMxMC41IDkuMzM2NzYgMTAuODM1OCA5LjAwMDk4IDExLjI1IDkuMDAwOThIMTIuNzVDMTMuMTY0MiA5LjAwMDk4IDEzLjUgOS4zMzY3NiAxMy41IDkuNzUwOThDMTMuNSAxMC4xNjUyIDEzLjE2NDIgMTAuNTAxIDEyLjc1IDEwLjUwMUgxMS4yNUMxMC44MzU4IDEwLjUwMSAxMC41IDEwLjE2NTIgMTAuNSA5Ljc1MDk4WlwiPjwvcGF0aD48L2c+PGRlZnM+PGNsaXBQYXRoIGlkPVwiY2xpcDBfMzY3Nl8xMjc0XCI+PHJlY3Qgd2lkdGg9XCIxNlwiIGhlaWdodD1cIjE2XCIgZmlsbD1cIndoaXRlXCIgdHJhbnNmb3JtPVwidHJhbnNsYXRlKDAuNSAwLjAwMDk3NjU2MilcIj48L3JlY3Q+PC9jbGlwUGF0aD48L2RlZnM+PC9zdmc+YCk7XG5jb25zdCBXYWxsZXRJY29uID0gKHByb3BzKSA9PiB7XG4gIGNvbnN0IHRoZW1lID0gdXNlVGhlbWUoKTtcbiAgY29uc3QgZmlsbCA9ICgpID0+IHByb3BzLmZpbGwgfHwgdGhlbWUuY29sb3JzLmFjY2VudDtcbiAgcmV0dXJuICgoKSA9PiB7XG4gICAgY29uc3QgX2VsJCA9IF90bXBsJCRmLmNsb25lTm9kZSh0cnVlKSwgX2VsJDIgPSBfZWwkLmZpcnN0Q2hpbGQsIF9lbCQzID0gX2VsJDIuZmlyc3RDaGlsZDtcbiAgICBjcmVhdGVSZW5kZXJFZmZlY3QoKCkgPT4gc2V0QXR0cmlidXRlKF9lbCQzLCBcImZpbGxcIiwgZmlsbCgpKSk7XG4gICAgcmV0dXJuIF9lbCQ7XG4gIH0pKCk7XG59O1xuY29uc3QgX3RtcGwkJGUgPSAvKiBAX19QVVJFX18gKi8gdGVtcGxhdGUkMShgPHN2ZyB4bWxucz1cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCIgd2lkdGg9XCI0OFwiIGhlaWdodD1cIjQ4XCIgdmlld0JveD1cIjAgMCA0OCA0OFwiIGZpbGw9XCJub25lXCI+PHBhdGggZmlsbC1ydWxlPVwiZXZlbm9kZFwiIGNsaXAtcnVsZT1cImV2ZW5vZGRcIiBkPVwiTTM5LjYzMTkgMTYuODcxOUMzOC4zMjEyIDE2LjIwNDEgMzYuNzAwMiAxNi4wNDc4IDM0IDE2LjAxMTJWMTFDMzQgNS40NzcxNSAyOS41MjI4IDEgMjQgMUMxOC40NzcyIDEgMTQgNS40NzcxNSAxNCAxMVYxNi4wMTEyQzExLjI5OTggMTYuMDQ3OCA5LjY3ODggMTYuMjA0MSA4LjM2ODA4IDE2Ljg3MTlDNi44NjI3OCAxNy42Mzg5IDUuNjM4OTMgMTguODYyOCA0Ljg3MTk1IDIwLjM2ODFDNCAyMi4wNzk0IDQgMjQuMzE5NiA0IDI4LjhWMzIuMkM0IDM2LjY4MDQgNCAzOC45MjA2IDQuODcxOTUgNDAuNjMxOUM1LjYzODkzIDQyLjEzNzIgNi44NjI3OCA0My4zNjExIDguMzY4MDggNDQuMTI4MUMxMC4wNzk0IDQ1IDEyLjMxOTYgNDUgMTYuOCA0NUgzMS4yQzM1LjY4MDQgNDUgMzcuOTIwNiA0NSAzOS42MzE5IDQ0LjEyODFDNDEuMTM3MiA0My4zNjExIDQyLjM2MTEgNDIuMTM3MiA0My4xMjgxIDQwLjYzMTlDNDQgMzguOTIwNiA0NCAzNi42ODA0IDQ0IDMyLjJWMjguOEM0NCAyNC4zMTk2IDQ0IDIyLjA3OTQgNDMuMTI4MSAyMC4zNjgxQzQyLjM2MTEgMTguODYyOCA0MS4xMzcyIDE3LjYzODkgMzkuNjMxOSAxNi44NzE5Wk0zMSAxMVYxNkgxN1YxMUMxNyA3LjEzNDAxIDIwLjEzNCA0IDI0IDRDMjcuODY2IDQgMzEgNy4xMzQwMSAzMSAxMVpNNy41NDQ5NyAyMS43M0M3IDIyLjc5OTYgNyAyNC4xOTk3IDcgMjdWMzRDNyAzNi44MDAzIDcgMzguMjAwNCA3LjU0NDk3IDM5LjI3QzguMDI0MzMgNDAuMjEwOCA4Ljc4OTI0IDQwLjk3NTcgOS43MzAwNSA0MS40NTVDMTAuNzk5NiA0MiAxMi4xOTk3IDQyIDE1IDQySDMzQzM1LjgwMDMgNDIgMzcuMjAwNCA0MiAzOC4yNyA0MS40NTVDMzkuMjEwOCA0MC45NzU3IDM5Ljk3NTcgNDAuMjEwOCA0MC40NTUgMzkuMjdDNDEgMzguMjAwNCA0MSAzNi44MDAzIDQxIDM0VjI3QzQxIDI0LjE5OTcgNDEgMjIuNzk5NiA0MC40NTUgMjEuNzNDMzkuOTc1NyAyMC43ODkyIDM5LjIxMDggMjAuMDI0MyAzOC4yNyAxOS41NDVDMzcuMjAwNCAxOSAzNS44MDAzIDE5IDMzIDE5SDE1QzEyLjE5OTcgMTkgMTAuNzk5NiAxOSA5LjczMDA1IDE5LjU0NUM4Ljc4OTI0IDIwLjAyNDMgOC4wMjQzMyAyMC43ODkyIDcuNTQ0OTcgMjEuNzNaTTI0IDI0QzIzLjE3MTYgMjQgMjIuNSAyNC42NzE2IDIyLjUgMjUuNVYyOS41QzIyLjUgMzAuMzI4NCAyMy4xNzE2IDMxIDI0IDMxQzI0LjgyODQgMzEgMjUuNSAzMC4zMjg0IDI1LjUgMjkuNVYyNS41QzI1LjUgMjQuNjcxNiAyNC44Mjg0IDI0IDI0IDI0WlwiPjwvcGF0aD48L3N2Zz5gKTtcbmNvbnN0IFNlY3VyaXR5SWNvbiA9IChwcm9wcykgPT4ge1xuICBjb25zdCB0aGVtZSA9IHVzZVRoZW1lKCk7XG4gIGNvbnN0IGZpbGwgPSAoKSA9PiBwcm9wcy5maWxsIHx8IHRoZW1lLmNvbG9ycy5pY29uLnNlY29uZGFyeTtcbiAgcmV0dXJuICgoKSA9PiB7XG4gICAgY29uc3QgX2VsJCA9IF90bXBsJCRlLmNsb25lTm9kZSh0cnVlKSwgX2VsJDIgPSBfZWwkLmZpcnN0Q2hpbGQ7XG4gICAgY3JlYXRlUmVuZGVyRWZmZWN0KChfcCQpID0+IHtcbiAgICAgIGNvbnN0IF92JCA9IHByb3BzLmNsYXNzLCBfdiQyID0gZmlsbCgpO1xuICAgICAgX3YkICE9PSBfcCQuX3YkICYmIHNldEF0dHJpYnV0ZShfZWwkLCBcImNsYXNzXCIsIF9wJC5fdiQgPSBfdiQpO1xuICAgICAgX3YkMiAhPT0gX3AkLl92JDIgJiYgc2V0QXR0cmlidXRlKF9lbCQyLCBcImZpbGxcIiwgX3AkLl92JDIgPSBfdiQyKTtcbiAgICAgIHJldHVybiBfcCQ7XG4gICAgfSwge1xuICAgICAgX3YkOiB2b2lkIDAsXG4gICAgICBfdiQyOiB2b2lkIDBcbiAgICB9KTtcbiAgICByZXR1cm4gX2VsJDtcbiAgfSkoKTtcbn07XG5jb25zdCBfdG1wbCQkZCA9IC8qIEBfX1BVUkVfXyAqLyB0ZW1wbGF0ZSQxKGA8c3ZnIHhtbG5zPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIiB3aWR0aD1cIjQ4XCIgaGVpZ2h0PVwiNDhcIiB2aWV3Qm94PVwiMCAwIDQ4IDQ4XCIgZmlsbD1cIm5vbmVcIj48cGF0aCBmaWxsLXJ1bGU9XCJldmVub2RkXCIgY2xpcC1ydWxlPVwiZXZlbm9kZFwiIGQ9XCJNMzcuNDg1IDM3LjM4NDlDNDAuODk0IDMzLjk1MDYgNDMgMjkuMjIxMiA0MyAyNEM0MyAxMy41MDY2IDM0LjQ5MzQgNSAyNCA1QzEzLjUwNjYgNSA1IDEzLjUwNjYgNSAyNEM1IDI5LjIyMTMgNy4xMDYxIDMzLjk1MDcgMTAuNTE1MSAzNy4zODVDMTMuMzU4MyAzMi45NDM4IDE4LjMzNTQgMzAgMjQuMDAwMSAzMEMyOS42NjQ3IDMwIDM0LjY0MTggMzIuOTQzNyAzNy40ODUgMzcuMzg0OVpNMzUuMTgwOSAzOS4zNjM1QzMyLjkxNDMgMzUuNTUzMiAyOC43NTU0IDMzIDI0LjAwMDEgMzNDMTkuMjQ0OCAzMyAxNS4wODU4IDM1LjU1MzMgMTIuODE5MyAzOS4zNjM2QzE1Ljk1NjQgNDEuNjUwNiAxOS44MjA2IDQzIDI0IDQzQzI4LjE3OTUgNDMgMzIuMDQzNyA0MS42NTA1IDM1LjE4MDkgMzkuMzYzNVpNMjQgNDZDMzYuMTUwMyA0NiA0NiAzNi4xNTAzIDQ2IDI0QzQ2IDExLjg0OTcgMzYuMTUwMyAyIDI0IDJDMTEuODQ5NyAyIDIgMTEuODQ5NyAyIDI0QzIgMzYuMTUwMyAxMS44NDk3IDQ2IDI0IDQ2Wk0yNCAyNEMyNi43NjE0IDI0IDI5IDIxLjc2MTQgMjkgMTlDMjkgMTYuMjM4NiAyNi43NjE0IDE0IDI0IDE0QzIxLjIzODYgMTQgMTkgMTYuMjM4NiAxOSAxOUMxOSAyMS43NjE0IDIxLjIzODYgMjQgMjQgMjRaTTI0IDI3QzI4LjQxODMgMjcgMzIgMjMuNDE4MyAzMiAxOUMzMiAxNC41ODE3IDI4LjQxODMgMTEgMjQgMTFDMTkuNTgxNyAxMSAxNiAxNC41ODE3IDE2IDE5QzE2IDIzLjQxODMgMTkuNTgxNyAyNyAyNCAyN1pcIj48L3BhdGg+PC9zdmc+YCk7XG5jb25zdCBQZXJzb25hbGl0eUljb24gPSAocHJvcHMpID0+IHtcbiAgY29uc3QgdGhlbWUgPSB1c2VUaGVtZSgpO1xuICBjb25zdCBmaWxsID0gKCkgPT4gcHJvcHMuZmlsbCB8fCB0aGVtZS5jb2xvcnMuaWNvbi5zZWNvbmRhcnk7XG4gIHJldHVybiAoKCkgPT4ge1xuICAgIGNvbnN0IF9lbCQgPSBfdG1wbCQkZC5jbG9uZU5vZGUodHJ1ZSksIF9lbCQyID0gX2VsJC5maXJzdENoaWxkO1xuICAgIGNyZWF0ZVJlbmRlckVmZmVjdCgoX3AkKSA9PiB7XG4gICAgICBjb25zdCBfdiQgPSBwcm9wcy5jbGFzcywgX3YkMiA9IGZpbGwoKTtcbiAgICAgIF92JCAhPT0gX3AkLl92JCAmJiBzZXRBdHRyaWJ1dGUoX2VsJCwgXCJjbGFzc1wiLCBfcCQuX3YkID0gX3YkKTtcbiAgICAgIF92JDIgIT09IF9wJC5fdiQyICYmIHNldEF0dHJpYnV0ZShfZWwkMiwgXCJmaWxsXCIsIF9wJC5fdiQyID0gX3YkMik7XG4gICAgICByZXR1cm4gX3AkO1xuICAgIH0sIHtcbiAgICAgIF92JDogdm9pZCAwLFxuICAgICAgX3YkMjogdm9pZCAwXG4gICAgfSk7XG4gICAgcmV0dXJuIF9lbCQ7XG4gIH0pKCk7XG59O1xuY29uc3QgX3RtcGwkJGMgPSAvKiBAX19QVVJFX18gKi8gdGVtcGxhdGUkMShgPHN2ZyB4bWxucz1cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCIgd2lkdGg9XCI0OFwiIGhlaWdodD1cIjQ4XCIgdmlld0JveD1cIjAgMCA0OCA0OFwiIGZpbGw9XCJub25lXCI+PHBhdGggZmlsbC1ydWxlPVwiZXZlbm9kZFwiIGNsaXAtcnVsZT1cImV2ZW5vZGRcIiBkPVwiTTM0LjU2MDcgNC40MzkzNEMzMy45NzQ5IDMuODUzNTUgMzMuMDI1MSAzLjg1MzU1IDMyLjQzOTMgNC40MzkzNEMzMS44NTM2IDUuMDI1MTMgMzEuODUzNiA1Ljk3NDg3IDMyLjQzOTMgNi41NjA2NkwzNy44Nzg3IDEySDEwLjVDOS42NzE1NyAxMiA5IDEyLjY3MTYgOSAxMy41QzkgMTQuMzI4NCA5LjY3MTU3IDE1IDEwLjUgMTVIMzcuODc4N0wzMi40MzkzIDIwLjQzOTNDMzEuODUzNiAyMS4wMjUxIDMxLjg1MzYgMjEuOTc0OSAzMi40MzkzIDIyLjU2MDdDMzMuMDI1MSAyMy4xNDY0IDMzLjk3NDkgMjMuMTQ2NCAzNC41NjA3IDIyLjU2MDdMNDIuNTYwNyAxNC41NjA3QzQzLjE0NjQgMTMuOTc0OSA0My4xNDY0IDEzLjAyNTEgNDIuNTYwNyAxMi40MzkzTDM0LjU2MDcgNC40MzkzNFpNMTMuNDM5MyAyNS40MzkzQzE0LjAyNTEgMjQuODUzNiAxNC45NzQ5IDI0Ljg1MzYgMTUuNTYwNyAyNS40MzkzQzE2LjE0NjQgMjYuMDI1MSAxNi4xNDY0IDI2Ljk3NDkgMTUuNTYwNyAyNy41NjA3TDEwLjEyMTMgMzNIMzcuNUMzOC4zMjg0IDMzIDM5IDMzLjY3MTYgMzkgMzQuNUMzOSAzNS4zMjg0IDM4LjMyODQgMzYgMzcuNSAzNkgxMC4xMjEzTDE1LjU2MDcgNDEuNDM5M0MxNi4xNDY0IDQyLjAyNTEgMTYuMTQ2NCA0Mi45NzQ5IDE1LjU2MDcgNDMuNTYwN0MxNC45NzQ5IDQ0LjE0NjQgMTQuMDI1MSA0NC4xNDY0IDEzLjQzOTMgNDMuNTYwN0w1LjQzOTM0IDM1LjU2MDdDNC44NTM1NSAzNC45NzQ5IDQuODUzNTUgMzQuMDI1MSA1LjQzOTM0IDMzLjQzOTNMMTMuNDM5MyAyNS40MzkzWlwiPjwvcGF0aD48L3N2Zz5gKTtcbmNvbnN0IFN3YXBJY29uID0gKHByb3BzKSA9PiB7XG4gIGNvbnN0IHRoZW1lID0gdXNlVGhlbWUoKTtcbiAgY29uc3QgZmlsbCA9ICgpID0+IHByb3BzLmZpbGwgfHwgdGhlbWUuY29sb3JzLmljb24uc2Vjb25kYXJ5O1xuICByZXR1cm4gKCgpID0+IHtcbiAgICBjb25zdCBfZWwkID0gX3RtcGwkJGMuY2xvbmVOb2RlKHRydWUpLCBfZWwkMiA9IF9lbCQuZmlyc3RDaGlsZDtcbiAgICBjcmVhdGVSZW5kZXJFZmZlY3QoKF9wJCkgPT4ge1xuICAgICAgY29uc3QgX3YkID0gcHJvcHMuY2xhc3MsIF92JDIgPSBmaWxsKCk7XG4gICAgICBfdiQgIT09IF9wJC5fdiQgJiYgc2V0QXR0cmlidXRlKF9lbCQsIFwiY2xhc3NcIiwgX3AkLl92JCA9IF92JCk7XG4gICAgICBfdiQyICE9PSBfcCQuX3YkMiAmJiBzZXRBdHRyaWJ1dGUoX2VsJDIsIFwiZmlsbFwiLCBfcCQuX3YkMiA9IF92JDIpO1xuICAgICAgcmV0dXJuIF9wJDtcbiAgICB9LCB7XG4gICAgICBfdiQ6IHZvaWQgMCxcbiAgICAgIF92JDI6IHZvaWQgMFxuICAgIH0pO1xuICAgIHJldHVybiBfZWwkO1xuICB9KSgpO1xufTtcbmNvbnN0IF90bXBsJCRiID0gLyogQF9fUFVSRV9fICovIHRlbXBsYXRlJDEoYDxzdmcgeG1sbnM9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiIHdpZHRoPVwiMjhcIiBoZWlnaHQ9XCIyOFwiIHZpZXdCb3g9XCIwIDAgMjggMjhcIiBmaWxsPVwibm9uZVwiPjxwYXRoIGZpbGwtcnVsZT1cImV2ZW5vZGRcIiBjbGlwLXJ1bGU9XCJldmVub2RkXCIgZD1cIk0xLjc1IDEyLjAwMkMxLjc1IDkuMjAxNjkgMS43NSA3LjgwMTU2IDIuMjk0OTcgNi43MzJDMi43NzQzMyA1Ljc5MTE5IDMuNTM5MjQgNS4wMjYyOSA0LjQ4MDA1IDQuNTQ2OTJDNS41NDk2MSA0LjAwMTk1IDYuOTQ5NzQgNC4wMDE5NSA5Ljc1IDQuMDAxOTVIMTcuMjVDMjAuMDUwMyA0LjAwMTk1IDIxLjQ1MDQgNC4wMDE5NSAyMi41MiA0LjU0NjkyQzIzLjQ2MDggNS4wMjYyOSAyNC4yMjU3IDUuNzkxMTkgMjQuNzA1IDYuNzMyQzI0LjgyNTYgNi45Njg2MSAyNC45MTk1IDcuMjIxNCAyNC45OTI2IDcuNTAxOTVIMjEuNUMxOS42Mzc3IDcuNTAxOTUgMTguNzA2NSA3LjUwMTk1IDE3Ljk2MDkgNy43NzMzNEMxNi43MTEgOC4yMjgyOCAxNS43MjYzIDkuMjEyOTEgMTUuMjcxNCAxMC40NjI5QzE1IDExLjIwODUgMTUgMTIuMTM5NiAxNSAxNC4wMDJDMTUgMTUuODY0MyAxNSAxNi43OTU0IDE1LjI3MTQgMTcuNTQxQzE1LjcyNjMgMTguNzkxIDE2LjcxMSAxOS43NzU2IDE3Ljk2MDkgMjAuMjMwNkMxOC43MDY1IDIwLjUwMiAxOS42Mzc3IDIwLjUwMiAyMS41IDIwLjUwMkgyNC45OTI2QzI0LjkxOTUgMjAuNzgyNSAyNC44MjU2IDIxLjAzNTMgMjQuNzA1IDIxLjI3MTlDMjQuMjI1NyAyMi4yMTI3IDIzLjQ2MDggMjIuOTc3NiAyMi41MiAyMy40NTdDMjEuNDUwNCAyNC4wMDIgMjAuMDUwMyAyNC4wMDIgMTcuMjUgMjQuMDAySDkuNzVDNi45NDk3NCAyNC4wMDIgNS41NDk2MSAyNC4wMDIgNC40ODAwNSAyMy40NTdDMy41MzkyNCAyMi45Nzc2IDIuNzc0MzMgMjIuMjEyNyAyLjI5NDk3IDIxLjI3MTlDMS43NSAyMC4yMDIzIDEuNzUgMTguODAyMiAxLjc1IDE2LjAwMlYxMi4wMDJaTTE2LjQ5OTkgMTMuODAyQzE2LjQ5OTkgMTIuMTIxOCAxNi40OTk5IDExLjI4MTcgMTYuODI2OSAxMC42NEMxNy4xMTQ1IDEwLjA3NTUgMTcuNTczNSA5LjYxNjU2IDE4LjEzOCA5LjMyODk0QzE4Ljc3OTcgOS4wMDE5NiAxOS42MTk4IDkuMDAxOTYgMjEuMjk5OSA5LjAwMTk2SDIzLjE5OTlDMjQuODgwMSA5LjAwMTk2IDI1LjcyMDIgOS4wMDE5NiAyNi4zNjE5IDkuMzI4OTRDMjYuOTI2NCA5LjYxNjU2IDI3LjM4NTMgMTAuMDc1NSAyNy42NzMgMTAuNjRDMjcuOTk5OSAxMS4yODE3IDI3Ljk5OTkgMTIuMTIxOCAyNy45OTk5IDEzLjgwMlYxNC4yMDJDMjcuOTk5OSAxNS44ODIxIDI3Ljk5OTkgMTYuNzIyMiAyNy42NzMgMTcuMzYzOUMyNy4zODUzIDE3LjkyODQgMjYuOTI2NCAxOC4zODc0IDI2LjM2MTkgMTguNjc1QzI1LjcyMDIgMTkuMDAyIDI0Ljg4MDEgMTkuMDAyIDIzLjE5OTkgMTkuMDAySDIxLjI5OTlDMTkuNjE5OCAxOS4wMDIgMTguNzc5NyAxOS4wMDIgMTguMTM4IDE4LjY3NUMxNy41NzM1IDE4LjM4NzQgMTcuMTE0NSAxNy45Mjg0IDE2LjgyNjkgMTcuMzYzOUMxNi40OTk5IDE2LjcyMjIgMTYuNDk5OSAxNS44ODIxIDE2LjQ5OTkgMTQuMjAyVjEzLjgwMlpNMjIuNDk5OSAxNC4wMDJDMjIuNDk5OSAxNC45Njg1IDIxLjcxNjQgMTUuNzUyIDIwLjc0OTkgMTUuNzUyQzE5Ljc4MzQgMTUuNzUyIDE4Ljk5OTkgMTQuOTY4NSAxOC45OTk5IDE0LjAwMkMxOC45OTk5IDEzLjAzNTUgMTkuNzgzNCAxMi4yNTIgMjAuNzQ5OSAxMi4yNTJDMjEuNzE2NCAxMi4yNTIgMjIuNDk5OSAxMy4wMzU1IDIyLjQ5OTkgMTQuMDAyWlwiPjwvcGF0aD48L3N2Zz5gKTtcbmNvbnN0IEF0V2FsbGV0SWNvbiA9IChwcm9wcykgPT4ge1xuICBjb25zdCB0aGVtZSA9IHVzZVRoZW1lKCk7XG4gIGNvbnN0IGZpbGwgPSAoKSA9PiBwcm9wcy5maWxsIHx8IHRoZW1lLmNvbG9ycy5jb25zdGFudC53aGl0ZTtcbiAgcmV0dXJuICgoKSA9PiB7XG4gICAgY29uc3QgX2VsJCA9IF90bXBsJCRiLmNsb25lTm9kZSh0cnVlKSwgX2VsJDIgPSBfZWwkLmZpcnN0Q2hpbGQ7XG4gICAgY3JlYXRlUmVuZGVyRWZmZWN0KChfcCQpID0+IHtcbiAgICAgIGNvbnN0IF92JCA9IHByb3BzLmNsYXNzLCBfdiQyID0gZmlsbCgpO1xuICAgICAgX3YkICE9PSBfcCQuX3YkICYmIHNldEF0dHJpYnV0ZShfZWwkLCBcImNsYXNzXCIsIF9wJC5fdiQgPSBfdiQpO1xuICAgICAgX3YkMiAhPT0gX3AkLl92JDIgJiYgc2V0QXR0cmlidXRlKF9lbCQyLCBcImZpbGxcIiwgX3AkLl92JDIgPSBfdiQyKTtcbiAgICAgIHJldHVybiBfcCQ7XG4gICAgfSwge1xuICAgICAgX3YkOiB2b2lkIDAsXG4gICAgICBfdiQyOiB2b2lkIDBcbiAgICB9KTtcbiAgICByZXR1cm4gX2VsJDtcbiAgfSkoKTtcbn07XG5jb25zdCBfdG1wbCQkYSA9IC8qIEBfX1BVUkVfXyAqLyB0ZW1wbGF0ZSQxKGA8c3ZnIHhtbG5zPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIiB3aWR0aD1cIjI4XCIgaGVpZ2h0PVwiMjhcIiB2aWV3Qm94PVwiMCAwIDI4IDI4XCI+PHBhdGggZmlsbC1ydWxlPVwiZXZlbm9kZFwiIGNsaXAtcnVsZT1cImV2ZW5vZGRcIiBkPVwiTTEwLjAwMDEgMTAuMDAwMUMxMC4wMDE2IDguMDIzMzMgMTAuMDI2NyA2Ljk4NzE5IDEwLjQzNiA2LjE4NDA0QzEwLjgxOTUgNS40MzEzOSAxMS40MzE0IDQuODE5NDcgMTIuMTg0IDQuNDM1OTdDMTMuMDM5NyA0IDE0LjE1OTggNCAxNi40IDRIMTcuNkMxOS44NDAyIDQgMjAuOTYwMyA0IDIxLjgxNiA0LjQzNTk3QzIyLjU2ODYgNC44MTk0NyAyMy4xODA1IDUuNDMxMzkgMjMuNTY0IDYuMTg0MDRDMjQgNy4wMzk2OSAyNCA4LjE1OTc5IDI0IDEwLjRWMTEuNkMyNCAxMy44NDAyIDI0IDE0Ljk2MDMgMjMuNTY0IDE1LjgxNkMyMy4xODA1IDE2LjU2ODYgMjIuNTY4NiAxNy4xODA1IDIxLjgxNiAxNy41NjRDMjEuMDEyOCAxNy45NzMzIDE5Ljk3NjcgMTcuOTk4NCAxNy45OTk5IDE3Ljk5OTlDMTcuOTk4NCAxOS45NzY3IDE3Ljk3MzMgMjEuMDEyOCAxNy41NjQgMjEuODE2QzE3LjE4MDUgMjIuNTY4NiAxNi41Njg2IDIzLjE4MDUgMTUuODE2IDIzLjU2NEMxNC45NjAzIDI0IDEzLjg0MDIgMjQgMTEuNiAyNEgxMC40QzguMTU5NzkgMjQgNy4wMzk2OSAyNCA2LjE4NDA0IDIzLjU2NEM1LjQzMTM5IDIzLjE4MDUgNC44MTk0NyAyMi41Njg2IDQuNDM1OTcgMjEuODE2QzQgMjAuOTYwMyA0IDE5Ljg0MDIgNCAxNy42VjE2LjRDNCAxNC4xNTk4IDQgMTMuMDM5NyA0LjQzNTk3IDEyLjE4NEM0LjgxOTQ3IDExLjQzMTQgNS40MzEzOSAxMC44MTk1IDYuMTg0MDQgMTAuNDM2QzYuOTg3MTkgMTAuMDI2NyA4LjAyMzMzIDEwLjAwMTYgMTAuMDAwMSAxMC4wMDAxWk0xMCAxMS41SDkuNUM4LjA5OTg3IDExLjUgNy4zOTk4IDExLjUgNi44NjUwMiAxMS43NzI1QzYuMzk0NjIgMTIuMDEyMiA2LjAxMjE3IDEyLjM5NDYgNS43NzI0OCAxMi44NjVDNS41IDEzLjM5OTggNS41IDE0LjA5OTkgNS41IDE1LjVWMTguNUM1LjUgMTkuOTAwMSA1LjUgMjAuNjAwMiA1Ljc3MjQ4IDIxLjEzNUM2LjAxMjE3IDIxLjYwNTQgNi4zOTQ2MiAyMS45ODc4IDYuODY1MDIgMjIuMjI3NUM3LjM5OTggMjIuNSA4LjA5OTg3IDIyLjUgOS41IDIyLjVIMTIuNUMxMy45MDAxIDIyLjUgMTQuNjAwMiAyMi41IDE1LjEzNSAyMi4yMjc1QzE1LjYwNTQgMjEuOTg3OCAxNS45ODc4IDIxLjYwNTQgMTYuMjI3NSAyMS4xMzVDMTYuNSAyMC42MDAyIDE2LjUgMTkuOTAwMSAxNi41IDE4LjVWMThIMTYuNEMxNC4xNTk4IDE4IDEzLjAzOTcgMTggMTIuMTg0IDE3LjU2NEMxMS40MzE0IDE3LjE4MDUgMTAuODE5NSAxNi41Njg2IDEwLjQzNiAxNS44MTZDMTAgMTQuOTYwMyAxMCAxMy44NDAyIDEwIDExLjZWMTEuNVpNMTEuNSA5LjVDMTEuNSA4LjA5OTg3IDExLjUgNy4zOTk4IDExLjc3MjUgNi44NjUwMkMxMi4wMTIyIDYuMzk0NjIgMTIuMzk0NiA2LjAxMjE3IDEyLjg2NSA1Ljc3MjQ4QzEzLjM5OTggNS41IDE0LjA5OTkgNS41IDE1LjUgNS41SDE4LjVDMTkuOTAwMSA1LjUgMjAuNjAwMiA1LjUgMjEuMTM1IDUuNzcyNDhDMjEuNjA1NCA2LjAxMjE3IDIxLjk4NzggNi4zOTQ2MiAyMi4yMjc1IDYuODY1MDJDMjIuNSA3LjM5OTggMjIuNSA4LjA5OTg3IDIyLjUgOS41VjEyLjVDMjIuNSAxMy45MDAxIDIyLjUgMTQuNjAwMiAyMi4yMjc1IDE1LjEzNUMyMS45ODc4IDE1LjYwNTQgMjEuNjA1NCAxNS45ODc4IDIxLjEzNSAxNi4yMjc1QzIwLjYwMDIgMTYuNSAxOS45MDAxIDE2LjUgMTguNSAxNi41SDE1LjVDMTQuMDk5OSAxNi41IDEzLjM5OTggMTYuNSAxMi44NjUgMTYuMjI3NUMxMi4zOTQ2IDE1Ljk4NzggMTIuMDEyMiAxNS42MDU0IDExLjc3MjUgMTUuMTM1QzExLjUgMTQuNjAwMiAxMS41IDEzLjkwMDEgMTEuNSAxMi41VjkuNVpcIj48L3BhdGg+PC9zdmc+YCk7XG5jb25zdCBDb3B5TGlnaHRJY29uID0gKHByb3BzKSA9PiB7XG4gIGNvbnN0IHRoZW1lID0gdXNlVGhlbWUoKTtcbiAgY29uc3QgZmlsbCA9ICgpID0+IHByb3BzLmZpbGwgfHwgdGhlbWUuY29sb3JzLmljb24uc2Vjb25kYXJ5O1xuICByZXR1cm4gKCgpID0+IHtcbiAgICBjb25zdCBfZWwkID0gX3RtcGwkJGEuY2xvbmVOb2RlKHRydWUpLCBfZWwkMiA9IF9lbCQuZmlyc3RDaGlsZDtcbiAgICBjcmVhdGVSZW5kZXJFZmZlY3QoKF9wJCkgPT4ge1xuICAgICAgY29uc3QgX3YkID0gZmlsbCgpLCBfdiQyID0gZmlsbCgpO1xuICAgICAgX3YkICE9PSBfcCQuX3YkICYmIHNldEF0dHJpYnV0ZShfZWwkLCBcImZpbGxcIiwgX3AkLl92JCA9IF92JCk7XG4gICAgICBfdiQyICE9PSBfcCQuX3YkMiAmJiBzZXRBdHRyaWJ1dGUoX2VsJDIsIFwiZmlsbFwiLCBfcCQuX3YkMiA9IF92JDIpO1xuICAgICAgcmV0dXJuIF9wJDtcbiAgICB9LCB7XG4gICAgICBfdiQ6IHZvaWQgMCxcbiAgICAgIF92JDI6IHZvaWQgMFxuICAgIH0pO1xuICAgIHJldHVybiBfZWwkO1xuICB9KSgpO1xufTtcbmNvbnN0IF90bXBsJCQ5ID0gLyogQF9fUFVSRV9fICovIHRlbXBsYXRlJDEoYDxzdmcgeG1sbnM9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiIHdpZHRoPVwiMTZcIiBoZWlnaHQ9XCIxN1wiIHZpZXdCb3g9XCIwIDAgMTYgMTdcIiBmaWxsPVwibm9uZVwiPjxwYXRoIGZpbGwtcnVsZT1cImV2ZW5vZGRcIiBjbGlwLXJ1bGU9XCJldmVub2RkXCIgZD1cIk0xIDQuMTI2OTVDMSAzLjA3NzU0IDEgMi41NTI4NCAxLjE5MjAyIDIuMTQ2ODRDMS4zODk4NiAxLjcyODU2IDEuNzI2NiAxLjM5MTgxIDIuMTQ0ODkgMS4xOTM5N0MyLjU1MDg4IDEuMDAxOTUgMy4wNzU1OSAxLjAwMTk1IDQuMTI1IDEuMDAxOTVDNS4xNzQ0MSAxLjAwMTk1IDUuNjk5MTIgMS4wMDE5NSA2LjEwNTExIDEuMTkzOTdDNi41MjM0IDEuMzkxODEgNi44NjAxNCAxLjcyODU2IDcuMDU3OTggMi4xNDY4NEM3LjI1IDIuNTUyODQgNy4yNSAzLjA3NzU0IDcuMjUgNC4xMjY5NUM3LjI1IDUuMTc2MzYgNy4yNSA1LjcwMTA3IDcuMDU3OTggNi4xMDcwNkM2Ljg2MDE0IDYuNTI1MzUgNi41MjM0IDYuODYyMSA2LjEwNTExIDcuMDU5OTNDNS42OTkxMiA3LjI1MTk1IDUuMTc0NDEgNy4yNTE5NSA0LjEyNSA3LjI1MTk1QzMuMDc1NTkgNy4yNTE5NSAyLjU1MDg4IDcuMjUxOTUgMi4xNDQ4OSA3LjA1OTkzQzEuNzI2NiA2Ljg2MjEgMS4zODk4NiA2LjUyNTM1IDEuMTkyMDIgNi4xMDcwNkMxIDUuNzAxMDcgMSA1LjE3NjM2IDEgNC4xMjY5NVpNMi41IDMuMzAxOTVDMi41IDMuMDIxOTMgMi41IDIuODgxOTEgMi41NTQ1IDIuNzc0OTZDMi42MDI0MyAyLjY4MDg4IDIuNjc4OTIgMi42MDQzOSAyLjc3MyAyLjU1NjQ1QzIuODc5OTYgMi41MDE5NSAzLjAxOTk3IDIuNTAxOTUgMy4zIDIuNTAxOTVINC45NUM1LjIzMDAzIDIuNTAxOTUgNS4zNzAwNCAyLjUwMTk1IDUuNDc3IDIuNTU2NDVDNS41NzEwOCAyLjYwNDM5IDUuNjQ3NTcgMi42ODA4OCA1LjY5NTUgMi43NzQ5NkM1Ljc1IDIuODgxOTEgNS43NSAzLjAyMTkzIDUuNzUgMy4zMDE5NVY0Ljk1MTk1QzUuNzUgNS4yMzE5OCA1Ljc1IDUuMzcxOTkgNS42OTU1IDUuNDc4OTVDNS42NDc1NyA1LjU3MzAzIDUuNTcxMDggNS42NDk1MiA1LjQ3NyA1LjY5NzQ2QzUuMzcwMDQgNS43NTE5NSA1LjIzMDAzIDUuNzUxOTUgNC45NSA1Ljc1MTk1SDMuM0MzLjAxOTk3IDUuNzUxOTUgMi44Nzk5NiA1Ljc1MTk1IDIuNzczIDUuNjk3NDZDMi42Nzg5MiA1LjY0OTUyIDIuNjAyNDMgNS41NzMwMyAyLjU1NDUgNS40Nzg5NUMyLjUgNS4zNzE5OSAyLjUgNS4yMzE5OCAyLjUgNC45NTE5NVYzLjMwMTk1Wk0xIDExLjg3N0MxIDEwLjgyNzUgMSAxMC4zMDI4IDEuMTkyMDIgOS44OTY4NEMxLjM4OTg2IDkuNDc4NTYgMS43MjY2IDkuMTQxODEgMi4xNDQ4OSA4Ljk0Mzk3QzIuNTUwODggOC43NTE5NSAzLjA3NTU5IDguNzUxOTUgNC4xMjUgOC43NTE5NUM1LjE3NDQxIDguNzUxOTUgNS42OTkxMiA4Ljc1MTk1IDYuMTA1MTEgOC45NDM5N0M2LjUyMzQgOS4xNDE4MSA2Ljg2MDE0IDkuNDc4NTYgNy4wNTc5OCA5Ljg5Njg0QzcuMjUgMTAuMzAyOCA3LjI1IDEwLjgyNzUgNy4yNSAxMS44NzdDNy4yNSAxMi45MjY0IDcuMjUgMTMuNDUxMSA3LjA1Nzk4IDEzLjg1NzFDNi44NjAxNCAxNC4yNzUzIDYuNTIzNCAxNC42MTIxIDYuMTA1MTEgMTQuODA5OUM1LjY5OTEyIDE1LjAwMiA1LjE3NDQxIDE1LjAwMiA0LjEyNSAxNS4wMDJDMy4wNzU1OSAxNS4wMDIgMi41NTA4OCAxNS4wMDIgMi4xNDQ4OSAxNC44MDk5QzEuNzI2NiAxNC42MTIxIDEuMzg5ODYgMTQuMjc1MyAxLjE5MjAyIDEzLjg1NzFDMSAxMy40NTExIDEgMTIuOTI2NCAxIDExLjg3N1pNMi41IDExLjA1MkMyLjUgMTAuNzcxOSAyLjUgMTAuNjMxOSAyLjU1NDUgMTAuNTI1QzIuNjAyNDMgMTAuNDMwOSAyLjY3ODkyIDEwLjM1NDQgMi43NzMgMTAuMzA2NEMyLjg3OTk2IDEwLjI1MiAzLjAxOTk3IDEwLjI1MiAzLjMgMTAuMjUySDQuOTVDNS4yMzAwMyAxMC4yNTIgNS4zNzAwNCAxMC4yNTIgNS40NzcgMTAuMzA2NEM1LjU3MTA4IDEwLjM1NDQgNS42NDc1NyAxMC40MzA5IDUuNjk1NSAxMC41MjVDNS43NSAxMC42MzE5IDUuNzUgMTAuNzcxOSA1Ljc1IDExLjA1MlYxMi43MDJDNS43NSAxMi45ODIgNS43NSAxMy4xMjIgNS42OTU1IDEzLjIyODlDNS42NDc1NyAxMy4zMjMgNS41NzEwOCAxMy4zOTk1IDUuNDc3IDEzLjQ0NzVDNS4zNzAwNCAxMy41MDIgNS4yMzAwMyAxMy41MDIgNC45NSAxMy41MDJIMy4zQzMuMDE5OTcgMTMuNTAyIDIuODc5OTYgMTMuNTAyIDIuNzczIDEzLjQ0NzVDMi42Nzg5MiAxMy4zOTk1IDIuNjAyNDMgMTMuMzIzIDIuNTU0NSAxMy4yMjg5QzIuNSAxMy4xMjIgMi41IDEyLjk4MiAyLjUgMTIuNzAyVjExLjA1MlpNOC45NDIwMiAyLjE0Njg0QzguNzUgMi41NTI4NCA4Ljc1IDMuMDc3NTQgOC43NSA0LjEyNjk1QzguNzUgNS4xNzYzNiA4Ljc1IDUuNzAxMDcgOC45NDIwMiA2LjEwNzA2QzkuMTM5ODYgNi41MjUzNSA5LjQ3NjYgNi44NjIxIDkuODk0ODkgNy4wNTk5M0MxMC4zMDA5IDcuMjUxOTUgMTAuODI1NiA3LjI1MTk1IDExLjg3NSA3LjI1MTk1QzEyLjkyNDQgNy4yNTE5NSAxMy40NDkxIDcuMjUxOTUgMTMuODU1MSA3LjA1OTkzQzE0LjI3MzQgNi44NjIxIDE0LjYxMDEgNi41MjUzNSAxNC44MDggNi4xMDcwNkMxNSA1LjcwMTA3IDE1IDUuMTc2MzYgMTUgNC4xMjY5NUMxNSAzLjA3NzU0IDE1IDIuNTUyODQgMTQuODA4IDIuMTQ2ODRDMTQuNjEwMSAxLjcyODU2IDE0LjI3MzQgMS4zOTE4MSAxMy44NTUxIDEuMTkzOTdDMTMuNDQ5MSAxLjAwMTk1IDEyLjkyNDQgMS4wMDE5NSAxMS44NzUgMS4wMDE5NUMxMC44MjU2IDEuMDAxOTUgMTAuMzAwOSAxLjAwMTk1IDkuODk0ODkgMS4xOTM5N0M5LjQ3NjYgMS4zOTE4MSA5LjEzOTg2IDEuNzI4NTYgOC45NDIwMiAyLjE0Njg0Wk0xMC4zMDQ1IDIuNzc0OTZDMTAuMjUgMi44ODE5MSAxMC4yNSAzLjAyMTkzIDEwLjI1IDMuMzAxOTVWNC45NTE5NUMxMC4yNSA1LjIzMTk4IDEwLjI1IDUuMzcxOTkgMTAuMzA0NSA1LjQ3ODk1QzEwLjM1MjQgNS41NzMwMyAxMC40Mjg5IDUuNjQ5NTIgMTAuNTIzIDUuNjk3NDZDMTAuNjMgNS43NTE5NSAxMC43NyA1Ljc1MTk1IDExLjA1IDUuNzUxOTVIMTIuN0MxMi45OCA1Ljc1MTk1IDEzLjEyIDUuNzUxOTUgMTMuMjI3IDUuNjk3NDZDMTMuMzIxMSA1LjY0OTUyIDEzLjM5NzYgNS41NzMwMyAxMy40NDU1IDUuNDc4OTVDMTMuNSA1LjM3MTk5IDEzLjUgNS4yMzE5OCAxMy41IDQuOTUxOTVWMy4zMDE5NUMxMy41IDMuMDIxOTMgMTMuNSAyLjg4MTkxIDEzLjQ0NTUgMi43NzQ5NkMxMy4zOTc2IDIuNjgwODggMTMuMzIxMSAyLjYwNDM5IDEzLjIyNyAyLjU1NjQ1QzEzLjEyIDIuNTAxOTUgMTIuOTggMi41MDE5NSAxMi43IDIuNTAxOTVIMTEuMDVDMTAuNzcgMi41MDE5NSAxMC42MyAyLjUwMTk1IDEwLjUyMyAyLjU1NjQ1QzEwLjQyODkgMi42MDQzOSAxMC4zNTI0IDIuNjgwODggMTAuMzA0NSAyLjc3NDk2Wk04LjgwNzI3IDkuMTM1MThDOC43NSA5LjI2MjQyIDguNzUgOS40MjU2IDguNzUgOS43NTE5NUM4Ljc1IDEwLjA3ODMgOC43NSAxMC4yNDE1IDguODA3MjcgMTAuMzY4N0M4Ljg3MjQ1IDEwLjUxMzYgOC45ODg0IDEwLjYyOTUgOS4xMzMyMyAxMC42OTQ3QzkuMjYwNDcgMTAuNzUyIDkuNDIzNjUgMTAuNzUyIDkuNzUgMTAuNzUyQzEwLjA3NjQgMTAuNzUyIDEwLjIzOTUgMTAuNzUyIDEwLjM2NjggMTAuNjk0N0MxMC41MTE2IDEwLjYyOTUgMTAuNjI3NiAxMC41MTM2IDEwLjY5MjcgMTAuMzY4N0MxMC43NSAxMC4yNDE1IDEwLjc1IDEwLjA3ODMgMTAuNzUgOS43NTE5NUMxMC43NSA5LjQyNTYgMTAuNzUgOS4yNjI0MiAxMC42OTI3IDkuMTM1MThDMTAuNjI3NiA4Ljk5MDM1IDEwLjUxMTYgOC44NzQ0IDEwLjM2NjggOC44MDkyMkMxMC4yMzk1IDguNzUxOTUgMTAuMDc2NCA4Ljc1MTk1IDkuNzUgOC43NTE5NUM5LjQyMzY1IDguNzUxOTUgOS4yNjA0NyA4Ljc1MTk1IDkuMTMzMjMgOC44MDkyMkM4Ljk4ODQgOC44NzQ0IDguODcyNDUgOC45OTAzNSA4LjgwNzI3IDkuMTM1MThaTTEwLjg3IDExLjg3NzFDMTAuODcgMTEuNTQ2IDEwLjg3IDExLjM4MDUgMTAuOTI4OSAxMS4yNTE3QzEwLjk5MzggMTEuMTA5OCAxMS4xMDc3IDEwLjk5NTkgMTEuMjQ5NyAxMC45MzFDMTEuMzc4NCAxMC44NzIxIDExLjU0MzkgMTAuODcyMSAxMS44NzUgMTAuODcyMUMxMi4yMDYxIDEwLjg3MjEgMTIuMzcxNiAxMC44NzIxIDEyLjUwMDMgMTAuOTMxQzEyLjY0MjMgMTAuOTk1OSAxMi43NTYyIDExLjEwOTggMTIuODIxMSAxMS4yNTE3QzEyLjg4IDExLjM4MDUgMTIuODggMTEuNTQ2IDEyLjg4IDExLjg3NzFDMTIuODggMTIuMjA4MSAxMi44OCAxMi4zNzM3IDEyLjgyMTEgMTIuNTAyNEMxMi43NTYyIDEyLjY0NDQgMTIuNjQyMyAxMi43NTgzIDEyLjUwMDMgMTIuODIzMkMxMi4zNzE2IDEyLjg4MjEgMTIuMjA2MSAxMi44ODIxIDExLjg3NSAxMi44ODIxQzExLjU0MzkgMTIuODgyMSAxMS4zNzg0IDEyLjg4MjEgMTEuMjQ5NyAxMi44MjMyQzExLjEwNzcgMTIuNzU4MyAxMC45OTM4IDEyLjY0NDQgMTAuOTI4OSAxMi41MDI0QzEwLjg3IDEyLjM3MzcgMTAuODcgMTIuMjA4MSAxMC44NyAxMS44NzcxWk04LjgwNzI3IDEzLjM4NTJDOC43NSAxMy41MTI0IDguNzUgMTMuNjc1NiA4Ljc1IDE0LjAwMkM4Ljc1IDE0LjMyODMgOC43NSAxNC40OTE1IDguODA3MjcgMTQuNjE4N0M4Ljg3MjQ1IDE0Ljc2MzYgOC45ODg0IDE0Ljg3OTUgOS4xMzMyMyAxNC45NDQ3QzkuMjYwNDcgMTUuMDAyIDkuNDIzNjUgMTUuMDAyIDkuNzUgMTUuMDAyQzEwLjA3NjQgMTUuMDAyIDEwLjIzOTUgMTUuMDAyIDEwLjM2NjggMTQuOTQ0N0MxMC41MTE2IDE0Ljg3OTUgMTAuNjI3NiAxNC43NjM2IDEwLjY5MjcgMTQuNjE4N0MxMC43NSAxNC40OTE1IDEwLjc1IDE0LjMyODMgMTAuNzUgMTQuMDAyQzEwLjc1IDEzLjY3NTYgMTAuNzUgMTMuNTEyNCAxMC42OTI3IDEzLjM4NTJDMTAuNjI3NiAxMy4yNDA0IDEwLjUxMTYgMTMuMTI0NCAxMC4zNjY4IDEzLjA1OTJDMTAuMjM5NSAxMy4wMDIgMTAuMDc2NCAxMy4wMDIgOS43NSAxMy4wMDJDOS40MjM2NSAxMy4wMDIgOS4yNjA0NyAxMy4wMDIgOS4xMzMyMyAxMy4wNTkyQzguOTg4NCAxMy4xMjQ0IDguODcyNDUgMTMuMjQwNCA4LjgwNzI3IDEzLjM4NTJaTTEzIDkuNzUxOTVDMTMgOS40MjU2IDEzIDkuMjYyNDIgMTMuMDU3MyA5LjEzNTE4QzEzLjEyMjQgOC45OTAzNSAxMy4yMzg0IDguODc0NCAxMy4zODMyIDguODA5MjJDMTMuNTEwNSA4Ljc1MTk1IDEzLjY3MzYgOC43NTE5NSAxNCA4Ljc1MTk1QzE0LjMyNjQgOC43NTE5NSAxNC40ODk1IDguNzUxOTUgMTQuNjE2OCA4LjgwOTIyQzE0Ljc2MTYgOC44NzQ0IDE0Ljg3NzYgOC45OTAzNSAxNC45NDI3IDkuMTM1MThDMTUgOS4yNjI0MiAxNSA5LjQyNTYgMTUgOS43NTE5NUMxNSAxMC4wNzgzIDE1IDEwLjI0MTUgMTQuOTQyNyAxMC4zNjg3QzE0Ljg3NzYgMTAuNTEzNiAxNC43NjE2IDEwLjYyOTUgMTQuNjE2OCAxMC42OTQ3QzE0LjQ4OTUgMTAuNzUyIDE0LjMyNjQgMTAuNzUyIDE0IDEwLjc1MkMxMy42NzM2IDEwLjc1MiAxMy41MTA1IDEwLjc1MiAxMy4zODMyIDEwLjY5NDdDMTMuMjM4NCAxMC42Mjk1IDEzLjEyMjQgMTAuNTEzNiAxMy4wNTczIDEwLjM2ODdDMTMgMTAuMjQxNSAxMyAxMC4wNzgzIDEzIDkuNzUxOTVaTTEzLjA1NzMgMTMuMzg1MkMxMyAxMy41MTI0IDEzIDEzLjY3NTYgMTMgMTQuMDAyQzEzIDE0LjMyODMgMTMgMTQuNDkxNSAxMy4wNTczIDE0LjYxODdDMTMuMTIyNCAxNC43NjM2IDEzLjIzODQgMTQuODc5NSAxMy4zODMyIDE0Ljk0NDdDMTMuNTEwNSAxNS4wMDIgMTMuNjczNiAxNS4wMDIgMTQgMTUuMDAyQzE0LjMyNjQgMTUuMDAyIDE0LjQ4OTUgMTUuMDAyIDE0LjYxNjggMTQuOTQ0N0MxNC43NjE2IDE0Ljg3OTUgMTQuODc3NiAxNC43NjM2IDE0Ljk0MjcgMTQuNjE4N0MxNSAxNC40OTE1IDE1IDE0LjMyODMgMTUgMTQuMDAyQzE1IDEzLjY3NTYgMTUgMTMuNTEyNCAxNC45NDI3IDEzLjM4NTJDMTQuODc3NiAxMy4yNDA0IDE0Ljc2MTYgMTMuMTI0NCAxNC42MTY4IDEzLjA1OTJDMTQuNDg5NSAxMy4wMDIgMTQuMzI2NCAxMy4wMDIgMTQgMTMuMDAyQzEzLjY3MzYgMTMuMDAyIDEzLjUxMDUgMTMuMDAyIDEzLjM4MzIgMTMuMDU5MkMxMy4yMzg0IDEzLjEyNDQgMTMuMTIyNCAxMy4yNDA0IDEzLjA1NzMgMTMuMzg1MlpcIj48L3BhdGg+PC9zdmc+YCk7XG5jb25zdCBRUkljb24gPSAocHJvcHMpID0+IHtcbiAgY29uc3QgdGhlbWUgPSB1c2VUaGVtZSgpO1xuICBjb25zdCBmaWxsID0gKCkgPT4gcHJvcHMuZmlsbCB8fCB0aGVtZS5jb2xvcnMuaWNvbi5zZWNvbmRhcnk7XG4gIHJldHVybiAoKCkgPT4ge1xuICAgIGNvbnN0IF9lbCQgPSBfdG1wbCQkOS5jbG9uZU5vZGUodHJ1ZSksIF9lbCQyID0gX2VsJC5maXJzdENoaWxkO1xuICAgIGNyZWF0ZVJlbmRlckVmZmVjdCgoKSA9PiBzZXRBdHRyaWJ1dGUoX2VsJDIsIFwiZmlsbFwiLCBmaWxsKCkpKTtcbiAgICByZXR1cm4gX2VsJDtcbiAgfSkoKTtcbn07XG5jb25zdCBjb250YWluZXJCb3JkZXJzID0ge1xuICBtOiBcIjE2cHhcIixcbiAgczogXCIxMnB4XCIsXG4gIG5vbmU6IFwiMFwiXG59O1xuY29uc3Qgd2FsbGV0Qm9yZGVycyA9IHtcbiAgbTogXCI2cHhcIixcbiAgczogXCI2cHhcIixcbiAgbm9uZTogXCIwXCJcbn07XG5jb25zdCBGb3VyV2FsbGV0c0NhcmQgPSBzdHlsZWQuZGl2YFxuICAgIHdpZHRoOiA2MHB4O1xuICAgIGhlaWdodDogNjBweDtcbiAgICBwYWRkaW5nOiA4cHg7XG4gICAgbWFyZ2luLWJvdHRvbTogOHB4O1xuICAgIGJvcmRlci1yYWRpdXM6ICR7KHByb3BzKSA9PiBjb250YWluZXJCb3JkZXJzW3Byb3BzLnRoZW1lLmJvcmRlclJhZGl1c119O1xuICAgIGJhY2tncm91bmQtY29sb3I6ICR7KHByb3BzKSA9PiBwcm9wcy50aGVtZS5jb2xvcnMuYmFja2dyb3VuZC50aW50fTtcbiAgICBkaXNwbGF5OiBncmlkO1xuICAgIGdyaWQtdGVtcGxhdGU6IDFmciAxZnIgLyAxZnIgMWZyO1xuICAgIGdhcDogNHB4O1xuYDtcbmNvbnN0IEZvdXJXYWxsZXRzSW1hZ2UgPSBzdHlsZWQoV2FsbGV0SW1hZ2UpYFxuICAgIHdpZHRoOiAyMHB4O1xuICAgIGhlaWdodDogMjBweDtcbiAgICBib3JkZXItcmFkaXVzOiAkeyhwcm9wcykgPT4gd2FsbGV0Qm9yZGVyc1twcm9wcy50aGVtZS5ib3JkZXJSYWRpdXNdfTtcbmA7XG5jb25zdCBGb3VyV2FsbGV0c0l0ZW0gPSAocHJvcHMpID0+IHtcbiAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChXYWxsZXRJdGVtLCB7XG4gICAgZ2V0IG5hbWUoKSB7XG4gICAgICByZXR1cm4gcHJvcHMubGFiZWxMaW5lMTtcbiAgICB9LFxuICAgIGdldCBzZWNvbmRMaW5lKCkge1xuICAgICAgcmV0dXJuIHByb3BzLmxhYmVsTGluZTI7XG4gICAgfSxcbiAgICBnZXQgaWNvbigpIHtcbiAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoRm91cldhbGxldHNDYXJkLCB7XG4gICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KEZvciwge1xuICAgICAgICAgICAgZWFjaDogWzAsIDEsIDIsIDNdLFxuICAgICAgICAgICAgY2hpbGRyZW46IChpbmRleCkgPT4gY3JlYXRlQ29tcG9uZW50KEZvdXJXYWxsZXRzSW1hZ2UsIHtcbiAgICAgICAgICAgICAgZ2V0IHNyYygpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gcHJvcHMuaW1hZ2VzW2luZGV4XTtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSlcbiAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfSxcbiAgICBvbkNsaWNrOiAoKSA9PiBwcm9wcy5vbkNsaWNrKClcbiAgfSk7XG59O1xuY29uc3QgQVRfV0FMTEVUX0FQUF9OQU1FID0gXCJ0ZWxlZ3JhbS13YWxsZXRcIjtcbmNvbnN0IElNRyA9IHtcbiAgVE9OOiBcImh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS90b24tY29ubmVjdC9zZGsvbWFpbi9hc3NldHMvdG9uLWljb24tNDgucG5nXCIsXG4gIFRHOiBcImh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS90b24tY29ubmVjdC9zZGsvbWFpbi9hc3NldHMvdGcucG5nXCJcbn07XG5jb25zdCBXYWxsZXRMYWJlbGVkSXRlbSA9IChwcm9wcykgPT4ge1xuICBjb25zdCBbdDJdID0gdXNlSTE4bigpO1xuICBjb25zdCB3YWxsZXRzU2Vjb25kTGluZSA9ICgpID0+IHtcbiAgICBpZiAocHJvcHMud2FsbGV0LmFwcE5hbWUgPT09IEFUX1dBTExFVF9BUFBfTkFNRSkge1xuICAgICAgcmV0dXJuIHZvaWQgMDtcbiAgICB9XG4gICAgaWYgKFwiaXNQcmVmZXJyZWRcIiBpbiBwcm9wcy53YWxsZXQgJiYgcHJvcHMud2FsbGV0LmlzUHJlZmVycmVkKSB7XG4gICAgICByZXR1cm4gdDIoXCJ3YWxsZXRJdGVtLnJlY2VudFwiLCB7fSwgXCJSZWNlbnRcIik7XG4gICAgfVxuICAgIGlmIChpc1dhbGxldEluZm9DdXJyZW50bHlJbmplY3RlZChwcm9wcy53YWxsZXQpKSB7XG4gICAgICByZXR1cm4gdDIoXCJ3YWxsZXRJdGVtLmluc3RhbGxlZFwiLCB7fSwgXCJJbnN0YWxsZWRcIik7XG4gICAgfVxuICAgIGlmIChwcm9wcy53YWxsZXQubmFtZSA9PT0gXCJUb25rZWVwZXJcIikge1xuICAgICAgcmV0dXJuIHQyKFwid2FsbGV0SXRlbS5wb3B1bGFyXCIsIHt9LCBcIlBvcHVsYXJcIik7XG4gICAgfVxuICAgIHJldHVybiB2b2lkIDA7XG4gIH07XG4gIHJldHVybiBjcmVhdGVNZW1vKCgoKSA9PiB7XG4gICAgY29uc3QgX2MkID0gY3JlYXRlTWVtbygoKSA9PiBwcm9wcy53YWxsZXQuYXBwTmFtZSA9PT0gQVRfV0FMTEVUX0FQUF9OQU1FKTtcbiAgICByZXR1cm4gKCkgPT4gX2MkKCkgPyBjcmVhdGVDb21wb25lbnQoV2FsbGV0SXRlbSwge1xuICAgICAgZ2V0IGljb24oKSB7XG4gICAgICAgIHJldHVybiBwcm9wcy53YWxsZXQuaW1hZ2VVcmw7XG4gICAgICB9LFxuICAgICAgZ2V0IG5hbWUoKSB7XG4gICAgICAgIHJldHVybiB0MihcIndhbGxldEl0ZW0ud2FsbGV0T25cIiwge30sIFwiV2FsbGV0IGluXCIpO1xuICAgICAgfSxcbiAgICAgIHNlY29uZExpbmU6IFwiVGVsZWdyYW1cIixcbiAgICAgIGdldCBiYWRnZVVybCgpIHtcbiAgICAgICAgcmV0dXJuIElNRy5URztcbiAgICAgIH0sXG4gICAgICBvbkNsaWNrOiAoKSA9PiBwcm9wcy5vbkNsaWNrKCksXG4gICAgICBnZXQgW1wiY2xhc3NcIl0oKSB7XG4gICAgICAgIHJldHVybiBwcm9wcy5jbGFzcztcbiAgICAgIH1cbiAgICB9KSA6IGNyZWF0ZUNvbXBvbmVudChXYWxsZXRJdGVtLCB7XG4gICAgICBnZXQgaWNvbigpIHtcbiAgICAgICAgcmV0dXJuIHByb3BzLndhbGxldC5pbWFnZVVybDtcbiAgICAgIH0sXG4gICAgICBnZXQgbmFtZSgpIHtcbiAgICAgICAgcmV0dXJuIHByb3BzLndhbGxldC5uYW1lO1xuICAgICAgfSxcbiAgICAgIGdldCBzZWNvbmRMaW5lKCkge1xuICAgICAgICByZXR1cm4gd2FsbGV0c1NlY29uZExpbmUoKTtcbiAgICAgIH0sXG4gICAgICBzZWNvbmRMaW5lQ29sb3JQcmltYXJ5OiBmYWxzZSxcbiAgICAgIG9uQ2xpY2s6ICgpID0+IHByb3BzLm9uQ2xpY2soKSxcbiAgICAgIGdldCBbXCJjbGFzc1wiXSgpIHtcbiAgICAgICAgcmV0dXJuIHByb3BzLmNsYXNzO1xuICAgICAgfVxuICAgIH0pO1xuICB9KSgpKTtcbn07XG5jb25zdCBTY3JvbGxDb250YWluZXJTdHlsZWQgPSBzdHlsZWQuZGl2YFxuICAgIHdpZHRoOiAxMDAlO1xuICAgIG92ZXJmbG93LXk6IGF1dG87XG4gICAgbWF4LWhlaWdodDogJHsocHJvcHMpID0+IHByb3BzLm1heEhlaWdodH07XG5cbiAgICBzY3JvbGxiYXItd2lkdGg6IG5vbmU7XG4gICAgJiY6Oi13ZWJraXQtc2Nyb2xsYmFyIHtcbiAgICAgICAgZGlzcGxheTogbm9uZTtcbiAgICB9XG5cbiAgICAmJjo6LXdlYmtpdC1zY3JvbGxiYXItdHJhY2sge1xuICAgICAgICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcbiAgICB9XG5cbiAgICAmJjo6LXdlYmtpdC1zY3JvbGxiYXItdGh1bWIge1xuICAgICAgICBkaXNwbGF5OiBub25lO1xuICAgIH1cbmA7XG5jb25zdCBTY3JvbGxEaXZpZGVyID0gc3R5bGVkLmRpdmBcbiAgICBoZWlnaHQ6IDFweDtcbiAgICBtYXJnaW46IDAgLTI0cHg7XG4gICAgd2lkdGg6IGNhbGMoMTAwJSArIDQ4cHgpO1xuICAgIG9wYWNpdHk6IDAuMDg7XG4gICAgYmFja2dyb3VuZDogJHsocHJvcHMpID0+IHByb3BzLmlzU2hvd24gPyBwcm9wcy50aGVtZS5jb2xvcnMuaWNvbi5zZWNvbmRhcnkgOiBcInRyYW5zcGFyZW50XCJ9O1xuICAgIHRyYW5zaXRpb246IGJhY2tncm91bmQgMC4xNXMgZWFzZS1pbi1vdXQ7XG5cbiAgICAke21lZGlhKFwibW9iaWxlXCIpfSB7XG4gICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICBtYXJnaW46IDA7XG4gICAgfVxuYDtcbmNvbnN0IFt3aW5kb3dIZWlnaHQsIHNldFdpbmRvd0hlaWdodF0gPSBjcmVhdGVTaWduYWwoKChfaCA9IGdldFdpbmRvdyQxKCkpID09IG51bGwgPyB2b2lkIDAgOiBfaC5pbm5lckhlaWdodCkgfHwgMCk7XG5pZiAoZ2V0V2luZG93JDEoKSkge1xuICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihcInJlc2l6ZVwiLCAoKSA9PiBzZXRXaW5kb3dIZWlnaHQod2luZG93LmlubmVySGVpZ2h0KSk7XG59XG5jb25zdCBbaXNNb2JpbGUsIHNldElzTW9iaWxlXSA9IGNyZWF0ZVNpZ25hbChpc0RldmljZShcIm1vYmlsZVwiKSk7XG5jb25zdCB1cGRhdGVJc01vYmlsZSA9ICgpID0+IHNldElzTW9iaWxlKGlzRGV2aWNlKFwibW9iaWxlXCIpKTtcbmlmIChnZXRXaW5kb3ckMSgpKSB7XG4gIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKFwicmVzaXplXCIsICgpID0+IHVwZGF0ZUlzTW9iaWxlKCkpO1xuICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihcImxvYWRcIiwgKCkgPT4gdXBkYXRlSXNNb2JpbGUoKSwgeyBvbmNlOiB0cnVlIH0pO1xufVxuY29uc3QgU2Nyb2xsQ29udGFpbmVyID0gKHByb3BzKSA9PiB7XG4gIGNvbnN0IFtzY3JvbGxlZCwgc2V0U2Nyb2xsZWRdID0gY3JlYXRlU2lnbmFsKGZhbHNlKTtcbiAgY29uc3Qgb25TY3JvbGwgPSAoZTIpID0+IHtcbiAgICBzZXRTY3JvbGxlZChlMi50YXJnZXQuc2Nyb2xsVG9wID4gMCk7XG4gIH07XG4gIGNvbnN0IG9mZnNldCA9ICgpID0+IGlzTW9iaWxlKCkgPyAxNTAgOiAyMDA7XG4gIGNvbnN0IG1heEhlaWdodCA9ICgpID0+IHByb3BzLm1heEhlaWdodCAhPT0gdm9pZCAwID8gYCR7cHJvcHMubWF4SGVpZ2h0fXB4YCA6IGAke3dpbmRvd0hlaWdodCgpIC0gb2Zmc2V0KCl9cHhgO1xuICByZXR1cm4gW2NyZWF0ZUNvbXBvbmVudChTY3JvbGxEaXZpZGVyLCB7XG4gICAgZ2V0IGlzU2hvd24oKSB7XG4gICAgICByZXR1cm4gc2Nyb2xsZWQoKTtcbiAgICB9XG4gIH0pLCBjcmVhdGVDb21wb25lbnQoU2Nyb2xsQ29udGFpbmVyU3R5bGVkLCB7XG4gICAgZ2V0IG1heEhlaWdodCgpIHtcbiAgICAgIHJldHVybiBtYXhIZWlnaHQoKTtcbiAgICB9LFxuICAgIG9uU2Nyb2xsLFxuICAgIGdldCBbXCJjbGFzc1wiXSgpIHtcbiAgICAgIHJldHVybiBwcm9wcy5jbGFzcztcbiAgICB9LFxuICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgIHJldHVybiBwcm9wcy5jaGlsZHJlbjtcbiAgICB9XG4gIH0pXTtcbn07XG5jb25zdCBBU3R5bGVkID0gc3R5bGVkLmFgXG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgdGV4dC1kZWNvcmF0aW9uOiB1bnNldDtcbmA7XG5jb25zdCBMaW5rID0gKHByb3BzKSA9PiB7XG4gIGNvbnN0IGF0dHJpYnV0ZXMgPSAoKSA9PiBwcm9wcy5ibGFuayA/IHtcbiAgICByZWw6IFwibm9yZWZlcnJlciBub29wZW5lclwiXG4gIH0gOiB7fTtcbiAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChBU3R5bGVkLCBtZXJnZVByb3BzKHtcbiAgICBnZXQgaHJlZigpIHtcbiAgICAgIHJldHVybiBwcm9wcy5ocmVmO1xuICAgIH0sXG4gICAgZ2V0IHRhcmdldCgpIHtcbiAgICAgIHJldHVybiBwcm9wcy5ibGFuayA/IFwiX2JsYW5rXCIgOiBcIl9zZWxmXCI7XG4gICAgfSxcbiAgICBnZXQgW1wiY2xhc3NcIl0oKSB7XG4gICAgICByZXR1cm4gcHJvcHMuY2xhc3M7XG4gICAgfVxuICB9LCBhdHRyaWJ1dGVzLCB7XG4gICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgcmV0dXJuIHByb3BzLmNoaWxkcmVuO1xuICAgIH1cbiAgfSkpO1xufTtcbmNvbnN0IFRvbkNvbm5lY3RVaUNvbnRleHQgPSBjcmVhdGVDb250ZXh0KCk7XG5jb25zdCBfdG1wbCQkOCA9IC8qIEBfX1BVUkVfXyAqLyB0ZW1wbGF0ZSQxKGA8c3ZnIHdpZHRoPVwiMjRcIiBoZWlnaHQ9XCIyNFwiIHZpZXdCb3g9XCIwIDAgMjQgMjRcIiBmaWxsPVwibm9uZVwiIHhtbG5zPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIj48cGF0aCBmaWxsLXJ1bGU9XCJldmVub2RkXCIgY2xpcC1ydWxlPVwiZXZlbm9kZFwiIGQ9XCJNNy43NjIyOCAyLjA5OTk4SDEwLjIzNzhDMTEuMDQ1OCAyLjA5OTk3IDExLjcwNjcgMi4wOTk5NiAxMi4yNDM4IDIuMTQzODRDMTIuNzk5NyAyLjE4OTI2IDEzLjMwMTcgMi4yODYxNCAxMy43NzA2IDIuNTI1MDVDMTQuNTA0NSAyLjg5ODk2IDE1LjEwMTEgMy40OTU1OCAxNS40NzUgNC4yMjk0MUMxNS43MTM5IDQuNjk4MyAxNS44MTA4IDUuMjAwMzggMTUuODU2MiA1Ljc1NjI5QzE1LjkwMDEgNi4yOTMzNyAxNS45MDAxIDYuOTU0MjIgMTUuOTAwMSA3Ljc2MjI3VjguMUgxNi4yMzc3QzE3LjA0NTcgOC4wOTk5OSAxNy43MDY2IDguMDk5OTggMTguMjQzNyA4LjE0Mzg2QzE4Ljc5OTYgOC4xODkyOCAxOS4zMDE3IDguMjg2MTYgMTkuNzcwNSA4LjUyNTA3QzIwLjUwNDQgOC44OTg5OCAyMS4xMDEgOS40OTU2IDIxLjQ3NDkgMTAuMjI5NEMyMS43MTM4IDEwLjY5ODMgMjEuODEwNyAxMS4yMDA0IDIxLjg1NjEgMTEuNzU2M0MyMS45IDEyLjI5MzQgMjEuOSAxMi45NTQyIDIxLjkgMTMuNzYyM1YxNi4yMzc3QzIxLjkgMTcuMDQ1OCAyMS45IDE3LjcwNjYgMjEuODU2MSAxOC4yNDM3QzIxLjgxMDcgMTguNzk5NiAyMS43MTM4IDE5LjMwMTcgMjEuNDc0OSAxOS43NzA2QzIxLjEwMSAyMC41MDQ0IDIwLjUwNDQgMjEuMTAxIDE5Ljc3MDUgMjEuNDc0OUMxOS4zMDE3IDIxLjcxMzggMTguNzk5NiAyMS44MTA3IDE4LjI0MzcgMjEuODU2MUMxNy43MDY2IDIxLjkgMTcuMDQ1OCAyMS45IDE2LjIzNzggMjEuOUgxMy43NjIzQzEyLjk1NDMgMjEuOSAxMi4yOTM0IDIxLjkgMTEuNzU2MyAyMS44NTYxQzExLjIwMDQgMjEuODEwNyAxMC42OTgzIDIxLjcxMzggMTAuMjI5NCAyMS40NzQ5QzkuNDk1NjEgMjEuMTAxIDguODk4OTggMjAuNTA0NCA4LjUyNTA4IDE5Ljc3MDZDOC4yODYxNiAxOS4zMDE3IDguMTg5MjggMTguNzk5NiA4LjE0Mzg2IDE4LjI0MzdDOC4wOTk5OCAxNy43MDY2IDguMDk5OTkgMTcuMDQ1OCA4LjEgMTYuMjM3N1YxNS45SDcuNzYyMjdDNi45NTQyNiAxNS45IDYuMjkzMzUgMTUuOSA1Ljc1NjI5IDE1Ljg1NjFDNS4yMDAzOCAxNS44MTA3IDQuNjk4MyAxNS43MTM4IDQuMjI5NDEgMTUuNDc0OUMzLjQ5NTU4IDE1LjEwMSAyLjg5ODk2IDE0LjUwNDQgMi41MjUwNSAxMy43NzA1QzIuMjg2MTQgMTMuMzAxNyAyLjE4OTI2IDEyLjc5OTYgMi4xNDM4NCAxMi4yNDM3QzIuMDk5OTYgMTEuNzA2NiAyLjA5OTk3IDExLjA0NTggMi4wOTk5OCAxMC4yMzc3VjcuNzYyMjhDMi4wOTk5NyA2Ljk1NDI0IDIuMDk5OTYgNi4yOTMzNiAyLjE0Mzg0IDUuNzU2MjlDMi4xODkyNiA1LjIwMDM4IDIuMjg2MTQgNC42OTgzIDIuNTI1MDUgNC4yMjk0MUMyLjg5ODk2IDMuNDk1NTggMy40OTU1OCAyLjg5ODk2IDQuMjI5NDEgMi41MjUwNUM0LjY5ODMgMi4yODYxNCA1LjIwMDM4IDIuMTg5MjYgNS43NTYyOSAyLjE0Mzg0QzYuMjkzMzYgMi4wOTk5NiA2Ljk1NDI1IDIuMDk5OTcgNy43NjIyOCAyLjA5OTk4Wk04LjEgMTQuMVYxMy43NjIzQzguMDk5OTkgMTIuOTU0MiA4LjA5OTk4IDEyLjI5MzQgOC4xNDM4NiAxMS43NTYzQzguMTg5MjggMTEuMjAwNCA4LjI4NjE2IDEwLjY5ODMgOC41MjUwOCAxMC4yMjk0QzguODk4OTggOS40OTU2IDkuNDk1NjEgOC44OTg5OCAxMC4yMjk0IDguNTI1MDdDMTAuNjk4MyA4LjI4NjE2IDExLjIwMDQgOC4xODkyOCAxMS43NTYzIDguMTQzODZDMTIuMjkzNCA4LjA5OTk4IDEyLjk1NDIgOC4wOTk5OSAxMy43NjIzIDguMUgxNC4xMDAxVjcuNzk5OThDMTQuMTAwMSA2Ljk0NTA1IDE0LjA5OTQgNi4zNTc5OCAxNC4wNjIyIDUuOTAyODdDMTQuMDI1OSA1LjQ1ODI3IDEzLjk1OTMgNS4yMTk0NCAxMy44NzEyIDUuMDQ2NkMxMy42Njk5IDQuNjUxNDYgMTMuMzQ4NiA0LjMzMDIgMTIuOTUzNSA0LjEyODg2QzEyLjc4MDYgNC4wNDA3OSAxMi41NDE4IDMuOTc0MTkgMTIuMDk3MiAzLjkzNzg2QzExLjY0MjEgMy45MDA2OCAxMS4wNTUgMy44OTk5OCAxMC4yMDAxIDMuODk5OThINy43OTk5OEM2Ljk0NTA1IDMuODk5OTggNi4zNTc5OCAzLjkwMDY4IDUuOTAyODcgMy45Mzc4NkM1LjQ1ODI3IDMuOTc0MTkgNS4yMTk0NCA0LjA0MDc5IDUuMDQ2NiA0LjEyODg2QzQuNjUxNDYgNC4zMzAyIDQuMzMwMiA0LjY1MTQ2IDQuMTI4ODYgNS4wNDY2QzQuMDQwNzkgNS4yMTk0NCAzLjk3NDE5IDUuNDU4MjcgMy45Mzc4NiA1LjkwMjg3QzMuOTAwNjggNi4zNTc5OCAzLjg5OTk4IDYuOTQ1MDUgMy44OTk5OCA3Ljc5OTk4VjEwLjJDMy44OTk5OCAxMS4wNTQ5IDMuOTAwNjggMTEuNjQyIDMuOTM3ODYgMTIuMDk3MUMzLjk3NDE5IDEyLjU0MTcgNC4wNDA3OSAxMi43ODA1IDQuMTI4ODYgMTIuOTUzNEM0LjMzMDIgMTMuMzQ4NSA0LjY1MTQ2IDEzLjY2OTggNS4wNDY2IDEzLjg3MTFDNS4yMTk0NCAxMy45NTkyIDUuNDU4MjcgMTQuMDI1OCA1LjkwMjg3IDE0LjA2MjFDNi4zNTc5OCAxNC4wOTkzIDYuOTQ1MDUgMTQuMSA3Ljc5OTk4IDE0LjFIOC4xWk0xMS4wNDY2IDEwLjEyODlDMTEuMjE5NSAxMC4wNDA4IDExLjQ1ODMgOS45NzQyMSAxMS45MDI5IDkuOTM3ODhDMTIuMzU4IDkuOTAwNyAxMi45NDUxIDkuOSAxMy44IDkuOUgxNi4yQzE3LjA1NDkgOS45IDE3LjY0MiA5LjkwMDcgMTguMDk3MSA5LjkzNzg4QzE4LjU0MTcgOS45NzQyMSAxOC43ODA1IDEwLjA0MDggMTguOTUzNCAxMC4xMjg5QzE5LjM0ODUgMTAuMzMwMiAxOS42Njk4IDEwLjY1MTUgMTkuODcxMSAxMS4wNDY2QzE5Ljk1OTIgMTEuMjE5NSAyMC4wMjU4IDExLjQ1ODMgMjAuMDYyMSAxMS45MDI5QzIwLjA5OTMgMTIuMzU4IDIwLjEgMTIuOTQ1MSAyMC4xIDEzLjhWMTYuMkMyMC4xIDE3LjA1NDkgMjAuMDk5MyAxNy42NDIgMjAuMDYyMSAxOC4wOTcxQzIwLjAyNTggMTguNTQxNyAxOS45NTkyIDE4Ljc4MDUgMTkuODcxMSAxOC45NTM0QzE5LjY2OTggMTkuMzQ4NSAxOS4zNDg1IDE5LjY2OTggMTguOTUzNCAxOS44NzExQzE4Ljc4MDUgMTkuOTU5MiAxOC41NDE3IDIwLjAyNTggMTguMDk3MSAyMC4wNjIxQzE3LjY0MiAyMC4wOTkzIDE3LjA1NDkgMjAuMSAxNi4yIDIwLjFIMTMuOEMxMi45NDUxIDIwLjEgMTIuMzU4IDIwLjA5OTMgMTEuOTAyOSAyMC4wNjIxQzExLjQ1ODMgMjAuMDI1OCAxMS4yMTk1IDE5Ljk1OTIgMTEuMDQ2NiAxOS44NzExQzEwLjY1MTUgMTkuNjY5OCAxMC4zMzAyIDE5LjM0ODUgMTAuMTI4OSAxOC45NTM0QzEwLjA0MDggMTguNzgwNSA5Ljk3NDIxIDE4LjU0MTcgOS45Mzc4OCAxOC4wOTcxQzkuOTAwNyAxNy42NDIgOS45IDE3LjA1NDkgOS45IDE2LjJWMTMuOEM5LjkgMTIuOTQ1MSA5LjkwMDcgMTIuMzU4IDkuOTM3ODggMTEuOTAyOUM5Ljk3NDIxIDExLjQ1ODMgMTAuMDQwOCAxMS4yMTk1IDEwLjEyODkgMTEuMDQ2NkMxMC4zMzAyIDEwLjY1MTUgMTAuNjUxNSAxMC4zMzAyIDExLjA0NjYgMTAuMTI4OVpcIj48L3BhdGg+PC9zdmc+YCk7XG5jb25zdCBDb3B5SWNvbiA9IChwcm9wcykgPT4ge1xuICBjb25zdCB0aGVtZSA9IHVzZVRoZW1lKCk7XG4gIGNvbnN0IGZpbGwgPSAoKSA9PiBwcm9wcy5maWxsIHx8IHRoZW1lLmNvbG9ycy5pY29uLnByaW1hcnk7XG4gIHJldHVybiAoKCkgPT4ge1xuICAgIGNvbnN0IF9lbCQgPSBfdG1wbCQkOC5jbG9uZU5vZGUodHJ1ZSksIF9lbCQyID0gX2VsJC5maXJzdENoaWxkO1xuICAgIGNyZWF0ZVJlbmRlckVmZmVjdCgoX3AkKSA9PiB7XG4gICAgICBjb25zdCBfdiQgPSBwcm9wcy5jbGFzcywgX3YkMiA9IGZpbGwoKTtcbiAgICAgIF92JCAhPT0gX3AkLl92JCAmJiBzZXRBdHRyaWJ1dGUoX2VsJCwgXCJjbGFzc1wiLCBfcCQuX3YkID0gX3YkKTtcbiAgICAgIF92JDIgIT09IF9wJC5fdiQyICYmIHNldEF0dHJpYnV0ZShfZWwkMiwgXCJmaWxsXCIsIF9wJC5fdiQyID0gX3YkMik7XG4gICAgICByZXR1cm4gX3AkO1xuICAgIH0sIHtcbiAgICAgIF92JDogdm9pZCAwLFxuICAgICAgX3YkMjogdm9pZCAwXG4gICAgfSk7XG4gICAgcmV0dXJuIF9lbCQ7XG4gIH0pKCk7XG59O1xuY29uc3QgX3RtcGwkJDcgPSAvKiBAX19QVVJFX18gKi8gdGVtcGxhdGUkMShgPHN2ZyB3aWR0aD1cIjI0XCIgaGVpZ2h0PVwiMjRcIiB2aWV3Qm94PVwiMCAwIDI0IDI0XCIgZmlsbD1cIm5vbmVcIiB4bWxucz1cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCI+PHBhdGggZD1cIk04Ljc2MjQgMy4xMDAwMUM3Ljk1NDM1IDMuMSA3LjI5MzQ5IDMuMDk5OTkgNi43NTY0MiAzLjE0Mzg3QzYuMjAwNSAzLjE4OTI5IDUuNjk4NDIgMy4yODYxNyA1LjIyOTU0IDMuNTI1MDhDNC40OTU3IDMuODk4OTkgMy44OTkwOCA0LjQ5NTYxIDMuNTI1MTcgNS4yMjk0NEMzLjI4NjI2IDUuNjk4MzMgMy4xODkzOCA2LjIwMDQxIDMuMTQzOTYgNi43NTYzMkMzLjEwMDA4IDcuMjkzNCAzLjEwMDA5IDcuOTU0MjQgMy4xMDAxIDguNzYyMjlWMTUuMjM3N0MzLjEwMDA5IDE2LjA0NTggMy4xMDAwOCAxNi43MDY2IDMuMTQzOTYgMTcuMjQzN0MzLjE4OTM4IDE3Ljc5OTYgMy4yODYyNiAxOC4zMDE3IDMuNTI1MTcgMTguNzcwNkMzLjg5OTA4IDE5LjUwNDQgNC40OTU3IDIwLjEwMSA1LjIyOTU0IDIwLjQ3NDlDNS42OTg0MiAyMC43MTM4IDYuMjAwNSAyMC44MTA3IDYuNzU2NDIgMjAuODU2MUM3LjI5MzQ5IDIwLjkgNy45NTQzNCAyMC45IDguNzYyMzkgMjAuOUgxMi4wMDAxQzEyLjQ5NzIgMjAuOSAxMi45MDAxIDIwLjQ5NzEgMTIuOTAwMSAyMEMxMi45MDAxIDE5LjUwMyAxMi40OTcyIDE5LjEgMTIuMDAwMSAxOS4xSDguODAwMUM3Ljk0NTE3IDE5LjEgNy4zNTgxIDE5LjA5OTMgNi45MDI5OSAxOS4wNjIxQzYuNDU4MzkgMTkuMDI1OCA2LjIxOTU2IDE4Ljk1OTIgNi4wNDY3MiAxOC44NzExQzUuNjUxNTggMTguNjY5OCA1LjMzMDMyIDE4LjM0ODUgNS4xMjg5OCAxNy45NTM0QzUuMDQwOTIgMTcuNzgwNSA0Ljk3NDMxIDE3LjU0MTcgNC45Mzc5OCAxNy4wOTcxQzQuOTAwOCAxNi42NDIgNC45MDAxIDE2LjA1NDkgNC45MDAxIDE1LjJWOC44MDAwMUM0LjkwMDEgNy45NDUwOCA0LjkwMDggNy4zNTgwMSA0LjkzNzk4IDYuOTAyOUM0Ljk3NDMxIDYuNDU4MyA1LjA0MDkyIDYuMjE5NDcgNS4xMjg5OCA2LjA0NjYzQzUuMzMwMzIgNS42NTE0OSA1LjY1MTU4IDUuMzMwMjMgNi4wNDY3MiA1LjEyODg5QzYuMjE5NTYgNS4wNDA4MiA2LjQ1ODM5IDQuOTc0MjIgNi45MDI5OSA0LjkzNzg5QzcuMzU4MSA0LjkwMDcxIDcuOTQ1MTcgNC45MDAwMSA4LjgwMDEgNC45MDAwMUgxMi4wMDAxQzEyLjQ5NzIgNC45MDAwMSAxMi45MDAxIDQuNDk3MDYgMTIuOTAwMSA0LjAwMDAxQzEyLjkwMDEgMy41MDI5NSAxMi40OTcyIDMuMTAwMDEgMTIuMDAwMSAzLjEwMDAxSDguNzYyNFpcIj48L3BhdGg+PHBhdGggZD1cIk0xNy42MzY0IDcuMzYzNkMxNy4yODQ5IDcuMDEyMTIgMTYuNzE1MSA3LjAxMjEyIDE2LjM2MzYgNy4zNjM2QzE2LjAxMjEgNy43MTUwNyAxNi4wMTIxIDguMjg0OTIgMTYuMzYzNiA4LjYzNjM5TDE4LjgyNzIgMTEuMUg5LjAwMDAxQzguNTAyOTUgMTEuMSA4LjEwMDAxIDExLjUwMjkgOC4xMDAwMSAxMkM4LjEwMDAxIDEyLjQ5NyA4LjUwMjk1IDEyLjkgOS4wMDAwMSAxMi45SDE4LjgyNzJMMTYuMzYzNiAxNS4zNjM2QzE2LjAxMjEgMTUuNzE1MSAxNi4wMTIxIDE2LjI4NDkgMTYuMzYzNiAxNi42MzY0QzE2LjcxNTEgMTYuOTg3OSAxNy4yODQ5IDE2Ljk4NzkgMTcuNjM2NCAxNi42MzY0TDIxLjYzNjQgMTIuNjM2NEMyMS45ODc5IDEyLjI4NDkgMjEuOTg3OSAxMS43MTUxIDIxLjYzNjQgMTEuMzYzNkwxNy42MzY0IDcuMzYzNlpcIj48L3BhdGg+PC9zdmc+YCk7XG5jb25zdCBEaXNjb25uZWN0SWNvbiA9IChwcm9wcykgPT4ge1xuICBjb25zdCB0aGVtZSA9IHVzZVRoZW1lKCk7XG4gIGNvbnN0IGZpbGwgPSAoKSA9PiBwcm9wcy5maWxsIHx8IHRoZW1lLmNvbG9ycy5pY29uLnByaW1hcnk7XG4gIHJldHVybiAoKCkgPT4ge1xuICAgIGNvbnN0IF9lbCQgPSBfdG1wbCQkNy5jbG9uZU5vZGUodHJ1ZSksIF9lbCQyID0gX2VsJC5maXJzdENoaWxkLCBfZWwkMyA9IF9lbCQyLm5leHRTaWJsaW5nO1xuICAgIGNyZWF0ZVJlbmRlckVmZmVjdCgoX3AkKSA9PiB7XG4gICAgICBjb25zdCBfdiQgPSBmaWxsKCksIF92JDIgPSBmaWxsKCk7XG4gICAgICBfdiQgIT09IF9wJC5fdiQgJiYgc2V0QXR0cmlidXRlKF9lbCQyLCBcImZpbGxcIiwgX3AkLl92JCA9IF92JCk7XG4gICAgICBfdiQyICE9PSBfcCQuX3YkMiAmJiBzZXRBdHRyaWJ1dGUoX2VsJDMsIFwiZmlsbFwiLCBfcCQuX3YkMiA9IF92JDIpO1xuICAgICAgcmV0dXJuIF9wJDtcbiAgICB9LCB7XG4gICAgICBfdiQ6IHZvaWQgMCxcbiAgICAgIF92JDI6IHZvaWQgMFxuICAgIH0pO1xuICAgIHJldHVybiBfZWwkO1xuICB9KSgpO1xufTtcbmNvbnN0IGhvdmVyQm9yZGVycyQxID0ge1xuICBtOiBcIjhweFwiLFxuICBzOiBcIjRweFwiLFxuICBub25lOiBcIjBcIlxufTtcbmNvbnN0IGRyb3Bkb3duQm9yZGVycyA9IHtcbiAgbTogXCIxNnB4XCIsXG4gIHM6IFwiOHB4XCIsXG4gIG5vbmU6IFwiMFwiXG59O1xuY29uc3QgQWNjb3VudEJ1dHRvbkRyb3Bkb3duU3R5bGVkID0gc3R5bGVkLmRpdmBcbiAgICB3aWR0aDogMjU2cHg7XG4gICAgYm94LXNoYWRvdzogMCA0cHggMjRweCByZ2JhKDAsIDAsIDAsIDAuMTYpO1xuICAgIGJvcmRlci1yYWRpdXM6ICR7KHByb3BzKSA9PiBkcm9wZG93bkJvcmRlcnNbcHJvcHMudGhlbWUuYm9yZGVyUmFkaXVzXX07XG5cbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkeyhwcm9wcykgPT4gcHJvcHMudGhlbWUuY29sb3JzLmJhY2tncm91bmQucHJpbWFyeX1cbiAgICAgICAgICAgXG4gICAgY29sb3I6ICR7KHByb3BzKSA9PiBwcm9wcy50aGVtZS5jb2xvcnMudGV4dC5wcmltYXJ5fVxuYDtcbmNvbnN0IFVsU3R5bGVkID0gc3R5bGVkLnVsYFxuICAgIGJhY2tncm91bmQtY29sb3I6ICR7KHByb3BzKSA9PiBwcm9wcy50aGVtZS5jb2xvcnMuYmFja2dyb3VuZC5wcmltYXJ5fTtcbiAgICBwYWRkaW5nOiA4cHg7XG5gO1xuY29uc3QgTWVudUJ1dHRvblN0eWxlZCA9IHN0eWxlZC5idXR0b25gXG4gICAgZGlzcGxheTogZmxleDtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIGdhcDogOHB4O1xuICAgIGhlaWdodDogNDBweDtcbiAgICBwYWRkaW5nLWxlZnQ6IDhweDtcbiAgICB3aWR0aDogMTAwJTtcblxuICAgIGJhY2tncm91bmQtY29sb3I6ICR7KHByb3BzKSA9PiBwcm9wcy50aGVtZS5jb2xvcnMuYmFja2dyb3VuZC5wcmltYXJ5fTtcbiAgICBib3JkZXI6IG5vbmU7XG4gICAgYm9yZGVyLXJhZGl1czogJHsocHJvcHMpID0+IGhvdmVyQm9yZGVycyQxW3Byb3BzLnRoZW1lLmJvcmRlclJhZGl1c119O1xuICAgIGN1cnNvcjogcG9pbnRlcjtcblxuICAgIHRyYW5zaXRpb246IGJhY2tncm91bmQtY29sb3IsIHRyYW5zZm9ybSAwLjFzIGVhc2UtaW4tb3V0O1xuXG4gICAgJjpob3ZlciB7XG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICR7KHByb3BzKSA9PiBwcm9wcy50aGVtZS5jb2xvcnMuYmFja2dyb3VuZC5zZWNvbmRhcnl9O1xuICAgIH1cblxuICAgICY6YWN0aXZlIHtcbiAgICAgICAgdHJhbnNmb3JtOiBzY2FsZSgwLjk2KTtcbiAgICB9XG5gO1xuY29uc3QgX3RtcGwkJDYgPSAvKiBAX19QVVJFX18gKi8gdGVtcGxhdGUkMShgPGxpPjwvbGk+YCk7XG5jb25zdCBNZW51SXRlbVRleHQgPSAocHJvcHMpID0+IGNyZWF0ZUNvbXBvbmVudChUZXh0LCB7XG4gIGdldCB0cmFuc2xhdGlvbktleSgpIHtcbiAgICByZXR1cm4gcHJvcHMudHJhbnNsYXRpb25LZXk7XG4gIH0sXG4gIGZvbnRTaXplOiBcIjE1cHhcIixcbiAgZm9udFdlaWdodDogXCI1OTBcIixcbiAgZ2V0IGNoaWxkcmVuKCkge1xuICAgIHJldHVybiBwcm9wcy5jaGlsZHJlbjtcbiAgfVxufSk7XG5jb25zdCBBY2NvdW50QnV0dG9uRHJvcGRvd24gPSAocHJvcHMpID0+IHtcbiAgY29uc3QgdG9uQ29ubmVjdFVpID0gdXNlQ29udGV4dChUb25Db25uZWN0VWlDb250ZXh0KTtcbiAgY29uc3QgW2lzQ29waWVkU2hvd24sIHNldElzQ29waWVkU2hvd25dID0gY3JlYXRlU2lnbmFsKGZhbHNlKTtcbiAgY29uc3Qgb25Db3B5ID0gKCkgPT4gX19hc3luYyh2b2lkIDAsIG51bGwsIGZ1bmN0aW9uKiAoKSB7XG4gICAgY29uc3QgdXNlckZyaWVuZGx5QWRkcmVzcyA9IHRvVXNlckZyaWVuZGx5QWRkcmVzcyh0b25Db25uZWN0VWkuYWNjb3VudC5hZGRyZXNzLCB0b25Db25uZWN0VWkuYWNjb3VudC5jaGFpbiA9PT0gQ0hBSU4uVEVTVE5FVCk7XG4gICAgeWllbGQgY29weVRvQ2xpcGJvYXJkKHVzZXJGcmllbmRseUFkZHJlc3MpO1xuICAgIHNldElzQ29waWVkU2hvd24odHJ1ZSk7XG4gICAgc2V0VGltZW91dCgoKSA9PiBzZXRJc0NvcGllZFNob3duKGZhbHNlKSwgMWUzKTtcbiAgfSk7XG4gIGNvbnN0IG9uRGlzY29ubmVjdCA9ICgpID0+IHtcbiAgICB0b25Db25uZWN0VWkuZGlzY29ubmVjdCgpO1xuICAgIHByb3BzLm9uQ2xvc2UoKTtcbiAgfTtcbiAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChBY2NvdW50QnV0dG9uRHJvcGRvd25TdHlsZWQsIHtcbiAgICByZWYociQpIHtcbiAgICAgIGNvbnN0IF9yZWYkID0gcHJvcHMucmVmO1xuICAgICAgdHlwZW9mIF9yZWYkID09PSBcImZ1bmN0aW9uXCIgPyBfcmVmJChyJCkgOiBwcm9wcy5yZWYgPSByJDtcbiAgICB9LFxuICAgIGdldCBbXCJjbGFzc1wiXSgpIHtcbiAgICAgIHJldHVybiBwcm9wcy5jbGFzcztcbiAgICB9LFxuICAgIFwiZGF0YS10Yy1kcm9wZG93blwiOiBcInRydWVcIixcbiAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KFVsU3R5bGVkLCB7XG4gICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICByZXR1cm4gWygoKSA9PiB7XG4gICAgICAgICAgICBjb25zdCBfZWwkID0gX3RtcGwkJDYuY2xvbmVOb2RlKHRydWUpO1xuICAgICAgICAgICAgaW5zZXJ0KF9lbCQsIGNyZWF0ZUNvbXBvbmVudChNZW51QnV0dG9uU3R5bGVkLCB7XG4gICAgICAgICAgICAgIG9uQ2xpY2s6ICgpID0+IG9uQ29weSgpLFxuICAgICAgICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIFtjcmVhdGVDb21wb25lbnQoQ29weUljb24sIHt9KSwgY3JlYXRlQ29tcG9uZW50KFNob3csIHtcbiAgICAgICAgICAgICAgICAgIGdldCB3aGVuKCkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gIWlzQ29waWVkU2hvd24oKTtcbiAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoTWVudUl0ZW1UZXh0LCB7XG4gICAgICAgICAgICAgICAgICAgICAgdHJhbnNsYXRpb25LZXk6IFwiYnV0dG9uLmRyb3Bkb3duLmNvcHlcIixcbiAgICAgICAgICAgICAgICAgICAgICBjaGlsZHJlbjogXCJDb3B5IGFkZHJlc3NcIlxuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9KSwgY3JlYXRlQ29tcG9uZW50KFNob3csIHtcbiAgICAgICAgICAgICAgICAgIGdldCB3aGVuKCkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gaXNDb3BpZWRTaG93bigpO1xuICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChNZW51SXRlbVRleHQsIHtcbiAgICAgICAgICAgICAgICAgICAgICB0cmFuc2xhdGlvbktleTogXCJidXR0b24uZHJvcGRvd24uY29waWVkXCIsXG4gICAgICAgICAgICAgICAgICAgICAgY2hpbGRyZW46IFwiQWRkcmVzcyBjb3BpZWQhXCJcbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSldO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KSk7XG4gICAgICAgICAgICByZXR1cm4gX2VsJDtcbiAgICAgICAgICB9KSgpLCAoKCkgPT4ge1xuICAgICAgICAgICAgY29uc3QgX2VsJDIgPSBfdG1wbCQkNi5jbG9uZU5vZGUodHJ1ZSk7XG4gICAgICAgICAgICBpbnNlcnQoX2VsJDIsIGNyZWF0ZUNvbXBvbmVudChNZW51QnV0dG9uU3R5bGVkLCB7XG4gICAgICAgICAgICAgIG9uQ2xpY2s6ICgpID0+IG9uRGlzY29ubmVjdCgpLFxuICAgICAgICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIFtjcmVhdGVDb21wb25lbnQoRGlzY29ubmVjdEljb24sIHt9KSwgY3JlYXRlQ29tcG9uZW50KE1lbnVJdGVtVGV4dCwge1xuICAgICAgICAgICAgICAgICAgdHJhbnNsYXRpb25LZXk6IFwiYnV0dG9uLmRyb3Bkb3duLmRpc2Nvbm5lY3RcIixcbiAgICAgICAgICAgICAgICAgIGNoaWxkcmVuOiBcIkRpc2Nvbm5lY3RcIlxuICAgICAgICAgICAgICAgIH0pXTtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSkpO1xuICAgICAgICAgICAgcmV0dXJuIF9lbCQyO1xuICAgICAgICAgIH0pKCldO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9XG4gIH0pO1xufTtcbmNvbnN0IGJvcmRlcnMkMiA9IHtcbiAgbTogXCIxNnB4XCIsXG4gIHM6IFwiOHB4XCIsXG4gIG5vbmU6IFwiMFwiXG59O1xuY29uc3QgTm90aWZpY2F0aW9uU3R5bGVkID0gc3R5bGVkLmRpdmBcbiAgICB3aWR0aDogMjU2cHg7XG4gICAgcGFkZGluZzogMTJweCAxNnB4O1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZ2FwOiA5cHg7XG5cbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkeyhwcm9wcykgPT4gcHJvcHMudGhlbWUuY29sb3JzLmJhY2tncm91bmQucHJpbWFyeX07XG4gICAgYm94LXNoYWRvdzogMCA0cHggMjRweCByZ2JhKDAsIDAsIDAsIDAuMTYpO1xuICAgIGJvcmRlci1yYWRpdXM6ICR7KHByb3BzKSA9PiBib3JkZXJzJDJbcHJvcHMudGhlbWUuYm9yZGVyUmFkaXVzXX07XG5gO1xuY29uc3QgTm90aWZpY2F0aW9uQ29udGVudFN0eWxlZCA9IHN0eWxlZC5kaXZgXG4gICAgd2lkdGg6IDE5MnB4O1xuXG4gICAgPiBoMyB7XG4gICAgICAgIGZvbnQtc2l6ZTogMTVweDtcbiAgICB9XG5gO1xuY29uc3QgVGV4dFN0eWxlZCQyID0gc3R5bGVkKFRleHQpYFxuICAgIG1hcmdpbi10b3A6IDRweDtcbiAgICBjb2xvcjogJHsocHJvcHMpID0+IHByb3BzLnRoZW1lLmNvbG9ycy50ZXh0LnNlY29uZGFyeX07XG5gO1xuY29uc3QgTm90aWZpY2F0aW9uID0gKHByb3BzKSA9PiB7XG4gIGNvbnN0IGRhdGFBdHRycyA9IHVzZURhdGFBdHRyaWJ1dGVzKHByb3BzKTtcbiAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChOb3RpZmljYXRpb25TdHlsZWQsIG1lcmdlUHJvcHMoe1xuICAgIGdldCBbXCJjbGFzc1wiXSgpIHtcbiAgICAgIHJldHVybiBwcm9wcy5jbGFzcztcbiAgICB9LFxuICAgIFwiZGF0YS10Yy1ub3RpZmljYXRpb25cIjogXCJ0cnVlXCJcbiAgfSwgZGF0YUF0dHJzLCB7XG4gICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgcmV0dXJuIFtjcmVhdGVDb21wb25lbnQoTm90aWZpY2F0aW9uQ29udGVudFN0eWxlZCwge1xuICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgcmV0dXJuIFtjcmVhdGVDb21wb25lbnQoSDMsIHtcbiAgICAgICAgICAgIGdldCB0cmFuc2xhdGlvbktleSgpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIHByb3BzLmhlYWRlci50cmFuc2xhdGlvbktleTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBnZXQgdHJhbnNsYXRpb25WYWx1ZXMoKSB7XG4gICAgICAgICAgICAgIHJldHVybiBwcm9wcy5oZWFkZXIudHJhbnNsYXRpb25WYWx1ZXM7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgICAgICByZXR1cm4gcHJvcHMuY2hpbGRyZW47XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSksIGNyZWF0ZUNvbXBvbmVudChTaG93LCB7XG4gICAgICAgICAgICBnZXQgd2hlbigpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIHByb3BzLnRleHQ7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgICAgICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KFRleHRTdHlsZWQkMiwge1xuICAgICAgICAgICAgICAgIGdldCB0cmFuc2xhdGlvbktleSgpIHtcbiAgICAgICAgICAgICAgICAgIHJldHVybiBwcm9wcy50ZXh0LnRyYW5zbGF0aW9uS2V5O1xuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgZ2V0IHRyYW5zbGF0aW9uVmFsdWVzKCkge1xuICAgICAgICAgICAgICAgICAgcmV0dXJuIHByb3BzLnRleHQudHJhbnNsYXRpb25WYWx1ZXM7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9KV07XG4gICAgICAgIH1cbiAgICAgIH0pLCBjcmVhdGVNZW1vKCgpID0+IHByb3BzLmljb24pXTtcbiAgICB9XG4gIH0pKTtcbn07XG5jb25zdCBMb2FkZXJJY29uU3R5bGVkJDIgPSBzdHlsZWQoTG9hZGVySWNvbilgXG4gICAgYWxpZ24tc2VsZjogY2VudGVyO1xuYDtcbmNvbnN0IENvbmZpcm1PcGVyYXRpb25Ob3RpZmljYXRpb24gPSAocHJvcHMpID0+IHtcbiAgY29uc3QgdG9uQ29ubmVjdFVJID0gdXNlQ29udGV4dChUb25Db25uZWN0VWlDb250ZXh0KTtcbiAgY29uc3QgW3QyXSA9IHVzZUkxOG4oKTtcbiAgY29uc3QgbmFtZSA9ICgpID0+IHRvbkNvbm5lY3RVSS53YWxsZXQgJiYgXCJuYW1lXCIgaW4gdG9uQ29ubmVjdFVJLndhbGxldCA/IHRvbkNvbm5lY3RVSS53YWxsZXQubmFtZSA6IHQyKFwiY29tbW9uLnlvdXJXYWxsZXRcIiwge30sIFwiWW91ciB3YWxsZXRcIik7XG4gIHJldHVybiBjcmVhdGVDb21wb25lbnQoTm90aWZpY2F0aW9uLCB7XG4gICAgZ2V0IGhlYWRlcigpIHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIHRyYW5zbGF0aW9uS2V5OiBcIm5vdGlmaWNhdGlvbnMuY29uZmlybS5oZWFkZXJcIixcbiAgICAgICAgdHJhbnNsYXRpb25WYWx1ZXM6IHtcbiAgICAgICAgICBuYW1lOiBuYW1lKClcbiAgICAgICAgfVxuICAgICAgfTtcbiAgICB9LFxuICAgIGdldCBbXCJjbGFzc1wiXSgpIHtcbiAgICAgIHJldHVybiBwcm9wcy5jbGFzcztcbiAgICB9LFxuICAgIGdldCBpY29uKCkge1xuICAgICAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChMb2FkZXJJY29uU3R5bGVkJDIsIHt9KTtcbiAgICB9LFxuICAgIFwiZGF0YS10Yy1ub3RpZmljYXRpb24tY29uZmlybVwiOiBcInRydWVcIixcbiAgICBjaGlsZHJlbjogXCJDb25maXJtIG9wZXJhdGlvbiBpbiB5b3VyIHdhbGxldFwiXG4gIH0pO1xufTtcbmNvbnN0IEVycm9ySWNvblN0eWxlZCQyID0gc3R5bGVkKEVycm9ySWNvbilgXG4gICAgbWFyZ2luLXRvcDogMnB4O1xuYDtcbmNvbnN0IEVycm9yVHJhbnNhY3Rpb25Ob3RpZmljYXRpb24gPSAocHJvcHMpID0+IHtcbiAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChOb3RpZmljYXRpb24sIHtcbiAgICBoZWFkZXI6IHtcbiAgICAgIHRyYW5zbGF0aW9uS2V5OiBcIm5vdGlmaWNhdGlvbnMudHJhbnNhY3Rpb25DYW5jZWxlZC5oZWFkZXJcIlxuICAgIH0sXG4gICAgdGV4dDoge1xuICAgICAgdHJhbnNsYXRpb25LZXk6IFwibm90aWZpY2F0aW9ucy50cmFuc2FjdGlvbkNhbmNlbGVkLnRleHRcIlxuICAgIH0sXG4gICAgZ2V0IGljb24oKSB7XG4gICAgICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KEVycm9ySWNvblN0eWxlZCQyLCB7XG4gICAgICAgIHNpemU6IFwieHNcIlxuICAgICAgfSk7XG4gICAgfSxcbiAgICBnZXQgW1wiY2xhc3NcIl0oKSB7XG4gICAgICByZXR1cm4gcHJvcHMuY2xhc3M7XG4gICAgfSxcbiAgICBcImRhdGEtdGMtbm90aWZpY2F0aW9uLXR4LWNhbmNlbGxlZFwiOiBcInRydWVcIixcbiAgICBjaGlsZHJlbjogXCJUcmFuc2FjdGlvbiBjYW5jZWxsZWRcIlxuICB9KTtcbn07XG5jb25zdCBTdWNjZXNzSWNvblN0eWxlZCA9IHN0eWxlZChTdWNjZXNzSWNvbilgXG4gICAgbWFyZ2luLXRvcDogMnB4O1xuYDtcbmNvbnN0IFN1Y2Nlc3NUcmFuc2FjdGlvbk5vdGlmaWNhdGlvbiA9IChwcm9wcykgPT4ge1xuICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KE5vdGlmaWNhdGlvbiwge1xuICAgIGhlYWRlcjoge1xuICAgICAgdHJhbnNsYXRpb25LZXk6IFwibm90aWZpY2F0aW9ucy50cmFuc2FjdGlvblNlbnQuaGVhZGVyXCJcbiAgICB9LFxuICAgIHRleHQ6IHtcbiAgICAgIHRyYW5zbGF0aW9uS2V5OiBcIm5vdGlmaWNhdGlvbnMudHJhbnNhY3Rpb25TZW50LnRleHRcIlxuICAgIH0sXG4gICAgZ2V0IGljb24oKSB7XG4gICAgICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KFN1Y2Nlc3NJY29uU3R5bGVkLCB7fSk7XG4gICAgfSxcbiAgICBnZXQgW1wiY2xhc3NcIl0oKSB7XG4gICAgICByZXR1cm4gcHJvcHMuY2xhc3M7XG4gICAgfSxcbiAgICBcImRhdGEtdGMtbm90aWZpY2F0aW9uLXR4LXNlbnRcIjogXCJ0cnVlXCIsXG4gICAgY2hpbGRyZW46IFwiVHJhbnNhY3Rpb24gc2VudFwiXG4gIH0pO1xufTtcbmNvbnN0IE5vdGlmaWNhdGlvbkNsYXNzID0gdWBcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLThweCk7XG4gICAgbWFyZ2luLWJvdHRvbTogMTJweDtcbmA7XG5jb25zdCBkZWZhdWx0Q29uZmlnID0ge1xuICB0aW1lb3V0OiA0NTAwXG59O1xuY29uc3QgW2xhdGVzdEFjdGlvbiwgc2V0TGF0ZXN0QWN0aW9uXSA9IGNyZWF0ZVNpZ25hbChudWxsKTtcbmZ1bmN0aW9uIHVzZU9wZW5lZE5vdGlmaWNhdGlvbnMoY29uZmlnKSB7XG4gIGNvbnN0IHsgdGltZW91dCB9ID0gX19zcHJlYWRWYWx1ZXMoX19zcHJlYWRWYWx1ZXMoe30sIGRlZmF1bHRDb25maWcpLCBjb25maWcpO1xuICBjb25zdCBbb3BlbmVkTm90aWZpY2F0aW9ucywgc2V0T3BlbmVkTm90aWZpY2F0aW9uc10gPSBjcmVhdGVTaWduYWwoW10pO1xuICBjb25zdCBbdGltZW91dElkcywgc2V0VGltZW91dElkc10gPSBjcmVhdGVTaWduYWwoW10pO1xuICBjcmVhdGVFZmZlY3QoXG4gICAgb24oYWN0aW9uLCAoYWN0aW9uMikgPT4ge1xuICAgICAgdmFyIF9hMjtcbiAgICAgIGlmICghYWN0aW9uMiB8fCAhYWN0aW9uMi5zaG93Tm90aWZpY2F0aW9uKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cbiAgICAgIGlmIChsYXRlc3RBY3Rpb24oKSA9PT0gYWN0aW9uMikge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgICBpZiAoKChfYTIgPSBsYXRlc3RBY3Rpb24oKSkgPT0gbnVsbCA/IHZvaWQgMCA6IF9hMi5uYW1lKSA9PT0gXCJjb25maXJtLXRyYW5zYWN0aW9uXCIgJiYgYWN0aW9uMi5uYW1lID09PSBcImNvbmZpcm0tdHJhbnNhY3Rpb25cIikge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgICBzZXRMYXRlc3RBY3Rpb24oYWN0aW9uMik7XG4gICAgICBzZXRPcGVuZWROb3RpZmljYXRpb25zKFxuICAgICAgICAob3BlbmVkTm90aWZpY2F0aW9uczIpID0+IG9wZW5lZE5vdGlmaWNhdGlvbnMyLmZpbHRlcigobjIpID0+IG4yLmFjdGlvbiAhPT0gXCJjb25maXJtLXRyYW5zYWN0aW9uXCIpXG4gICAgICApO1xuICAgICAgY29uc3Qgbm90aWZpY2F0aW9uID0geyBhY3Rpb246IGFjdGlvbjIubmFtZSB9O1xuICAgICAgc2V0T3BlbmVkTm90aWZpY2F0aW9ucygob3BlbmVkTm90aWZpY2F0aW9uczIpID0+IFsuLi5vcGVuZWROb3RpZmljYXRpb25zMiwgbm90aWZpY2F0aW9uXSk7XG4gICAgICBjb25zdCB0aW1lb3V0SWQgPSBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgc2V0T3BlbmVkTm90aWZpY2F0aW9ucyhcbiAgICAgICAgICAob3BlbmVkTm90aWZpY2F0aW9uczIpID0+IG9wZW5lZE5vdGlmaWNhdGlvbnMyLmZpbHRlcigobjIpID0+IG4yICE9PSBub3RpZmljYXRpb24pXG4gICAgICAgICk7XG4gICAgICAgIHNldFRpbWVvdXRJZHMoKHRpbWVvdXRJZHMyKSA9PiB0aW1lb3V0SWRzMi5maWx0ZXIoKGlkKSA9PiBpZCAhPT0gdGltZW91dElkKSk7XG4gICAgICB9LCB0aW1lb3V0KTtcbiAgICAgIHNldFRpbWVvdXRJZHMoKHRpbWVvdXRJZHMyKSA9PiBbLi4udGltZW91dElkczIsIHRpbWVvdXRJZF0pO1xuICAgIH0pXG4gICk7XG4gIG9uQ2xlYW51cCgoKSA9PiB7XG4gICAgdGltZW91dElkcygpLmZvckVhY2goKGlkKSA9PiBjbGVhclRpbWVvdXQoaWQpKTtcbiAgfSk7XG4gIHJldHVybiBvcGVuZWROb3RpZmljYXRpb25zO1xufVxuY29uc3QgX3RtcGwkJDUgPSAvKiBAX19QVVJFX18gKi8gdGVtcGxhdGUkMShgPGRpdiBkYXRhLXRjLWxpc3Qtbm90aWZpY2F0aW9ucz1cInRydWVcIj48L2Rpdj5gKTtcbmNvbnN0IE5vdGlmaWNhdGlvbnMgPSAocHJvcHMpID0+IHtcbiAgY29uc3Qgb3BlbmVkTm90aWZpY2F0aW9ucyA9IHVzZU9wZW5lZE5vdGlmaWNhdGlvbnMoKTtcbiAgcmV0dXJuICgoKSA9PiB7XG4gICAgY29uc3QgX2VsJCA9IF90bXBsJCQ1LmNsb25lTm9kZSh0cnVlKTtcbiAgICBpbnNlcnQoX2VsJCwgY3JlYXRlQ29tcG9uZW50KFRyYW5zaXRpb25Hcm91cCwge1xuICAgICAgb25CZWZvcmVFbnRlcjogKGVsKSA9PiB7XG4gICAgICAgIGFuaW1hdGUoZWwsIFt7XG4gICAgICAgICAgb3BhY2l0eTogMCxcbiAgICAgICAgICB0cmFuc2Zvcm06IFwidHJhbnNsYXRlWSgwKVwiXG4gICAgICAgIH0sIHtcbiAgICAgICAgICBvcGFjaXR5OiAxLFxuICAgICAgICAgIHRyYW5zZm9ybTogXCJ0cmFuc2xhdGVZKC04cHgpXCJcbiAgICAgICAgfV0sIHtcbiAgICAgICAgICBkdXJhdGlvbjogMjAwXG4gICAgICAgIH0pO1xuICAgICAgfSxcbiAgICAgIG9uRXhpdDogKGVsLCBkb25lKSA9PiB7XG4gICAgICAgIGNvbnN0IGEyID0gYW5pbWF0ZShlbCwgW3tcbiAgICAgICAgICBvcGFjaXR5OiAxLFxuICAgICAgICAgIHRyYW5zZm9ybTogXCJ0cmFuc2xhdGVZKC04cHgpXCJcbiAgICAgICAgfSwge1xuICAgICAgICAgIG9wYWNpdHk6IDAsXG4gICAgICAgICAgdHJhbnNmb3JtOiBcInRyYW5zbGF0ZVkoLTMwcHgpXCJcbiAgICAgICAgfV0sIHtcbiAgICAgICAgICBkdXJhdGlvbjogMjAwXG4gICAgICAgIH0pO1xuICAgICAgICBhMi5maW5pc2hlZC50aGVuKGRvbmUpO1xuICAgICAgfSxcbiAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChGb3IsIHtcbiAgICAgICAgICBnZXQgZWFjaCgpIHtcbiAgICAgICAgICAgIHJldHVybiBvcGVuZWROb3RpZmljYXRpb25zKCk7XG4gICAgICAgICAgfSxcbiAgICAgICAgICBjaGlsZHJlbjogKG9wZW5lZE5vdGlmaWNhdGlvbikgPT4gY3JlYXRlQ29tcG9uZW50KFN3aXRjaCwge1xuICAgICAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgICAgICByZXR1cm4gW2NyZWF0ZUNvbXBvbmVudChNYXRjaCwge1xuICAgICAgICAgICAgICAgIGdldCB3aGVuKCkge1xuICAgICAgICAgICAgICAgICAgcmV0dXJuIG9wZW5lZE5vdGlmaWNhdGlvbi5hY3Rpb24gPT09IFwidHJhbnNhY3Rpb24tc2VudFwiO1xuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgICAgICAgICAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChTdWNjZXNzVHJhbnNhY3Rpb25Ob3RpZmljYXRpb24sIHtcbiAgICAgICAgICAgICAgICAgICAgXCJjbGFzc1wiOiBOb3RpZmljYXRpb25DbGFzc1xuICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICB9KSwgY3JlYXRlQ29tcG9uZW50KE1hdGNoLCB7XG4gICAgICAgICAgICAgICAgZ2V0IHdoZW4oKSB7XG4gICAgICAgICAgICAgICAgICByZXR1cm4gb3BlbmVkTm90aWZpY2F0aW9uLmFjdGlvbiA9PT0gXCJ0cmFuc2FjdGlvbi1jYW5jZWxlZFwiO1xuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgICAgICAgICAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChFcnJvclRyYW5zYWN0aW9uTm90aWZpY2F0aW9uLCB7XG4gICAgICAgICAgICAgICAgICAgIFwiY2xhc3NcIjogTm90aWZpY2F0aW9uQ2xhc3NcbiAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgfSksIGNyZWF0ZUNvbXBvbmVudChNYXRjaCwge1xuICAgICAgICAgICAgICAgIGdldCB3aGVuKCkge1xuICAgICAgICAgICAgICAgICAgcmV0dXJuIG9wZW5lZE5vdGlmaWNhdGlvbi5hY3Rpb24gPT09IFwiY29uZmlybS10cmFuc2FjdGlvblwiO1xuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgICAgICAgICAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChDb25maXJtT3BlcmF0aW9uTm90aWZpY2F0aW9uLCB7XG4gICAgICAgICAgICAgICAgICAgIFwiY2xhc3NcIjogTm90aWZpY2F0aW9uQ2xhc3NcbiAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgfSldO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH0pXG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgIH0pKTtcbiAgICBjcmVhdGVSZW5kZXJFZmZlY3QoKCkgPT4gY2xhc3NOYW1lKF9lbCQsIHByb3BzLmNsYXNzKSk7XG4gICAgcmV0dXJuIF9lbCQ7XG4gIH0pKCk7XG59O1xuY29uc3QgQWNjb3VudEJ1dHRvblN0eWxlZCA9IHN0eWxlZChCdXR0b24pYFxuICAgIGJhY2tncm91bmQtY29sb3I6ICR7KHByb3BzKSA9PiBwcm9wcy50aGVtZS5jb2xvcnMuY29ubmVjdEJ1dHRvbi5iYWNrZ3JvdW5kfTtcbiAgICBjb2xvcjogJHsocHJvcHMpID0+IHByb3BzLnRoZW1lLmNvbG9ycy5jb25uZWN0QnV0dG9uLmZvcmVncm91bmR9O1xuICAgIGJveC1zaGFkb3c6ICR7KHByb3BzKSA9PiBgMCA0cHggMjRweCAke3JnYmEocHJvcHMudGhlbWUuY29sb3JzLmNvbnN0YW50LmJsYWNrLCAwLjE2KX1gfTtcbiAgICBwYWRkaW5nOiA4cHggMTZweCA4cHggMTJweDtcblxuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBnYXA6IDRweDtcbiAgICBoZWlnaHQ6IDQwcHg7XG5gO1xuY29uc3QgRHJvcGRvd25CdXR0b25TdHlsZWQgPSBzdHlsZWQoQWNjb3VudEJ1dHRvblN0eWxlZClgXG4gICAgcGFkZGluZzogMTJweCAxNnB4O1xuICAgIG1pbi13aWR0aDogMTQ4cHg7XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogJHsocHJvcHMpID0+IHByb3BzLnRoZW1lLmNvbG9ycy5iYWNrZ3JvdW5kLnByaW1hcnl9O1xuYDtcbmNvbnN0IExvYWRlckJ1dHRvblN0eWxlZCQxID0gc3R5bGVkKEJ1dHRvbilgXG4gICAgbWluLXdpZHRoOiAxNDhweDtcbiAgICBoZWlnaHQ6IDQwcHg7XG5cbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkeyhwcm9wcykgPT4gcHJvcHMudGhlbWUuY29sb3JzLmJhY2tncm91bmQucHJpbWFyeX07XG4gICAgY29sb3I6ICR7KHByb3BzKSA9PiBwcm9wcy50aGVtZS5jb2xvcnMuY29ubmVjdEJ1dHRvbi5mb3JlZ3JvdW5kfTtcbiAgICBib3gtc2hhZG93OiAkeyhwcm9wcykgPT4gYDAgNHB4IDI0cHggJHtyZ2JhKHByb3BzLnRoZW1lLmNvbG9ycy5jb25zdGFudC5ibGFjaywgMC4xNil9YH07XG5cbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG5gO1xuY29uc3QgTG9hZGVySWNvblN0eWxlZCQxID0gc3R5bGVkKExvYWRlckljb24pYFxuICAgIGhlaWdodDogMThweDtcbiAgICB3aWR0aDogMThweDtcbmA7XG5jb25zdCBEcm9wZG93bkNvbnRhaW5lclN0eWxlZCA9IHN0eWxlZC5kaXZgXG4gICAgd2lkdGg6IGZpdC1jb250ZW50O1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICBhbGlnbi1pdGVtczogZmxleC1lbmQ7XG5gO1xuY29uc3QgRHJvcGRvd25TdHlsZWQgPSBzdHlsZWQoQWNjb3VudEJ1dHRvbkRyb3Bkb3duKWBcbiAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICAgIG92ZXJmbG93OiBoaWRkZW47XG4gICAgbWFyZ2luLXRvcDogMTJweDtcbmA7XG5jb25zdCBOb3RpZmljYXRpb25zU3R5bGVkID0gc3R5bGVkKE5vdGlmaWNhdGlvbnMpYFxuICAgID4gZGl2OmZpcnN0LWNoaWxkIHtcbiAgICAgICAgbWFyZ2luLXRvcDogMjBweDtcbiAgICB9XG5gO1xuZnVuY3Rpb24gZ2V0U2lkZShwbGFjZW1lbnQpIHtcbiAgcmV0dXJuIHBsYWNlbWVudC5zcGxpdChcIi1cIilbMF07XG59XG5mdW5jdGlvbiBnZXRBbGlnbm1lbnQocGxhY2VtZW50KSB7XG4gIHJldHVybiBwbGFjZW1lbnQuc3BsaXQoXCItXCIpWzFdO1xufVxuZnVuY3Rpb24gZ2V0TWFpbkF4aXNGcm9tUGxhY2VtZW50KHBsYWNlbWVudCkge1xuICByZXR1cm4gW1widG9wXCIsIFwiYm90dG9tXCJdLmluY2x1ZGVzKGdldFNpZGUocGxhY2VtZW50KSkgPyBcInhcIiA6IFwieVwiO1xufVxuZnVuY3Rpb24gZ2V0TGVuZ3RoRnJvbUF4aXMoYXhpcykge1xuICByZXR1cm4gYXhpcyA9PT0gXCJ5XCIgPyBcImhlaWdodFwiIDogXCJ3aWR0aFwiO1xufVxuZnVuY3Rpb24gY29tcHV0ZUNvb3Jkc0Zyb21QbGFjZW1lbnQoX3JlZiwgcGxhY2VtZW50LCBydGwpIHtcbiAgbGV0IHtcbiAgICByZWZlcmVuY2UsXG4gICAgZmxvYXRpbmdcbiAgfSA9IF9yZWY7XG4gIGNvbnN0IGNvbW1vblggPSByZWZlcmVuY2UueCArIHJlZmVyZW5jZS53aWR0aCAvIDIgLSBmbG9hdGluZy53aWR0aCAvIDI7XG4gIGNvbnN0IGNvbW1vblkgPSByZWZlcmVuY2UueSArIHJlZmVyZW5jZS5oZWlnaHQgLyAyIC0gZmxvYXRpbmcuaGVpZ2h0IC8gMjtcbiAgY29uc3QgbWFpbkF4aXMgPSBnZXRNYWluQXhpc0Zyb21QbGFjZW1lbnQocGxhY2VtZW50KTtcbiAgY29uc3QgbGVuZ3RoID0gZ2V0TGVuZ3RoRnJvbUF4aXMobWFpbkF4aXMpO1xuICBjb25zdCBjb21tb25BbGlnbiA9IHJlZmVyZW5jZVtsZW5ndGhdIC8gMiAtIGZsb2F0aW5nW2xlbmd0aF0gLyAyO1xuICBjb25zdCBzaWRlID0gZ2V0U2lkZShwbGFjZW1lbnQpO1xuICBjb25zdCBpc1ZlcnRpY2FsID0gbWFpbkF4aXMgPT09IFwieFwiO1xuICBsZXQgY29vcmRzO1xuICBzd2l0Y2ggKHNpZGUpIHtcbiAgICBjYXNlIFwidG9wXCI6XG4gICAgICBjb29yZHMgPSB7XG4gICAgICAgIHg6IGNvbW1vblgsXG4gICAgICAgIHk6IHJlZmVyZW5jZS55IC0gZmxvYXRpbmcuaGVpZ2h0XG4gICAgICB9O1xuICAgICAgYnJlYWs7XG4gICAgY2FzZSBcImJvdHRvbVwiOlxuICAgICAgY29vcmRzID0ge1xuICAgICAgICB4OiBjb21tb25YLFxuICAgICAgICB5OiByZWZlcmVuY2UueSArIHJlZmVyZW5jZS5oZWlnaHRcbiAgICAgIH07XG4gICAgICBicmVhaztcbiAgICBjYXNlIFwicmlnaHRcIjpcbiAgICAgIGNvb3JkcyA9IHtcbiAgICAgICAgeDogcmVmZXJlbmNlLnggKyByZWZlcmVuY2Uud2lkdGgsXG4gICAgICAgIHk6IGNvbW1vbllcbiAgICAgIH07XG4gICAgICBicmVhaztcbiAgICBjYXNlIFwibGVmdFwiOlxuICAgICAgY29vcmRzID0ge1xuICAgICAgICB4OiByZWZlcmVuY2UueCAtIGZsb2F0aW5nLndpZHRoLFxuICAgICAgICB5OiBjb21tb25ZXG4gICAgICB9O1xuICAgICAgYnJlYWs7XG4gICAgZGVmYXVsdDpcbiAgICAgIGNvb3JkcyA9IHtcbiAgICAgICAgeDogcmVmZXJlbmNlLngsXG4gICAgICAgIHk6IHJlZmVyZW5jZS55XG4gICAgICB9O1xuICB9XG4gIHN3aXRjaCAoZ2V0QWxpZ25tZW50KHBsYWNlbWVudCkpIHtcbiAgICBjYXNlIFwic3RhcnRcIjpcbiAgICAgIGNvb3Jkc1ttYWluQXhpc10gLT0gY29tbW9uQWxpZ24gKiAocnRsICYmIGlzVmVydGljYWwgPyAtMSA6IDEpO1xuICAgICAgYnJlYWs7XG4gICAgY2FzZSBcImVuZFwiOlxuICAgICAgY29vcmRzW21haW5BeGlzXSArPSBjb21tb25BbGlnbiAqIChydGwgJiYgaXNWZXJ0aWNhbCA/IC0xIDogMSk7XG4gICAgICBicmVhaztcbiAgfVxuICByZXR1cm4gY29vcmRzO1xufVxuY29uc3QgY29tcHV0ZVBvc2l0aW9uJDEgPSAocmVmZXJlbmNlLCBmbG9hdGluZywgY29uZmlnKSA9PiBfX2FzeW5jKHZvaWQgMCwgbnVsbCwgZnVuY3Rpb24qICgpIHtcbiAgY29uc3Qge1xuICAgIHBsYWNlbWVudCA9IFwiYm90dG9tXCIsXG4gICAgc3RyYXRlZ3kgPSBcImFic29sdXRlXCIsXG4gICAgbWlkZGxld2FyZSA9IFtdLFxuICAgIHBsYXRmb3JtOiBwbGF0Zm9ybTJcbiAgfSA9IGNvbmZpZztcbiAgY29uc3QgdmFsaWRNaWRkbGV3YXJlID0gbWlkZGxld2FyZS5maWx0ZXIoQm9vbGVhbik7XG4gIGNvbnN0IHJ0bCA9IHlpZWxkIHBsYXRmb3JtMi5pc1JUTCA9PSBudWxsID8gdm9pZCAwIDogcGxhdGZvcm0yLmlzUlRMKGZsb2F0aW5nKTtcbiAgaWYgKHt9Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xuICAgIGlmIChwbGF0Zm9ybTIgPT0gbnVsbCkge1xuICAgICAgY29uc29sZS5lcnJvcihbXCJGbG9hdGluZyBVSTogYHBsYXRmb3JtYCBwcm9wZXJ0eSB3YXMgbm90IHBhc3NlZCB0byBjb25maWcuIElmIHlvdVwiLCBcIndhbnQgdG8gdXNlIEZsb2F0aW5nIFVJIG9uIHRoZSB3ZWIsIGluc3RhbGwgQGZsb2F0aW5nLXVpL2RvbVwiLCBcImluc3RlYWQgb2YgdGhlIC9jb3JlIHBhY2thZ2UuIE90aGVyd2lzZSwgeW91IGNhbiBjcmVhdGUgeW91ciBvd25cIiwgXCJgcGxhdGZvcm1gOiBodHRwczovL2Zsb2F0aW5nLXVpLmNvbS9kb2NzL3BsYXRmb3JtXCJdLmpvaW4oXCIgXCIpKTtcbiAgICB9XG4gICAgaWYgKHZhbGlkTWlkZGxld2FyZS5maWx0ZXIoKF9yZWYpID0+IHtcbiAgICAgIGxldCB7XG4gICAgICAgIG5hbWVcbiAgICAgIH0gPSBfcmVmO1xuICAgICAgcmV0dXJuIG5hbWUgPT09IFwiYXV0b1BsYWNlbWVudFwiIHx8IG5hbWUgPT09IFwiZmxpcFwiO1xuICAgIH0pLmxlbmd0aCA+IDEpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihbXCJGbG9hdGluZyBVSTogZHVwbGljYXRlIGBmbGlwYCBhbmQvb3IgYGF1dG9QbGFjZW1lbnRgIG1pZGRsZXdhcmVcIiwgXCJkZXRlY3RlZC4gVGhpcyB3aWxsIGxlYWQgdG8gYW4gaW5maW5pdGUgbG9vcC4gRW5zdXJlIG9ubHkgb25lIG9mXCIsIFwiZWl0aGVyIGhhcyBiZWVuIHBhc3NlZCB0byB0aGUgYG1pZGRsZXdhcmVgIGFycmF5LlwiXS5qb2luKFwiIFwiKSk7XG4gICAgfVxuICAgIGlmICghcmVmZXJlbmNlIHx8ICFmbG9hdGluZykge1xuICAgICAgY29uc29sZS5lcnJvcihbXCJGbG9hdGluZyBVSTogVGhlIHJlZmVyZW5jZSBhbmQvb3IgZmxvYXRpbmcgZWxlbWVudCB3YXMgbm90IGRlZmluZWRcIiwgXCJ3aGVuIGBjb21wdXRlUG9zaXRpb24oKWAgd2FzIGNhbGxlZC4gRW5zdXJlIHRoYXQgYm90aCBlbGVtZW50cyBoYXZlXCIsIFwiYmVlbiBjcmVhdGVkIGFuZCBjYW4gYmUgbWVhc3VyZWQuXCJdLmpvaW4oXCIgXCIpKTtcbiAgICB9XG4gIH1cbiAgbGV0IHJlY3RzID0geWllbGQgcGxhdGZvcm0yLmdldEVsZW1lbnRSZWN0cyh7XG4gICAgcmVmZXJlbmNlLFxuICAgIGZsb2F0aW5nLFxuICAgIHN0cmF0ZWd5XG4gIH0pO1xuICBsZXQge1xuICAgIHgsXG4gICAgeVxuICB9ID0gY29tcHV0ZUNvb3Jkc0Zyb21QbGFjZW1lbnQocmVjdHMsIHBsYWNlbWVudCwgcnRsKTtcbiAgbGV0IHN0YXRlZnVsUGxhY2VtZW50ID0gcGxhY2VtZW50O1xuICBsZXQgbWlkZGxld2FyZURhdGEgPSB7fTtcbiAgbGV0IHJlc2V0Q291bnQgPSAwO1xuICBmb3IgKGxldCBpMiA9IDA7IGkyIDwgdmFsaWRNaWRkbGV3YXJlLmxlbmd0aDsgaTIrKykge1xuICAgIGNvbnN0IHtcbiAgICAgIG5hbWUsXG4gICAgICBmblxuICAgIH0gPSB2YWxpZE1pZGRsZXdhcmVbaTJdO1xuICAgIGNvbnN0IHtcbiAgICAgIHg6IG5leHRYLFxuICAgICAgeTogbmV4dFksXG4gICAgICBkYXRhLFxuICAgICAgcmVzZXRcbiAgICB9ID0geWllbGQgZm4oe1xuICAgICAgeCxcbiAgICAgIHksXG4gICAgICBpbml0aWFsUGxhY2VtZW50OiBwbGFjZW1lbnQsXG4gICAgICBwbGFjZW1lbnQ6IHN0YXRlZnVsUGxhY2VtZW50LFxuICAgICAgc3RyYXRlZ3ksXG4gICAgICBtaWRkbGV3YXJlRGF0YSxcbiAgICAgIHJlY3RzLFxuICAgICAgcGxhdGZvcm06IHBsYXRmb3JtMixcbiAgICAgIGVsZW1lbnRzOiB7XG4gICAgICAgIHJlZmVyZW5jZSxcbiAgICAgICAgZmxvYXRpbmdcbiAgICAgIH1cbiAgICB9KTtcbiAgICB4ID0gbmV4dFggIT0gbnVsbCA/IG5leHRYIDogeDtcbiAgICB5ID0gbmV4dFkgIT0gbnVsbCA/IG5leHRZIDogeTtcbiAgICBtaWRkbGV3YXJlRGF0YSA9IF9fc3ByZWFkUHJvcHMoX19zcHJlYWRWYWx1ZXMoe30sIG1pZGRsZXdhcmVEYXRhKSwge1xuICAgICAgW25hbWVdOiBfX3NwcmVhZFZhbHVlcyhfX3NwcmVhZFZhbHVlcyh7fSwgbWlkZGxld2FyZURhdGFbbmFtZV0pLCBkYXRhKVxuICAgIH0pO1xuICAgIGlmICh7fS5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcbiAgICAgIGlmIChyZXNldENvdW50ID4gNTApIHtcbiAgICAgICAgY29uc29sZS53YXJuKFtcIkZsb2F0aW5nIFVJOiBUaGUgbWlkZGxld2FyZSBsaWZlY3ljbGUgYXBwZWFycyB0byBiZSBydW5uaW5nIGluIGFuXCIsIFwiaW5maW5pdGUgbG9vcC4gVGhpcyBpcyB1c3VhbGx5IGNhdXNlZCBieSBhIGByZXNldGAgY29udGludWFsbHlcIiwgXCJiZWluZyByZXR1cm5lZCB3aXRob3V0IGEgYnJlYWsgY29uZGl0aW9uLlwiXS5qb2luKFwiIFwiKSk7XG4gICAgICB9XG4gICAgfVxuICAgIGlmIChyZXNldCAmJiByZXNldENvdW50IDw9IDUwKSB7XG4gICAgICByZXNldENvdW50Kys7XG4gICAgICBpZiAodHlwZW9mIHJlc2V0ID09PSBcIm9iamVjdFwiKSB7XG4gICAgICAgIGlmIChyZXNldC5wbGFjZW1lbnQpIHtcbiAgICAgICAgICBzdGF0ZWZ1bFBsYWNlbWVudCA9IHJlc2V0LnBsYWNlbWVudDtcbiAgICAgICAgfVxuICAgICAgICBpZiAocmVzZXQucmVjdHMpIHtcbiAgICAgICAgICByZWN0cyA9IHJlc2V0LnJlY3RzID09PSB0cnVlID8geWllbGQgcGxhdGZvcm0yLmdldEVsZW1lbnRSZWN0cyh7XG4gICAgICAgICAgICByZWZlcmVuY2UsXG4gICAgICAgICAgICBmbG9hdGluZyxcbiAgICAgICAgICAgIHN0cmF0ZWd5XG4gICAgICAgICAgfSkgOiByZXNldC5yZWN0cztcbiAgICAgICAgfVxuICAgICAgICAoe1xuICAgICAgICAgIHgsXG4gICAgICAgICAgeVxuICAgICAgICB9ID0gY29tcHV0ZUNvb3Jkc0Zyb21QbGFjZW1lbnQocmVjdHMsIHN0YXRlZnVsUGxhY2VtZW50LCBydGwpKTtcbiAgICAgIH1cbiAgICAgIGkyID0gLTE7XG4gICAgICBjb250aW51ZTtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIHtcbiAgICB4LFxuICAgIHksXG4gICAgcGxhY2VtZW50OiBzdGF0ZWZ1bFBsYWNlbWVudCxcbiAgICBzdHJhdGVneSxcbiAgICBtaWRkbGV3YXJlRGF0YVxuICB9O1xufSk7XG5mdW5jdGlvbiByZWN0VG9DbGllbnRSZWN0KHJlY3QpIHtcbiAgcmV0dXJuIF9fc3ByZWFkUHJvcHMoX19zcHJlYWRWYWx1ZXMoe30sIHJlY3QpLCB7XG4gICAgdG9wOiByZWN0LnksXG4gICAgbGVmdDogcmVjdC54LFxuICAgIHJpZ2h0OiByZWN0LnggKyByZWN0LndpZHRoLFxuICAgIGJvdHRvbTogcmVjdC55ICsgcmVjdC5oZWlnaHRcbiAgfSk7XG59XG5mdW5jdGlvbiBnZXRXaW5kb3cobm9kZSkge1xuICB2YXIgX25vZGUkb3duZXJEb2N1bWVudDtcbiAgcmV0dXJuICgoX25vZGUkb3duZXJEb2N1bWVudCA9IG5vZGUub3duZXJEb2N1bWVudCkgPT0gbnVsbCA/IHZvaWQgMCA6IF9ub2RlJG93bmVyRG9jdW1lbnQuZGVmYXVsdFZpZXcpIHx8IHdpbmRvdztcbn1cbmZ1bmN0aW9uIGdldENvbXB1dGVkU3R5bGUkMShlbGVtZW50KSB7XG4gIHJldHVybiBnZXRXaW5kb3coZWxlbWVudCkuZ2V0Q29tcHV0ZWRTdHlsZShlbGVtZW50KTtcbn1cbmZ1bmN0aW9uIGdldE5vZGVOYW1lKG5vZGUpIHtcbiAgcmV0dXJuIGlzTm9kZShub2RlKSA/IChub2RlLm5vZGVOYW1lIHx8IFwiXCIpLnRvTG93ZXJDYXNlKCkgOiBcIlwiO1xufVxubGV0IHVhU3RyaW5nO1xuZnVuY3Rpb24gZ2V0VUFTdHJpbmcoKSB7XG4gIGlmICh1YVN0cmluZykge1xuICAgIHJldHVybiB1YVN0cmluZztcbiAgfVxuICBjb25zdCB1YURhdGEgPSBuYXZpZ2F0b3IudXNlckFnZW50RGF0YTtcbiAgaWYgKHVhRGF0YSAmJiBBcnJheS5pc0FycmF5KHVhRGF0YS5icmFuZHMpKSB7XG4gICAgdWFTdHJpbmcgPSB1YURhdGEuYnJhbmRzLm1hcCgoaXRlbSkgPT4gaXRlbS5icmFuZCArIFwiL1wiICsgaXRlbS52ZXJzaW9uKS5qb2luKFwiIFwiKTtcbiAgICByZXR1cm4gdWFTdHJpbmc7XG4gIH1cbiAgcmV0dXJuIG5hdmlnYXRvci51c2VyQWdlbnQ7XG59XG5mdW5jdGlvbiBpc0hUTUxFbGVtZW50KHZhbHVlKSB7XG4gIHJldHVybiB2YWx1ZSBpbnN0YW5jZW9mIGdldFdpbmRvdyh2YWx1ZSkuSFRNTEVsZW1lbnQ7XG59XG5mdW5jdGlvbiBpc0VsZW1lbnQodmFsdWUpIHtcbiAgcmV0dXJuIHZhbHVlIGluc3RhbmNlb2YgZ2V0V2luZG93KHZhbHVlKS5FbGVtZW50O1xufVxuZnVuY3Rpb24gaXNOb2RlKHZhbHVlKSB7XG4gIHJldHVybiB2YWx1ZSBpbnN0YW5jZW9mIGdldFdpbmRvdyh2YWx1ZSkuTm9kZTtcbn1cbmZ1bmN0aW9uIGlzU2hhZG93Um9vdChub2RlKSB7XG4gIGlmICh0eXBlb2YgU2hhZG93Um9vdCA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuICBjb25zdCBPd25FbGVtZW50ID0gZ2V0V2luZG93KG5vZGUpLlNoYWRvd1Jvb3Q7XG4gIHJldHVybiBub2RlIGluc3RhbmNlb2YgT3duRWxlbWVudCB8fCBub2RlIGluc3RhbmNlb2YgU2hhZG93Um9vdDtcbn1cbmZ1bmN0aW9uIGlzT3ZlcmZsb3dFbGVtZW50KGVsZW1lbnQpIHtcbiAgY29uc3Qge1xuICAgIG92ZXJmbG93LFxuICAgIG92ZXJmbG93WCxcbiAgICBvdmVyZmxvd1ksXG4gICAgZGlzcGxheVxuICB9ID0gZ2V0Q29tcHV0ZWRTdHlsZSQxKGVsZW1lbnQpO1xuICByZXR1cm4gL2F1dG98c2Nyb2xsfG92ZXJsYXl8aGlkZGVuLy50ZXN0KG92ZXJmbG93ICsgb3ZlcmZsb3dZICsgb3ZlcmZsb3dYKSAmJiAhW1wiaW5saW5lXCIsIFwiY29udGVudHNcIl0uaW5jbHVkZXMoZGlzcGxheSk7XG59XG5mdW5jdGlvbiBpc1RhYmxlRWxlbWVudChlbGVtZW50KSB7XG4gIHJldHVybiBbXCJ0YWJsZVwiLCBcInRkXCIsIFwidGhcIl0uaW5jbHVkZXMoZ2V0Tm9kZU5hbWUoZWxlbWVudCkpO1xufVxuZnVuY3Rpb24gaXNDb250YWluaW5nQmxvY2soZWxlbWVudCkge1xuICBjb25zdCBpc0ZpcmVmb3ggPSAvZmlyZWZveC9pLnRlc3QoZ2V0VUFTdHJpbmcoKSk7XG4gIGNvbnN0IGNzcyA9IGdldENvbXB1dGVkU3R5bGUkMShlbGVtZW50KTtcbiAgY29uc3QgYmFja2Ryb3BGaWx0ZXIgPSBjc3MuYmFja2Ryb3BGaWx0ZXIgfHwgY3NzLldlYmtpdEJhY2tkcm9wRmlsdGVyO1xuICByZXR1cm4gY3NzLnRyYW5zZm9ybSAhPT0gXCJub25lXCIgfHwgY3NzLnBlcnNwZWN0aXZlICE9PSBcIm5vbmVcIiB8fCAoYmFja2Ryb3BGaWx0ZXIgPyBiYWNrZHJvcEZpbHRlciAhPT0gXCJub25lXCIgOiBmYWxzZSkgfHwgaXNGaXJlZm94ICYmIGNzcy53aWxsQ2hhbmdlID09PSBcImZpbHRlclwiIHx8IGlzRmlyZWZveCAmJiAoY3NzLmZpbHRlciA/IGNzcy5maWx0ZXIgIT09IFwibm9uZVwiIDogZmFsc2UpIHx8IFtcInRyYW5zZm9ybVwiLCBcInBlcnNwZWN0aXZlXCJdLnNvbWUoKHZhbHVlKSA9PiBjc3Mud2lsbENoYW5nZS5pbmNsdWRlcyh2YWx1ZSkpIHx8IFtcInBhaW50XCIsIFwibGF5b3V0XCIsIFwic3RyaWN0XCIsIFwiY29udGVudFwiXS5zb21lKFxuICAgICh2YWx1ZSkgPT4ge1xuICAgICAgY29uc3QgY29udGFpbiA9IGNzcy5jb250YWluO1xuICAgICAgcmV0dXJuIGNvbnRhaW4gIT0gbnVsbCA/IGNvbnRhaW4uaW5jbHVkZXModmFsdWUpIDogZmFsc2U7XG4gICAgfVxuICApO1xufVxuZnVuY3Rpb24gaXNMYXlvdXRWaWV3cG9ydCgpIHtcbiAgcmV0dXJuICEvXigoPyFjaHJvbWV8YW5kcm9pZCkuKSpzYWZhcmkvaS50ZXN0KGdldFVBU3RyaW5nKCkpO1xufVxuZnVuY3Rpb24gaXNMYXN0VHJhdmVyc2FibGVOb2RlKG5vZGUpIHtcbiAgcmV0dXJuIFtcImh0bWxcIiwgXCJib2R5XCIsIFwiI2RvY3VtZW50XCJdLmluY2x1ZGVzKGdldE5vZGVOYW1lKG5vZGUpKTtcbn1cbmNvbnN0IG1pbiA9IE1hdGgubWluO1xuY29uc3QgbWF4ID0gTWF0aC5tYXg7XG5jb25zdCByb3VuZCA9IE1hdGgucm91bmQ7XG5jb25zdCBGQUxMQkFDS19TQ0FMRSA9IHtcbiAgeDogMSxcbiAgeTogMVxufTtcbmZ1bmN0aW9uIGdldFNjYWxlKGVsZW1lbnQpIHtcbiAgY29uc3QgZG9tRWxlbWVudCA9ICFpc0VsZW1lbnQoZWxlbWVudCkgJiYgZWxlbWVudC5jb250ZXh0RWxlbWVudCA/IGVsZW1lbnQuY29udGV4dEVsZW1lbnQgOiBpc0VsZW1lbnQoZWxlbWVudCkgPyBlbGVtZW50IDogbnVsbDtcbiAgaWYgKCFkb21FbGVtZW50KSB7XG4gICAgcmV0dXJuIEZBTExCQUNLX1NDQUxFO1xuICB9XG4gIGNvbnN0IHJlY3QgPSBkb21FbGVtZW50LmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO1xuICBjb25zdCBjc3MgPSBnZXRDb21wdXRlZFN0eWxlJDEoZG9tRWxlbWVudCk7XG4gIGlmIChjc3MuYm94U2l6aW5nICE9PSBcImJvcmRlci1ib3hcIikge1xuICAgIGlmICghaXNIVE1MRWxlbWVudChkb21FbGVtZW50KSkge1xuICAgICAgcmV0dXJuIEZBTExCQUNLX1NDQUxFO1xuICAgIH1cbiAgICByZXR1cm4ge1xuICAgICAgeDogZG9tRWxlbWVudC5vZmZzZXRXaWR0aCA+IDAgPyByb3VuZChyZWN0LndpZHRoKSAvIGRvbUVsZW1lbnQub2Zmc2V0V2lkdGggfHwgMSA6IDEsXG4gICAgICB5OiBkb21FbGVtZW50Lm9mZnNldEhlaWdodCA+IDAgPyByb3VuZChyZWN0LmhlaWdodCkgLyBkb21FbGVtZW50Lm9mZnNldEhlaWdodCB8fCAxIDogMVxuICAgIH07XG4gIH1cbiAgbGV0IHggPSByZWN0LndpZHRoIC8gcGFyc2VGbG9hdChjc3Mud2lkdGgpO1xuICBsZXQgeSA9IHJlY3QuaGVpZ2h0IC8gcGFyc2VGbG9hdChjc3MuaGVpZ2h0KTtcbiAgaWYgKCF4IHx8ICFOdW1iZXIuaXNGaW5pdGUoeCkpIHtcbiAgICB4ID0gMTtcbiAgfVxuICBpZiAoIXkgfHwgIU51bWJlci5pc0Zpbml0ZSh5KSkge1xuICAgIHkgPSAxO1xuICB9XG4gIHJldHVybiB7XG4gICAgeCxcbiAgICB5XG4gIH07XG59XG5mdW5jdGlvbiBnZXRCb3VuZGluZ0NsaWVudFJlY3QoZWxlbWVudCwgaW5jbHVkZVNjYWxlLCBpc0ZpeGVkU3RyYXRlZ3ksIG9mZnNldFBhcmVudCkge1xuICB2YXIgX3dpbiR2aXN1YWxWaWV3cG9ydCRvLCBfd2luJHZpc3VhbFZpZXdwb3J0LCBfd2luJHZpc3VhbFZpZXdwb3J0JG8yLCBfd2luJHZpc3VhbFZpZXdwb3J0MjtcbiAgaWYgKGluY2x1ZGVTY2FsZSA9PT0gdm9pZCAwKSB7XG4gICAgaW5jbHVkZVNjYWxlID0gZmFsc2U7XG4gIH1cbiAgaWYgKGlzRml4ZWRTdHJhdGVneSA9PT0gdm9pZCAwKSB7XG4gICAgaXNGaXhlZFN0cmF0ZWd5ID0gZmFsc2U7XG4gIH1cbiAgY29uc3QgY2xpZW50UmVjdCA9IGVsZW1lbnQuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XG4gIGxldCBzY2FsZSA9IEZBTExCQUNLX1NDQUxFO1xuICBpZiAoaW5jbHVkZVNjYWxlKSB7XG4gICAgaWYgKG9mZnNldFBhcmVudCkge1xuICAgICAgaWYgKGlzRWxlbWVudChvZmZzZXRQYXJlbnQpKSB7XG4gICAgICAgIHNjYWxlID0gZ2V0U2NhbGUob2Zmc2V0UGFyZW50KTtcbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgc2NhbGUgPSBnZXRTY2FsZShlbGVtZW50KTtcbiAgICB9XG4gIH1cbiAgY29uc3Qgd2luID0gaXNFbGVtZW50KGVsZW1lbnQpID8gZ2V0V2luZG93KGVsZW1lbnQpIDogd2luZG93O1xuICBjb25zdCBhZGRWaXN1YWxPZmZzZXRzID0gIWlzTGF5b3V0Vmlld3BvcnQoKSAmJiBpc0ZpeGVkU3RyYXRlZ3k7XG4gIGNvbnN0IHggPSAoY2xpZW50UmVjdC5sZWZ0ICsgKGFkZFZpc3VhbE9mZnNldHMgPyAoX3dpbiR2aXN1YWxWaWV3cG9ydCRvID0gKF93aW4kdmlzdWFsVmlld3BvcnQgPSB3aW4udmlzdWFsVmlld3BvcnQpID09IG51bGwgPyB2b2lkIDAgOiBfd2luJHZpc3VhbFZpZXdwb3J0Lm9mZnNldExlZnQpICE9IG51bGwgPyBfd2luJHZpc3VhbFZpZXdwb3J0JG8gOiAwIDogMCkpIC8gc2NhbGUueDtcbiAgY29uc3QgeSA9IChjbGllbnRSZWN0LnRvcCArIChhZGRWaXN1YWxPZmZzZXRzID8gKF93aW4kdmlzdWFsVmlld3BvcnQkbzIgPSAoX3dpbiR2aXN1YWxWaWV3cG9ydDIgPSB3aW4udmlzdWFsVmlld3BvcnQpID09IG51bGwgPyB2b2lkIDAgOiBfd2luJHZpc3VhbFZpZXdwb3J0Mi5vZmZzZXRUb3ApICE9IG51bGwgPyBfd2luJHZpc3VhbFZpZXdwb3J0JG8yIDogMCA6IDApKSAvIHNjYWxlLnk7XG4gIGNvbnN0IHdpZHRoID0gY2xpZW50UmVjdC53aWR0aCAvIHNjYWxlLng7XG4gIGNvbnN0IGhlaWdodCA9IGNsaWVudFJlY3QuaGVpZ2h0IC8gc2NhbGUueTtcbiAgcmV0dXJuIHtcbiAgICB3aWR0aCxcbiAgICBoZWlnaHQsXG4gICAgdG9wOiB5LFxuICAgIHJpZ2h0OiB4ICsgd2lkdGgsXG4gICAgYm90dG9tOiB5ICsgaGVpZ2h0LFxuICAgIGxlZnQ6IHgsXG4gICAgeCxcbiAgICB5XG4gIH07XG59XG5mdW5jdGlvbiBnZXREb2N1bWVudEVsZW1lbnQobm9kZSkge1xuICByZXR1cm4gKChpc05vZGUobm9kZSkgPyBub2RlLm93bmVyRG9jdW1lbnQgOiBub2RlLmRvY3VtZW50KSB8fCB3aW5kb3cuZG9jdW1lbnQpLmRvY3VtZW50RWxlbWVudDtcbn1cbmZ1bmN0aW9uIGdldE5vZGVTY3JvbGwoZWxlbWVudCkge1xuICBpZiAoaXNFbGVtZW50KGVsZW1lbnQpKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIHNjcm9sbExlZnQ6IGVsZW1lbnQuc2Nyb2xsTGVmdCxcbiAgICAgIHNjcm9sbFRvcDogZWxlbWVudC5zY3JvbGxUb3BcbiAgICB9O1xuICB9XG4gIHJldHVybiB7XG4gICAgc2Nyb2xsTGVmdDogZWxlbWVudC5wYWdlWE9mZnNldCxcbiAgICBzY3JvbGxUb3A6IGVsZW1lbnQucGFnZVlPZmZzZXRcbiAgfTtcbn1cbmZ1bmN0aW9uIGdldFdpbmRvd1Njcm9sbEJhclgoZWxlbWVudCkge1xuICByZXR1cm4gZ2V0Qm91bmRpbmdDbGllbnRSZWN0KGdldERvY3VtZW50RWxlbWVudChlbGVtZW50KSkubGVmdCArIGdldE5vZGVTY3JvbGwoZWxlbWVudCkuc2Nyb2xsTGVmdDtcbn1cbmZ1bmN0aW9uIGdldFJlY3RSZWxhdGl2ZVRvT2Zmc2V0UGFyZW50KGVsZW1lbnQsIG9mZnNldFBhcmVudCwgc3RyYXRlZ3kpIHtcbiAgY29uc3QgaXNPZmZzZXRQYXJlbnRBbkVsZW1lbnQgPSBpc0hUTUxFbGVtZW50KG9mZnNldFBhcmVudCk7XG4gIGNvbnN0IGRvY3VtZW50RWxlbWVudCA9IGdldERvY3VtZW50RWxlbWVudChvZmZzZXRQYXJlbnQpO1xuICBjb25zdCByZWN0ID0gZ2V0Qm91bmRpbmdDbGllbnRSZWN0KGVsZW1lbnQsIHRydWUsIHN0cmF0ZWd5ID09PSBcImZpeGVkXCIsIG9mZnNldFBhcmVudCk7XG4gIGxldCBzY3JvbGwgPSB7XG4gICAgc2Nyb2xsTGVmdDogMCxcbiAgICBzY3JvbGxUb3A6IDBcbiAgfTtcbiAgY29uc3Qgb2Zmc2V0cyA9IHtcbiAgICB4OiAwLFxuICAgIHk6IDBcbiAgfTtcbiAgaWYgKGlzT2Zmc2V0UGFyZW50QW5FbGVtZW50IHx8ICFpc09mZnNldFBhcmVudEFuRWxlbWVudCAmJiBzdHJhdGVneSAhPT0gXCJmaXhlZFwiKSB7XG4gICAgaWYgKGdldE5vZGVOYW1lKG9mZnNldFBhcmVudCkgIT09IFwiYm9keVwiIHx8IGlzT3ZlcmZsb3dFbGVtZW50KGRvY3VtZW50RWxlbWVudCkpIHtcbiAgICAgIHNjcm9sbCA9IGdldE5vZGVTY3JvbGwob2Zmc2V0UGFyZW50KTtcbiAgICB9XG4gICAgaWYgKGlzSFRNTEVsZW1lbnQob2Zmc2V0UGFyZW50KSkge1xuICAgICAgY29uc3Qgb2Zmc2V0UmVjdCA9IGdldEJvdW5kaW5nQ2xpZW50UmVjdChvZmZzZXRQYXJlbnQsIHRydWUpO1xuICAgICAgb2Zmc2V0cy54ID0gb2Zmc2V0UmVjdC54ICsgb2Zmc2V0UGFyZW50LmNsaWVudExlZnQ7XG4gICAgICBvZmZzZXRzLnkgPSBvZmZzZXRSZWN0LnkgKyBvZmZzZXRQYXJlbnQuY2xpZW50VG9wO1xuICAgIH0gZWxzZSBpZiAoZG9jdW1lbnRFbGVtZW50KSB7XG4gICAgICBvZmZzZXRzLnggPSBnZXRXaW5kb3dTY3JvbGxCYXJYKGRvY3VtZW50RWxlbWVudCk7XG4gICAgfVxuICB9XG4gIHJldHVybiB7XG4gICAgeDogcmVjdC5sZWZ0ICsgc2Nyb2xsLnNjcm9sbExlZnQgLSBvZmZzZXRzLngsXG4gICAgeTogcmVjdC50b3AgKyBzY3JvbGwuc2Nyb2xsVG9wIC0gb2Zmc2V0cy55LFxuICAgIHdpZHRoOiByZWN0LndpZHRoLFxuICAgIGhlaWdodDogcmVjdC5oZWlnaHRcbiAgfTtcbn1cbmZ1bmN0aW9uIGdldFBhcmVudE5vZGUobm9kZSkge1xuICBpZiAoZ2V0Tm9kZU5hbWUobm9kZSkgPT09IFwiaHRtbFwiKSB7XG4gICAgcmV0dXJuIG5vZGU7XG4gIH1cbiAgY29uc3QgcmVzdWx0ID0gbm9kZS5hc3NpZ25lZFNsb3QgfHwgbm9kZS5wYXJlbnROb2RlIHx8IChpc1NoYWRvd1Jvb3Qobm9kZSkgPyBub2RlLmhvc3QgOiBudWxsKSB8fCBnZXREb2N1bWVudEVsZW1lbnQobm9kZSk7XG4gIHJldHVybiBpc1NoYWRvd1Jvb3QocmVzdWx0KSA/IHJlc3VsdC5ob3N0IDogcmVzdWx0O1xufVxuZnVuY3Rpb24gZ2V0VHJ1ZU9mZnNldFBhcmVudChlbGVtZW50KSB7XG4gIGlmICghaXNIVE1MRWxlbWVudChlbGVtZW50KSB8fCBnZXRDb21wdXRlZFN0eWxlJDEoZWxlbWVudCkucG9zaXRpb24gPT09IFwiZml4ZWRcIikge1xuICAgIHJldHVybiBudWxsO1xuICB9XG4gIHJldHVybiBlbGVtZW50Lm9mZnNldFBhcmVudDtcbn1cbmZ1bmN0aW9uIGdldENvbnRhaW5pbmdCbG9jayhlbGVtZW50KSB7XG4gIGxldCBjdXJyZW50Tm9kZSA9IGdldFBhcmVudE5vZGUoZWxlbWVudCk7XG4gIHdoaWxlIChpc0hUTUxFbGVtZW50KGN1cnJlbnROb2RlKSAmJiAhaXNMYXN0VHJhdmVyc2FibGVOb2RlKGN1cnJlbnROb2RlKSkge1xuICAgIGlmIChpc0NvbnRhaW5pbmdCbG9jayhjdXJyZW50Tm9kZSkpIHtcbiAgICAgIHJldHVybiBjdXJyZW50Tm9kZTtcbiAgICB9IGVsc2Uge1xuICAgICAgY3VycmVudE5vZGUgPSBnZXRQYXJlbnROb2RlKGN1cnJlbnROb2RlKTtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIG51bGw7XG59XG5mdW5jdGlvbiBnZXRPZmZzZXRQYXJlbnQoZWxlbWVudCkge1xuICBjb25zdCB3aW5kb3cyID0gZ2V0V2luZG93KGVsZW1lbnQpO1xuICBsZXQgb2Zmc2V0UGFyZW50ID0gZ2V0VHJ1ZU9mZnNldFBhcmVudChlbGVtZW50KTtcbiAgd2hpbGUgKG9mZnNldFBhcmVudCAmJiBpc1RhYmxlRWxlbWVudChvZmZzZXRQYXJlbnQpICYmIGdldENvbXB1dGVkU3R5bGUkMShvZmZzZXRQYXJlbnQpLnBvc2l0aW9uID09PSBcInN0YXRpY1wiKSB7XG4gICAgb2Zmc2V0UGFyZW50ID0gZ2V0VHJ1ZU9mZnNldFBhcmVudChvZmZzZXRQYXJlbnQpO1xuICB9XG4gIGlmIChvZmZzZXRQYXJlbnQgJiYgKGdldE5vZGVOYW1lKG9mZnNldFBhcmVudCkgPT09IFwiaHRtbFwiIHx8IGdldE5vZGVOYW1lKG9mZnNldFBhcmVudCkgPT09IFwiYm9keVwiICYmIGdldENvbXB1dGVkU3R5bGUkMShvZmZzZXRQYXJlbnQpLnBvc2l0aW9uID09PSBcInN0YXRpY1wiICYmICFpc0NvbnRhaW5pbmdCbG9jayhvZmZzZXRQYXJlbnQpKSkge1xuICAgIHJldHVybiB3aW5kb3cyO1xuICB9XG4gIHJldHVybiBvZmZzZXRQYXJlbnQgfHwgZ2V0Q29udGFpbmluZ0Jsb2NrKGVsZW1lbnQpIHx8IHdpbmRvdzI7XG59XG5mdW5jdGlvbiBnZXREaW1lbnNpb25zKGVsZW1lbnQpIHtcbiAgaWYgKGlzSFRNTEVsZW1lbnQoZWxlbWVudCkpIHtcbiAgICByZXR1cm4ge1xuICAgICAgd2lkdGg6IGVsZW1lbnQub2Zmc2V0V2lkdGgsXG4gICAgICBoZWlnaHQ6IGVsZW1lbnQub2Zmc2V0SGVpZ2h0XG4gICAgfTtcbiAgfVxuICBjb25zdCByZWN0ID0gZ2V0Qm91bmRpbmdDbGllbnRSZWN0KGVsZW1lbnQpO1xuICByZXR1cm4ge1xuICAgIHdpZHRoOiByZWN0LndpZHRoLFxuICAgIGhlaWdodDogcmVjdC5oZWlnaHRcbiAgfTtcbn1cbmZ1bmN0aW9uIGNvbnZlcnRPZmZzZXRQYXJlbnRSZWxhdGl2ZVJlY3RUb1ZpZXdwb3J0UmVsYXRpdmVSZWN0KF9yZWYpIHtcbiAgbGV0IHtcbiAgICByZWN0LFxuICAgIG9mZnNldFBhcmVudCxcbiAgICBzdHJhdGVneVxuICB9ID0gX3JlZjtcbiAgY29uc3QgaXNPZmZzZXRQYXJlbnRBbkVsZW1lbnQgPSBpc0hUTUxFbGVtZW50KG9mZnNldFBhcmVudCk7XG4gIGNvbnN0IGRvY3VtZW50RWxlbWVudCA9IGdldERvY3VtZW50RWxlbWVudChvZmZzZXRQYXJlbnQpO1xuICBpZiAob2Zmc2V0UGFyZW50ID09PSBkb2N1bWVudEVsZW1lbnQpIHtcbiAgICByZXR1cm4gcmVjdDtcbiAgfVxuICBsZXQgc2Nyb2xsID0ge1xuICAgIHNjcm9sbExlZnQ6IDAsXG4gICAgc2Nyb2xsVG9wOiAwXG4gIH07XG4gIGxldCBzY2FsZSA9IHtcbiAgICB4OiAxLFxuICAgIHk6IDFcbiAgfTtcbiAgY29uc3Qgb2Zmc2V0cyA9IHtcbiAgICB4OiAwLFxuICAgIHk6IDBcbiAgfTtcbiAgaWYgKGlzT2Zmc2V0UGFyZW50QW5FbGVtZW50IHx8ICFpc09mZnNldFBhcmVudEFuRWxlbWVudCAmJiBzdHJhdGVneSAhPT0gXCJmaXhlZFwiKSB7XG4gICAgaWYgKGdldE5vZGVOYW1lKG9mZnNldFBhcmVudCkgIT09IFwiYm9keVwiIHx8IGlzT3ZlcmZsb3dFbGVtZW50KGRvY3VtZW50RWxlbWVudCkpIHtcbiAgICAgIHNjcm9sbCA9IGdldE5vZGVTY3JvbGwob2Zmc2V0UGFyZW50KTtcbiAgICB9XG4gICAgaWYgKGlzSFRNTEVsZW1lbnQob2Zmc2V0UGFyZW50KSkge1xuICAgICAgY29uc3Qgb2Zmc2V0UmVjdCA9IGdldEJvdW5kaW5nQ2xpZW50UmVjdChvZmZzZXRQYXJlbnQpO1xuICAgICAgc2NhbGUgPSBnZXRTY2FsZShvZmZzZXRQYXJlbnQpO1xuICAgICAgb2Zmc2V0cy54ID0gb2Zmc2V0UmVjdC54ICsgb2Zmc2V0UGFyZW50LmNsaWVudExlZnQ7XG4gICAgICBvZmZzZXRzLnkgPSBvZmZzZXRSZWN0LnkgKyBvZmZzZXRQYXJlbnQuY2xpZW50VG9wO1xuICAgIH1cbiAgfVxuICByZXR1cm4ge1xuICAgIHdpZHRoOiByZWN0LndpZHRoICogc2NhbGUueCxcbiAgICBoZWlnaHQ6IHJlY3QuaGVpZ2h0ICogc2NhbGUueSxcbiAgICB4OiByZWN0LnggKiBzY2FsZS54IC0gc2Nyb2xsLnNjcm9sbExlZnQgKiBzY2FsZS54ICsgb2Zmc2V0cy54LFxuICAgIHk6IHJlY3QueSAqIHNjYWxlLnkgLSBzY3JvbGwuc2Nyb2xsVG9wICogc2NhbGUueSArIG9mZnNldHMueVxuICB9O1xufVxuZnVuY3Rpb24gZ2V0Vmlld3BvcnRSZWN0KGVsZW1lbnQsIHN0cmF0ZWd5KSB7XG4gIGNvbnN0IHdpbiA9IGdldFdpbmRvdyhlbGVtZW50KTtcbiAgY29uc3QgaHRtbCA9IGdldERvY3VtZW50RWxlbWVudChlbGVtZW50KTtcbiAgY29uc3QgdmlzdWFsVmlld3BvcnQgPSB3aW4udmlzdWFsVmlld3BvcnQ7XG4gIGxldCB3aWR0aCA9IGh0bWwuY2xpZW50V2lkdGg7XG4gIGxldCBoZWlnaHQgPSBodG1sLmNsaWVudEhlaWdodDtcbiAgbGV0IHggPSAwO1xuICBsZXQgeSA9IDA7XG4gIGlmICh2aXN1YWxWaWV3cG9ydCkge1xuICAgIHdpZHRoID0gdmlzdWFsVmlld3BvcnQud2lkdGg7XG4gICAgaGVpZ2h0ID0gdmlzdWFsVmlld3BvcnQuaGVpZ2h0O1xuICAgIGNvbnN0IGxheW91dFZpZXdwb3J0ID0gaXNMYXlvdXRWaWV3cG9ydCgpO1xuICAgIGlmIChsYXlvdXRWaWV3cG9ydCB8fCAhbGF5b3V0Vmlld3BvcnQgJiYgc3RyYXRlZ3kgPT09IFwiZml4ZWRcIikge1xuICAgICAgeCA9IHZpc3VhbFZpZXdwb3J0Lm9mZnNldExlZnQ7XG4gICAgICB5ID0gdmlzdWFsVmlld3BvcnQub2Zmc2V0VG9wO1xuICAgIH1cbiAgfVxuICByZXR1cm4ge1xuICAgIHdpZHRoLFxuICAgIGhlaWdodCxcbiAgICB4LFxuICAgIHlcbiAgfTtcbn1cbmZ1bmN0aW9uIGdldERvY3VtZW50UmVjdChlbGVtZW50KSB7XG4gIHZhciBfZWxlbWVudCRvd25lckRvY3VtZW47XG4gIGNvbnN0IGh0bWwgPSBnZXREb2N1bWVudEVsZW1lbnQoZWxlbWVudCk7XG4gIGNvbnN0IHNjcm9sbCA9IGdldE5vZGVTY3JvbGwoZWxlbWVudCk7XG4gIGNvbnN0IGJvZHkgPSAoX2VsZW1lbnQkb3duZXJEb2N1bWVuID0gZWxlbWVudC5vd25lckRvY3VtZW50KSA9PSBudWxsID8gdm9pZCAwIDogX2VsZW1lbnQkb3duZXJEb2N1bWVuLmJvZHk7XG4gIGNvbnN0IHdpZHRoID0gbWF4KGh0bWwuc2Nyb2xsV2lkdGgsIGh0bWwuY2xpZW50V2lkdGgsIGJvZHkgPyBib2R5LnNjcm9sbFdpZHRoIDogMCwgYm9keSA/IGJvZHkuY2xpZW50V2lkdGggOiAwKTtcbiAgY29uc3QgaGVpZ2h0ID0gbWF4KGh0bWwuc2Nyb2xsSGVpZ2h0LCBodG1sLmNsaWVudEhlaWdodCwgYm9keSA/IGJvZHkuc2Nyb2xsSGVpZ2h0IDogMCwgYm9keSA/IGJvZHkuY2xpZW50SGVpZ2h0IDogMCk7XG4gIGxldCB4ID0gLXNjcm9sbC5zY3JvbGxMZWZ0ICsgZ2V0V2luZG93U2Nyb2xsQmFyWChlbGVtZW50KTtcbiAgY29uc3QgeSA9IC1zY3JvbGwuc2Nyb2xsVG9wO1xuICBpZiAoZ2V0Q29tcHV0ZWRTdHlsZSQxKGJvZHkgfHwgaHRtbCkuZGlyZWN0aW9uID09PSBcInJ0bFwiKSB7XG4gICAgeCArPSBtYXgoaHRtbC5jbGllbnRXaWR0aCwgYm9keSA/IGJvZHkuY2xpZW50V2lkdGggOiAwKSAtIHdpZHRoO1xuICB9XG4gIHJldHVybiB7XG4gICAgd2lkdGgsXG4gICAgaGVpZ2h0LFxuICAgIHgsXG4gICAgeVxuICB9O1xufVxuZnVuY3Rpb24gZ2V0TmVhcmVzdE92ZXJmbG93QW5jZXN0b3Iobm9kZSkge1xuICBjb25zdCBwYXJlbnROb2RlID0gZ2V0UGFyZW50Tm9kZShub2RlKTtcbiAgaWYgKGlzTGFzdFRyYXZlcnNhYmxlTm9kZShwYXJlbnROb2RlKSkge1xuICAgIHJldHVybiBub2RlLm93bmVyRG9jdW1lbnQuYm9keTtcbiAgfVxuICBpZiAoaXNIVE1MRWxlbWVudChwYXJlbnROb2RlKSAmJiBpc092ZXJmbG93RWxlbWVudChwYXJlbnROb2RlKSkge1xuICAgIHJldHVybiBwYXJlbnROb2RlO1xuICB9XG4gIHJldHVybiBnZXROZWFyZXN0T3ZlcmZsb3dBbmNlc3RvcihwYXJlbnROb2RlKTtcbn1cbmZ1bmN0aW9uIGdldE92ZXJmbG93QW5jZXN0b3JzKG5vZGUsIGxpc3QpIHtcbiAgdmFyIF9ub2RlJG93bmVyRG9jdW1lbnQ7XG4gIGlmIChsaXN0ID09PSB2b2lkIDApIHtcbiAgICBsaXN0ID0gW107XG4gIH1cbiAgY29uc3Qgc2Nyb2xsYWJsZUFuY2VzdG9yID0gZ2V0TmVhcmVzdE92ZXJmbG93QW5jZXN0b3Iobm9kZSk7XG4gIGNvbnN0IGlzQm9keSA9IHNjcm9sbGFibGVBbmNlc3RvciA9PT0gKChfbm9kZSRvd25lckRvY3VtZW50ID0gbm9kZS5vd25lckRvY3VtZW50KSA9PSBudWxsID8gdm9pZCAwIDogX25vZGUkb3duZXJEb2N1bWVudC5ib2R5KTtcbiAgY29uc3Qgd2luID0gZ2V0V2luZG93KHNjcm9sbGFibGVBbmNlc3Rvcik7XG4gIGlmIChpc0JvZHkpIHtcbiAgICByZXR1cm4gbGlzdC5jb25jYXQod2luLCB3aW4udmlzdWFsVmlld3BvcnQgfHwgW10sIGlzT3ZlcmZsb3dFbGVtZW50KHNjcm9sbGFibGVBbmNlc3RvcikgPyBzY3JvbGxhYmxlQW5jZXN0b3IgOiBbXSk7XG4gIH1cbiAgcmV0dXJuIGxpc3QuY29uY2F0KHNjcm9sbGFibGVBbmNlc3RvciwgZ2V0T3ZlcmZsb3dBbmNlc3RvcnMoc2Nyb2xsYWJsZUFuY2VzdG9yKSk7XG59XG5mdW5jdGlvbiBnZXRJbm5lckJvdW5kaW5nQ2xpZW50UmVjdChlbGVtZW50LCBzdHJhdGVneSkge1xuICBjb25zdCBjbGllbnRSZWN0ID0gZ2V0Qm91bmRpbmdDbGllbnRSZWN0KGVsZW1lbnQsIHRydWUsIHN0cmF0ZWd5ID09PSBcImZpeGVkXCIpO1xuICBjb25zdCB0b3AgPSBjbGllbnRSZWN0LnRvcCArIGVsZW1lbnQuY2xpZW50VG9wO1xuICBjb25zdCBsZWZ0ID0gY2xpZW50UmVjdC5sZWZ0ICsgZWxlbWVudC5jbGllbnRMZWZ0O1xuICBjb25zdCBzY2FsZSA9IGlzSFRNTEVsZW1lbnQoZWxlbWVudCkgPyBnZXRTY2FsZShlbGVtZW50KSA6IHtcbiAgICB4OiAxLFxuICAgIHk6IDFcbiAgfTtcbiAgY29uc3Qgd2lkdGggPSBlbGVtZW50LmNsaWVudFdpZHRoICogc2NhbGUueDtcbiAgY29uc3QgaGVpZ2h0ID0gZWxlbWVudC5jbGllbnRIZWlnaHQgKiBzY2FsZS55O1xuICBjb25zdCB4ID0gbGVmdCAqIHNjYWxlLng7XG4gIGNvbnN0IHkgPSB0b3AgKiBzY2FsZS55O1xuICByZXR1cm4ge1xuICAgIHRvcDogeSxcbiAgICBsZWZ0OiB4LFxuICAgIHJpZ2h0OiB4ICsgd2lkdGgsXG4gICAgYm90dG9tOiB5ICsgaGVpZ2h0LFxuICAgIHgsXG4gICAgeSxcbiAgICB3aWR0aCxcbiAgICBoZWlnaHRcbiAgfTtcbn1cbmZ1bmN0aW9uIGdldENsaWVudFJlY3RGcm9tQ2xpcHBpbmdBbmNlc3RvcihlbGVtZW50LCBjbGlwcGluZ0FuY2VzdG9yLCBzdHJhdGVneSkge1xuICBpZiAoY2xpcHBpbmdBbmNlc3RvciA9PT0gXCJ2aWV3cG9ydFwiKSB7XG4gICAgcmV0dXJuIHJlY3RUb0NsaWVudFJlY3QoZ2V0Vmlld3BvcnRSZWN0KGVsZW1lbnQsIHN0cmF0ZWd5KSk7XG4gIH1cbiAgaWYgKGlzRWxlbWVudChjbGlwcGluZ0FuY2VzdG9yKSkge1xuICAgIHJldHVybiBnZXRJbm5lckJvdW5kaW5nQ2xpZW50UmVjdChjbGlwcGluZ0FuY2VzdG9yLCBzdHJhdGVneSk7XG4gIH1cbiAgcmV0dXJuIHJlY3RUb0NsaWVudFJlY3QoZ2V0RG9jdW1lbnRSZWN0KGdldERvY3VtZW50RWxlbWVudChlbGVtZW50KSkpO1xufVxuZnVuY3Rpb24gZ2V0Q2xpcHBpbmdFbGVtZW50QW5jZXN0b3JzKGVsZW1lbnQsIGNhY2hlKSB7XG4gIGNvbnN0IGNhY2hlZFJlc3VsdCA9IGNhY2hlLmdldChlbGVtZW50KTtcbiAgaWYgKGNhY2hlZFJlc3VsdCkge1xuICAgIHJldHVybiBjYWNoZWRSZXN1bHQ7XG4gIH1cbiAgbGV0IHJlc3VsdCA9IGdldE92ZXJmbG93QW5jZXN0b3JzKGVsZW1lbnQpLmZpbHRlcigoZWwpID0+IGlzRWxlbWVudChlbCkgJiYgZ2V0Tm9kZU5hbWUoZWwpICE9PSBcImJvZHlcIik7XG4gIGxldCBjdXJyZW50Q29udGFpbmluZ0Jsb2NrQ29tcHV0ZWRTdHlsZSA9IG51bGw7XG4gIGNvbnN0IGVsZW1lbnRJc0ZpeGVkID0gZ2V0Q29tcHV0ZWRTdHlsZSQxKGVsZW1lbnQpLnBvc2l0aW9uID09PSBcImZpeGVkXCI7XG4gIGxldCBjdXJyZW50Tm9kZSA9IGVsZW1lbnRJc0ZpeGVkID8gZ2V0UGFyZW50Tm9kZShlbGVtZW50KSA6IGVsZW1lbnQ7XG4gIHdoaWxlIChpc0VsZW1lbnQoY3VycmVudE5vZGUpICYmICFpc0xhc3RUcmF2ZXJzYWJsZU5vZGUoY3VycmVudE5vZGUpKSB7XG4gICAgY29uc3QgY29tcHV0ZWRTdHlsZSA9IGdldENvbXB1dGVkU3R5bGUkMShjdXJyZW50Tm9kZSk7XG4gICAgY29uc3QgY29udGFpbmluZ0Jsb2NrID0gaXNDb250YWluaW5nQmxvY2soY3VycmVudE5vZGUpO1xuICAgIGNvbnN0IHNob3VsZERyb3BDdXJyZW50Tm9kZSA9IGVsZW1lbnRJc0ZpeGVkID8gIWNvbnRhaW5pbmdCbG9jayAmJiAhY3VycmVudENvbnRhaW5pbmdCbG9ja0NvbXB1dGVkU3R5bGUgOiAhY29udGFpbmluZ0Jsb2NrICYmIGNvbXB1dGVkU3R5bGUucG9zaXRpb24gPT09IFwic3RhdGljXCIgJiYgISFjdXJyZW50Q29udGFpbmluZ0Jsb2NrQ29tcHV0ZWRTdHlsZSAmJiBbXCJhYnNvbHV0ZVwiLCBcImZpeGVkXCJdLmluY2x1ZGVzKGN1cnJlbnRDb250YWluaW5nQmxvY2tDb21wdXRlZFN0eWxlLnBvc2l0aW9uKTtcbiAgICBpZiAoc2hvdWxkRHJvcEN1cnJlbnROb2RlKSB7XG4gICAgICByZXN1bHQgPSByZXN1bHQuZmlsdGVyKChhbmNlc3RvcikgPT4gYW5jZXN0b3IgIT09IGN1cnJlbnROb2RlKTtcbiAgICB9IGVsc2Uge1xuICAgICAgY3VycmVudENvbnRhaW5pbmdCbG9ja0NvbXB1dGVkU3R5bGUgPSBjb21wdXRlZFN0eWxlO1xuICAgIH1cbiAgICBjdXJyZW50Tm9kZSA9IGdldFBhcmVudE5vZGUoY3VycmVudE5vZGUpO1xuICB9XG4gIGNhY2hlLnNldChlbGVtZW50LCByZXN1bHQpO1xuICByZXR1cm4gcmVzdWx0O1xufVxuZnVuY3Rpb24gZ2V0Q2xpcHBpbmdSZWN0KF9yZWYpIHtcbiAgbGV0IHtcbiAgICBlbGVtZW50LFxuICAgIGJvdW5kYXJ5LFxuICAgIHJvb3RCb3VuZGFyeSxcbiAgICBzdHJhdGVneVxuICB9ID0gX3JlZjtcbiAgY29uc3QgZWxlbWVudENsaXBwaW5nQW5jZXN0b3JzID0gYm91bmRhcnkgPT09IFwiY2xpcHBpbmdBbmNlc3RvcnNcIiA/IGdldENsaXBwaW5nRWxlbWVudEFuY2VzdG9ycyhlbGVtZW50LCB0aGlzLl9jKSA6IFtdLmNvbmNhdChib3VuZGFyeSk7XG4gIGNvbnN0IGNsaXBwaW5nQW5jZXN0b3JzID0gWy4uLmVsZW1lbnRDbGlwcGluZ0FuY2VzdG9ycywgcm9vdEJvdW5kYXJ5XTtcbiAgY29uc3QgZmlyc3RDbGlwcGluZ0FuY2VzdG9yID0gY2xpcHBpbmdBbmNlc3RvcnNbMF07XG4gIGNvbnN0IGNsaXBwaW5nUmVjdCA9IGNsaXBwaW5nQW5jZXN0b3JzLnJlZHVjZSgoYWNjUmVjdCwgY2xpcHBpbmdBbmNlc3RvcikgPT4ge1xuICAgIGNvbnN0IHJlY3QgPSBnZXRDbGllbnRSZWN0RnJvbUNsaXBwaW5nQW5jZXN0b3IoZWxlbWVudCwgY2xpcHBpbmdBbmNlc3Rvciwgc3RyYXRlZ3kpO1xuICAgIGFjY1JlY3QudG9wID0gbWF4KHJlY3QudG9wLCBhY2NSZWN0LnRvcCk7XG4gICAgYWNjUmVjdC5yaWdodCA9IG1pbihyZWN0LnJpZ2h0LCBhY2NSZWN0LnJpZ2h0KTtcbiAgICBhY2NSZWN0LmJvdHRvbSA9IG1pbihyZWN0LmJvdHRvbSwgYWNjUmVjdC5ib3R0b20pO1xuICAgIGFjY1JlY3QubGVmdCA9IG1heChyZWN0LmxlZnQsIGFjY1JlY3QubGVmdCk7XG4gICAgcmV0dXJuIGFjY1JlY3Q7XG4gIH0sIGdldENsaWVudFJlY3RGcm9tQ2xpcHBpbmdBbmNlc3RvcihlbGVtZW50LCBmaXJzdENsaXBwaW5nQW5jZXN0b3IsIHN0cmF0ZWd5KSk7XG4gIHJldHVybiB7XG4gICAgd2lkdGg6IGNsaXBwaW5nUmVjdC5yaWdodCAtIGNsaXBwaW5nUmVjdC5sZWZ0LFxuICAgIGhlaWdodDogY2xpcHBpbmdSZWN0LmJvdHRvbSAtIGNsaXBwaW5nUmVjdC50b3AsXG4gICAgeDogY2xpcHBpbmdSZWN0LmxlZnQsXG4gICAgeTogY2xpcHBpbmdSZWN0LnRvcFxuICB9O1xufVxuY29uc3QgcGxhdGZvcm0gPSB7XG4gIGdldENsaXBwaW5nUmVjdCxcbiAgY29udmVydE9mZnNldFBhcmVudFJlbGF0aXZlUmVjdFRvVmlld3BvcnRSZWxhdGl2ZVJlY3QsXG4gIGlzRWxlbWVudCxcbiAgZ2V0RGltZW5zaW9ucyxcbiAgZ2V0T2Zmc2V0UGFyZW50LFxuICBnZXREb2N1bWVudEVsZW1lbnQsXG4gIGdldFNjYWxlLFxuICBnZXRFbGVtZW50UmVjdHMoX3JlZikge1xuICAgIHJldHVybiBfX2FzeW5jKHRoaXMsIG51bGwsIGZ1bmN0aW9uKiAoKSB7XG4gICAgICBsZXQge1xuICAgICAgICByZWZlcmVuY2UsXG4gICAgICAgIGZsb2F0aW5nLFxuICAgICAgICBzdHJhdGVneVxuICAgICAgfSA9IF9yZWY7XG4gICAgICBjb25zdCBnZXRPZmZzZXRQYXJlbnRGbiA9IHRoaXMuZ2V0T2Zmc2V0UGFyZW50IHx8IGdldE9mZnNldFBhcmVudDtcbiAgICAgIGNvbnN0IGdldERpbWVuc2lvbnNGbiA9IHRoaXMuZ2V0RGltZW5zaW9ucztcbiAgICAgIHJldHVybiB7XG4gICAgICAgIHJlZmVyZW5jZTogZ2V0UmVjdFJlbGF0aXZlVG9PZmZzZXRQYXJlbnQocmVmZXJlbmNlLCB5aWVsZCBnZXRPZmZzZXRQYXJlbnRGbihmbG9hdGluZyksIHN0cmF0ZWd5KSxcbiAgICAgICAgZmxvYXRpbmc6IF9fc3ByZWFkVmFsdWVzKHtcbiAgICAgICAgICB4OiAwLFxuICAgICAgICAgIHk6IDBcbiAgICAgICAgfSwgeWllbGQgZ2V0RGltZW5zaW9uc0ZuKGZsb2F0aW5nKSlcbiAgICAgIH07XG4gICAgfSk7XG4gIH0sXG4gIGdldENsaWVudFJlY3RzOiAoZWxlbWVudCkgPT4gQXJyYXkuZnJvbShlbGVtZW50LmdldENsaWVudFJlY3RzKCkpLFxuICBpc1JUTDogKGVsZW1lbnQpID0+IGdldENvbXB1dGVkU3R5bGUkMShlbGVtZW50KS5kaXJlY3Rpb24gPT09IFwicnRsXCJcbn07XG5mdW5jdGlvbiBhdXRvVXBkYXRlKHJlZmVyZW5jZSwgZmxvYXRpbmcsIHVwZGF0ZSwgb3B0aW9ucykge1xuICBpZiAob3B0aW9ucyA9PT0gdm9pZCAwKSB7XG4gICAgb3B0aW9ucyA9IHt9O1xuICB9XG4gIGNvbnN0IHtcbiAgICBhbmNlc3RvclNjcm9sbDogX2FuY2VzdG9yU2Nyb2xsID0gdHJ1ZSxcbiAgICBhbmNlc3RvclJlc2l6ZSA9IHRydWUsXG4gICAgZWxlbWVudFJlc2l6ZSA9IHRydWUsXG4gICAgYW5pbWF0aW9uRnJhbWUgPSBmYWxzZVxuICB9ID0gb3B0aW9ucztcbiAgY29uc3QgYW5jZXN0b3JTY3JvbGwgPSBfYW5jZXN0b3JTY3JvbGwgJiYgIWFuaW1hdGlvbkZyYW1lO1xuICBjb25zdCBhbmNlc3RvcnMgPSBhbmNlc3RvclNjcm9sbCB8fCBhbmNlc3RvclJlc2l6ZSA/IFsuLi5pc0VsZW1lbnQocmVmZXJlbmNlKSA/IGdldE92ZXJmbG93QW5jZXN0b3JzKHJlZmVyZW5jZSkgOiByZWZlcmVuY2UuY29udGV4dEVsZW1lbnQgPyBnZXRPdmVyZmxvd0FuY2VzdG9ycyhyZWZlcmVuY2UuY29udGV4dEVsZW1lbnQpIDogW10sIC4uLmdldE92ZXJmbG93QW5jZXN0b3JzKGZsb2F0aW5nKV0gOiBbXTtcbiAgYW5jZXN0b3JzLmZvckVhY2goKGFuY2VzdG9yKSA9PiB7XG4gICAgYW5jZXN0b3JTY3JvbGwgJiYgYW5jZXN0b3IuYWRkRXZlbnRMaXN0ZW5lcihcInNjcm9sbFwiLCB1cGRhdGUsIHtcbiAgICAgIHBhc3NpdmU6IHRydWVcbiAgICB9KTtcbiAgICBhbmNlc3RvclJlc2l6ZSAmJiBhbmNlc3Rvci5hZGRFdmVudExpc3RlbmVyKFwicmVzaXplXCIsIHVwZGF0ZSk7XG4gIH0pO1xuICBsZXQgb2JzZXJ2ZXIgPSBudWxsO1xuICBpZiAoZWxlbWVudFJlc2l6ZSkge1xuICAgIGxldCBpbml0aWFsVXBkYXRlID0gdHJ1ZTtcbiAgICBvYnNlcnZlciA9IG5ldyBSZXNpemVPYnNlcnZlcigoKSA9PiB7XG4gICAgICBpZiAoIWluaXRpYWxVcGRhdGUpIHtcbiAgICAgICAgdXBkYXRlKCk7XG4gICAgICB9XG4gICAgICBpbml0aWFsVXBkYXRlID0gZmFsc2U7XG4gICAgfSk7XG4gICAgaXNFbGVtZW50KHJlZmVyZW5jZSkgJiYgIWFuaW1hdGlvbkZyYW1lICYmIG9ic2VydmVyLm9ic2VydmUocmVmZXJlbmNlKTtcbiAgICBpZiAoIWlzRWxlbWVudChyZWZlcmVuY2UpICYmIHJlZmVyZW5jZS5jb250ZXh0RWxlbWVudCAmJiAhYW5pbWF0aW9uRnJhbWUpIHtcbiAgICAgIG9ic2VydmVyLm9ic2VydmUocmVmZXJlbmNlLmNvbnRleHRFbGVtZW50KTtcbiAgICB9XG4gICAgb2JzZXJ2ZXIub2JzZXJ2ZShmbG9hdGluZyk7XG4gIH1cbiAgbGV0IGZyYW1lSWQ7XG4gIGxldCBwcmV2UmVmUmVjdCA9IGFuaW1hdGlvbkZyYW1lID8gZ2V0Qm91bmRpbmdDbGllbnRSZWN0KHJlZmVyZW5jZSkgOiBudWxsO1xuICBpZiAoYW5pbWF0aW9uRnJhbWUpIHtcbiAgICBmcmFtZUxvb3AoKTtcbiAgfVxuICBmdW5jdGlvbiBmcmFtZUxvb3AoKSB7XG4gICAgY29uc3QgbmV4dFJlZlJlY3QgPSBnZXRCb3VuZGluZ0NsaWVudFJlY3QocmVmZXJlbmNlKTtcbiAgICBpZiAocHJldlJlZlJlY3QgJiYgKG5leHRSZWZSZWN0LnggIT09IHByZXZSZWZSZWN0LnggfHwgbmV4dFJlZlJlY3QueSAhPT0gcHJldlJlZlJlY3QueSB8fCBuZXh0UmVmUmVjdC53aWR0aCAhPT0gcHJldlJlZlJlY3Qud2lkdGggfHwgbmV4dFJlZlJlY3QuaGVpZ2h0ICE9PSBwcmV2UmVmUmVjdC5oZWlnaHQpKSB7XG4gICAgICB1cGRhdGUoKTtcbiAgICB9XG4gICAgcHJldlJlZlJlY3QgPSBuZXh0UmVmUmVjdDtcbiAgICBmcmFtZUlkID0gcmVxdWVzdEFuaW1hdGlvbkZyYW1lKGZyYW1lTG9vcCk7XG4gIH1cbiAgdXBkYXRlKCk7XG4gIHJldHVybiAoKSA9PiB7XG4gICAgdmFyIF9vYnNlcnZlcjtcbiAgICBhbmNlc3RvcnMuZm9yRWFjaCgoYW5jZXN0b3IpID0+IHtcbiAgICAgIGFuY2VzdG9yU2Nyb2xsICYmIGFuY2VzdG9yLnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJzY3JvbGxcIiwgdXBkYXRlKTtcbiAgICAgIGFuY2VzdG9yUmVzaXplICYmIGFuY2VzdG9yLnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJyZXNpemVcIiwgdXBkYXRlKTtcbiAgICB9KTtcbiAgICAoX29ic2VydmVyID0gb2JzZXJ2ZXIpID09IG51bGwgPyB2b2lkIDAgOiBfb2JzZXJ2ZXIuZGlzY29ubmVjdCgpO1xuICAgIG9ic2VydmVyID0gbnVsbDtcbiAgICBpZiAoYW5pbWF0aW9uRnJhbWUpIHtcbiAgICAgIGNhbmNlbEFuaW1hdGlvbkZyYW1lKGZyYW1lSWQpO1xuICAgIH1cbiAgfTtcbn1cbmNvbnN0IGNvbXB1dGVQb3NpdGlvbiA9IChyZWZlcmVuY2UsIGZsb2F0aW5nLCBvcHRpb25zKSA9PiB7XG4gIGNvbnN0IGNhY2hlID0gLyogQF9fUFVSRV9fICovIG5ldyBNYXAoKTtcbiAgY29uc3QgbWVyZ2VkT3B0aW9ucyA9IF9fc3ByZWFkVmFsdWVzKHtcbiAgICBwbGF0Zm9ybVxuICB9LCBvcHRpb25zKTtcbiAgY29uc3QgcGxhdGZvcm1XaXRoQ2FjaGUgPSBfX3NwcmVhZFByb3BzKF9fc3ByZWFkVmFsdWVzKHt9LCBtZXJnZWRPcHRpb25zLnBsYXRmb3JtKSwge1xuICAgIF9jOiBjYWNoZVxuICB9KTtcbiAgcmV0dXJuIGNvbXB1dGVQb3NpdGlvbiQxKHJlZmVyZW5jZSwgZmxvYXRpbmcsIF9fc3ByZWFkUHJvcHMoX19zcHJlYWRWYWx1ZXMoe30sIG1lcmdlZE9wdGlvbnMpLCB7XG4gICAgcGxhdGZvcm06IHBsYXRmb3JtV2l0aENhY2hlXG4gIH0pKTtcbn07XG5mdW5jdGlvbiBQKGwyLCB1MiwgZTIpIHtcbiAgbGV0IGMyID0gKCkgPT4ge1xuICAgIHZhciB0MjtcbiAgICByZXR1cm4gKHQyID0gZTIgPT0gbnVsbCA/IHZvaWQgMCA6IGUyLnBsYWNlbWVudCkgIT0gbnVsbCA/IHQyIDogXCJib3R0b21cIjtcbiAgfSwgZCA9ICgpID0+IHtcbiAgICB2YXIgdDI7XG4gICAgcmV0dXJuICh0MiA9IGUyID09IG51bGwgPyB2b2lkIDAgOiBlMi5zdHJhdGVneSkgIT0gbnVsbCA/IHQyIDogXCJhYnNvbHV0ZVwiO1xuICB9LCBbbjIsIG8yXSA9IGNyZWF0ZVNpZ25hbCh7IHg6IG51bGwsIHk6IG51bGwsIHBsYWNlbWVudDogYzIoKSwgc3RyYXRlZ3k6IGQoKSwgbWlkZGxld2FyZURhdGE6IHt9IH0pLCBbeCwgRl0gPSBjcmVhdGVTaWduYWwoKTtcbiAgY3JlYXRlRWZmZWN0KCgpID0+IHtcbiAgICBsZXQgdDIgPSB4KCk7XG4gICAgaWYgKHQyKVxuICAgICAgdGhyb3cgdDIudmFsdWU7XG4gIH0pO1xuICBsZXQgczIgPSBjcmVhdGVNZW1vKCgpID0+IChsMigpLCB1MigpLCB7fSkpO1xuICBmdW5jdGlvbiBpMigpIHtcbiAgICBsZXQgdDIgPSBsMigpLCByID0gdTIoKTtcbiAgICBpZiAodDIgJiYgcikge1xuICAgICAgbGV0IGEyID0gczIoKTtcbiAgICAgIGNvbXB1dGVQb3NpdGlvbih0MiwgciwgeyBtaWRkbGV3YXJlOiBlMiA9PSBudWxsID8gdm9pZCAwIDogZTIubWlkZGxld2FyZSwgcGxhY2VtZW50OiBjMigpLCBzdHJhdGVneTogZCgpIH0pLnRoZW4oKG0pID0+IHtcbiAgICAgICAgYTIgPT09IHMyKCkgJiYgbzIobSk7XG4gICAgICB9LCAobSkgPT4ge1xuICAgICAgICBGKG0pO1xuICAgICAgfSk7XG4gICAgfVxuICB9XG4gIHJldHVybiBjcmVhdGVFZmZlY3QoKCkgPT4ge1xuICAgIGxldCB0MiA9IGwyKCksIHIgPSB1MigpO1xuICAgIGlmIChlMiA9PSBudWxsIHx8IGUyLm1pZGRsZXdhcmUsIGMyKCksIGQoKSwgdDIgJiYgcilcbiAgICAgIGlmIChlMiAhPSBudWxsICYmIGUyLndoaWxlRWxlbWVudHNNb3VudGVkKSB7XG4gICAgICAgIGxldCBhMiA9IGUyLndoaWxlRWxlbWVudHNNb3VudGVkKHQyLCByLCBpMik7XG4gICAgICAgIGEyICYmIG9uQ2xlYW51cChhMik7XG4gICAgICB9IGVsc2VcbiAgICAgICAgaTIoKTtcbiAgfSksIHsgZ2V0IHgoKSB7XG4gICAgcmV0dXJuIG4yKCkueDtcbiAgfSwgZ2V0IHkoKSB7XG4gICAgcmV0dXJuIG4yKCkueTtcbiAgfSwgZ2V0IHBsYWNlbWVudCgpIHtcbiAgICByZXR1cm4gbjIoKS5wbGFjZW1lbnQ7XG4gIH0sIGdldCBzdHJhdGVneSgpIHtcbiAgICByZXR1cm4gbjIoKS5zdHJhdGVneTtcbiAgfSwgZ2V0IG1pZGRsZXdhcmVEYXRhKCkge1xuICAgIHJldHVybiBuMigpLm1pZGRsZXdhcmVEYXRhO1xuICB9LCB1cGRhdGU6IGkyIH07XG59XG5jb25zdCBfdG1wbCQkNCA9IC8qIEBfX1BVUkVfXyAqLyB0ZW1wbGF0ZSQxKGA8dGMtcm9vdCBkYXRhLXRjLWRyb3Bkb3duLWNvbnRhaW5lcj1cInRydWVcIj48L3RjLXJvb3Q+YCk7XG5jb25zdCBBY2NvdW50QnV0dG9uID0gKCkgPT4ge1xuICBjb25zdCB0aGVtZSA9IHVzZVRoZW1lKCk7XG4gIGNvbnN0IGNvbm5lY3RvciA9IHVzZUNvbnRleHQoQ29ubmVjdG9yQ29udGV4dCk7XG4gIGNvbnN0IHRvbkNvbm5lY3RVSSA9IHVzZUNvbnRleHQoVG9uQ29ubmVjdFVpQ29udGV4dCk7XG4gIGNvbnN0IFtpc09wZW5lZCwgc2V0SXNPcGVuZWRdID0gY3JlYXRlU2lnbmFsKGZhbHNlKTtcbiAgY29uc3QgW2FjY291bnQsIHNldEFjY291bnRdID0gY3JlYXRlU2lnbmFsKGNvbm5lY3Rvci5hY2NvdW50KTtcbiAgY29uc3QgW3Jlc3RvcmluZ1Byb2Nlc3MsIHNldFJlc3RvcmluZ1Byb2Nlc3NdID0gY3JlYXRlU2lnbmFsKCFjb25uZWN0b3IuYWNjb3VudCk7XG4gIGxldCBkcm9wRG93blJlZjtcbiAgY29uc3QgW2Zsb2F0aW5nLCBzZXRGbG9hdGluZ10gPSBjcmVhdGVTaWduYWwoKTtcbiAgY29uc3QgW2FuY2hvciwgc2V0QW5jaG9yXSA9IGNyZWF0ZVNpZ25hbCgpO1xuICBjb25zdCBwb3NpdGlvbiA9IFAoYW5jaG9yLCBmbG9hdGluZywge1xuICAgIHdoaWxlRWxlbWVudHNNb3VudGVkOiBhdXRvVXBkYXRlLFxuICAgIHBsYWNlbWVudDogXCJib3R0b20tZW5kXCJcbiAgfSk7XG4gIGNvbnN0IG5vcm1hbGl6ZWRBZGRyZXNzID0gKCkgPT4ge1xuICAgIGNvbnN0IGFjYyA9IGFjY291bnQoKTtcbiAgICBpZiAoYWNjKSB7XG4gICAgICBjb25zdCB1c2VyRnJpZW5kbHlBZGRyZXNzID0gdG9Vc2VyRnJpZW5kbHlBZGRyZXNzKGFjYy5hZGRyZXNzLCBhY2MuY2hhaW4gPT09IENIQUlOLlRFU1RORVQpO1xuICAgICAgcmV0dXJuIHVzZXJGcmllbmRseUFkZHJlc3Muc2xpY2UoMCwgNCkgKyBcIlxcdTIwMjZcIiArIHVzZXJGcmllbmRseUFkZHJlc3Muc2xpY2UoLTQpO1xuICAgIH1cbiAgICByZXR1cm4gXCJcIjtcbiAgfTtcbiAgdG9uQ29ubmVjdFVJLmNvbm5lY3Rpb25SZXN0b3JlZC50aGVuKCgpID0+IHNldFJlc3RvcmluZ1Byb2Nlc3MoZmFsc2UpKTtcbiAgY29uc3QgdW5zdWJzY3JpYmUgPSBjb25uZWN0b3Iub25TdGF0dXNDaGFuZ2UoKHdhbGxldCkgPT4ge1xuICAgIGlmICghd2FsbGV0KSB7XG4gICAgICBzZXRJc09wZW5lZChmYWxzZSk7XG4gICAgICBzZXRBY2NvdW50KG51bGwpO1xuICAgICAgc2V0UmVzdG9yaW5nUHJvY2VzcyhmYWxzZSk7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIHNldEFjY291bnQod2FsbGV0LmFjY291bnQpO1xuICAgIHNldFJlc3RvcmluZ1Byb2Nlc3MoZmFsc2UpO1xuICB9KTtcbiAgY29uc3Qgb25DbGljayA9IChlMikgPT4ge1xuICAgIGlmICghYWNjb3VudCgpIHx8ICFpc09wZW5lZCgpKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIGNvbnN0IGNsaWNrVG9CdXR0b24gPSBhbmNob3IoKS5jb250YWlucyhlMi50YXJnZXQpO1xuICAgIGNvbnN0IGNsaWNrVG9Ecm9wZG93biA9IGRyb3BEb3duUmVmLmNvbnRhaW5zKGUyLnRhcmdldCk7XG4gICAgaWYgKCFjbGlja1RvQnV0dG9uICYmICFjbGlja1RvRHJvcGRvd24pIHtcbiAgICAgIHNldElzT3BlbmVkKGZhbHNlKTtcbiAgICB9XG4gIH07XG4gIG9uTW91bnQoKCkgPT4ge1xuICAgIGRvY3VtZW50LmJvZHkuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIG9uQ2xpY2spO1xuICB9KTtcbiAgb25DbGVhbnVwKCgpID0+IHtcbiAgICBkb2N1bWVudC5ib2R5LnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCBvbkNsaWNrKTtcbiAgICB1bnN1YnNjcmliZSgpO1xuICB9KTtcbiAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChEeW5hbWljLCB7XG4gICAgY29tcG9uZW50OiBnbG9iYWxTdHlsZXNUYWcsXG4gICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgcmV0dXJuIFtjcmVhdGVDb21wb25lbnQoU2hvdywge1xuICAgICAgICBnZXQgd2hlbigpIHtcbiAgICAgICAgICByZXR1cm4gcmVzdG9yaW5nUHJvY2VzcygpO1xuICAgICAgICB9LFxuICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChMb2FkZXJCdXR0b25TdHlsZWQkMSwge1xuICAgICAgICAgICAgZGlzYWJsZWQ6IHRydWUsXG4gICAgICAgICAgICBcImRhdGEtdGMtY29ubmVjdC1idXR0b24tbG9hZGluZ1wiOiBcInRydWVcIixcbiAgICAgICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChMb2FkZXJJY29uU3R5bGVkJDEsIHt9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgfSksIGNyZWF0ZUNvbXBvbmVudChTaG93LCB7XG4gICAgICAgIGdldCB3aGVuKCkge1xuICAgICAgICAgIHJldHVybiAhcmVzdG9yaW5nUHJvY2VzcygpO1xuICAgICAgICB9LFxuICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgcmV0dXJuIFtjcmVhdGVDb21wb25lbnQoU2hvdywge1xuICAgICAgICAgICAgZ2V0IHdoZW4oKSB7XG4gICAgICAgICAgICAgIHJldHVybiAhYWNjb3VudCgpO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChBY2NvdW50QnV0dG9uU3R5bGVkLCB7XG4gICAgICAgICAgICAgICAgb25DbGljazogKCkgPT4gdG9uQ29ubmVjdFVJLm9wZW5Nb2RhbCgpLFxuICAgICAgICAgICAgICAgIFwiZGF0YS10Yy1jb25uZWN0LWJ1dHRvblwiOiBcInRydWVcIixcbiAgICAgICAgICAgICAgICBzY2FsZTogXCJzXCIsXG4gICAgICAgICAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgICAgICAgICAgcmV0dXJuIFtjcmVhdGVDb21wb25lbnQoVG9uSWNvbiwge1xuICAgICAgICAgICAgICAgICAgICBnZXQgZmlsbCgpIHtcbiAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gdGhlbWUuY29sb3JzLmNvbm5lY3RCdXR0b24uZm9yZWdyb3VuZDtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgfSksIGNyZWF0ZUNvbXBvbmVudChUZXh0LCB7XG4gICAgICAgICAgICAgICAgICAgIHRyYW5zbGF0aW9uS2V5OiBcImJ1dHRvbi5jb25uZWN0V2FsbGV0XCIsXG4gICAgICAgICAgICAgICAgICAgIGZvbnRTaXplOiBcIjE1cHhcIixcbiAgICAgICAgICAgICAgICAgICAgbGluZUhlaWdodDogXCIxOHB4XCIsXG4gICAgICAgICAgICAgICAgICAgIGZvbnRXZWlnaHQ6IFwiNTkwXCIsXG4gICAgICAgICAgICAgICAgICAgIGdldCBjb2xvcigpIHtcbiAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gdGhlbWUuY29sb3JzLmNvbm5lY3RCdXR0b24uZm9yZWdyb3VuZDtcbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgY2hpbGRyZW46IFwiQ29ubmVjdCB3YWxsZXRcIlxuICAgICAgICAgICAgICAgICAgfSldO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSksIGNyZWF0ZUNvbXBvbmVudChTaG93LCB7XG4gICAgICAgICAgICBnZXQgd2hlbigpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIGFjY291bnQoKTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoRHJvcGRvd25Db250YWluZXJTdHlsZWQsIHtcbiAgICAgICAgICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgICAgICAgICByZXR1cm4gW2NyZWF0ZUNvbXBvbmVudChEcm9wZG93bkJ1dHRvblN0eWxlZCwge1xuICAgICAgICAgICAgICAgICAgICBvbkNsaWNrOiAoKSA9PiBzZXRJc09wZW5lZCgodikgPT4gIXYpLFxuICAgICAgICAgICAgICAgICAgICByZWY6IHNldEFuY2hvcixcbiAgICAgICAgICAgICAgICAgICAgXCJkYXRhLXRjLWRyb3Bkb3duLWJ1dHRvblwiOiBcInRydWVcIixcbiAgICAgICAgICAgICAgICAgICAgc2NhbGU6IFwic1wiLFxuICAgICAgICAgICAgICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFtjcmVhdGVDb21wb25lbnQoVGV4dCwge1xuICAgICAgICAgICAgICAgICAgICAgICAgZm9udFNpemU6IFwiMTVweFwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgZm9udFdlaWdodDogXCI1OTBcIixcbiAgICAgICAgICAgICAgICAgICAgICAgIGxpbmVIZWlnaHQ6IFwiMThweFwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gbm9ybWFsaXplZEFkZHJlc3MoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICB9KSwgY3JlYXRlQ29tcG9uZW50KEFycm93SWNvbiwge1xuICAgICAgICAgICAgICAgICAgICAgICAgZGlyZWN0aW9uOiBcImJvdHRvbVwiXG4gICAgICAgICAgICAgICAgICAgICAgfSldO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICB9KSwgY3JlYXRlQ29tcG9uZW50KFBvcnRhbCwge1xuICAgICAgICAgICAgICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgICAgICAgICAgICAgY29uc3QgX2VsJCA9IHVudHJhY2soKCkgPT4gZG9jdW1lbnQuaW1wb3J0Tm9kZShfdG1wbCQkNCwgdHJ1ZSkpO1xuICAgICAgICAgICAgICAgICAgICAgIHVzZShzZXRGbG9hdGluZywgX2VsJCk7XG4gICAgICAgICAgICAgICAgICAgICAgX2VsJC5zdHlsZS5zZXRQcm9wZXJ0eShcInotaW5kZXhcIiwgXCI5OTlcIik7XG4gICAgICAgICAgICAgICAgICAgICAgX2VsJC5fJG93bmVyID0gZ2V0T3duZXIoKTtcbiAgICAgICAgICAgICAgICAgICAgICBpbnNlcnQoX2VsJCwgY3JlYXRlQ29tcG9uZW50KFRyYW5zaXRpb24sIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIG9uQmVmb3JlRW50ZXI6IChlbCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICBhbmltYXRlKGVsLCBbe1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9wYWNpdHk6IDAsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdHJhbnNmb3JtOiBcInRyYW5zbGF0ZVkoLThweClcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICB9LCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgb3BhY2l0eTogMSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0cmFuc2Zvcm06IFwidHJhbnNsYXRlWSgwKVwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgIH1dLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZHVyYXRpb246IDE1MFxuICAgICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICBvbkV4aXQ6IChlbCwgZG9uZSkgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBhMiA9IGFuaW1hdGUoZWwsIFt7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgb3BhY2l0eTogMSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0cmFuc2Zvcm06IFwidHJhbnNsYXRlWSgwKVwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgIH0sIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBvcGFjaXR5OiAwLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRyYW5zZm9ybTogXCJ0cmFuc2xhdGVZKC04cHgpXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgfV0sIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkdXJhdGlvbjogMTUwXG4gICAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgICBhMi5maW5pc2hlZC50aGVuKGRvbmUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChTaG93LCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZ2V0IHdoZW4oKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gaXNPcGVuZWQoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoRHJvcGRvd25TdHlsZWQsIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZ2V0IGhpZGRlbigpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gIWlzT3BlbmVkKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2xvc2U6ICgpID0+IHNldElzT3BlbmVkKGZhbHNlKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVmKHIkKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgX3JlZiQgPSBkcm9wRG93blJlZjtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0eXBlb2YgX3JlZiQgPT09IFwiZnVuY3Rpb25cIiA/IF9yZWYkKHIkKSA6IGRyb3BEb3duUmVmID0gciQ7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgfSksIG51bGwpO1xuICAgICAgICAgICAgICAgICAgICAgIGluc2VydChfZWwkLCBjcmVhdGVDb21wb25lbnQoTm90aWZpY2F0aW9uc1N0eWxlZCwge30pLCBudWxsKTtcbiAgICAgICAgICAgICAgICAgICAgICBjcmVhdGVSZW5kZXJFZmZlY3QoKF9wJCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIF9hMiwgX2IyO1xuICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgX3YkID0gcG9zaXRpb24uc3RyYXRlZ3ksIF92JDIgPSBgJHsoX2EyID0gcG9zaXRpb24ueSkgIT0gbnVsbCA/IF9hMiA6IDB9cHhgLCBfdiQzID0gYCR7KF9iMiA9IHBvc2l0aW9uLngpICE9IG51bGwgPyBfYjIgOiAwfXB4YDtcbiAgICAgICAgICAgICAgICAgICAgICAgIF92JCAhPT0gX3AkLl92JCAmJiBfZWwkLnN0eWxlLnNldFByb3BlcnR5KFwicG9zaXRpb25cIiwgX3AkLl92JCA9IF92JCk7XG4gICAgICAgICAgICAgICAgICAgICAgICBfdiQyICE9PSBfcCQuX3YkMiAmJiBfZWwkLnN0eWxlLnNldFByb3BlcnR5KFwidG9wXCIsIF9wJC5fdiQyID0gX3YkMik7XG4gICAgICAgICAgICAgICAgICAgICAgICBfdiQzICE9PSBfcCQuX3YkMyAmJiBfZWwkLnN0eWxlLnNldFByb3BlcnR5KFwibGVmdFwiLCBfcCQuX3YkMyA9IF92JDMpO1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIF9wJDtcbiAgICAgICAgICAgICAgICAgICAgICB9LCB7XG4gICAgICAgICAgICAgICAgICAgICAgICBfdiQ6IHZvaWQgMCxcbiAgICAgICAgICAgICAgICAgICAgICAgIF92JDI6IHZvaWQgMCxcbiAgICAgICAgICAgICAgICAgICAgICAgIF92JDM6IHZvaWQgMFxuICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBfZWwkO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICB9KV07XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9KV07XG4gICAgICAgIH1cbiAgICAgIH0pXTtcbiAgICB9XG4gIH0pO1xufTtcbmNvbnN0IFN0eWxlZE1vZGFsID0gc3R5bGVkKE1vZGFsKWBcbiAgICBwYWRkaW5nLWxlZnQ6IDI0cHg7XG4gICAgcGFkZGluZy1yaWdodDogMjRweDtcbiAgICBwYWRkaW5nLXRvcDogMThweDtcbiAgICBwYWRkaW5nLWJvdHRvbTogMDtcblxuICAgICR7bWVkaWEoXCJtb2JpbGVcIil9IHtcbiAgICAgICAgcGFkZGluZy1sZWZ0OiAwO1xuICAgICAgICBwYWRkaW5nLXJpZ2h0OiAwO1xuICAgIH1cbmA7XG5jb25zdCBIMVN0eWxlZCQ4ID0gc3R5bGVkKEgxKWBcbiAgICBtYXJnaW4tdG9wOiAxMnB4O1xuXG4gICAgJHttZWRpYShcIm1vYmlsZVwiKX0ge1xuICAgICAgICBwYWRkaW5nOiAwIDEwcHg7XG4gICAgfVxuYDtcbmNvbnN0IExvYWRlckNvbnRhaW5lclN0eWxlZCA9IHN0eWxlZC5kaXZgXG4gICAgbWFyZ2luOiAzMHB4IDA7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcblxuICAgICR7bWVkaWEoXCJtb2JpbGVcIil9IHtcbiAgICAgICAgaGVpZ2h0OiAxNjBweDtcbiAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICB9XG5gO1xuc3R5bGVkKFRleHQpYFxuICAgIG1pbi13aWR0aDogODRweDtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgZm9udC13ZWlnaHQ6IDU5MDtcbmA7XG5zdHlsZWQoVGFiQmFyKWBcbiAgICBtYXJnaW46IDAgYXV0byAyMnB4O1xuYDtcbmNvbnN0IFthcHBTdGF0ZSwgc2V0QXBwU3RhdGVdID0gY3JlYXRlU3RvcmUoe1xuICBidXR0b25Sb290SWQ6IG51bGwsXG4gIGxhbmd1YWdlOiBcImVuXCIsXG4gIHJldHVyblN0cmF0ZWd5OiBcImJhY2tcIixcbiAgdHdhUmV0dXJuVXJsOiB2b2lkIDAsXG4gIHdhbGxldHNMaXN0Q29uZmlndXJhdGlvbjoge30sXG4gIGVuYWJsZUFuZHJvaWRCYWNrSGFuZGxlcjogdHJ1ZVxufSk7XG5mdW5jdGlvbiB1bmlxKGFycmF5KSB7XG4gIHJldHVybiBbLi4ubmV3IFNldChhcnJheSldO1xufVxuZnVuY3Rpb24gbWVyZ2VDb25jYXQoaWRLZXksIGFycmF5MSwgYXJyYXkyKSB7XG4gIHJldHVybiBhcnJheTEubWFwKChpdGVtMSkgPT4ge1xuICAgIGNvbnN0IGl0ZW0yID0gYXJyYXkyLmZpbmQoKGVsZW0pID0+IGVsZW1baWRLZXldID09PSBpdGVtMVtpZEtleV0pO1xuICAgIGFycmF5MiA9IGFycmF5Mi5maWx0ZXIoKGVsZW0pID0+IGVsZW1baWRLZXldICE9PSBpdGVtMVtpZEtleV0pO1xuICAgIHJldHVybiBpdGVtMiA9PT0gdm9pZCAwID8gaXRlbTEgOiBpdGVtMjtcbiAgfSkuY29uY2F0KGFycmF5Mik7XG59XG5mdW5jdGlvbiB1aVdhbGxldFRvV2FsbGV0SW5mbyh1aVdhbGxldCkge1xuICBpZiAoXCJqc0JyaWRnZUtleVwiIGluIHVpV2FsbGV0KSB7XG4gICAgcmV0dXJuIF9fc3ByZWFkUHJvcHMoX19zcHJlYWRWYWx1ZXMoe30sIHVpV2FsbGV0KSwge1xuICAgICAgaW5qZWN0ZWQ6IFRvbkNvbm5lY3QuaXNXYWxsZXRJbmplY3RlZCh1aVdhbGxldC5qc0JyaWRnZUtleSksXG4gICAgICBlbWJlZGRlZDogVG9uQ29ubmVjdC5pc0luc2lkZVdhbGxldEJyb3dzZXIodWlXYWxsZXQuanNCcmlkZ2VLZXkpXG4gICAgfSk7XG4gIH1cbiAgcmV0dXJuIHVpV2FsbGV0O1xufVxuZnVuY3Rpb24gYXBwbHlXYWxsZXRzTGlzdENvbmZpZ3VyYXRpb24od2FsbGV0c0xpc3QsIGNvbmZpZ3VyYXRpb24pIHtcbiAgdmFyIF9hMjtcbiAgaWYgKCFjb25maWd1cmF0aW9uKSB7XG4gICAgcmV0dXJuIHdhbGxldHNMaXN0O1xuICB9XG4gIGlmICgoX2EyID0gY29uZmlndXJhdGlvbi5pbmNsdWRlV2FsbGV0cykgPT0gbnVsbCA/IHZvaWQgMCA6IF9hMi5sZW5ndGgpIHtcbiAgICB3YWxsZXRzTGlzdCA9IG1lcmdlQ29uY2F0KFxuICAgICAgXCJuYW1lXCIsXG4gICAgICB3YWxsZXRzTGlzdCxcbiAgICAgIGNvbmZpZ3VyYXRpb24uaW5jbHVkZVdhbGxldHMubWFwKHVpV2FsbGV0VG9XYWxsZXRJbmZvKVxuICAgICk7XG4gIH1cbiAgcmV0dXJuIHdhbGxldHNMaXN0O1xufVxuZnVuY3Rpb24gc3VwcG9ydHNEZXNrdG9wKHdhbGxldEluZm8pIHtcbiAgcmV0dXJuIHdhbGxldEluZm8ucGxhdGZvcm1zLnNvbWUoKHcpID0+IFtcIm1hY29zXCIsIFwibGludXhcIiwgXCJ3aW5kb3dzXCJdLmluY2x1ZGVzKHcpKTtcbn1cbmZ1bmN0aW9uIHN1cHBvcnRzTW9iaWxlKHdhbGxldEluZm8pIHtcbiAgcmV0dXJuIHdhbGxldEluZm8ucGxhdGZvcm1zLnNvbWUoKHcpID0+IFtcImlvc1wiLCBcImFuZHJvaWRcIl0uaW5jbHVkZXModykpO1xufVxuZnVuY3Rpb24gc3VwcG9ydHNFeHRlbnNpb24od2FsbGV0SW5mbykge1xuICByZXR1cm4gd2FsbGV0SW5mby5wbGF0Zm9ybXMuc29tZSgodykgPT4gW1wiY2hyb21lXCIsIFwiZmlyZWZveFwiLCBcInNhZmFyaVwiXS5pbmNsdWRlcyh3KSk7XG59XG5mdW5jdGlvbiBlcVdhbGxldE5hbWUod2FsbGV0MSwgbmFtZSkge1xuICBpZiAoIW5hbWUpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbiAgcmV0dXJuIHdhbGxldDEubmFtZS50b0xvd2VyQ2FzZSgpID09PSBuYW1lLnRvTG93ZXJDYXNlKCkgfHwgd2FsbGV0MS5hcHBOYW1lLnRvTG93ZXJDYXNlKCkgPT09IG5hbWUudG9Mb3dlckNhc2UoKTtcbn1cbmNvbnN0IERlc2t0b3BTZWxlY3RXYWxsZXRNb2RhbFN0eWxlZCA9IHN0eWxlZC5kaXZgXG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG5gO1xuY29uc3QgSDFTdHlsZWQkNyA9IHN0eWxlZChIMSlgXG4gICAgbWFyZ2luLWJvdHRvbTogMThweDtcbmA7XG5zdHlsZWQuZGl2YFxuICAgIGhlaWdodDogMXB4O1xuICAgIG1hcmdpbjogMCAtMjRweDtcbiAgICB3aWR0aDogY2FsYygxMDAlICsgNDhweCk7XG4gICAgb3BhY2l0eTogMC4xMjtcbiAgICBiYWNrZ3JvdW5kOiAkeyhwcm9wcykgPT4gcHJvcHMuaXNTaG93biA/IHByb3BzLnRoZW1lLmNvbG9ycy5pY29uLnNlY29uZGFyeSA6IFwidHJhbnNwYXJlbnRcIn07XG4gICAgdHJhbnNpdGlvbjogYmFja2dyb3VuZCAwLjE1cyBlYXNlLWluLW91dDtcblxuICAgICR7bWVkaWEoXCJtb2JpbGVcIil9IHtcbiAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgfVxuYDtcbmNvbnN0IFdhbGxldHNVbCA9IHN0eWxlZC51bGBcbiAgICBkaXNwbGF5OiBncmlkO1xuICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KGF1dG8tZml0LCA5MnB4KTtcbiAgICBncmlkLXRlbXBsYXRlLXJvd3M6IGF1dG87XG4gICAgYWxpZ24tY29udGVudDogZmxleC1zdGFydDtcbiAgICByb3ctZ2FwOiA4cHg7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgcGFkZGluZzogMCAwIDE2cHg7XG4gICAgYWxpZ24tc2VsZjogZmxleC1zdGFydDtcbiAgICBtYXgtd2lkdGg6IDQwMHB4O1xuICAgIG1hcmdpbjogMCBhdXRvO1xuICAgIGxpc3Qtc3R5bGU6IG5vbmU7XG5cbiAgICA+IGxpIHtcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgIGhlaWdodDogZml0LWNvbnRlbnQ7XG4gICAgfVxuXG4gICAgJHttZWRpYShcIm1vYmlsZVwiKX0ge1xuICAgICAgICBkaXNwbGF5OiBncmlkO1xuICAgICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdCg0LCAxZnIpO1xuICAgICAgICBnYXA6IDA7XG4gICAgICAgIHBhZGRpbmc6IDhweCAxMnB4IDE2cHg7XG4gICAgICAgIG1heC13aWR0aDogbm9uZTtcblxuICAgICAgICA+IGxpIHtcbiAgICAgICAgICAgIG1pbi13aWR0aDogNzhweDtcbiAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgIH1cblxuICAgICAgICA+IGxpID4gKiB7XG4gICAgICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgfVxuICAgIH1cbmA7XG5zdHlsZWQoQnV0dG9uKWBcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBtYXJnaW46IDAgYXV0byAxcHg7XG4gICAgZm9udC1zaXplOiAxNXB4O1xuYDtcbmNvbnN0IFN0eWxlZEljb25CdXR0b24kMyA9IHN0eWxlZChJY29uQnV0dG9uKWBcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgdG9wOiAxNnB4O1xuICAgIGxlZnQ6IDE2cHg7XG5gO1xuY29uc3QgV2FsbGV0TGFiZWxlZEl0ZW1TdHlsZWQgPSBzdHlsZWQoV2FsbGV0TGFiZWxlZEl0ZW0pYFxuICAgIG9wYWNpdHk6ICR7KHByb3BzKSA9PiBwcm9wcy53aXRoT3BhY2l0eSA/IFwiMC40XCIgOiBcIjFcIn07XG5gO1xuY29uc3QgV2FsbGV0c05vdFN1cHBvcnRlZE5vdGlmaWVyID0gc3R5bGVkLmRpdmBcbiAgICBkaXNwbGF5OiBncmlkO1xuICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogYXV0byAyOHB4O1xuICAgIGdhcDogMTZweDtcbiAgICBwYWRkaW5nOiAxNnB4O1xuICAgIG1hcmdpbi1ib3R0b206IDE2cHg7XG4gICAgYm9yZGVyLXJhZGl1czogMTZweDtcbiAgICBjb2xvcjogJHsocHJvcHMpID0+IHByb3BzLnRoZW1lLmNvbG9ycy50ZXh0LnNlY29uZGFyeX07XG4gICAgYmFja2dyb3VuZDogJHsocHJvcHMpID0+IHByb3BzLnRoZW1lLmNvbG9ycy5iYWNrZ3JvdW5kLnRpbnR9O1xuXG4gICAgJHttZWRpYShcIm1vYmlsZVwiKX0ge1xuICAgICAgICBtYXJnaW4tbGVmdDogMTZweDtcbiAgICAgICAgbWFyZ2luLXJpZ2h0OiAxNnB4O1xuICAgIH1cbmA7XG5jb25zdCBXYWxsZXRzTm90U3VwcG9ydGVkTm90aWZpZXJUZXh0ID0gc3R5bGVkKEgyKWBcbiAgICBjb2xvcjogJHsocHJvcHMpID0+IHByb3BzLnRoZW1lLmNvbG9ycy50ZXh0LnNlY29uZGFyeX07XG4gICAgdGV4dC1hbGlnbjogbGVmdDtcbiAgICBtYXJnaW46IDA7XG5gO1xuY29uc3QgRXJyb3JCb3hTdHlsZWQgPSBzdHlsZWQuZGl2YFxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICBib3R0b206IDE0cHg7XG4gICAgbGVmdDogNTAlO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIDApO1xuXG4gICAgdGV4dC13cmFwOiBub3dyYXA7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBnYXA6IDZweDtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIGJvcmRlci1yYWRpdXM6IDE4cHg7XG4gICAgbWluLXdpZHRoOiAxMjZweDtcbiAgICBwYWRkaW5nOiA5cHggMTZweCA5cHggMTBweDtcblxuICAgIGZpbHRlcjogZHJvcC1zaGFkb3coMHB4IDJweCA4cHggcmdiYSgwLCAwLCAwLCAwLjA4KSk7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogJHsocHJvcHMpID0+IHByb3BzLnRoZW1lLmNvbG9ycy5iYWNrZ3JvdW5kLnNlZ21lbnR9O1xuYDtcbmNvbnN0IF90bXBsJCQzID0gLyogQF9fUFVSRV9fICovIHRlbXBsYXRlJDEoYDxzdmcgd2lkdGg9XCIxNlwiIGhlaWdodD1cIjE2XCIgdmlld0JveD1cIjAgMCAxNiAxNlwiIGZpbGw9XCJub25lXCIgeG1sbnM9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiPjxnIGNsaXAtcGF0aD1cInVybCgjY2xpcDBfNTEyMl8xMDM1NSlcIj48Y2lyY2xlIGN4PVwiOFwiIGN5PVwiOFwiIHI9XCI4XCI+PC9jaXJjbGU+PGNpcmNsZSBjeD1cIjhcIiBjeT1cIjExXCIgcj1cIjFcIj48L2NpcmNsZT48cGF0aCBkPVwiTTcuMDQ5OTQgNC45OTg3NUM3LjAyMjc3IDQuNDU1NDIgNy40NTU5OCA0IDggNEM4LjU0NDAyIDQgOC45NzcyMyA0LjQ1NTQxIDguOTUwMDYgNC45OTg3NUw4Ljc4NzQ1IDguMjUwOTRDOC43NjY0NyA4LjY3MDU1IDguNDIwMTQgOSA4IDlDNy41Nzk4NiA5IDcuMjMzNTMgOC42NzA1NSA3LjIxMjU1IDguMjUwOTRMNy4wNDk5NCA0Ljk5ODc1WlwiPjwvcGF0aD48L2c+PGRlZnM+PGNsaXBQYXRoIGlkPVwiY2xpcDBfNTEyMl8xMDM1NVwiPjxyZWN0IHdpZHRoPVwiMTZcIiBoZWlnaHQ9XCIxNlwiPjwvcmVjdD48L2NsaXBQYXRoPjwvZGVmcz48L3N2Zz5gKSwgX3RtcGwkMiQxID0gLyogQF9fUFVSRV9fICovIHRlbXBsYXRlJDEoYDxzdmcgeG1sbnM9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiIHdpZHRoPVwiMjhcIiBoZWlnaHQ9XCIyOFwiIHZpZXdCb3g9XCIwIDAgMjggMjhcIiBmaWxsPVwibm9uZVwiPjxjaXJjbGUgY3g9XCIxNFwiIGN5PVwiMTRcIiByPVwiMTJcIj48L2NpcmNsZT48Y2lyY2xlIGN4PVwiMTRcIiBjeT1cIjE4LjlcIiByPVwiMS40XCI+PC9jaXJjbGU+PHBhdGggZD1cIk0xMi42NjU4IDguODk4NDVDMTIuNjMgOC4xMzY5OCAxMy4yMzc3IDcuNSAxNCA3LjVDMTQuNzYyMyA3LjUgMTUuMzcgOC4xMzY5OCAxNS4zMzQyIDguODk4NDVMMTUuMDQ3IDE1LjAwMTNDMTUuMDIwNyAxNS41NjA0IDE0LjU1OTcgMTYuMDAwMiAxNCAxNi4wMDAyQzEzLjQ0MDMgMTYuMDAwMiAxMi45NzkzIDE1LjU2MDQgMTIuOTUzIDE1LjAwMTNMMTIuNjY1OCA4Ljg5ODQ1WlwiPjwvcGF0aD48L3N2Zz5gKTtcbmNvbnN0IEV4Y2xhbWF0aW9uSWNvbiA9IChwcm9wcykgPT4ge1xuICBjb25zdCB0aGVtZSA9IHVzZVRoZW1lKCk7XG4gIGNvbnN0IHNpemUgPSAoKSA9PiBwcm9wcy5zaXplO1xuICBjb25zdCBmaWxsID0gKCkgPT4gcHJvcHMuZmlsbCB8fCB0aGVtZS5jb2xvcnMuaWNvbi5lcnJvcjtcbiAgcmV0dXJuIGNyZWF0ZU1lbW8oKCgpID0+IHtcbiAgICBjb25zdCBfYyQgPSBjcmVhdGVNZW1vKCgpID0+IHNpemUoKSA9PT0gXCIxNlwiKTtcbiAgICByZXR1cm4gKCkgPT4gX2MkKCkgPyAoKCkgPT4ge1xuICAgICAgY29uc3QgX2VsJCA9IF90bXBsJCQzLmNsb25lTm9kZSh0cnVlKSwgX2VsJDIgPSBfZWwkLmZpcnN0Q2hpbGQsIF9lbCQzID0gX2VsJDIuZmlyc3RDaGlsZCwgX2VsJDQgPSBfZWwkMy5uZXh0U2libGluZywgX2VsJDUgPSBfZWwkNC5uZXh0U2libGluZywgX2VsJDYgPSBfZWwkMi5uZXh0U2libGluZywgX2VsJDcgPSBfZWwkNi5maXJzdENoaWxkLCBfZWwkOCA9IF9lbCQ3LmZpcnN0Q2hpbGQ7XG4gICAgICBjcmVhdGVSZW5kZXJFZmZlY3QoKF9wJCkgPT4ge1xuICAgICAgICBjb25zdCBfdiQgPSBmaWxsKCksIF92JDIgPSB0aGVtZS5jb2xvcnMuY29uc3RhbnQud2hpdGUsIF92JDMgPSB0aGVtZS5jb2xvcnMuY29uc3RhbnQud2hpdGUsIF92JDQgPSB0aGVtZS5jb2xvcnMuY29uc3RhbnQud2hpdGU7XG4gICAgICAgIF92JCAhPT0gX3AkLl92JCAmJiBzZXRBdHRyaWJ1dGUoX2VsJDMsIFwiZmlsbFwiLCBfcCQuX3YkID0gX3YkKTtcbiAgICAgICAgX3YkMiAhPT0gX3AkLl92JDIgJiYgc2V0QXR0cmlidXRlKF9lbCQ0LCBcImZpbGxcIiwgX3AkLl92JDIgPSBfdiQyKTtcbiAgICAgICAgX3YkMyAhPT0gX3AkLl92JDMgJiYgc2V0QXR0cmlidXRlKF9lbCQ1LCBcImZpbGxcIiwgX3AkLl92JDMgPSBfdiQzKTtcbiAgICAgICAgX3YkNCAhPT0gX3AkLl92JDQgJiYgc2V0QXR0cmlidXRlKF9lbCQ4LCBcImZpbGxcIiwgX3AkLl92JDQgPSBfdiQ0KTtcbiAgICAgICAgcmV0dXJuIF9wJDtcbiAgICAgIH0sIHtcbiAgICAgICAgX3YkOiB2b2lkIDAsXG4gICAgICAgIF92JDI6IHZvaWQgMCxcbiAgICAgICAgX3YkMzogdm9pZCAwLFxuICAgICAgICBfdiQ0OiB2b2lkIDBcbiAgICAgIH0pO1xuICAgICAgcmV0dXJuIF9lbCQ7XG4gICAgfSkoKSA6ICgoKSA9PiB7XG4gICAgICBjb25zdCBfYyQyID0gY3JlYXRlTWVtbygoKSA9PiBzaXplKCkgPT09IFwiMjhcIik7XG4gICAgICByZXR1cm4gKCkgPT4gX2MkMigpID8gKCgpID0+IHtcbiAgICAgICAgY29uc3QgX2VsJDkgPSBfdG1wbCQyJDEuY2xvbmVOb2RlKHRydWUpLCBfZWwkMTAgPSBfZWwkOS5maXJzdENoaWxkLCBfZWwkMTEgPSBfZWwkMTAubmV4dFNpYmxpbmcsIF9lbCQxMiA9IF9lbCQxMS5uZXh0U2libGluZztcbiAgICAgICAgY3JlYXRlUmVuZGVyRWZmZWN0KChfcCQpID0+IHtcbiAgICAgICAgICBjb25zdCBfdiQ1ID0gcHJvcHMuY2xhc3MsIF92JDYgPSBmaWxsKCksIF92JDcgPSB0aGVtZS5jb2xvcnMuY29uc3RhbnQud2hpdGUsIF92JDggPSB0aGVtZS5jb2xvcnMuY29uc3RhbnQud2hpdGU7XG4gICAgICAgICAgX3YkNSAhPT0gX3AkLl92JDUgJiYgc2V0QXR0cmlidXRlKF9lbCQ5LCBcImNsYXNzXCIsIF9wJC5fdiQ1ID0gX3YkNSk7XG4gICAgICAgICAgX3YkNiAhPT0gX3AkLl92JDYgJiYgc2V0QXR0cmlidXRlKF9lbCQxMCwgXCJmaWxsXCIsIF9wJC5fdiQ2ID0gX3YkNik7XG4gICAgICAgICAgX3YkNyAhPT0gX3AkLl92JDcgJiYgc2V0QXR0cmlidXRlKF9lbCQxMSwgXCJmaWxsXCIsIF9wJC5fdiQ3ID0gX3YkNyk7XG4gICAgICAgICAgX3YkOCAhPT0gX3AkLl92JDggJiYgc2V0QXR0cmlidXRlKF9lbCQxMiwgXCJmaWxsXCIsIF9wJC5fdiQ4ID0gX3YkOCk7XG4gICAgICAgICAgcmV0dXJuIF9wJDtcbiAgICAgICAgfSwge1xuICAgICAgICAgIF92JDU6IHZvaWQgMCxcbiAgICAgICAgICBfdiQ2OiB2b2lkIDAsXG4gICAgICAgICAgX3YkNzogdm9pZCAwLFxuICAgICAgICAgIF92JDg6IHZvaWQgMFxuICAgICAgICB9KTtcbiAgICAgICAgcmV0dXJuIF9lbCQ5O1xuICAgICAgfSkoKSA6IG51bGw7XG4gICAgfSkoKTtcbiAgfSkoKSk7XG59O1xuY29uc3QgX3RtcGwkJDIgPSAvKiBAX19QVVJFX18gKi8gdGVtcGxhdGUkMShgPGxpPjwvbGk+YCk7XG5jb25zdCBBbGxXYWxsZXRzTGlzdE1vZGFsID0gKHByb3BzKSA9PiB7XG4gIGNvbnN0IG1heEhlaWdodCA9ICgpID0+IGlzTW9iaWxlKCkgPyB2b2lkIDAgOiA1MTA7XG4gIGNvbnN0IFtlcnJvclN1cHBvcnRPcGVuZWQsIHNldEVycm9yU3VwcG9ydE9wZW5lZF0gPSBjcmVhdGVTaWduYWwobnVsbCk7XG4gIGxldCB0aW1lb3V0SWQgPSBudWxsO1xuICBjb25zdCBvbkVycm9yQ2xpY2sgPSAod2FsbGV0KSA9PiB7XG4gICAgc2V0RXJyb3JTdXBwb3J0T3BlbmVkKHdhbGxldCk7XG4gICAgaWYgKHRpbWVvdXRJZCAhPSBudWxsKSB7XG4gICAgICBjbGVhclRpbWVvdXQodGltZW91dElkKTtcbiAgICB9XG4gICAgdGltZW91dElkID0gc2V0VGltZW91dCgoKSA9PiBzZXRFcnJvclN1cHBvcnRPcGVuZWQobnVsbCksIDE1MDApO1xuICB9O1xuICBjb25zdCBoYW5kbGVTZWxlY3RXYWxsZXQgPSAod2FsbGV0KSA9PiB7XG4gICAgaWYgKCF3YWxsZXQuaXNTdXBwb3J0UmVxdWlyZWRGZWF0dXJlcykge1xuICAgICAgb25FcnJvckNsaWNrKHdhbGxldCk7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIHByb3BzLm9uU2VsZWN0KHdhbGxldCk7XG4gIH07XG4gIGNvbnN0IHdhbGxldHNMaXN0ID0gKCkgPT4gaXNNb2JpbGUoKSA/IHByb3BzLndhbGxldHNMaXN0LmZpbHRlcihzdXBwb3J0c01vYmlsZSkgOiBwcm9wcy53YWxsZXRzTGlzdDtcbiAgY29uc3Qgc3VwcG9ydGVkV2FsbGV0cyA9ICgpID0+IHdhbGxldHNMaXN0KCkuZmlsdGVyKCh3YWxsZXQpID0+IHdhbGxldC5pc1N1cHBvcnRSZXF1aXJlZEZlYXR1cmVzKTtcbiAgY29uc3QgdW5zdXBwb3J0ZWRXYWxsZXRzID0gKCkgPT4gd2FsbGV0c0xpc3QoKS5maWx0ZXIoKHdhbGxldCkgPT4gIXdhbGxldC5pc1N1cHBvcnRSZXF1aXJlZEZlYXR1cmVzKTtcbiAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChEZXNrdG9wU2VsZWN0V2FsbGV0TW9kYWxTdHlsZWQsIHtcbiAgICBcImRhdGEtdGMtd2FsbGV0cy1tb2RhbC1saXN0XCI6IFwidHJ1ZVwiLFxuICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgIHJldHVybiBbY3JlYXRlQ29tcG9uZW50KFN0eWxlZEljb25CdXR0b24kMywge1xuICAgICAgICBpY29uOiBcImFycm93XCIsXG4gICAgICAgIG9uQ2xpY2s6ICgpID0+IHByb3BzLm9uQmFjaygpXG4gICAgICB9KSwgY3JlYXRlQ29tcG9uZW50KEgxU3R5bGVkJDcsIHtcbiAgICAgICAgdHJhbnNsYXRpb25LZXk6IFwid2FsbGV0TW9kYWwud2FsbGV0c1wiLFxuICAgICAgICBjaGlsZHJlbjogXCJXYWxsZXRzXCJcbiAgICAgIH0pLCBjcmVhdGVDb21wb25lbnQoU2Nyb2xsQ29udGFpbmVyLCB7XG4gICAgICAgIGdldCBtYXhIZWlnaHQoKSB7XG4gICAgICAgICAgcmV0dXJuIG1heEhlaWdodCgpO1xuICAgICAgICB9LFxuICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgcmV0dXJuIFtjcmVhdGVDb21wb25lbnQoV2FsbGV0c1VsLCB7XG4gICAgICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoRm9yLCB7XG4gICAgICAgICAgICAgICAgZ2V0IGVhY2goKSB7XG4gICAgICAgICAgICAgICAgICByZXR1cm4gc3VwcG9ydGVkV2FsbGV0cygpO1xuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgY2hpbGRyZW46ICh3YWxsZXQpID0+ICgoKSA9PiB7XG4gICAgICAgICAgICAgICAgICBjb25zdCBfZWwkID0gX3RtcGwkJDIuY2xvbmVOb2RlKHRydWUpO1xuICAgICAgICAgICAgICAgICAgaW5zZXJ0KF9lbCQsIGNyZWF0ZUNvbXBvbmVudChXYWxsZXRMYWJlbGVkSXRlbVN0eWxlZCwge1xuICAgICAgICAgICAgICAgICAgICB3YWxsZXQsXG4gICAgICAgICAgICAgICAgICAgIG9uQ2xpY2s6ICgpID0+IHByb3BzLm9uU2VsZWN0KHdhbGxldClcbiAgICAgICAgICAgICAgICAgIH0pKTtcbiAgICAgICAgICAgICAgICAgIHJldHVybiBfZWwkO1xuICAgICAgICAgICAgICAgIH0pKClcbiAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSksIGNyZWF0ZUNvbXBvbmVudChTaG93LCB7XG4gICAgICAgICAgICBnZXQgd2hlbigpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIHVuc3VwcG9ydGVkV2FsbGV0cygpLmxlbmd0aCA+IDA7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgICAgICByZXR1cm4gW2NyZWF0ZUNvbXBvbmVudChXYWxsZXRzTm90U3VwcG9ydGVkTm90aWZpZXIsIHtcbiAgICAgICAgICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgICAgICAgICByZXR1cm4gW2NyZWF0ZUNvbXBvbmVudChXYWxsZXRzTm90U3VwcG9ydGVkTm90aWZpZXJUZXh0LCB7XG4gICAgICAgICAgICAgICAgICAgIHRyYW5zbGF0aW9uS2V5OiBcIndhbGxldE1vZGFsLmFsbFdhbGxldHMud2FsbGV0c0JlbG93Tm90U3VwcG9ydGVkXCIsXG4gICAgICAgICAgICAgICAgICAgIGNoaWxkcmVuOiBcIlRoZSB3YWxsZXRzIGJlbG93IGRvblxcdTIwMTl0IHN1cHBvcnQgYWxsIGZlYXR1cmVzIG9mIHRoZSBjb25uZWN0ZWQgc2VydmljZS4gWW91IGNhbiB1c2UgeW91ciByZWNvdmVyeSBwaHJhc2UgaW4gb25lIG9mIHRoZSBzdXBwb3J0ZWQgd2FsbGV0cyBhYm92ZS5cIlxuICAgICAgICAgICAgICAgICAgfSksIGNyZWF0ZUNvbXBvbmVudChFeGNsYW1hdGlvbkljb24sIHtcbiAgICAgICAgICAgICAgICAgICAgc2l6ZTogXCIyOFwiXG4gICAgICAgICAgICAgICAgICB9KV07XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICB9KSwgY3JlYXRlQ29tcG9uZW50KFdhbGxldHNVbCwge1xuICAgICAgICAgICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICAgICAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoRm9yLCB7XG4gICAgICAgICAgICAgICAgICAgIGdldCBlYWNoKCkge1xuICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB1bnN1cHBvcnRlZFdhbGxldHMoKTtcbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgY2hpbGRyZW46ICh3YWxsZXQpID0+ICgoKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgY29uc3QgX2VsJDIgPSBfdG1wbCQkMi5jbG9uZU5vZGUodHJ1ZSk7XG4gICAgICAgICAgICAgICAgICAgICAgaW5zZXJ0KF9lbCQyLCBjcmVhdGVDb21wb25lbnQoV2FsbGV0TGFiZWxlZEl0ZW1TdHlsZWQsIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHdhbGxldCxcbiAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2xpY2s6ICgpID0+IGhhbmRsZVNlbGVjdFdhbGxldCh3YWxsZXQpLFxuICAgICAgICAgICAgICAgICAgICAgICAgd2l0aE9wYWNpdHk6IHRydWVcbiAgICAgICAgICAgICAgICAgICAgICB9KSk7XG4gICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIF9lbCQyO1xuICAgICAgICAgICAgICAgICAgICB9KSgpXG4gICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIH0pLCBjcmVhdGVDb21wb25lbnQoVHJhbnNpdGlvbiwge1xuICAgICAgICAgICAgICAgIG9uQmVmb3JlRW50ZXI6IChlbCkgPT4ge1xuICAgICAgICAgICAgICAgICAgYW5pbWF0ZShlbCwgW3tcbiAgICAgICAgICAgICAgICAgICAgb3BhY2l0eTogMCxcbiAgICAgICAgICAgICAgICAgICAgdHJhbnNmb3JtOiBcInRyYW5zbGF0ZSgtNTAlLCA0NHB4KVwiXG4gICAgICAgICAgICAgICAgICB9LCB7XG4gICAgICAgICAgICAgICAgICAgIG9wYWNpdHk6IDEsXG4gICAgICAgICAgICAgICAgICAgIHRyYW5zZm9ybTogXCJ0cmFuc2xhdGUoLTUwJSwgMClcIlxuICAgICAgICAgICAgICAgICAgfV0sIHtcbiAgICAgICAgICAgICAgICAgICAgZHVyYXRpb246IDE1MCxcbiAgICAgICAgICAgICAgICAgICAgZWFzaW5nOiBcImVhc2Utb3V0XCJcbiAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgb25FeGl0OiAoZWwsIGRvbmUpID0+IHtcbiAgICAgICAgICAgICAgICAgIGFuaW1hdGUoZWwsIFt7XG4gICAgICAgICAgICAgICAgICAgIG9wYWNpdHk6IDEsXG4gICAgICAgICAgICAgICAgICAgIHRyYW5zZm9ybTogXCJ0cmFuc2xhdGUoLTUwJSwgMClcIlxuICAgICAgICAgICAgICAgICAgfSwge1xuICAgICAgICAgICAgICAgICAgICBvcGFjaXR5OiAwLFxuICAgICAgICAgICAgICAgICAgICB0cmFuc2Zvcm06IFwidHJhbnNsYXRlKC01MCUsIDQ0cHgpXCJcbiAgICAgICAgICAgICAgICAgIH1dLCB7XG4gICAgICAgICAgICAgICAgICAgIGR1cmF0aW9uOiAxNTAsXG4gICAgICAgICAgICAgICAgICAgIGVhc2luZzogXCJlYXNlLW91dFwiXG4gICAgICAgICAgICAgICAgICB9KS5maW5pc2hlZC50aGVuKCgpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgZG9uZSgpO1xuICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgICAgICAgICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KFNob3csIHtcbiAgICAgICAgICAgICAgICAgICAgZ2V0IHdoZW4oKSB7XG4gICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGVycm9yU3VwcG9ydE9wZW5lZCgpO1xuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChFcnJvckJveFN0eWxlZCwge1xuICAgICAgICAgICAgICAgICAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gW2NyZWF0ZUNvbXBvbmVudChFcnJvckljb24sIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzaXplOiBcInhzXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgfSksIGNyZWF0ZUNvbXBvbmVudChUZXh0LCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdHJhbnNsYXRpb25LZXk6IFwid2FsbGV0TW9kYWwuYWxsV2FsbGV0cy53YWxsZXROb3RTdXBwb3J0U2VydmljZVwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGdldCB0cmFuc2xhdGlvblZhbHVlcygpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6IGVycm9yU3VwcG9ydE9wZW5lZCgpLm5hbWVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gW2NyZWF0ZU1lbW8oKCkgPT4gZXJyb3JTdXBwb3J0T3BlbmVkKCkubmFtZSksIFwiIGRvZXNuXFx1MjAxOXQgc3VwcG9ydCBjb25uZWN0ZWQgc2VydmljZVwiXTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgIH0pXTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICB9KV07XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSldO1xuICAgICAgICB9XG4gICAgICB9KV07XG4gICAgfVxuICB9KTtcbn07XG5jb25zdCB0Z0J1dHRvbkJvcmRlcnMgPSB7XG4gIG06IFwiMTZweFwiLFxuICBzOiBcIjEycHhcIixcbiAgbm9uZTogXCIwXCJcbn07XG5jb25zdCB0Z0ljb25Cb3JkZXJzID0ge1xuICBtOiBcIjZweFwiLFxuICBzOiBcIjZweFwiLFxuICBub25lOiBcIjBcIlxufTtcbmNvbnN0IERlc2t0b3BDb25uZWN0aW9uTW9kYWxTdHlsZWQgPSBzdHlsZWQuZGl2YFxuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbmA7XG5jb25zdCBCb2R5U3R5bGVkJDEgPSBzdHlsZWQuZGl2YFxuICAgIGZsZXg6IDE7XG4gICAgbWFyZ2luLXRvcDogJHsocHJvcHMpID0+IHByb3BzLnFyID8gXCIwXCIgOiBcIjE4cHhcIn07XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgbWluLWhlaWdodDogMjMycHg7XG5gO1xuY29uc3QgUVJDb2RlU3R5bGVkJDEgPSBzdHlsZWQoUVJDb2RlKWBcbiAgICBtYXJnaW4tYm90dG9tOiAyNHB4O1xuYDtcbmNvbnN0IEgxU3R5bGVkJDYgPSBzdHlsZWQoSDEpYFxuICAgIG1heC13aWR0aDogMjg4cHg7XG4gICAgbWFyZ2luOiAwIGF1dG8gMnB4O1xuYDtcbmNvbnN0IEgyU3R5bGVkJDQgPSBzdHlsZWQoSDIpYFxuICAgIG1heC13aWR0aDogMjg4cHg7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIG1hcmdpbjogMCBhdXRvIDIwcHg7XG5gO1xuY29uc3QgU3R5bGVkSWNvbkJ1dHRvbiQyID0gc3R5bGVkKEljb25CdXR0b24pYFxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB0b3A6IDE2cHg7XG4gICAgbGVmdDogMTZweDtcbmA7XG5jb25zdCBCdXR0b25zQ29udGFpbmVyU3R5bGVkJDEgPSBzdHlsZWQuZGl2YFxuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgZ2FwOiA4cHg7XG4gICAgcGFkZGluZy1ib3R0b206IDE2cHg7XG5gO1xuY29uc3QgQm90dG9tQnV0dG9uc0NvbnRhaW5lclN0eWxlZCA9IHN0eWxlZChCdXR0b25zQ29udGFpbmVyU3R5bGVkJDEpYFxuICAgIHBhZGRpbmctYm90dG9tOiAwO1xuYDtcbmNvbnN0IEZvb3RlckJ1dHRvbiQxID0gc3R5bGVkKEJ1dHRvbilgXG4gICAgbWFyZ2luLWJvdHRvbTogMjRweDtcbmA7XG5jb25zdCBMb2FkZXJTdHlsZWQkMSA9IHN0eWxlZChMb2FkZXJJY29uKWBcbiAgICBtYXJnaW4tYm90dG9tOiAxOHB4O1xuICAgIG1hcmdpbi10b3A6IDJweDtcbmA7XG5jb25zdCBFcnJvckljb25TdHlsZWQkMSA9IHN0eWxlZChFcnJvckljb24pYFxuICAgIG1hcmdpbi1ib3R0b206IDE2cHg7XG5gO1xuY29uc3QgQm9keVRleHRTdHlsZWQkMSA9IHN0eWxlZChIMilgXG4gICAgY29sb3I6ICR7KHByb3BzKSA9PiBwcm9wcy50aGVtZS5jb2xvcnMudGV4dC5zZWNvbmRhcnl9O1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICBtYXJnaW4tYm90dG9tOiAyMHB4O1xuYDtcbmNvbnN0IFRnQnV0dG9uU3R5bGVkID0gc3R5bGVkKEJ1dHRvbilgXG4gICAgbWFyZ2luLXRvcDogLThweDtcbiAgICBtYXJnaW4tYm90dG9tOiAyNHB4O1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIHBhZGRpbmc6IDEycHggMTJweCAxMnB4IDIwcHg7XG4gICAgYm9yZGVyLXJhZGl1czogJHsocHJvcHMpID0+IHRnQnV0dG9uQm9yZGVyc1twcm9wcy50aGVtZS5ib3JkZXJSYWRpdXNdfTtcbiAgICBmb250LXNpemU6IDE2cHg7XG4gICAgbGluZS1oZWlnaHQ6IDIwcHg7XG5gO1xuY29uc3QgVGdJbWFnZVN0eWxlZCA9IHN0eWxlZChJbWFnZSlgXG4gICAgd2lkdGg6IDMycHg7XG4gICAgaGVpZ2h0OiAzMnB4O1xuICAgIGJvcmRlci1yYWRpdXM6ICR7KHByb3BzKSA9PiB0Z0ljb25Cb3JkZXJzW3Byb3BzLnRoZW1lLmJvcmRlclJhZGl1c119O1xuYDtcbmNvbnN0IFRyYW5zbGF0aW9uID0gKHByb3BzKSA9PiB7XG4gIGNvbnN0IFt0Ml0gPSB1c2VJMThuKCk7XG4gIHJldHVybiBjcmVhdGVNZW1vKCgpID0+IHtcbiAgICB2YXIgX2EyO1xuICAgIHJldHVybiB0Mihwcm9wcy50cmFuc2xhdGlvbktleSwgcHJvcHMudHJhbnNsYXRpb25WYWx1ZXMsIChfYTIgPSBwcm9wcy5jaGlsZHJlbikgPT0gbnVsbCA/IHZvaWQgMCA6IF9hMi50b1N0cmluZygpKTtcbiAgfSk7XG59O1xuZnVuY3Rpb24gYWRkUmV0dXJuU3RyYXRlZ3kodXJsLCBzdHJhdGVneSkge1xuICBsZXQgcmV0dXJuU3RyYXRlZ3k7XG4gIGlmICh0eXBlb2Ygc3RyYXRlZ3kgPT09IFwic3RyaW5nXCIpIHtcbiAgICByZXR1cm5TdHJhdGVneSA9IHN0cmF0ZWd5O1xuICB9IGVsc2Uge1xuICAgIHJldHVyblN0cmF0ZWd5ID0gaXNJblRNQSgpID8gc3RyYXRlZ3kudHdhUmV0dXJuVXJsIHx8IHN0cmF0ZWd5LnJldHVyblN0cmF0ZWd5IDogXCJub25lXCI7XG4gIH1cbiAgY29uc3QgbmV3VXJsID0gYWRkUXVlcnlQYXJhbWV0ZXIodXJsLCBcInJldFwiLCByZXR1cm5TdHJhdGVneSk7XG4gIGlmICghaXNUZWxlZ3JhbVVybCh1cmwpKSB7XG4gICAgcmV0dXJuIG5ld1VybDtcbiAgfVxuICBjb25zdCBsYXN0UGFyYW0gPSBuZXdVcmwuc2xpY2UobmV3VXJsLmxhc3RJbmRleE9mKFwiJlwiKSArIDEpO1xuICByZXR1cm4gbmV3VXJsLnNsaWNlKDAsIG5ld1VybC5sYXN0SW5kZXhPZihcIiZcIikpICsgXCItXCIgKyBlbmNvZGVUZWxlZ3JhbVVybFBhcmFtZXRlcnMobGFzdFBhcmFtKTtcbn1cbmZ1bmN0aW9uIHJlZGlyZWN0VG9UZWxlZ3JhbSh1bml2ZXJzYWxMaW5rLCBvcHRpb25zKSB7XG4gIG9wdGlvbnMgPSBfX3NwcmVhZFZhbHVlcyh7fSwgb3B0aW9ucyk7XG4gIGNvbnN0IGRpcmVjdExpbmsgPSBjb252ZXJ0VG9UR0RpcmVjdExpbmsodW5pdmVyc2FsTGluayk7XG4gIGNvbnN0IGRpcmVjdExpbmtVcmwgPSBuZXcgVVJMKGRpcmVjdExpbmspO1xuICBpZiAoIWRpcmVjdExpbmtVcmwuc2VhcmNoUGFyYW1zLmhhcyhcInN0YXJ0YXBwXCIpKSB7XG4gICAgZGlyZWN0TGlua1VybC5zZWFyY2hQYXJhbXMuYXBwZW5kKFwic3RhcnRhcHBcIiwgXCJ0b25jb25uZWN0XCIpO1xuICB9XG4gIGlmIChpc0luVGVsZWdyYW1Ccm93c2VyKCkpIHtcbiAgICBvcHRpb25zLnJldHVyblN0cmF0ZWd5ID0gXCJiYWNrXCI7XG4gICAgY29uc3QgbGlua1dpdFN0cmF0ZWd5ID0gYWRkUmV0dXJuU3RyYXRlZ3koZGlyZWN0TGlua1VybC50b1N0cmluZygpLCBvcHRpb25zLnJldHVyblN0cmF0ZWd5KTtcbiAgICBvcGVuTGlua0JsYW5rKGxpbmtXaXRTdHJhdGVneSk7XG4gIH0gZWxzZSBpZiAoaXNJblRNQSgpKSB7XG4gICAgaWYgKGlzVG1hUGxhdGZvcm0oXCJpb3NcIiwgXCJhbmRyb2lkXCIsIFwibWFjb3NcIiwgXCJ0ZGVza3RvcFwiLCBcIndlYlwiKSkge1xuICAgICAgb3B0aW9ucy5yZXR1cm5TdHJhdGVneSA9IFwiYmFja1wiO1xuICAgICAgY29uc3QgbGlua1dpdFN0cmF0ZWd5ID0gYWRkUmV0dXJuU3RyYXRlZ3koXG4gICAgICAgIGRpcmVjdExpbmtVcmwudG9TdHJpbmcoKSxcbiAgICAgICAgb3B0aW9ucy5yZXR1cm5TdHJhdGVneVxuICAgICAgKTtcbiAgICAgIHNlbmRPcGVuVGVsZWdyYW1MaW5rKGxpbmtXaXRTdHJhdGVneSk7XG4gICAgfSBlbHNlIGlmIChpc1RtYVBsYXRmb3JtKFwid2ViYVwiKSkge1xuICAgICAgc2VuZE9wZW5UZWxlZ3JhbUxpbmsoYWRkUmV0dXJuU3RyYXRlZ3koZGlyZWN0TGlua1VybC50b1N0cmluZygpLCBvcHRpb25zKSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIG9wZW5MaW5rQmxhbmsoYWRkUmV0dXJuU3RyYXRlZ3koZGlyZWN0TGlua1VybC50b1N0cmluZygpLCBvcHRpb25zKSk7XG4gICAgfVxuICB9IGVsc2Uge1xuICAgIGlmIChpc09TKFwiaW9zXCIpKSB7XG4gICAgICBpZiAob3B0aW9ucy5yZXR1cm5TdHJhdGVneSA9PT0gXCJiYWNrXCIpIHtcbiAgICAgICAgaWYgKGlzQnJvd3NlcihcInNhZmFyaVwiKSkge1xuICAgICAgICAgIG9wdGlvbnMucmV0dXJuU3RyYXRlZ3kgPSBcImJhY2tcIjtcbiAgICAgICAgfSBlbHNlIGlmIChpc0Jyb3dzZXIoXCJjaHJvbWVcIikpIHtcbiAgICAgICAgICBvcHRpb25zLnJldHVyblN0cmF0ZWd5ID0gXCJnb29nbGVjaHJvbWU6Ly9cIjtcbiAgICAgICAgfSBlbHNlIGlmIChpc0Jyb3dzZXIoXCJmaXJlZm94XCIpKSB7XG4gICAgICAgICAgb3B0aW9ucy5yZXR1cm5TdHJhdGVneSA9IFwiZmlyZWZveDovL1wiO1xuICAgICAgICB9IGVsc2UgaWYgKGlzQnJvd3NlcihcIm9wZXJhXCIpKSB7XG4gICAgICAgICAgb3B0aW9ucy5yZXR1cm5TdHJhdGVneSA9IFwib3BlcmEtaHR0cDovL1wiO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIG9wdGlvbnMucmV0dXJuU3RyYXRlZ3kgPSBsb2NhdGlvbi5ocmVmO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBjb25zdCBpc0Nocm9tZSA9IGlzQnJvd3NlcihcImNocm9tZVwiKTtcbiAgICAgIGNvbnN0IGlzRmlyZWZveCA9IGlzQnJvd3NlcihcImZpcmVmb3hcIik7XG4gICAgICBjb25zdCB1c2VEZWVwTGluayA9IChpc0Nocm9tZSB8fCBpc0ZpcmVmb3gpICYmICFvcHRpb25zLmZvcmNlUmVkaXJlY3Q7XG4gICAgICBpZiAodXNlRGVlcExpbmspIHtcbiAgICAgICAgY29uc3QgbGlua1dpdGhTdHJhdGVneSA9IGFkZFJldHVyblN0cmF0ZWd5KFxuICAgICAgICAgIGRpcmVjdExpbmtVcmwudG9TdHJpbmcoKSxcbiAgICAgICAgICBvcHRpb25zLnJldHVyblN0cmF0ZWd5XG4gICAgICAgICk7XG4gICAgICAgIGNvbnN0IGRlZXBMaW5rID0gY29udmVydFRvVEdEZWVwTGluayhsaW5rV2l0aFN0cmF0ZWd5KTtcbiAgICAgICAgb3BlbkRlZXBsaW5rV2l0aEZhbGxiYWNrKGRlZXBMaW5rLCAoKSA9PiBvcGVuTGlua0JsYW5rKGxpbmtXaXRoU3RyYXRlZ3kpKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGNvbnN0IGxpbmtXaXRoU3RyYXRlZ3kgPSBhZGRSZXR1cm5TdHJhdGVneShcbiAgICAgICAgICBkaXJlY3RMaW5rVXJsLnRvU3RyaW5nKCksXG4gICAgICAgICAgb3B0aW9ucy5yZXR1cm5TdHJhdGVneVxuICAgICAgICApO1xuICAgICAgICBvcGVuTGlua0JsYW5rKGxpbmtXaXRoU3RyYXRlZ3kpO1xuICAgICAgfVxuICAgIH0gZWxzZSBpZiAoaXNPUyhcImFuZHJvaWRcIikpIHtcbiAgICAgIG9wdGlvbnMucmV0dXJuU3RyYXRlZ3kgPSBcImJhY2tcIjtcbiAgICAgIGNvbnN0IGlzQ2hyb21lID0gaXNCcm93c2VyKFwiY2hyb21lXCIpO1xuICAgICAgY29uc3QgaXNGaXJlZm94ID0gaXNCcm93c2VyKFwiZmlyZWZveFwiKTtcbiAgICAgIGNvbnN0IHVzZURlZXBMaW5rID0gKGlzQ2hyb21lIHx8IGlzRmlyZWZveCkgJiYgIW9wdGlvbnMuZm9yY2VSZWRpcmVjdDtcbiAgICAgIGlmICh1c2VEZWVwTGluaykge1xuICAgICAgICBjb25zdCBsaW5rV2l0aFN0cmF0ZWd5ID0gYWRkUmV0dXJuU3RyYXRlZ3koXG4gICAgICAgICAgZGlyZWN0TGlua1VybC50b1N0cmluZygpLFxuICAgICAgICAgIG9wdGlvbnMucmV0dXJuU3RyYXRlZ3lcbiAgICAgICAgKTtcbiAgICAgICAgY29uc3QgZGVlcExpbmsgPSBjb252ZXJ0VG9UR0RlZXBMaW5rKGxpbmtXaXRoU3RyYXRlZ3kpO1xuICAgICAgICBvcGVuRGVlcGxpbmtXaXRoRmFsbGJhY2soZGVlcExpbmssICgpID0+IG9wZW5MaW5rQmxhbmsobGlua1dpdGhTdHJhdGVneSkpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgY29uc3QgbGlua1dpdGhTdHJhdGVneSA9IGFkZFJldHVyblN0cmF0ZWd5KFxuICAgICAgICAgIGRpcmVjdExpbmtVcmwudG9TdHJpbmcoKSxcbiAgICAgICAgICBvcHRpb25zLnJldHVyblN0cmF0ZWd5XG4gICAgICAgICk7XG4gICAgICAgIG9wZW5MaW5rQmxhbmsobGlua1dpdGhTdHJhdGVneSk7XG4gICAgICB9XG4gICAgfSBlbHNlIGlmIChpc09TKFwiaXBhZFwiKSkge1xuICAgICAgaWYgKG9wdGlvbnMucmV0dXJuU3RyYXRlZ3kgPT09IFwiYmFja1wiKSB7XG4gICAgICAgIGlmIChpc0Jyb3dzZXIoXCJzYWZhcmlcIikpIHtcbiAgICAgICAgICBvcHRpb25zLnJldHVyblN0cmF0ZWd5ID0gXCJiYWNrXCI7XG4gICAgICAgIH0gZWxzZSBpZiAoaXNCcm93c2VyKFwiY2hyb21lXCIpKSB7XG4gICAgICAgICAgb3B0aW9ucy5yZXR1cm5TdHJhdGVneSA9IFwiZ29vZ2xlY2hyb21lOi8vXCI7XG4gICAgICAgIH0gZWxzZSBpZiAoaXNCcm93c2VyKFwiZmlyZWZveFwiKSkge1xuICAgICAgICAgIG9wdGlvbnMucmV0dXJuU3RyYXRlZ3kgPSBcImZpcmVmb3g6Ly9cIjtcbiAgICAgICAgfSBlbHNlIGlmIChpc0Jyb3dzZXIoXCJvcGVyYVwiKSkge1xuICAgICAgICAgIG9wdGlvbnMucmV0dXJuU3RyYXRlZ3kgPSBcIm9wZXJhLWh0dHA6Ly9cIjtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBvcHRpb25zLnJldHVyblN0cmF0ZWd5ID0gbG9jYXRpb24uaHJlZjtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgY29uc3QgaXNDaHJvbWUgPSBpc0Jyb3dzZXIoXCJjaHJvbWVcIik7XG4gICAgICBjb25zdCBpc0ZpcmVmb3ggPSBpc0Jyb3dzZXIoXCJmaXJlZm94XCIpO1xuICAgICAgY29uc3QgdXNlRGVlcExpbmsgPSAoaXNDaHJvbWUgfHwgaXNGaXJlZm94KSAmJiAhb3B0aW9ucy5mb3JjZVJlZGlyZWN0O1xuICAgICAgY29uc3QgbGlua1dpdGhTdHJhdGVneSA9IGFkZFJldHVyblN0cmF0ZWd5KFxuICAgICAgICBkaXJlY3RMaW5rVXJsLnRvU3RyaW5nKCksXG4gICAgICAgIG9wdGlvbnMucmV0dXJuU3RyYXRlZ3lcbiAgICAgICk7XG4gICAgICBpZiAodXNlRGVlcExpbmspIHtcbiAgICAgICAgY29uc3QgZGVlcExpbmsgPSBjb252ZXJ0VG9UR0RlZXBMaW5rKGxpbmtXaXRoU3RyYXRlZ3kpO1xuICAgICAgICBvcGVuRGVlcGxpbmtXaXRoRmFsbGJhY2soZGVlcExpbmssICgpID0+IG9wZW5MaW5rQmxhbmsobGlua1dpdGhTdHJhdGVneSkpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgb3BlbkxpbmtCbGFuayhsaW5rV2l0aFN0cmF0ZWd5KTtcbiAgICAgIH1cbiAgICB9IGVsc2UgaWYgKGlzT1MoXCJtYWNvc1wiLCBcIndpbmRvd3NcIiwgXCJsaW51eFwiKSkge1xuICAgICAgb3B0aW9ucy5yZXR1cm5TdHJhdGVneSA9IFwiYmFja1wiO1xuICAgICAgb3B0aW9ucy50d2FSZXR1cm5VcmwgPSB2b2lkIDA7XG4gICAgICBjb25zdCBsaW5rV2l0aFN0cmF0ZWd5ID0gYWRkUmV0dXJuU3RyYXRlZ3koXG4gICAgICAgIGRpcmVjdExpbmtVcmwudG9TdHJpbmcoKSxcbiAgICAgICAgb3B0aW9ucy5yZXR1cm5TdHJhdGVneVxuICAgICAgKTtcbiAgICAgIGlmIChvcHRpb25zLmZvcmNlUmVkaXJlY3QpIHtcbiAgICAgICAgb3BlbkxpbmtCbGFuayhsaW5rV2l0aFN0cmF0ZWd5KTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGNvbnN0IGRlZXBMaW5rID0gY29udmVydFRvVEdEZWVwTGluayhsaW5rV2l0aFN0cmF0ZWd5KTtcbiAgICAgICAgb3BlbkRlZXBsaW5rV2l0aEZhbGxiYWNrKGRlZXBMaW5rLCAoKSA9PiBvcGVuTGlua0JsYW5rKGxpbmtXaXRoU3RyYXRlZ3kpKTtcbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgb3BlbkxpbmtCbGFuayhhZGRSZXR1cm5TdHJhdGVneShkaXJlY3RMaW5rVXJsLnRvU3RyaW5nKCksIG9wdGlvbnMpKTtcbiAgICB9XG4gIH1cbn1cbmZ1bmN0aW9uIHJlZGlyZWN0VG9XYWxsZXQodW5pdmVyc2FsTGluaywgZGVlcExpbmssIG9wdGlvbnMsIHNldE9wZW5NZXRob2QpIHtcbiAgb3B0aW9ucyA9IF9fc3ByZWFkVmFsdWVzKHt9LCBvcHRpb25zKTtcbiAgaWYgKGlzSW5UZWxlZ3JhbUJyb3dzZXIoKSkge1xuICAgIGlmIChpc09TKFwiaW9zXCIsIFwiYW5kcm9pZFwiKSkge1xuICAgICAgaWYgKG9wdGlvbnMucmV0dXJuU3RyYXRlZ3kgPT09IFwiYmFja1wiKSB7XG4gICAgICAgIG9wdGlvbnMucmV0dXJuU3RyYXRlZ3kgPSBcInRnOi8vcmVzb2x2ZVwiO1xuICAgICAgfVxuICAgICAgc2V0T3Blbk1ldGhvZChcInVuaXZlcnNhbC1saW5rXCIpO1xuICAgICAgb3BlbkxpbmsoYWRkUmV0dXJuU3RyYXRlZ3kodW5pdmVyc2FsTGluaywgb3B0aW9ucy5yZXR1cm5TdHJhdGVneSksIFwiX3NlbGZcIik7XG4gICAgfSBlbHNlIHtcbiAgICAgIHNldE9wZW5NZXRob2QoXCJ1bml2ZXJzYWwtbGlua1wiKTtcbiAgICAgIGNvbnN0IGxpbmtXaXRTdHJhdGVneSA9IGFkZFJldHVyblN0cmF0ZWd5KHVuaXZlcnNhbExpbmssIG9wdGlvbnMucmV0dXJuU3RyYXRlZ3kpO1xuICAgICAgb3BlbkxpbmtCbGFuayhsaW5rV2l0U3RyYXRlZ3kpO1xuICAgIH1cbiAgfSBlbHNlIGlmIChpc0luVE1BKCkpIHtcbiAgICBpZiAoaXNUbWFQbGF0Zm9ybShcImlvc1wiLCBcImFuZHJvaWRcIikpIHtcbiAgICAgIGlmIChvcHRpb25zLnJldHVyblN0cmF0ZWd5ID09PSBcImJhY2tcIikge1xuICAgICAgICBvcHRpb25zLnJldHVyblN0cmF0ZWd5ID0gXCJ0ZzovL3Jlc29sdmVcIjtcbiAgICAgIH1cbiAgICAgIHNldE9wZW5NZXRob2QoXCJ1bml2ZXJzYWwtbGlua1wiKTtcbiAgICAgIGNvbnN0IGxpbmtXaXRTdHJhdGVneSA9IGFkZFJldHVyblN0cmF0ZWd5KHVuaXZlcnNhbExpbmssIG9wdGlvbnMucmV0dXJuU3RyYXRlZ3kpO1xuICAgICAgc2VuZE9wZW5UZWxlZ3JhbUxpbmsobGlua1dpdFN0cmF0ZWd5LCAoKSA9PiB7XG4gICAgICAgIHNldE9wZW5NZXRob2QoXCJ1bml2ZXJzYWwtbGlua1wiKTtcbiAgICAgICAgb3BlbkxpbmtCbGFuayhsaW5rV2l0U3RyYXRlZ3kpO1xuICAgICAgfSk7XG4gICAgfSBlbHNlIGlmIChpc1RtYVBsYXRmb3JtKFwibWFjb3NcIiwgXCJ0ZGVza3RvcFwiKSkge1xuICAgICAgaWYgKG9wdGlvbnMucmV0dXJuU3RyYXRlZ3kgPT09IFwiYmFja1wiKSB7XG4gICAgICAgIG9wdGlvbnMucmV0dXJuU3RyYXRlZ3kgPSBcInRnOi8vcmVzb2x2ZVwiO1xuICAgICAgfVxuICAgICAgY29uc3QgbGlua1dpdFN0cmF0ZWd5ID0gYWRkUmV0dXJuU3RyYXRlZ3kodW5pdmVyc2FsTGluaywgb3B0aW9ucy5yZXR1cm5TdHJhdGVneSk7XG4gICAgICBjb25zdCB1c2VEZWVwTGluayA9ICEhZGVlcExpbmsgJiYgIW9wdGlvbnMuZm9yY2VSZWRpcmVjdDtcbiAgICAgIGlmICh1c2VEZWVwTGluaykge1xuICAgICAgICBzZXRPcGVuTWV0aG9kKFwiY3VzdG9tLWRlZXBsaW5rXCIpO1xuICAgICAgICBvcGVuRGVlcGxpbmtXaXRoRmFsbGJhY2sodG9EZWVwbGluayhsaW5rV2l0U3RyYXRlZ3ksIGRlZXBMaW5rKSwgKCkgPT4ge1xuICAgICAgICAgIHNldE9wZW5NZXRob2QoXCJ1bml2ZXJzYWwtbGlua1wiKTtcbiAgICAgICAgICBvcGVuTGlua0JsYW5rKGxpbmtXaXRTdHJhdGVneSk7XG4gICAgICAgIH0pO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgc2V0T3Blbk1ldGhvZChcInVuaXZlcnNhbC1saW5rXCIpO1xuICAgICAgICBvcGVuTGlua0JsYW5rKGxpbmtXaXRTdHJhdGVneSk7XG4gICAgICB9XG4gICAgfSBlbHNlIGlmIChpc1RtYVBsYXRmb3JtKFwid2ViYVwiKSkge1xuICAgICAgaWYgKG9wdGlvbnMucmV0dXJuU3RyYXRlZ3kgPT09IFwiYmFja1wiKSB7XG4gICAgICAgIGlmIChpc0Jyb3dzZXIoXCJzYWZhcmlcIikpIHtcbiAgICAgICAgICBvcHRpb25zLnJldHVyblN0cmF0ZWd5ID0gbG9jYXRpb24uaHJlZjtcbiAgICAgICAgfSBlbHNlIGlmIChpc0Jyb3dzZXIoXCJjaHJvbWVcIikpIHtcbiAgICAgICAgICBvcHRpb25zLnJldHVyblN0cmF0ZWd5ID0gXCJnb29nbGVjaHJvbWU6Ly9cIjtcbiAgICAgICAgfSBlbHNlIGlmIChpc0Jyb3dzZXIoXCJmaXJlZm94XCIpKSB7XG4gICAgICAgICAgb3B0aW9ucy5yZXR1cm5TdHJhdGVneSA9IFwiZmlyZWZveDovL1wiO1xuICAgICAgICB9IGVsc2UgaWYgKGlzQnJvd3NlcihcIm9wZXJhXCIpKSB7XG4gICAgICAgICAgb3B0aW9ucy5yZXR1cm5TdHJhdGVneSA9IFwib3BlcmEtaHR0cDovL1wiO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIG9wdGlvbnMucmV0dXJuU3RyYXRlZ3kgPSBsb2NhdGlvbi5ocmVmO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBjb25zdCBsaW5rV2l0U3RyYXRlZ3kgPSBhZGRSZXR1cm5TdHJhdGVneSh1bml2ZXJzYWxMaW5rLCBvcHRpb25zLnJldHVyblN0cmF0ZWd5KTtcbiAgICAgIGNvbnN0IHVzZURlZXBMaW5rID0gISFkZWVwTGluayAmJiAhb3B0aW9ucy5mb3JjZVJlZGlyZWN0O1xuICAgICAgaWYgKHVzZURlZXBMaW5rKSB7XG4gICAgICAgIHNldE9wZW5NZXRob2QoXCJjdXN0b20tZGVlcGxpbmtcIik7XG4gICAgICAgIG9wZW5EZWVwbGlua1dpdGhGYWxsYmFjayh0b0RlZXBsaW5rKGxpbmtXaXRTdHJhdGVneSwgZGVlcExpbmspLCAoKSA9PiB7XG4gICAgICAgICAgc2V0T3Blbk1ldGhvZChcInVuaXZlcnNhbC1saW5rXCIpO1xuICAgICAgICAgIG9wZW5MaW5rQmxhbmsobGlua1dpdFN0cmF0ZWd5KTtcbiAgICAgICAgfSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBzZXRPcGVuTWV0aG9kKFwidW5pdmVyc2FsLWxpbmtcIik7XG4gICAgICAgIG9wZW5MaW5rQmxhbmsobGlua1dpdFN0cmF0ZWd5KTtcbiAgICAgIH1cbiAgICB9IGVsc2UgaWYgKGlzVG1hUGxhdGZvcm0oXCJ3ZWJcIikpIHtcbiAgICAgIGlmIChvcHRpb25zLnJldHVyblN0cmF0ZWd5ID09PSBcImJhY2tcIikge1xuICAgICAgICBpZiAoaXNCcm93c2VyKFwic2FmYXJpXCIpKSB7XG4gICAgICAgICAgb3B0aW9ucy5yZXR1cm5TdHJhdGVneSA9IGxvY2F0aW9uLmhyZWY7XG4gICAgICAgIH0gZWxzZSBpZiAoaXNCcm93c2VyKFwiY2hyb21lXCIpKSB7XG4gICAgICAgICAgb3B0aW9ucy5yZXR1cm5TdHJhdGVneSA9IFwiZ29vZ2xlY2hyb21lOi8vXCI7XG4gICAgICAgIH0gZWxzZSBpZiAoaXNCcm93c2VyKFwiZmlyZWZveFwiKSkge1xuICAgICAgICAgIG9wdGlvbnMucmV0dXJuU3RyYXRlZ3kgPSBcImZpcmVmb3g6Ly9cIjtcbiAgICAgICAgfSBlbHNlIGlmIChpc0Jyb3dzZXIoXCJvcGVyYVwiKSkge1xuICAgICAgICAgIG9wdGlvbnMucmV0dXJuU3RyYXRlZ3kgPSBcIm9wZXJhLWh0dHA6Ly9cIjtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBvcHRpb25zLnJldHVyblN0cmF0ZWd5ID0gbG9jYXRpb24uaHJlZjtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgY29uc3QgbGlua1dpdFN0cmF0ZWd5ID0gYWRkUmV0dXJuU3RyYXRlZ3kodW5pdmVyc2FsTGluaywgb3B0aW9ucy5yZXR1cm5TdHJhdGVneSk7XG4gICAgICBjb25zdCB1c2VEZWVwTGluayA9ICEhZGVlcExpbmsgJiYgIW9wdGlvbnMuZm9yY2VSZWRpcmVjdDtcbiAgICAgIGlmICh1c2VEZWVwTGluaykge1xuICAgICAgICBzZXRPcGVuTWV0aG9kKFwiY3VzdG9tLWRlZXBsaW5rXCIpO1xuICAgICAgICBvcGVuRGVlcGxpbmtXaXRoRmFsbGJhY2sodG9EZWVwbGluayhsaW5rV2l0U3RyYXRlZ3ksIGRlZXBMaW5rKSwgKCkgPT4ge1xuICAgICAgICAgIHNldE9wZW5NZXRob2QoXCJ1bml2ZXJzYWwtbGlua1wiKTtcbiAgICAgICAgICBvcGVuTGlua0JsYW5rKGxpbmtXaXRTdHJhdGVneSk7XG4gICAgICAgIH0pO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgc2V0T3Blbk1ldGhvZChcInVuaXZlcnNhbC1saW5rXCIpO1xuICAgICAgICBvcGVuTGlua0JsYW5rKGxpbmtXaXRTdHJhdGVneSk7XG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIHNldE9wZW5NZXRob2QoXCJ1bml2ZXJzYWwtbGlua1wiKTtcbiAgICAgIGNvbnN0IGxpbmtXaXRTdHJhdGVneSA9IGFkZFJldHVyblN0cmF0ZWd5KHVuaXZlcnNhbExpbmssIG9wdGlvbnMucmV0dXJuU3RyYXRlZ3kpO1xuICAgICAgb3BlbkxpbmtCbGFuayhsaW5rV2l0U3RyYXRlZ3kpO1xuICAgIH1cbiAgfSBlbHNlIHtcbiAgICBpZiAoaXNPUyhcImlvc1wiKSkge1xuICAgICAgaWYgKG9wdGlvbnMucmV0dXJuU3RyYXRlZ3kgPT09IFwiYmFja1wiKSB7XG4gICAgICAgIGlmIChpc0Jyb3dzZXIoXCJzYWZhcmlcIikpIHtcbiAgICAgICAgICBvcHRpb25zLnJldHVyblN0cmF0ZWd5ID0gXCJub25lXCI7XG4gICAgICAgIH0gZWxzZSBpZiAoaXNCcm93c2VyKFwiY2hyb21lXCIpKSB7XG4gICAgICAgICAgb3B0aW9ucy5yZXR1cm5TdHJhdGVneSA9IFwiZ29vZ2xlY2hyb21lOi8vXCI7XG4gICAgICAgIH0gZWxzZSBpZiAoaXNCcm93c2VyKFwiZmlyZWZveFwiKSkge1xuICAgICAgICAgIG9wdGlvbnMucmV0dXJuU3RyYXRlZ3kgPSBcImZpcmVmb3g6Ly9cIjtcbiAgICAgICAgfSBlbHNlIGlmIChpc0Jyb3dzZXIoXCJvcGVyYVwiKSkge1xuICAgICAgICAgIG9wdGlvbnMucmV0dXJuU3RyYXRlZ3kgPSBcIm9wZXJhLWh0dHA6Ly9cIjtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBvcHRpb25zLnJldHVyblN0cmF0ZWd5ID0gbG9jYXRpb24uaHJlZjtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgaWYgKGlzQnJvd3NlcihcImNocm9tZVwiKSkge1xuICAgICAgICBzZXRPcGVuTWV0aG9kKFwidW5pdmVyc2FsLWxpbmtcIik7XG4gICAgICAgIG9wZW5MaW5rKGFkZFJldHVyblN0cmF0ZWd5KHVuaXZlcnNhbExpbmssIG9wdGlvbnMucmV0dXJuU3RyYXRlZ3kpLCBcIl9zZWxmXCIpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgc2V0T3Blbk1ldGhvZChcInVuaXZlcnNhbC1saW5rXCIpO1xuICAgICAgICBvcGVuTGlua0JsYW5rKGFkZFJldHVyblN0cmF0ZWd5KHVuaXZlcnNhbExpbmssIG9wdGlvbnMucmV0dXJuU3RyYXRlZ3kpKTtcbiAgICAgIH1cbiAgICB9IGVsc2UgaWYgKGlzT1MoXCJhbmRyb2lkXCIpKSB7XG4gICAgICBpZiAob3B0aW9ucy5yZXR1cm5TdHJhdGVneSA9PT0gXCJiYWNrXCIpIHtcbiAgICAgICAgaWYgKGlzQnJvd3NlcihcImNocm9tZVwiKSkge1xuICAgICAgICAgIG9wdGlvbnMucmV0dXJuU3RyYXRlZ3kgPSBcImdvb2dsZWNocm9tZTovL1wiO1xuICAgICAgICB9IGVsc2UgaWYgKGlzQnJvd3NlcihcImZpcmVmb3hcIikpIHtcbiAgICAgICAgICBvcHRpb25zLnJldHVyblN0cmF0ZWd5ID0gXCJmaXJlZm94Oi8vXCI7XG4gICAgICAgIH0gZWxzZSBpZiAoaXNCcm93c2VyKFwib3BlcmFcIikpIHtcbiAgICAgICAgICBvcHRpb25zLnJldHVyblN0cmF0ZWd5ID0gXCJvcGVyYS1odHRwOi8vXCI7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgb3B0aW9ucy5yZXR1cm5TdHJhdGVneSA9IGxvY2F0aW9uLmhyZWY7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIHNldE9wZW5NZXRob2QoXCJ1bml2ZXJzYWwtbGlua1wiKTtcbiAgICAgIG9wZW5MaW5rQmxhbmsoYWRkUmV0dXJuU3RyYXRlZ3kodW5pdmVyc2FsTGluaywgb3B0aW9ucy5yZXR1cm5TdHJhdGVneSkpO1xuICAgIH0gZWxzZSBpZiAoaXNPUyhcImlwYWRcIikpIHtcbiAgICAgIGlmIChvcHRpb25zLnJldHVyblN0cmF0ZWd5ID09PSBcImJhY2tcIikge1xuICAgICAgICBpZiAoaXNCcm93c2VyKFwic2FmYXJpXCIpKSB7XG4gICAgICAgICAgb3B0aW9ucy5yZXR1cm5TdHJhdGVneSA9IFwibm9uZVwiO1xuICAgICAgICB9IGVsc2UgaWYgKGlzQnJvd3NlcihcImNocm9tZVwiKSkge1xuICAgICAgICAgIG9wdGlvbnMucmV0dXJuU3RyYXRlZ3kgPSBcImdvb2dsZWNocm9tZTovL1wiO1xuICAgICAgICB9IGVsc2UgaWYgKGlzQnJvd3NlcihcImZpcmVmb3hcIikpIHtcbiAgICAgICAgICBvcHRpb25zLnJldHVyblN0cmF0ZWd5ID0gXCJmaXJlZm94Oi8vXCI7XG4gICAgICAgIH0gZWxzZSBpZiAoaXNCcm93c2VyKFwib3BlcmFcIikpIHtcbiAgICAgICAgICBvcHRpb25zLnJldHVyblN0cmF0ZWd5ID0gXCJvcGVyYS1odHRwOi8vXCI7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgb3B0aW9ucy5yZXR1cm5TdHJhdGVneSA9IGxvY2F0aW9uLmhyZWY7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGlmIChpc0Jyb3dzZXIoXCJjaHJvbWVcIikpIHtcbiAgICAgICAgc2V0T3Blbk1ldGhvZChcInVuaXZlcnNhbC1saW5rXCIpO1xuICAgICAgICBvcGVuTGluayhhZGRSZXR1cm5TdHJhdGVneSh1bml2ZXJzYWxMaW5rLCBvcHRpb25zLnJldHVyblN0cmF0ZWd5KSwgXCJfc2VsZlwiKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHNldE9wZW5NZXRob2QoXCJ1bml2ZXJzYWwtbGlua1wiKTtcbiAgICAgICAgb3BlbkxpbmtCbGFuayhhZGRSZXR1cm5TdHJhdGVneSh1bml2ZXJzYWxMaW5rLCBvcHRpb25zLnJldHVyblN0cmF0ZWd5KSk7XG4gICAgICB9XG4gICAgfSBlbHNlIGlmIChpc09TKFwibWFjb3NcIiwgXCJ3aW5kb3dzXCIsIFwibGludXhcIikpIHtcbiAgICAgIGlmIChvcHRpb25zLnJldHVyblN0cmF0ZWd5ID09PSBcImJhY2tcIikge1xuICAgICAgICBpZiAoaXNCcm93c2VyKFwic2FmYXJpXCIpKSB7XG4gICAgICAgICAgb3B0aW9ucy5yZXR1cm5TdHJhdGVneSA9IFwibm9uZVwiO1xuICAgICAgICB9IGVsc2UgaWYgKGlzQnJvd3NlcihcImNocm9tZVwiKSkge1xuICAgICAgICAgIG9wdGlvbnMucmV0dXJuU3RyYXRlZ3kgPSBcImdvb2dsZWNocm9tZTovL1wiO1xuICAgICAgICB9IGVsc2UgaWYgKGlzQnJvd3NlcihcImZpcmVmb3hcIikpIHtcbiAgICAgICAgICBvcHRpb25zLnJldHVyblN0cmF0ZWd5ID0gXCJmaXJlZm94Oi8vXCI7XG4gICAgICAgIH0gZWxzZSBpZiAoaXNCcm93c2VyKFwib3BlcmFcIikpIHtcbiAgICAgICAgICBvcHRpb25zLnJldHVyblN0cmF0ZWd5ID0gXCJvcGVyYS1odHRwOi8vXCI7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgb3B0aW9ucy5yZXR1cm5TdHJhdGVneSA9IFwibm9uZVwiO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBjb25zdCBsaW5rV2l0U3RyYXRlZ3kgPSBhZGRSZXR1cm5TdHJhdGVneSh1bml2ZXJzYWxMaW5rLCBvcHRpb25zLnJldHVyblN0cmF0ZWd5KTtcbiAgICAgIGNvbnN0IHVzZURlZXBMaW5rID0gISFkZWVwTGluayAmJiAhb3B0aW9ucy5mb3JjZVJlZGlyZWN0O1xuICAgICAgaWYgKHVzZURlZXBMaW5rKSB7XG4gICAgICAgIHNldE9wZW5NZXRob2QoXCJjdXN0b20tZGVlcGxpbmtcIik7XG4gICAgICAgIG9wZW5EZWVwbGlua1dpdGhGYWxsYmFjayh0b0RlZXBsaW5rKGxpbmtXaXRTdHJhdGVneSwgZGVlcExpbmspLCAoKSA9PiB7XG4gICAgICAgICAgc2V0T3Blbk1ldGhvZChcInVuaXZlcnNhbC1saW5rXCIpO1xuICAgICAgICAgIG9wZW5MaW5rQmxhbmsobGlua1dpdFN0cmF0ZWd5KTtcbiAgICAgICAgfSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBzZXRPcGVuTWV0aG9kKFwidW5pdmVyc2FsLWxpbmtcIik7XG4gICAgICAgIG9wZW5MaW5rQmxhbmsobGlua1dpdFN0cmF0ZWd5KTtcbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgc2V0T3Blbk1ldGhvZChcInVuaXZlcnNhbC1saW5rXCIpO1xuICAgICAgb3BlbkxpbmtCbGFuayhhZGRSZXR1cm5TdHJhdGVneSh1bml2ZXJzYWxMaW5rLCBvcHRpb25zLnJldHVyblN0cmF0ZWd5KSk7XG4gICAgfVxuICB9XG59XG5mdW5jdGlvbiBhZGRRdWVyeVBhcmFtZXRlcih1cmwsIGtleSwgdmFsdWUpIHtcbiAgY29uc3QgcGFyc2VkID0gbmV3IFVSTCh1cmwpO1xuICBwYXJzZWQuc2VhcmNoUGFyYW1zLmFwcGVuZChrZXksIHZhbHVlKTtcbiAgcmV0dXJuIHBhcnNlZC50b1N0cmluZygpO1xufVxuZnVuY3Rpb24gY29udmVydFRvVEdEaXJlY3RMaW5rKHVuaXZlcnNhbExpbmspIHtcbiAgY29uc3QgdXJsID0gbmV3IFVSTCh1bml2ZXJzYWxMaW5rKTtcbiAgaWYgKHVybC5zZWFyY2hQYXJhbXMuaGFzKFwiYXR0YWNoXCIpKSB7XG4gICAgdXJsLnNlYXJjaFBhcmFtcy5kZWxldGUoXCJhdHRhY2hcIik7XG4gICAgdXJsLnBhdGhuYW1lICs9IFwiL3N0YXJ0XCI7XG4gIH1cbiAgcmV0dXJuIHVybC50b1N0cmluZygpO1xufVxuZnVuY3Rpb24gY29udmVydFRvVEdEZWVwTGluayhkaXJlY3RMaW5rKSB7XG4gIGNvbnN0IHBhcnNlZCA9IG5ldyBVUkwoZGlyZWN0TGluayk7XG4gIGNvbnN0IFssIGRvbWFpbiwgYXBwbmFtZV0gPSBwYXJzZWQucGF0aG5hbWUuc3BsaXQoXCIvXCIpO1xuICBjb25zdCBzdGFydGFwcCA9IHBhcnNlZC5zZWFyY2hQYXJhbXMuZ2V0KFwic3RhcnRhcHBcIik7XG4gIHJldHVybiBgdGc6Ly9yZXNvbHZlP2RvbWFpbj0ke2RvbWFpbn0mYXBwbmFtZT0ke2FwcG5hbWV9JnN0YXJ0YXBwPSR7c3RhcnRhcHB9YDtcbn1cbmNvbnN0IERlc2t0b3BDb25uZWN0aW9uTW9kYWwgPSAocHJvcHMpID0+IHtcbiAgY29uc3QgW21vZGUsIHNldE1vZGVdID0gY3JlYXRlU2lnbmFsKFwibW9iaWxlXCIpO1xuICBjb25zdCBbY29ubmVjdGlvbkVycm9yZWQsIHNldENvbm5lY3Rpb25FcnJvcmVkXSA9IGNyZWF0ZVNpZ25hbChudWxsKTtcbiAgY3JlYXRlRWZmZWN0KCgpID0+IHtcbiAgICB2YXIgX2EyO1xuICAgIHNldENvbm5lY3Rpb25FcnJvcmVkKChfYTIgPSBwcm9wcy5kZWZhdWx0RXJyb3IpICE9IG51bGwgPyBfYTIgOiBudWxsKTtcbiAgfSk7XG4gIGNvbnN0IFt1bml2ZXJzYWxMaW5rLCBzZXRVbml2ZXJzYWxMaW5rXSA9IGNyZWF0ZVNpZ25hbCgpO1xuICBjb25zdCBbZmlyc3RDbGljaywgc2V0Rmlyc3RDbGlja10gPSBjcmVhdGVTaWduYWwodHJ1ZSk7XG4gIGNvbnN0IGNvbm5lY3RvciA9IHVzZUNvbnRleHQoQ29ubmVjdG9yQ29udGV4dCk7XG4gIGNvbnN0IHVuc3Vic2NyaWJlID0gY29ubmVjdG9yLm9uU3RhdHVzQ2hhbmdlKCgpID0+IHtcbiAgfSwgKGVycm9yKSA9PiB7XG4gICAgaWYgKGVycm9yIGluc3RhbmNlb2YgV2FsbGV0TWlzc2luZ1JlcXVpcmVkRmVhdHVyZXNFcnJvcikge1xuICAgICAgc2V0Q29ubmVjdGlvbkVycm9yZWQoXCJtaXNzaW5nLWZlYXR1cmVzXCIpO1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBpZiAocHJvcHMud2FsbGV0LmFwcE5hbWUgIT09IEFUX1dBTExFVF9BUFBfTkFNRSkge1xuICAgICAgc2V0Q29ubmVjdGlvbkVycm9yZWQoXCJjb25uZWN0aW9uLWRlY2xpbmVkXCIpO1xuICAgIH1cbiAgfSk7XG4gIG9uQ2xlYW51cCh1bnN1YnNjcmliZSk7XG4gIGNvbnN0IGdlbmVyYXRlVW5pdmVyc2FsTGluayA9ICgpID0+IHtcbiAgICB0cnkge1xuICAgICAgY29uc3QgdW5pdmVyc2FsTGluazIgPSBjb25uZWN0b3IuY29ubmVjdCh7XG4gICAgICAgIHVuaXZlcnNhbExpbms6IHByb3BzLndhbGxldC51bml2ZXJzYWxMaW5rLFxuICAgICAgICBicmlkZ2VVcmw6IHByb3BzLndhbGxldC5icmlkZ2VVcmxcbiAgICAgIH0sIHByb3BzLmFkZGl0aW9uYWxSZXF1ZXN0KTtcbiAgICAgIHNldFVuaXZlcnNhbExpbmsodW5pdmVyc2FsTGluazIpO1xuICAgIH0gY2F0Y2ggKGUyKSB7XG4gICAgfVxuICB9O1xuICBjcmVhdGVFZmZlY3QoKCkgPT4ge1xuICAgIGlmICh1bnRyYWNrKG1vZGUpICE9PSBcImV4dGVuc2lvblwiICYmIChzdXBwb3J0c01vYmlsZShwcm9wcy53YWxsZXQpIHx8IHN1cHBvcnRzRGVza3RvcChwcm9wcy53YWxsZXQpKSkge1xuICAgICAgZ2VuZXJhdGVVbml2ZXJzYWxMaW5rKCk7XG4gICAgfVxuICB9KTtcbiAgY29uc3Qgb25DbGlja01vYmlsZSA9ICgpID0+IHtcbiAgICBzZXRDb25uZWN0aW9uRXJyb3JlZChudWxsKTtcbiAgICBpZiAobW9kZSgpID09PSBcImV4dGVuc2lvblwiKSB7XG4gICAgICBnZW5lcmF0ZVVuaXZlcnNhbExpbmsoKTtcbiAgICB9XG4gICAgc2V0TW9kZShcIm1vYmlsZVwiKTtcbiAgICBzZXRMYXN0U2VsZWN0ZWRXYWxsZXRJbmZvKF9fc3ByZWFkUHJvcHMoX19zcHJlYWRWYWx1ZXMoe30sIHByb3BzLndhbGxldCksIHtcbiAgICAgIG9wZW5NZXRob2Q6IFwicXJjb2RlXCJcbiAgICB9KSk7XG4gIH07XG4gIGNvbnN0IG9uQ2xpY2tEZXNrdG9wID0gKCkgPT4ge1xuICAgIHNldENvbm5lY3Rpb25FcnJvcmVkKG51bGwpO1xuICAgIGlmIChtb2RlKCkgPT09IFwiZXh0ZW5zaW9uXCIpIHtcbiAgICAgIGdlbmVyYXRlVW5pdmVyc2FsTGluaygpO1xuICAgIH1cbiAgICBzZXRNb2RlKFwiZGVza3RvcFwiKTtcbiAgICBpZiAoaXNUZWxlZ3JhbVVybCh1bml2ZXJzYWxMaW5rKCkpKSB7XG4gICAgICBvbkNsaWNrVGVsZWdyYW0oKTtcbiAgICB9IGVsc2Uge1xuICAgICAgY29uc3QgZm9yY2VSZWRpcmVjdCA9ICFmaXJzdENsaWNrKCk7XG4gICAgICBzZXRGaXJzdENsaWNrKGZhbHNlKTtcbiAgICAgIHJlZGlyZWN0VG9XYWxsZXQodW5pdmVyc2FsTGluaygpLCBwcm9wcy53YWxsZXQuZGVlcExpbmssIHtcbiAgICAgICAgcmV0dXJuU3RyYXRlZ3k6IGFwcFN0YXRlLnJldHVyblN0cmF0ZWd5LFxuICAgICAgICBmb3JjZVJlZGlyZWN0XG4gICAgICB9LCAobWV0aG9kKSA9PiB7XG4gICAgICAgIHNldExhc3RTZWxlY3RlZFdhbGxldEluZm8oX19zcHJlYWRQcm9wcyhfX3NwcmVhZFZhbHVlcyh7fSwgcHJvcHMud2FsbGV0KSwge1xuICAgICAgICAgIG9wZW5NZXRob2Q6IG1ldGhvZFxuICAgICAgICB9KSk7XG4gICAgICB9KTtcbiAgICB9XG4gIH07XG4gIGNvbnN0IG9uQ2xpY2tUZWxlZ3JhbSA9ICgpID0+IHtcbiAgICBjb25zdCBmb3JjZVJlZGlyZWN0ID0gIWZpcnN0Q2xpY2soKTtcbiAgICBzZXRGaXJzdENsaWNrKGZhbHNlKTtcbiAgICBzZXRMYXN0U2VsZWN0ZWRXYWxsZXRJbmZvKF9fc3ByZWFkUHJvcHMoX19zcHJlYWRWYWx1ZXMoe30sIHByb3BzLndhbGxldCksIHtcbiAgICAgIG9wZW5NZXRob2Q6IFwidW5pdmVyc2FsLWxpbmtcIlxuICAgIH0pKTtcbiAgICByZWRpcmVjdFRvVGVsZWdyYW0odW5pdmVyc2FsTGluaygpLCB7XG4gICAgICByZXR1cm5TdHJhdGVneTogYXBwU3RhdGUucmV0dXJuU3RyYXRlZ3ksXG4gICAgICB0d2FSZXR1cm5Vcmw6IGFwcFN0YXRlLnR3YVJldHVyblVybCxcbiAgICAgIGZvcmNlUmVkaXJlY3RcbiAgICB9KTtcbiAgfTtcbiAgY29uc3Qgb25DbGlja0V4dGVuc2lvbiA9ICgpID0+IHtcbiAgICBzZXRDb25uZWN0aW9uRXJyb3JlZChudWxsKTtcbiAgICBzZXRNb2RlKFwiZXh0ZW5zaW9uXCIpO1xuICAgIGlmIChpc1dhbGxldEluZm9DdXJyZW50bHlJbmplY3RlZChwcm9wcy53YWxsZXQpKSB7XG4gICAgICBzZXRMYXN0U2VsZWN0ZWRXYWxsZXRJbmZvKHByb3BzLndhbGxldCk7XG4gICAgICBjb25uZWN0b3IuY29ubmVjdCh7XG4gICAgICAgIGpzQnJpZGdlS2V5OiBwcm9wcy53YWxsZXQuanNCcmlkZ2VLZXlcbiAgICAgIH0sIHByb3BzLmFkZGl0aW9uYWxSZXF1ZXN0KTtcbiAgICB9XG4gIH07XG4gIGlmIChzdXBwb3J0c01vYmlsZShwcm9wcy53YWxsZXQpKSB7XG4gICAgb25DbGlja01vYmlsZSgpO1xuICB9IGVsc2UgaWYgKHN1cHBvcnRzRXh0ZW5zaW9uKHByb3BzLndhbGxldCkpIHtcbiAgICBvbkNsaWNrRXh0ZW5zaW9uKCk7XG4gIH0gZWxzZSB7XG4gICAgb25DbGlja0Rlc2t0b3AoKTtcbiAgfVxuICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KERlc2t0b3BDb25uZWN0aW9uTW9kYWxTdHlsZWQsIHtcbiAgICBcImRhdGEtdGMtd2FsbGV0cy1tb2RhbC1jb25uZWN0aW9uLWRlc2t0b3BcIjogXCJ0cnVlXCIsXG4gICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgcmV0dXJuIFtjcmVhdGVDb21wb25lbnQoU2hvdywge1xuICAgICAgICBnZXQgd2hlbigpIHtcbiAgICAgICAgICByZXR1cm4gIXByb3BzLmJhY2tEaXNhYmxlZDtcbiAgICAgICAgfSxcbiAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoU3R5bGVkSWNvbkJ1dHRvbiQyLCB7XG4gICAgICAgICAgICBpY29uOiBcImFycm93XCIsXG4gICAgICAgICAgICBvbkNsaWNrOiAoKSA9PiBwcm9wcy5vbkJhY2tDbGljaygpXG4gICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgIH0pLCBjcmVhdGVDb21wb25lbnQoSDFTdHlsZWQkNiwge1xuICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgcmV0dXJuIHByb3BzLndhbGxldC5uYW1lO1xuICAgICAgICB9XG4gICAgICB9KSwgY3JlYXRlQ29tcG9uZW50KFNob3csIHtcbiAgICAgICAgZ2V0IHdoZW4oKSB7XG4gICAgICAgICAgcmV0dXJuIGNyZWF0ZU1lbW8oKCkgPT4gbW9kZSgpID09PSBcIm1vYmlsZVwiKSgpICYmICFjb25uZWN0aW9uRXJyb3JlZCgpO1xuICAgICAgICB9LFxuICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChIMlN0eWxlZCQ0LCB7XG4gICAgICAgICAgICB0cmFuc2xhdGlvbktleTogXCJ3YWxsZXRNb2RhbC5kZXNrdG9wQ29ubmVjdGlvbk1vZGFsLnNjYW5RUlwiLFxuICAgICAgICAgICAgZ2V0IHRyYW5zbGF0aW9uVmFsdWVzKCkge1xuICAgICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgIG5hbWU6IHByb3BzLndhbGxldC5uYW1lXG4gICAgICAgICAgICAgIH07XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgICAgICByZXR1cm4gW1wiU2NhbiB0aGUgUVIgY29kZSBiZWxvdyB3aXRoIHlvdXIgcGhvbmVcXHUyMDE5cyBvciBcIiwgY3JlYXRlTWVtbygoKSA9PiBwcm9wcy53YWxsZXQubmFtZSksIFwiXFx1MjAxOXMgY2FtZXJhXCJdO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICB9KSwgY3JlYXRlQ29tcG9uZW50KEJvZHlTdHlsZWQkMSwge1xuICAgICAgICBnZXQgcXIoKSB7XG4gICAgICAgICAgcmV0dXJuIG1vZGUoKSA9PT0gXCJtb2JpbGVcIjtcbiAgICAgICAgfSxcbiAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoU3dpdGNoLCB7XG4gICAgICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgICAgIHJldHVybiBbY3JlYXRlQ29tcG9uZW50KE1hdGNoLCB7XG4gICAgICAgICAgICAgICAgZ2V0IHdoZW4oKSB7XG4gICAgICAgICAgICAgICAgICByZXR1cm4gY29ubmVjdGlvbkVycm9yZWQoKTtcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICAgICAgICAgIHJldHVybiBbY3JlYXRlQ29tcG9uZW50KEVycm9ySWNvblN0eWxlZCQxLCB7XG4gICAgICAgICAgICAgICAgICAgIHNpemU6IFwic1wiXG4gICAgICAgICAgICAgICAgICB9KSwgY3JlYXRlQ29tcG9uZW50KFN3aXRjaCwge1xuICAgICAgICAgICAgICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFtjcmVhdGVDb21wb25lbnQoTWF0Y2gsIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGdldCB3aGVuKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gY29ubmVjdGlvbkVycm9yZWQoKSA9PT0gXCJtaXNzaW5nLWZlYXR1cmVzXCI7XG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KEJvZHlUZXh0U3R5bGVkJDEsIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0cmFuc2xhdGlvbktleTogXCJ3YWxsZXRNb2RhbC5kZXNrdG9wQ29ubmVjdGlvbk1vZGFsLm1pc3NpbmdGZWF0dXJlc1wiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGdldCB0cmFuc2xhdGlvblZhbHVlcygpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6IHByb3BzLndhbGxldC5uYW1lXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2hpbGRyZW46IFwiUGxlYXNlIHVwZGF0ZSBXYWxsZXQsIHlvdXIgdmVyc2lvbiBkb2VzIG5vdCBzdXBwb3J0IHJlcXVpcmVkIGZlYXR1cmVzIGZvciB0aGlzIGRBcHBcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICB9KSwgY3JlYXRlQ29tcG9uZW50KE1hdGNoLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICBnZXQgd2hlbigpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGNvbm5lY3Rpb25FcnJvcmVkKCkgPT09IFwiY29ubmVjdGlvbi1kZWNsaW5lZFwiO1xuICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChCb2R5VGV4dFN0eWxlZCQxLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdHJhbnNsYXRpb25LZXk6IFwid2FsbGV0TW9kYWwuZGVza3RvcENvbm5lY3Rpb25Nb2RhbC5jb25uZWN0aW9uRGVjbGluZWRcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjaGlsZHJlbjogXCJDb25uZWN0aW9uIGRlY2xpbmVkXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgfSksIGNyZWF0ZUNvbXBvbmVudChNYXRjaCwge1xuICAgICAgICAgICAgICAgICAgICAgICAgZ2V0IHdoZW4oKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBjb25uZWN0aW9uRXJyb3JlZCgpID09PSBcIm5vdC1zdXBwb3J0ZWRcIjtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoQm9keVRleHRTdHlsZWQkMSwge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRyYW5zbGF0aW9uS2V5OiBcIndhbGxldE1vZGFsLmRlc2t0b3BDb25uZWN0aW9uTW9kYWwubm90U3VwcG9ydGVkV2FsbGV0XCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZ2V0IHRyYW5zbGF0aW9uVmFsdWVzKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogcHJvcHMud2FsbGV0Lm5hbWVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gW2NyZWF0ZU1lbW8oKCkgPT4gcHJvcHMud2FsbGV0Lm5hbWUpLCBcIiBkb2VzblxcdTIwMTl0IHN1cHBvcnQgdGhlIHJlcXVlc3RlZCBhY3Rpb24uIFBsZWFzZSBjb25uZWN0IGFub3RoZXIgd2FsbGV0IHRoYXQgc3VwcG9ydHMgaXQuXCJdO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgfSldO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICB9KSwgY3JlYXRlQ29tcG9uZW50KEJ1dHRvbnNDb250YWluZXJTdHlsZWQkMSwge1xuICAgICAgICAgICAgICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFtjcmVhdGVDb21wb25lbnQoU2hvdywge1xuICAgICAgICAgICAgICAgICAgICAgICAgZ2V0IHdoZW4oKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBjb25uZWN0aW9uRXJyb3JlZCgpICE9PSBcIm5vdC1zdXBwb3J0ZWRcIjtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoQnV0dG9uLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZ2V0IGxlZnRJY29uKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChSZXRyeUljb24sIHt9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGdldCBvbkNsaWNrKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIG1vZGUoKSA9PT0gXCJleHRlbnNpb25cIiA/IG9uQ2xpY2tFeHRlbnNpb24gOiBvbkNsaWNrRGVza3RvcDtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoVHJhbnNsYXRpb24sIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdHJhbnNsYXRpb25LZXk6IFwiY29tbW9uLnJldHJ5XCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNoaWxkcmVuOiBcIlJldHJ5XCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgfSksIGNyZWF0ZUNvbXBvbmVudChTaG93LCB7XG4gICAgICAgICAgICAgICAgICAgICAgICBnZXQgd2hlbigpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGNvbm5lY3Rpb25FcnJvcmVkKCkgPT09IFwibWlzc2luZy1mZWF0dXJlc1wiO1xuICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChMaW5rLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZ2V0IGhyZWYoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gcHJvcHMud2FsbGV0LmFib3V0VXJsO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYmxhbms6IHRydWUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChCdXR0b24sIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZ2V0IGxlZnRJY29uKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoTGlua0ljb24sIHt9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoVHJhbnNsYXRpb24sIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRyYW5zbGF0aW9uS2V5OiBcIndhbGxldE1vZGFsLmRlc2t0b3BDb25uZWN0aW9uTW9kYWwudXBkYXRlV2FsbGV0XCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBnZXQgdHJhbnNsYXRpb25WYWx1ZXMoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogcHJvcHMud2FsbGV0Lm5hbWVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBbXCJVcGRhdGUgXCIsIGNyZWF0ZU1lbW8oKCkgPT4gcHJvcHMud2FsbGV0Lm5hbWUpXTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICB9KSwgY3JlYXRlQ29tcG9uZW50KFNob3csIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGdldCB3aGVuKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gY29ubmVjdGlvbkVycm9yZWQoKSA9PT0gXCJub3Qtc3VwcG9ydGVkXCI7XG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KEJ1dHRvbiwge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2xpY2s6ICgpID0+IHByb3BzLm9uQmFja0NsaWNrKCksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChUcmFuc2xhdGlvbiwge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0cmFuc2xhdGlvbktleTogXCJ3YWxsZXRNb2RhbC5kZXNrdG9wQ29ubmVjdGlvbk1vZGFsLmNob29zZUFub3RoZXJXYWxsZXRcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2hpbGRyZW46IFwiQ2hvb3NlIEFub3RoZXIgV2FsbGV0XCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgfSldO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICB9KV07XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICB9KSwgY3JlYXRlQ29tcG9uZW50KE1hdGNoLCB7XG4gICAgICAgICAgICAgICAgZ2V0IHdoZW4oKSB7XG4gICAgICAgICAgICAgICAgICByZXR1cm4gbW9kZSgpID09PSBcIm1vYmlsZVwiO1xuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgICAgICAgICAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChRUkNvZGVTdHlsZWQkMSwge1xuICAgICAgICAgICAgICAgICAgICBkaXNhYmxlQ29weTogZmFsc2UsXG4gICAgICAgICAgICAgICAgICAgIGdldCBzb3VyY2VVcmwoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGFkZFJldHVyblN0cmF0ZWd5KHVuaXZlcnNhbExpbmsoKSwgXCJub25lXCIpO1xuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICBnZXQgaW1hZ2VVcmwoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHByb3BzLndhbGxldC5pbWFnZVVybDtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICB9KSwgY3JlYXRlQ29tcG9uZW50KE1hdGNoLCB7XG4gICAgICAgICAgICAgICAgZ2V0IHdoZW4oKSB7XG4gICAgICAgICAgICAgICAgICByZXR1cm4gbW9kZSgpID09PSBcImV4dGVuc2lvblwiO1xuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgICAgICAgICAgcmV0dXJuIFtjcmVhdGVDb21wb25lbnQoU2hvdywge1xuICAgICAgICAgICAgICAgICAgICBnZXQgd2hlbigpIHtcbiAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gaXNXYWxsZXRJbmZvQ3VycmVudGx5SW5qZWN0ZWQocHJvcHMud2FsbGV0KTtcbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBbY3JlYXRlQ29tcG9uZW50KExvYWRlclN0eWxlZCQxLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICBzaXplOiBcInNcIlxuICAgICAgICAgICAgICAgICAgICAgIH0pLCBjcmVhdGVDb21wb25lbnQoQm9keVRleHRTdHlsZWQkMSwge1xuICAgICAgICAgICAgICAgICAgICAgICAgdHJhbnNsYXRpb25LZXk6IFwid2FsbGV0TW9kYWwuZGVza3RvcENvbm5lY3Rpb25Nb2RhbC5jb250aW51ZUluRXh0ZW5zaW9uXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICBnZXQgdHJhbnNsYXRpb25WYWx1ZXMoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogcHJvcHMud2FsbGV0Lm5hbWVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBbXCJDb250aW51ZSBpbiBcIiwgY3JlYXRlTWVtbygoKSA9PiBwcm9wcy53YWxsZXQubmFtZSksIFwiIGJyb3dzZXIgZXh0ZW5zaW9uXFx1MjAyNlwiXTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICB9KSwgY3JlYXRlQ29tcG9uZW50KEJ1dHRvbnNDb250YWluZXJTdHlsZWQkMSwge1xuICAgICAgICAgICAgICAgICAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KEJ1dHRvbiwge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGdldCBsZWZ0SWNvbigpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoUmV0cnlJY29uLCB7fSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbkNsaWNrOiBvbkNsaWNrRXh0ZW5zaW9uLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoVHJhbnNsYXRpb24sIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdHJhbnNsYXRpb25LZXk6IFwiY29tbW9uLnJldHJ5XCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNoaWxkcmVuOiBcIlJldHJ5XCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgfSldO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICB9KSwgY3JlYXRlQ29tcG9uZW50KFNob3csIHtcbiAgICAgICAgICAgICAgICAgICAgZ2V0IHdoZW4oKSB7XG4gICAgICAgICAgICAgICAgICAgICAgcmV0dXJuICFpc1dhbGxldEluZm9DdXJyZW50bHlJbmplY3RlZChwcm9wcy53YWxsZXQpO1xuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFtjcmVhdGVDb21wb25lbnQoQm9keVRleHRTdHlsZWQkMSwge1xuICAgICAgICAgICAgICAgICAgICAgICAgdHJhbnNsYXRpb25LZXk6IFwid2FsbGV0TW9kYWwuZGVza3RvcENvbm5lY3Rpb25Nb2RhbC5kb250SGF2ZUV4dGVuc2lvblwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgZ2V0IHRyYW5zbGF0aW9uVmFsdWVzKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6IHByb3BzLndhbGxldC5uYW1lXG4gICAgICAgICAgICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gW1wiU2VlbXMgeW91IGRvbid0IGhhdmUgaW5zdGFsbGVkIFwiLCBjcmVhdGVNZW1vKCgpID0+IHByb3BzLndhbGxldC5uYW1lKSwgXCIgYnJvd3NlciBleHRlbnNpb25cIl07XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgfSksIGNyZWF0ZUNvbXBvbmVudChCdXR0b25zQ29udGFpbmVyU3R5bGVkJDEsIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChMaW5rLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZ2V0IGhyZWYoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gcHJvcHMud2FsbGV0LmFib3V0VXJsO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYmxhbms6IHRydWUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChCdXR0b24sIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZ2V0IHJpZ2h0SWNvbigpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KExpbmtJY29uLCB7fSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2xpY2s6IG9uQ2xpY2tFeHRlbnNpb24sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KFRyYW5zbGF0aW9uLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0cmFuc2xhdGlvbktleTogXCJ3YWxsZXRNb2RhbC5kZXNrdG9wQ29ubmVjdGlvbk1vZGFsLmdldFdhbGxldFwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZ2V0IHRyYW5zbGF0aW9uVmFsdWVzKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6IHByb3BzLndhbGxldC5uYW1lXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gW1wiR2V0IFwiLCBjcmVhdGVNZW1vKCgpID0+IHByb3BzLndhbGxldC5uYW1lKV07XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgfSldO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICB9KV07XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICB9KSwgY3JlYXRlQ29tcG9uZW50KE1hdGNoLCB7XG4gICAgICAgICAgICAgICAgZ2V0IHdoZW4oKSB7XG4gICAgICAgICAgICAgICAgICByZXR1cm4gbW9kZSgpID09PSBcImRlc2t0b3BcIjtcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICAgICAgICAgIHJldHVybiBbY3JlYXRlQ29tcG9uZW50KExvYWRlckljb24sIHtcbiAgICAgICAgICAgICAgICAgICAgc2l6ZTogXCJtXCJcbiAgICAgICAgICAgICAgICAgIH0pLCBjcmVhdGVDb21wb25lbnQoQm9keVRleHRTdHlsZWQkMSwge1xuICAgICAgICAgICAgICAgICAgICB0cmFuc2xhdGlvbktleTogXCJ3YWxsZXRNb2RhbC5kZXNrdG9wQ29ubmVjdGlvbk1vZGFsLmNvbnRpbnVlT25EZXNrdG9wXCIsXG4gICAgICAgICAgICAgICAgICAgIGdldCB0cmFuc2xhdGlvblZhbHVlcygpIHtcbiAgICAgICAgICAgICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogcHJvcHMud2FsbGV0Lm5hbWVcbiAgICAgICAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFtcIkNvbnRpbnVlIGluIFwiLCBjcmVhdGVNZW1vKCgpID0+IHByb3BzLndhbGxldC5uYW1lKSwgXCIgb24gZGVza3RvcFxcdTIwMjZcIl07XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgIH0pLCBjcmVhdGVDb21wb25lbnQoQnV0dG9uc0NvbnRhaW5lclN0eWxlZCQxLCB7XG4gICAgICAgICAgICAgICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gW2NyZWF0ZUNvbXBvbmVudChCdXR0b24sIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGdldCBsZWZ0SWNvbigpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChSZXRyeUljb24sIHt9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICBvbkNsaWNrOiBvbkNsaWNrRGVza3RvcCxcbiAgICAgICAgICAgICAgICAgICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChUcmFuc2xhdGlvbiwge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRyYW5zbGF0aW9uS2V5OiBcImNvbW1vbi5yZXRyeVwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNoaWxkcmVuOiBcIlJldHJ5XCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgfSksIGNyZWF0ZUNvbXBvbmVudChMaW5rLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICBnZXQgaHJlZigpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHByb3BzLndhbGxldC5hYm91dFVybDtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICBibGFuazogdHJ1ZSxcbiAgICAgICAgICAgICAgICAgICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChCdXR0b24sIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBnZXQgcmlnaHRJY29uKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChMaW5rSWNvbiwge30pO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChUcmFuc2xhdGlvbiwge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0cmFuc2xhdGlvbktleTogXCJ3YWxsZXRNb2RhbC5kZXNrdG9wQ29ubmVjdGlvbk1vZGFsLmdldFdhbGxldFwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBnZXQgdHJhbnNsYXRpb25WYWx1ZXMoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6IHByb3BzLndhbGxldC5uYW1lXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBbXCJHZXQgXCIsIGNyZWF0ZU1lbW8oKCkgPT4gcHJvcHMud2FsbGV0Lm5hbWUpXTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICB9KV07XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgIH0pXTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIH0pXTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgfSksIGNyZWF0ZUNvbXBvbmVudChTaG93LCB7XG4gICAgICAgIGdldCB3aGVuKCkge1xuICAgICAgICAgIHJldHVybiBwcm9wcy53YWxsZXQuYXBwTmFtZSA9PT0gQVRfV0FMTEVUX0FQUF9OQU1FO1xuICAgICAgICB9LFxuICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChUZ0J1dHRvblN0eWxlZCwge1xuICAgICAgICAgICAgZ2V0IHJpZ2h0SWNvbigpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChUZ0ltYWdlU3R5bGVkLCB7XG4gICAgICAgICAgICAgICAgZ2V0IHNyYygpIHtcbiAgICAgICAgICAgICAgICAgIHJldHVybiBJTUcuVEc7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBzY2FsZTogXCJzXCIsXG4gICAgICAgICAgICBvbkNsaWNrOiBvbkNsaWNrVGVsZWdyYW0sXG4gICAgICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoVHJhbnNsYXRpb24sIHtcbiAgICAgICAgICAgICAgICB0cmFuc2xhdGlvbktleTogXCJ3YWxsZXRNb2RhbC5kZXNrdG9wQ29ubmVjdGlvbk1vZGFsLm9wZW5XYWxsZXRPblRlbGVncmFtXCIsXG4gICAgICAgICAgICAgICAgY2hpbGRyZW46IFwiT3BlbiBXYWxsZXQgaW4gVGVsZWdyYW0gb24gZGVza3RvcFwiXG4gICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICB9KSwgY3JlYXRlQ29tcG9uZW50KFNob3csIHtcbiAgICAgICAgZ2V0IHdoZW4oKSB7XG4gICAgICAgICAgcmV0dXJuIHByb3BzLndhbGxldC5hcHBOYW1lICE9PSBBVF9XQUxMRVRfQVBQX05BTUU7XG4gICAgICAgIH0sXG4gICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KEJvdHRvbUJ1dHRvbnNDb250YWluZXJTdHlsZWQsIHtcbiAgICAgICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIFtjcmVhdGVDb21wb25lbnQoU2hvdywge1xuICAgICAgICAgICAgICAgIGdldCB3aGVuKCkge1xuICAgICAgICAgICAgICAgICAgcmV0dXJuIGNyZWF0ZU1lbW8oKCkgPT4gbW9kZSgpICE9PSBcIm1vYmlsZVwiKSgpICYmIHN1cHBvcnRzTW9iaWxlKHByb3BzLndhbGxldCk7XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgICAgICAgICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KEZvb3RlckJ1dHRvbiQxLCB7XG4gICAgICAgICAgICAgICAgICAgIGFwcGVhcmFuY2U6IFwic2Vjb25kYXJ5XCIsXG4gICAgICAgICAgICAgICAgICAgIGdldCBsZWZ0SWNvbigpIHtcbiAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KE1vYmlsZUljb24sIHt9KTtcbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgb25DbGljazogb25DbGlja01vYmlsZSxcbiAgICAgICAgICAgICAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoVHJhbnNsYXRpb24sIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRyYW5zbGF0aW9uS2V5OiBcImNvbW1vbi5tb2JpbGVcIixcbiAgICAgICAgICAgICAgICAgICAgICAgIGNoaWxkcmVuOiBcIk1vYmlsZVwiXG4gICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgfSksIGNyZWF0ZUNvbXBvbmVudChTaG93LCB7XG4gICAgICAgICAgICAgICAgZ2V0IHdoZW4oKSB7XG4gICAgICAgICAgICAgICAgICByZXR1cm4gY3JlYXRlTWVtbygoKSA9PiBtb2RlKCkgIT09IFwiZXh0ZW5zaW9uXCIpKCkgJiYgc3VwcG9ydHNFeHRlbnNpb24ocHJvcHMud2FsbGV0KTtcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICAgICAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoRm9vdGVyQnV0dG9uJDEsIHtcbiAgICAgICAgICAgICAgICAgICAgYXBwZWFyYW5jZTogXCJzZWNvbmRhcnlcIixcbiAgICAgICAgICAgICAgICAgICAgZ2V0IGxlZnRJY29uKCkge1xuICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoQnJvd3Nlckljb24sIHt9KTtcbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgb25DbGljazogb25DbGlja0V4dGVuc2lvbixcbiAgICAgICAgICAgICAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoVHJhbnNsYXRpb24sIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRyYW5zbGF0aW9uS2V5OiBcImNvbW1vbi5icm93c2VyRXh0ZW5zaW9uXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICBjaGlsZHJlbjogXCJCcm93c2VyIEV4dGVuc2lvblwiXG4gICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgfSksIGNyZWF0ZUNvbXBvbmVudChTaG93LCB7XG4gICAgICAgICAgICAgICAgZ2V0IHdoZW4oKSB7XG4gICAgICAgICAgICAgICAgICByZXR1cm4gY3JlYXRlTWVtbygoKSA9PiBtb2RlKCkgIT09IFwiZGVza3RvcFwiKSgpICYmIHN1cHBvcnRzRGVza3RvcChwcm9wcy53YWxsZXQpO1xuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgICAgICAgICAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChGb290ZXJCdXR0b24kMSwge1xuICAgICAgICAgICAgICAgICAgICBhcHBlYXJhbmNlOiBcInNlY29uZGFyeVwiLFxuICAgICAgICAgICAgICAgICAgICBnZXQgbGVmdEljb24oKSB7XG4gICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChEZXNrdG9wSWNvbiwge30pO1xuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICBvbkNsaWNrOiBvbkNsaWNrRGVza3RvcCxcbiAgICAgICAgICAgICAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoVHJhbnNsYXRpb24sIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRyYW5zbGF0aW9uS2V5OiBcImNvbW1vbi5kZXNrdG9wXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICBjaGlsZHJlbjogXCJEZXNrdG9wXCJcbiAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICB9KV07XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgIH0pXTtcbiAgICB9XG4gIH0pO1xufTtcbmNvbnN0IEluZm9Nb2RhbFN0eWxlZCA9IHN0eWxlZC5kaXZgYDtcbmNvbnN0IFN0eWxlZEljb25CdXR0b24kMSA9IHN0eWxlZChJY29uQnV0dG9uKWBcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgdG9wOiAxNnB4O1xuICAgIGxlZnQ6IDE2cHg7XG5gO1xuY29uc3QgSDFTdHlsZWQkNSA9IHN0eWxlZChIMSlgXG4gICAgbWFyZ2luLWJvdHRvbTogMThweDtcbmA7XG5jb25zdCBJbmZvQmxvY2sgPSBzdHlsZWQuZGl2YFxuICAgIHBhZGRpbmc6IDE2cHggMDtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbmA7XG5jb25zdCBJbmZvQmxvY2tJY29uQ2xhc3MgPSB1YFxuICAgIG1hcmdpbi1ib3R0b206IDEycHg7XG5gO1xuY29uc3QgSDNTdHlsZWQgPSBzdHlsZWQoSDMpYFxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICBtYXJnaW4tYm90dG9tOiA0cHg7XG5gO1xuY29uc3QgVGV4dFN0eWxlZCQxID0gc3R5bGVkKFRleHQpYFxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICBtYXgtd2lkdGg6IDM1MnB4O1xuICAgIGNvbG9yOiAkeyhwcm9wcykgPT4gcHJvcHMudGhlbWUuY29sb3JzLnRleHQuc2Vjb25kYXJ5fTtcbmA7XG5jb25zdCBCdXR0b25zQmxvY2sgPSBzdHlsZWQuZGl2YFxuICAgIHBhZGRpbmc6IDE2cHggMjRweCAyNHB4O1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICBnYXA6IDhweDtcbmA7XG5jb25zdCBMSU5LUyA9IHtcbiAgR0VUX0FfV0FMTEVUOiBcImh0dHBzOi8vdG9uLm9yZy93YWxsZXRzP2ZpbHRlcnNbd2FsbGV0X2ZlYXR1cmVzXVtzbHVnXVskaW5dPWRhcHAtYXV0aCZwYWdpbmF0aW9uW2xpbWl0XT0tMVwiXG59O1xuY29uc3QgSW5mb01vZGFsID0gKHByb3BzKSA9PiB7XG4gIHJldHVybiBjcmVhdGVDb21wb25lbnQoSW5mb01vZGFsU3R5bGVkLCB7XG4gICAgXCJkYXRhLXRjLXdhbGxldHMtbW9kYWwtaW5mb1wiOiBcInRydWVcIixcbiAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICByZXR1cm4gW2NyZWF0ZUNvbXBvbmVudChTdHlsZWRJY29uQnV0dG9uJDEsIHtcbiAgICAgICAgaWNvbjogXCJhcnJvd1wiLFxuICAgICAgICBvbkNsaWNrOiAoKSA9PiBwcm9wcy5vbkJhY2tDbGljaygpXG4gICAgICB9KSwgY3JlYXRlQ29tcG9uZW50KEgxU3R5bGVkJDUsIHtcbiAgICAgICAgdHJhbnNsYXRpb25LZXk6IFwid2FsbGV0TW9kYWwuaW5mb01vZGFsLndoYXRJc0FXYWxsZXRcIixcbiAgICAgICAgY2hpbGRyZW46IFwiV2hhdCBpcyBhIHdhbGxldFwiXG4gICAgICB9KSwgY3JlYXRlQ29tcG9uZW50KFNjcm9sbENvbnRhaW5lciwge1xuICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgcmV0dXJuIFtjcmVhdGVDb21wb25lbnQoSW5mb0Jsb2NrLCB7XG4gICAgICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgICAgIHJldHVybiBbY3JlYXRlQ29tcG9uZW50KFNlY3VyaXR5SWNvbiwge1xuICAgICAgICAgICAgICAgIFwiY2xhc3NcIjogSW5mb0Jsb2NrSWNvbkNsYXNzXG4gICAgICAgICAgICAgIH0pLCBjcmVhdGVDb21wb25lbnQoSDNTdHlsZWQsIHtcbiAgICAgICAgICAgICAgICB0cmFuc2xhdGlvbktleTogXCJ3YWxsZXRNb2RhbC5pbmZvTW9kYWwuc2VjdXJlRGlnaXRhbEFzc2V0c1wiLFxuICAgICAgICAgICAgICAgIGNoaWxkcmVuOiBcIlNlY3VyZSBkaWdpdGFsIGFzc2V0cyBzdG9yYWdlXCJcbiAgICAgICAgICAgICAgfSksIGNyZWF0ZUNvbXBvbmVudChUZXh0U3R5bGVkJDEsIHtcbiAgICAgICAgICAgICAgICB0cmFuc2xhdGlvbktleTogXCJ3YWxsZXRNb2RhbC5pbmZvTW9kYWwud2FsbGV0UHJvdGVjdHNcIixcbiAgICAgICAgICAgICAgICBjaGlsZHJlbjogXCJBIHdhbGxldCBwcm90ZWN0cyBhbmQgbWFuYWdlcyB5b3VyIGRpZ2l0YWwgYXNzZXRzIGluY2x1ZGluZyBUT04sIHRva2VucyBhbmQgY29sbGVjdGFibGVzLlwiXG4gICAgICAgICAgICAgIH0pXTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9KSwgY3JlYXRlQ29tcG9uZW50KEluZm9CbG9jaywge1xuICAgICAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgICAgICByZXR1cm4gW2NyZWF0ZUNvbXBvbmVudChQZXJzb25hbGl0eUljb24sIHtcbiAgICAgICAgICAgICAgICBcImNsYXNzXCI6IEluZm9CbG9ja0ljb25DbGFzc1xuICAgICAgICAgICAgICB9KSwgY3JlYXRlQ29tcG9uZW50KEgzU3R5bGVkLCB7XG4gICAgICAgICAgICAgICAgdHJhbnNsYXRpb25LZXk6IFwid2FsbGV0TW9kYWwuaW5mb01vZGFsLmNvbnRyb2xJZGVudGl0eVwiLFxuICAgICAgICAgICAgICAgIGNoaWxkcmVuOiBcIkNvbnRyb2wgeW91ciBXZWIzIGlkZW50aXR5XCJcbiAgICAgICAgICAgICAgfSksIGNyZWF0ZUNvbXBvbmVudChUZXh0U3R5bGVkJDEsIHtcbiAgICAgICAgICAgICAgICB0cmFuc2xhdGlvbktleTogXCJ3YWxsZXRNb2RhbC5pbmZvTW9kYWwubWFuYWdlSWRlbnRpdHlcIixcbiAgICAgICAgICAgICAgICBjaGlsZHJlbjogXCJNYW5hZ2UgeW91ciBkaWdpdGFsIGlkZW50aXR5IGFuZCBhY2Nlc3MgZGVjZW50cmFsaXplZCBhcHBsaWNhdGlvbnMgd2l0aCBlYXNlLiBNYWludGFpbiBjb250cm9sIG92ZXIgeW91ciBkYXRhIGFuZCBlbmdhZ2Ugc2VjdXJlbHkgaW4gdGhlIGJsb2NrY2hhaW4gZWNvc3lzdGVtLlwiXG4gICAgICAgICAgICAgIH0pXTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9KSwgY3JlYXRlQ29tcG9uZW50KEluZm9CbG9jaywge1xuICAgICAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgICAgICByZXR1cm4gW2NyZWF0ZUNvbXBvbmVudChTd2FwSWNvbiwge1xuICAgICAgICAgICAgICAgIFwiY2xhc3NcIjogSW5mb0Jsb2NrSWNvbkNsYXNzXG4gICAgICAgICAgICAgIH0pLCBjcmVhdGVDb21wb25lbnQoSDNTdHlsZWQsIHtcbiAgICAgICAgICAgICAgICB0cmFuc2xhdGlvbktleTogXCJ3YWxsZXRNb2RhbC5pbmZvTW9kYWwuZWZmb3J0bGVzc0NyeXB0b1RyYW5zYWN0aW9uc1wiLFxuICAgICAgICAgICAgICAgIGNoaWxkcmVuOiBcIkVmZm9ydGxlc3MgY3J5cHRvIHRyYW5zYWN0aW9uc1wiXG4gICAgICAgICAgICAgIH0pLCBjcmVhdGVDb21wb25lbnQoVGV4dFN0eWxlZCQxLCB7XG4gICAgICAgICAgICAgICAgdHJhbnNsYXRpb25LZXk6IFwid2FsbGV0TW9kYWwuaW5mb01vZGFsLmVhc2lseVNlbmRcIixcbiAgICAgICAgICAgICAgICBjaGlsZHJlbjogXCJFYXNpbHkgc2VuZCwgcmVjZWl2ZSwgbW9uaXRvciB5b3VyIGNyeXB0b2N1cnJlbmNpZXMuIFN0cmVhbWxpbmUgeW91ciBvcGVyYXRpb25zIHdpdGggZGVjZW50cmFsaXplZCBhcHBsaWNhdGlvbnMuXCJcbiAgICAgICAgICAgICAgfSldO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH0pLCBjcmVhdGVDb21wb25lbnQoQnV0dG9uc0Jsb2NrLCB7XG4gICAgICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoTGluaywge1xuICAgICAgICAgICAgICAgIGdldCBocmVmKCkge1xuICAgICAgICAgICAgICAgICAgcmV0dXJuIExJTktTLkdFVF9BX1dBTExFVDtcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGJsYW5rOiB0cnVlLFxuICAgICAgICAgICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICAgICAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoQnV0dG9uLCB7XG4gICAgICAgICAgICAgICAgICAgIGdldCByaWdodEljb24oKSB7XG4gICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChXYWxsZXRJY29uLCB7fSk7XG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KFRyYW5zbGF0aW9uLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0cmFuc2xhdGlvbktleTogXCJ3YWxsZXRNb2RhbC5pbmZvTW9kYWwuZ2V0QVdhbGxldFwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgY2hpbGRyZW46IFwiR2V0IGEgV2FsbGV0XCJcbiAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9KV07XG4gICAgICAgIH1cbiAgICAgIH0pXTtcbiAgICB9XG4gIH0pO1xufTtcbmNvbnN0IE1vYmlsZUNvbm5lY3Rpb25Nb2RhbFN0eWxlZCA9IHN0eWxlZC5kaXZgYDtcbmNvbnN0IEJvZHlTdHlsZWQgPSBzdHlsZWQuZGl2YFxuICAgIGZsZXg6IDE7XG4gICAgbWFyZ2luLXRvcDogMThweDtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICBtaW4taGVpZ2h0OiAyMzJweDtcbmA7XG5jb25zdCBIMVN0eWxlZCQ0ID0gc3R5bGVkKEgxKWBcbiAgICBtYXgtd2lkdGg6IDI2MnB4O1xuICAgIG1hcmdpbjogMCBhdXRvIDhweDtcbmA7XG5jb25zdCBTdHlsZWRJY29uQnV0dG9uID0gc3R5bGVkKEljb25CdXR0b24pYFxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB0b3A6IDE2cHg7XG4gICAgbGVmdDogMTZweDtcbmA7XG5jb25zdCBGb290ZXJTdHlsZWQgPSBzdHlsZWQuZGl2YFxuICAgIHBhZGRpbmc6IDE2cHg7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIGdhcDogMTJweDtcbiAgICBib3JkZXItdG9wOiAwLjVweCBzb2xpZCAkeyhwcm9wcykgPT4gcmdiYShwcm9wcy50aGVtZS5jb2xvcnMuaWNvbi5zZWNvbmRhcnksIDAuMil9O1xuYDtcbmNvbnN0IEltYWdlU3R5bGVkID0gc3R5bGVkKEltYWdlKWBcbiAgICB3aWR0aDogMzZweDtcbiAgICBoZWlnaHQ6IDM2cHg7XG4gICAgYm9yZGVyLXJhZGl1czogMTBweDtcbmA7XG5jb25zdCBGb290ZXJCdXR0b24gPSBzdHlsZWQoTGluaylgXG4gICAgbWFyZ2luLWxlZnQ6IGF1dG87XG5gO1xuY29uc3QgTG9hZGVyU3R5bGVkID0gc3R5bGVkKExvYWRlckljb24pYFxuICAgIG1hcmdpbi1ib3R0b206IDE4cHg7XG4gICAgbWFyZ2luLXRvcDogMnB4O1xuYDtcbmNvbnN0IEVycm9ySWNvblN0eWxlZCA9IHN0eWxlZChFcnJvckljb24pYFxuICAgIG1hcmdpbi1ib3R0b206IDE2cHg7XG5gO1xuY29uc3QgQm9keVRleHRTdHlsZWQgPSBzdHlsZWQoSDIpYFxuICAgIGNvbG9yOiAkeyhwcm9wcykgPT4gcHJvcHMudGhlbWUuY29sb3JzLnRleHQuc2Vjb25kYXJ5fTtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgbWFyZ2luLWJvdHRvbTogMjBweDtcbmA7XG5jb25zdCBCdXR0b25zQ29udGFpbmVyU3R5bGVkID0gc3R5bGVkLmRpdmBcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgIGdhcDogOHB4O1xuICAgIHBhZGRpbmctYm90dG9tOiAxNnB4O1xuYDtcbmNvbnN0IGFjdGlvbkJ1dHRvbkJvcmRlclJhZGl1cyQxID0ge1xuICBtOiBcIjE2cHhcIixcbiAgczogXCI4cHhcIixcbiAgbm9uZTogXCIwXCJcbn07XG5jb25zdCBIMVN0eWxlZCQzID0gc3R5bGVkKEgxKWBcbiAgICBtYXJnaW4tYm90dG9tOiAycHg7XG4gICAgcGFkZGluZzogMCA1MnB4O1xuYDtcbmNvbnN0IEgyU3R5bGVkJDMgPSBzdHlsZWQoSDIpYFxuICAgIG1hcmdpbi1ib3R0b206IDIwcHg7XG4gICAgcGFkZGluZzogMCA2NHB4O1xuYDtcbmNvbnN0IFFyQ29kZVdyYXBwZXIkMSA9IHN0eWxlZC5kaXZgXG4gICAgcGFkZGluZzogMCAyNHB4IDE2cHg7XG5gO1xuY29uc3QgQnV0dG9uc1dyYXBwZXIkMSA9IHN0eWxlZC5kaXZgXG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICAgIGdhcDogMTZweDtcbiAgICBwYWRkaW5nOiAwIDI0cHggMjRweDtcbiAgICBtYXJnaW4tdG9wOiAwO1xuYDtcbmNvbnN0IEFjdGlvbkJ1dHRvbiQxID0gc3R5bGVkKEJ1dHRvbilgXG4gICAgd2lkdGg6IDEwMCU7XG4gICAgaGVpZ2h0OiA1NnB4O1xuICAgIGJvcmRlci1yYWRpdXM6ICR7KHByb3BzKSA9PiBhY3Rpb25CdXR0b25Cb3JkZXJSYWRpdXMkMVtwcm9wcy50aGVtZS5ib3JkZXJSYWRpdXNdfTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkeyhwcm9wcykgPT4gcmdiYShwcm9wcy50aGVtZS5jb2xvcnMuYWNjZW50LCAwLjEyKX07XG4gICAgY29sb3I6ICR7KHByb3BzKSA9PiBwcm9wcy50aGVtZS5jb2xvcnMuYWNjZW50fTtcbiAgICBmb250LXNpemU6IDE2cHg7XG4gICAgbGluZS1oZWlnaHQ6IDIwcHg7XG4gICAgZm9udC13ZWlnaHQ6IDUwMDtcbiAgICBwYWRkaW5nOiAxN3B4IDIwcHggMTlweCAyMHB4O1xuYDtcbmNvbnN0IE1vYmlsZUNvbm5lY3Rpb25RUiA9IChwcm9wcykgPT4ge1xuICByZXR1cm4gW2NyZWF0ZUNvbXBvbmVudChIMVN0eWxlZCQzLCB7XG4gICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgcmV0dXJuIHByb3BzLndhbGxldEluZm8ubmFtZTtcbiAgICB9XG4gIH0pLCBjcmVhdGVDb21wb25lbnQoSDJTdHlsZWQkMywge1xuICAgIHRyYW5zbGF0aW9uS2V5OiBcIndhbGxldE1vZGFsLm1vYmlsZUNvbm5lY3Rpb25Nb2RhbC5zY2FuUVJcIixcbiAgICBnZXQgdHJhbnNsYXRpb25WYWx1ZXMoKSB7XG4gICAgICByZXR1cm4ge1xuICAgICAgICBuYW1lOiBwcm9wcy53YWxsZXRJbmZvLm5hbWVcbiAgICAgIH07XG4gICAgfSxcbiAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICByZXR1cm4gW1wiU2NhbiB0aGUgUVIgY29kZSBiZWxvdyB3aXRoIHlvdXIgcGhvbmVcXHUyMDE5cyBvciBcIiwgY3JlYXRlTWVtbygoKSA9PiBwcm9wcy53YWxsZXRJbmZvLm5hbWUpLCBcIlxcdTIwMTlzIGNhbWVyYVwiXTtcbiAgICB9XG4gIH0pLCBjcmVhdGVDb21wb25lbnQoUXJDb2RlV3JhcHBlciQxLCB7XG4gICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChRUkNvZGUsIHtcbiAgICAgICAgZ2V0IGltYWdlVXJsKCkge1xuICAgICAgICAgIHJldHVybiBwcm9wcy53YWxsZXRJbmZvLmltYWdlVXJsO1xuICAgICAgICB9LFxuICAgICAgICBnZXQgc291cmNlVXJsKCkge1xuICAgICAgICAgIHJldHVybiBhZGRSZXR1cm5TdHJhdGVneShwcm9wcy51bml2ZXJzYWxMaW5rLCBcIm5vbmVcIik7XG4gICAgICAgIH0sXG4gICAgICAgIGRpc2FibGVDb3B5OiB0cnVlXG4gICAgICB9KTtcbiAgICB9XG4gIH0pLCBjcmVhdGVDb21wb25lbnQoQnV0dG9uc1dyYXBwZXIkMSwge1xuICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgIHJldHVybiBbY3JlYXRlQ29tcG9uZW50KEFjdGlvbkJ1dHRvbiQxLCB7XG4gICAgICAgIGFwcGVhcmFuY2U6IFwic2Vjb25kYXJ5XCIsXG4gICAgICAgIG9uQ2xpY2s6ICgpID0+IHtcbiAgICAgICAgICB2YXIgX2EyO1xuICAgICAgICAgIHJldHVybiAoX2EyID0gcHJvcHMub25PcGVuTGluaykgPT0gbnVsbCA/IHZvaWQgMCA6IF9hMi5jYWxsKHByb3BzKTtcbiAgICAgICAgfSxcbiAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoVHJhbnNsYXRpb24sIHtcbiAgICAgICAgICAgIHRyYW5zbGF0aW9uS2V5OiBcIndhbGxldE1vZGFsLm1vYmlsZVVuaXZlcnNhbE1vZGFsLm9wZW5MaW5rXCIsXG4gICAgICAgICAgICBjaGlsZHJlbjogXCJPcGVuIExpbmtcIlxuICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICB9KSwgY3JlYXRlQ29tcG9uZW50KEFjdGlvbkJ1dHRvbiQxLCB7XG4gICAgICAgIGFwcGVhcmFuY2U6IFwic2Vjb25kYXJ5XCIsXG4gICAgICAgIG9uQ2xpY2s6ICgpID0+IHtcbiAgICAgICAgICB2YXIgX2EyO1xuICAgICAgICAgIHJldHVybiAoX2EyID0gcHJvcHMub25Db3B5KSA9PSBudWxsID8gdm9pZCAwIDogX2EyLmNhbGwocHJvcHMpO1xuICAgICAgICB9LFxuICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChUcmFuc2xhdGlvbiwge1xuICAgICAgICAgICAgZ2V0IHRyYW5zbGF0aW9uS2V5KCkge1xuICAgICAgICAgICAgICByZXR1cm4gcHJvcHMuaXNDb3BpZWRTaG93biAhPT0gdm9pZCAwID8gXCJjb21tb24uY29waWVkXCIgOiBcImNvbW1vbi5jb3B5TGlua1wiO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIHByb3BzLmlzQ29waWVkU2hvd24gIT09IHZvaWQgMCA/IFwiQ29waWVkXCIgOiBcIkNvcHkgTGlua1wiO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICB9KV07XG4gICAgfVxuICB9KV07XG59O1xuY29uc3QgTW9iaWxlQ29ubmVjdGlvbk1vZGFsID0gKHByb3BzKSA9PiB7XG4gIGNvbnN0IHRoZW1lID0gdXNlVGhlbWUoKTtcbiAgY29uc3QgW2ZpcnN0Q2xpY2ssIHNldEZpcnN0Q2xpY2tdID0gY3JlYXRlU2lnbmFsKHRydWUpO1xuICBjb25zdCBbc2hvd1FSLCBzZXRTaG93UVJdID0gY3JlYXRlU2lnbmFsKGZhbHNlKTtcbiAgY29uc3QgW2Nvbm5lY3Rpb25FcnJvcmVkLCBzZXRDb25uZWN0aW9uRXJyb3JlZF0gPSBjcmVhdGVTaWduYWwobnVsbCk7XG4gIGNyZWF0ZUVmZmVjdCgoKSA9PiB7XG4gICAgdmFyIF9hMjtcbiAgICBzZXRDb25uZWN0aW9uRXJyb3JlZCgoX2EyID0gcHJvcHMuZGVmYXVsdEVycm9yKSAhPSBudWxsID8gX2EyIDogbnVsbCk7XG4gIH0pO1xuICBjb25zdCBjb25uZWN0b3IgPSB1c2VDb250ZXh0KENvbm5lY3RvckNvbnRleHQpO1xuICBjb25zdCB1bnN1YnNjcmliZSA9IGNvbm5lY3Rvci5vblN0YXR1c0NoYW5nZSgoKSA9PiB7XG4gIH0sICgpID0+IHtcbiAgICBzZXRDb25uZWN0aW9uRXJyb3JlZChudWxsKTtcbiAgfSk7XG4gIGNvbnN0IHVuaXZlcnNhbExpbmsgPSBjcmVhdGVNZW1vKCgpID0+IGNvbm5lY3Rvci5jb25uZWN0KHtcbiAgICB1bml2ZXJzYWxMaW5rOiBwcm9wcy53YWxsZXQudW5pdmVyc2FsTGluayxcbiAgICBicmlkZ2VVcmw6IHByb3BzLndhbGxldC5icmlkZ2VVcmxcbiAgfSwgcHJvcHMuYWRkaXRpb25hbFJlcXVlc3QpKTtcbiAgY29uc3Qgb25DbGlja1RlbGVncmFtID0gKCkgPT4ge1xuICAgIGNvbnN0IGFsd2F5c0ZvcmNlUmVkaXJlY3QgPSB0cnVlO1xuICAgIHNldExhc3RTZWxlY3RlZFdhbGxldEluZm8oX19zcHJlYWRQcm9wcyhfX3NwcmVhZFZhbHVlcyh7fSwgcHJvcHMud2FsbGV0KSwge1xuICAgICAgb3Blbk1ldGhvZDogXCJ1bml2ZXJzYWwtbGlua1wiXG4gICAgfSkpO1xuICAgIHJlZGlyZWN0VG9UZWxlZ3JhbSh1bml2ZXJzYWxMaW5rKCksIHtcbiAgICAgIHJldHVyblN0cmF0ZWd5OiBhcHBTdGF0ZS5yZXR1cm5TdHJhdGVneSxcbiAgICAgIHR3YVJldHVyblVybDogYXBwU3RhdGUudHdhUmV0dXJuVXJsLFxuICAgICAgZm9yY2VSZWRpcmVjdDogYWx3YXlzRm9yY2VSZWRpcmVjdFxuICAgIH0pO1xuICB9O1xuICBjb25zdCBvblJldHJ5ID0gKCkgPT4ge1xuICAgIGNvbnN0IGN1cnJlbnRVbml2ZXJzYWxMaW5rID0gdW5pdmVyc2FsTGluaygpO1xuICAgIGlmIChpc1RlbGVncmFtVXJsKGN1cnJlbnRVbml2ZXJzYWxMaW5rKSkge1xuICAgICAgcmV0dXJuIG9uQ2xpY2tUZWxlZ3JhbSgpO1xuICAgIH1cbiAgICBzZXRDb25uZWN0aW9uRXJyb3JlZChudWxsKTtcbiAgICBjb25zdCBmb3JjZVJlZGlyZWN0ID0gIWZpcnN0Q2xpY2soKTtcbiAgICBzZXRGaXJzdENsaWNrKGZhbHNlKTtcbiAgICByZWRpcmVjdFRvV2FsbGV0KHVuaXZlcnNhbExpbmsoKSwgcHJvcHMud2FsbGV0LmRlZXBMaW5rLCB7XG4gICAgICByZXR1cm5TdHJhdGVneTogYXBwU3RhdGUucmV0dXJuU3RyYXRlZ3ksXG4gICAgICBmb3JjZVJlZGlyZWN0XG4gICAgfSwgKG1ldGhvZCkgPT4ge1xuICAgICAgc2V0TGFzdFNlbGVjdGVkV2FsbGV0SW5mbyhfX3NwcmVhZFByb3BzKF9fc3ByZWFkVmFsdWVzKHt9LCBwcm9wcy53YWxsZXQpLCB7XG4gICAgICAgIG9wZW5NZXRob2Q6IG1ldGhvZFxuICAgICAgfSkpO1xuICAgIH0pO1xuICB9O1xuICBjb25zdCBbaXNDb3BpZWRTaG93biwgc2V0SXNDb3BpZWRTaG93bl0gPSBjcmVhdGVTaWduYWwodm9pZCAwKTtcbiAgY29uc3Qgb25Db3B5ID0gKCkgPT4gX19hc3luYyh2b2lkIDAsIG51bGwsIGZ1bmN0aW9uKiAoKSB7XG4gICAgaWYgKGlzQ29waWVkU2hvd24oKSAhPT0gdm9pZCAwKSB7XG4gICAgICBjbGVhclRpbWVvdXQoaXNDb3BpZWRTaG93bigpKTtcbiAgICB9XG4gICAgeWllbGQgY29weVRvQ2xpcGJvYXJkKHVuaXZlcnNhbExpbmsoKSk7XG4gICAgY29uc3QgdGltZW91dElkID0gc2V0VGltZW91dCgoKSA9PiBzZXRJc0NvcGllZFNob3duKHZvaWQgMCksIDE1MDApO1xuICAgIHNldElzQ29waWVkU2hvd24odGltZW91dElkKTtcbiAgfSk7XG4gIGNvbnN0IG9uT3BlblFSID0gKCkgPT4ge1xuICAgIHNldENvbm5lY3Rpb25FcnJvcmVkKG51bGwpO1xuICAgIHNldFNob3dRUih0cnVlKTtcbiAgICBzZXRMYXN0U2VsZWN0ZWRXYWxsZXRJbmZvKF9fc3ByZWFkUHJvcHMoX19zcHJlYWRWYWx1ZXMoe30sIHByb3BzLndhbGxldCksIHtcbiAgICAgIG9wZW5NZXRob2Q6IFwicXJjb2RlXCJcbiAgICB9KSk7XG4gIH07XG4gIGNvbnN0IG9uQ2xvc2VRUiA9ICgpID0+IHtcbiAgICBzZXRTaG93UVIoZmFsc2UpO1xuICAgIHNldExhc3RTZWxlY3RlZFdhbGxldEluZm8oX19zcHJlYWRQcm9wcyhfX3NwcmVhZFZhbHVlcyh7fSwgcHJvcHMud2FsbGV0KSwge1xuICAgICAgb3Blbk1ldGhvZDogXCJ1bml2ZXJzYWwtbGlua1wiXG4gICAgfSkpO1xuICB9O1xuICBjb25zdCBvbkJhY2sgPSAoKSA9PiB7XG4gICAgaWYgKHNob3dRUigpKSB7XG4gICAgICBvbkNsb3NlUVIoKTtcbiAgICB9IGVsc2Uge1xuICAgICAgcHJvcHMub25CYWNrQ2xpY2soKTtcbiAgICB9XG4gIH07XG4gIG9uQ2xlYW51cCh1bnN1YnNjcmliZSk7XG4gIG9uUmV0cnkoKTtcbiAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChNb2JpbGVDb25uZWN0aW9uTW9kYWxTdHlsZWQsIHtcbiAgICBcImRhdGEtdGMtd2FsbGV0cy1tb2RhbC1jb25uZWN0aW9uLW1vYmlsZVwiOiBcInRydWVcIixcbiAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICByZXR1cm4gW2NyZWF0ZUNvbXBvbmVudChTaG93LCB7XG4gICAgICAgIGdldCB3aGVuKCkge1xuICAgICAgICAgIHJldHVybiAhcHJvcHMuYmFja0Rpc2FibGVkIHx8IHNob3dRUigpO1xuICAgICAgICB9LFxuICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChTdHlsZWRJY29uQnV0dG9uLCB7XG4gICAgICAgICAgICBpY29uOiBcImFycm93XCIsXG4gICAgICAgICAgICBvbkNsaWNrOiBvbkJhY2tcbiAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgfSksIGNyZWF0ZUNvbXBvbmVudChTaG93LCB7XG4gICAgICAgIGdldCB3aGVuKCkge1xuICAgICAgICAgIHJldHVybiBzaG93UVIoKTtcbiAgICAgICAgfSxcbiAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoTW9iaWxlQ29ubmVjdGlvblFSLCB7XG4gICAgICAgICAgICBnZXQgdW5pdmVyc2FsTGluaygpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIHVuaXZlcnNhbExpbmsoKTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBnZXQgd2FsbGV0SW5mbygpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIHByb3BzLndhbGxldDtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBvbk9wZW5MaW5rOiBvblJldHJ5LFxuICAgICAgICAgICAgb25Db3B5LFxuICAgICAgICAgICAgZ2V0IGlzQ29waWVkU2hvd24oKSB7XG4gICAgICAgICAgICAgIHJldHVybiBpc0NvcGllZFNob3duKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgIH0pLCBjcmVhdGVDb21wb25lbnQoU2hvdywge1xuICAgICAgICBnZXQgd2hlbigpIHtcbiAgICAgICAgICByZXR1cm4gIXNob3dRUigpO1xuICAgICAgICB9LFxuICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgcmV0dXJuIFtjcmVhdGVDb21wb25lbnQoSDFTdHlsZWQkNCwge1xuICAgICAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgICAgICByZXR1cm4gcHJvcHMud2FsbGV0Lm5hbWU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSksIGNyZWF0ZUNvbXBvbmVudChCb2R5U3R5bGVkLCB7XG4gICAgICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgICAgIHJldHVybiBbY3JlYXRlQ29tcG9uZW50KFNob3csIHtcbiAgICAgICAgICAgICAgICBnZXQgd2hlbigpIHtcbiAgICAgICAgICAgICAgICAgIHJldHVybiBjb25uZWN0aW9uRXJyb3JlZCgpO1xuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgICAgICAgICAgcmV0dXJuIFtjcmVhdGVDb21wb25lbnQoRXJyb3JJY29uU3R5bGVkLCB7XG4gICAgICAgICAgICAgICAgICAgIHNpemU6IFwic1wiXG4gICAgICAgICAgICAgICAgICB9KSwgY3JlYXRlQ29tcG9uZW50KFN3aXRjaCwge1xuICAgICAgICAgICAgICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFtjcmVhdGVDb21wb25lbnQoTWF0Y2gsIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGdldCB3aGVuKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gY29ubmVjdGlvbkVycm9yZWQoKSA9PT0gXCJtaXNzaW5nLWZlYXR1cmVzXCI7XG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KEJvZHlUZXh0U3R5bGVkLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdHJhbnNsYXRpb25LZXk6IFwid2FsbGV0TW9kYWwubW9iaWxlQ29ubmVjdGlvbk1vZGFsLm1pc3NpbmdGZWF0dXJlc1wiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGdldCB0cmFuc2xhdGlvblZhbHVlcygpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6IHByb3BzLndhbGxldC5uYW1lXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2hpbGRyZW46IFwiUGxlYXNlIHVwZGF0ZSBXYWxsZXQsIHlvdXIgdmVyc2lvbiBkb2VzIG5vdCBzdXBwb3J0IHJlcXVpcmVkIGZlYXR1cmVzIGZvciB0aGlzIGRBcHBcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICB9KSwgY3JlYXRlQ29tcG9uZW50KE1hdGNoLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICBnZXQgd2hlbigpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGNvbm5lY3Rpb25FcnJvcmVkKCkgPT09IFwiY29ubmVjdGlvbi1kZWNsaW5lZFwiO1xuICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChCb2R5VGV4dFN0eWxlZCwge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRyYW5zbGF0aW9uS2V5OiBcIndhbGxldE1vZGFsLm1vYmlsZUNvbm5lY3Rpb25Nb2RhbC5jb25uZWN0aW9uRGVjbGluZWRcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjaGlsZHJlbjogXCJDb25uZWN0aW9uIGRlY2xpbmVkXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgfSksIGNyZWF0ZUNvbXBvbmVudChNYXRjaCwge1xuICAgICAgICAgICAgICAgICAgICAgICAgZ2V0IHdoZW4oKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBjb25uZWN0aW9uRXJyb3JlZCgpID09PSBcIm5vdC1zdXBwb3J0ZWRcIjtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoQm9keVRleHRTdHlsZWQsIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0cmFuc2xhdGlvbktleTogXCJ3YWxsZXRNb2RhbC5tb2JpbGVDb25uZWN0aW9uTW9kYWwubm90U3VwcG9ydGVkV2FsbGV0XCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZ2V0IHRyYW5zbGF0aW9uVmFsdWVzKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogcHJvcHMud2FsbGV0Lm5hbWVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gW2NyZWF0ZU1lbW8oKCkgPT4gcHJvcHMud2FsbGV0Lm5hbWUpLCBcIiBkb2VzblxcdTIwMTl0IHN1cHBvcnQgdGhlIHJlcXVlc3RlZCBhY3Rpb24uIFBsZWFzZSBjb25uZWN0IGFub3RoZXIgd2FsbGV0IHRoYXQgc3VwcG9ydHMgaXQuXCJdO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgfSldO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICB9KSwgY3JlYXRlQ29tcG9uZW50KEJ1dHRvbnNDb250YWluZXJTdHlsZWQsIHtcbiAgICAgICAgICAgICAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoU3dpdGNoLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBbY3JlYXRlQ29tcG9uZW50KE1hdGNoLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZ2V0IHdoZW4oKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gY29ubmVjdGlvbkVycm9yZWQoKSA9PT0gXCJtaXNzaW5nLWZlYXR1cmVzXCI7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gW2NyZWF0ZUNvbXBvbmVudChCdXR0b24sIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZ2V0IGxlZnRJY29uKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoUmV0cnlJY29uLCB7fSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2xpY2s6IG9uUmV0cnksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KFRyYW5zbGF0aW9uLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0cmFuc2xhdGlvbktleTogXCJjb21tb24ucmV0cnlcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNoaWxkcmVuOiBcIlJldHJ5XCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSksIGNyZWF0ZUNvbXBvbmVudChMaW5rLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGdldCBocmVmKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBwcm9wcy53YWxsZXQuYWJvdXRVcmw7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJsYW5rOiB0cnVlLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChCdXR0b24sIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGdldCBsZWZ0SWNvbigpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChMaW5rSWNvbiwge30pO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChUcmFuc2xhdGlvbiwge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRyYW5zbGF0aW9uS2V5OiBcIndhbGxldE1vZGFsLm1vYmlsZUNvbm5lY3Rpb25Nb2RhbC51cGRhdGVXYWxsZXRcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBnZXQgdHJhbnNsYXRpb25WYWx1ZXMoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiBwcm9wcy53YWxsZXQubmFtZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBbXCJVcGRhdGUgXCIsIGNyZWF0ZU1lbW8oKCkgPT4gcHJvcHMud2FsbGV0Lm5hbWUpXTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KV07XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICB9KSwgY3JlYXRlQ29tcG9uZW50KE1hdGNoLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZ2V0IHdoZW4oKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gY29ubmVjdGlvbkVycm9yZWQoKSA9PT0gXCJub3Qtc3VwcG9ydGVkXCI7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KEJ1dHRvbiwge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbkNsaWNrOiAoKSA9PiBwcm9wcy5vbkJhY2tDbGljaygpLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChUcmFuc2xhdGlvbiwge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdHJhbnNsYXRpb25LZXk6IFwid2FsbGV0TW9kYWwubW9iaWxlQ29ubmVjdGlvbk1vZGFsLmNob29zZUFub3RoZXJXYWxsZXRcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNoaWxkcmVuOiBcIkNob29zZSBBbm90aGVyIFdhbGxldFwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgfSksIGNyZWF0ZUNvbXBvbmVudChNYXRjaCwge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGdldCB3aGVuKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGNvbm5lY3Rpb25FcnJvcmVkKCkgPT09IFwiY29ubmVjdGlvbi1kZWNsaW5lZFwiO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFtjcmVhdGVDb21wb25lbnQoQnV0dG9uLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGdldCBsZWZ0SWNvbigpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KFJldHJ5SWNvbiwge30pO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbkNsaWNrOiBvblJldHJ5LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChUcmFuc2xhdGlvbiwge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdHJhbnNsYXRpb25LZXk6IFwiY29tbW9uLnJldHJ5XCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjaGlsZHJlbjogXCJSZXRyeVwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pLCBjcmVhdGVDb21wb25lbnQoQnV0dG9uLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGdldCBsZWZ0SWNvbigpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KFFSSWNvbiwge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZ2V0IGZpbGwoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB0aGVtZS5jb2xvcnMuYWNjZW50O1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbkNsaWNrOiBvbk9wZW5RUixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoVHJhbnNsYXRpb24sIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRyYW5zbGF0aW9uS2V5OiBcIndhbGxldE1vZGFsLm1vYmlsZUNvbm5lY3Rpb25Nb2RhbC5zaG93UVJcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNoaWxkcmVuOiBcIlNob3cgUVIgQ29kZVwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pXTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgIH0pXTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgfSldO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgfSksIGNyZWF0ZUNvbXBvbmVudChTaG93LCB7XG4gICAgICAgICAgICAgICAgZ2V0IHdoZW4oKSB7XG4gICAgICAgICAgICAgICAgICByZXR1cm4gIWNvbm5lY3Rpb25FcnJvcmVkKCk7XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgICAgICAgICByZXR1cm4gW2NyZWF0ZUNvbXBvbmVudChMb2FkZXJTdHlsZWQsIHtcbiAgICAgICAgICAgICAgICAgICAgc2l6ZTogXCJzXCJcbiAgICAgICAgICAgICAgICAgIH0pLCBjcmVhdGVDb21wb25lbnQoQm9keVRleHRTdHlsZWQsIHtcbiAgICAgICAgICAgICAgICAgICAgdHJhbnNsYXRpb25LZXk6IFwid2FsbGV0TW9kYWwubW9iaWxlQ29ubmVjdGlvbk1vZGFsLmNvbnRpbnVlSW5cIixcbiAgICAgICAgICAgICAgICAgICAgZ2V0IHRyYW5zbGF0aW9uVmFsdWVzKCkge1xuICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiBwcm9wcy53YWxsZXQubmFtZVxuICAgICAgICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gW1wiQ29udGludWUgaW4gXCIsIGNyZWF0ZU1lbW8oKCkgPT4gcHJvcHMud2FsbGV0Lm5hbWUpLCBcIlxcdTIwMjZcIl07XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgIH0pLCBjcmVhdGVDb21wb25lbnQoQnV0dG9uc0NvbnRhaW5lclN0eWxlZCwge1xuICAgICAgICAgICAgICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFtjcmVhdGVDb21wb25lbnQoQnV0dG9uLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICBnZXQgbGVmdEljb24oKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoUmV0cnlJY29uLCB7fSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgb25DbGljazogb25SZXRyeSxcbiAgICAgICAgICAgICAgICAgICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChUcmFuc2xhdGlvbiwge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRyYW5zbGF0aW9uS2V5OiBcImNvbW1vbi5yZXRyeVwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNoaWxkcmVuOiBcIlJldHJ5XCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgfSksIGNyZWF0ZUNvbXBvbmVudChCdXR0b24sIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGdldCBsZWZ0SWNvbigpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChRUkljb24sIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBnZXQgZmlsbCgpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB0aGVtZS5jb2xvcnMuYWNjZW50O1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgb25DbGljazogb25PcGVuUVIsXG4gICAgICAgICAgICAgICAgICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoVHJhbnNsYXRpb24sIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0cmFuc2xhdGlvbktleTogXCJ3YWxsZXRNb2RhbC5tb2JpbGVDb25uZWN0aW9uTW9kYWwuc2hvd1FSXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2hpbGRyZW46IFwiU2hvdyBRUiBDb2RlXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgfSldO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICB9KV07XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICB9KV07XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSksIGNyZWF0ZUNvbXBvbmVudChGb290ZXJTdHlsZWQsIHtcbiAgICAgICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIFtjcmVhdGVDb21wb25lbnQoSW1hZ2VTdHlsZWQsIHtcbiAgICAgICAgICAgICAgICBnZXQgc3JjKCkge1xuICAgICAgICAgICAgICAgICAgcmV0dXJuIHByb3BzLndhbGxldC5pbWFnZVVybDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIH0pLCBjcmVhdGVDb21wb25lbnQoSDMsIHtcbiAgICAgICAgICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgICAgICAgICByZXR1cm4gcHJvcHMud2FsbGV0Lm5hbWU7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICB9KSwgY3JlYXRlQ29tcG9uZW50KEZvb3RlckJ1dHRvbiwge1xuICAgICAgICAgICAgICAgIGdldCBocmVmKCkge1xuICAgICAgICAgICAgICAgICAgcmV0dXJuIHByb3BzLndhbGxldC5hYm91dFVybDtcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGJsYW5rOiB0cnVlLFxuICAgICAgICAgICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICAgICAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoQnV0dG9uLCB7XG4gICAgICAgICAgICAgICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KFRyYW5zbGF0aW9uLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0cmFuc2xhdGlvbktleTogXCJjb21tb24uZ2V0XCIsXG4gICAgICAgICAgICAgICAgICAgICAgICBjaGlsZHJlbjogXCJHRVRcIlxuICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIH0pXTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9KV07XG4gICAgICAgIH1cbiAgICAgIH0pXTtcbiAgICB9XG4gIH0pO1xufTtcbmNvbnN0IGJvcmRlcnMkMSA9IHtcbiAgbTogXCIxNnB4XCIsXG4gIHM6IFwiMTJweFwiLFxuICBub25lOiBcIjBcIlxufTtcbmNvbnN0IHRnQm9yZGVycyA9IHtcbiAgbTogXCI2cHhcIixcbiAgczogXCI2cHhcIixcbiAgbm9uZTogXCIwXCJcbn07XG5zdHlsZWQubGlgXG4gICAgd2lkdGg6IDgycHg7XG4gICAgbWluLXdpZHRoOiA4MnB4O1xuICAgIGhlaWdodDogMTI0cHg7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgcGFkZGluZzogOHB4IDRweDtcblxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICBjdXJzb3I6IHBvaW50ZXI7XG5cbiAgICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMC4xcyBlYXNlLWluLW91dDtcblxuICAgICR7bWVkaWFOb3RUb3VjaH0ge1xuICAgICAgICAmOmhvdmVyIHtcbiAgICAgICAgICAgIHRyYW5zZm9ybTogc2NhbGUoMS4wNCk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAmOmFjdGl2ZSB7XG4gICAgICAgIHRyYW5zZm9ybTogc2NhbGUoMC45Nik7XG4gICAgfVxuXG4gICAgJHttZWRpYVRvdWNofSB7XG4gICAgICAgICY6YWN0aXZlIHtcbiAgICAgICAgICAgIHRyYW5zZm9ybTogc2NhbGUoMC45Mik7XG4gICAgICAgIH1cbiAgICB9XG5gO1xuY29uc3QgSDFTdHlsZWQkMiA9IHN0eWxlZChIMSlgXG4gICAgbWFyZ2luLXRvcDogMzhweDtcbiAgICBtYXJnaW4tYm90dG9tOiA0cHg7XG4gICAgcGFkZGluZzogMCAyNHB4O1xuYDtcbmNvbnN0IEgyU3R5bGVkJDIgPSBzdHlsZWQoSDIpYFxuICAgIG1hcmdpbjogJHsocHJvcHMpID0+IHtcbiAgdmFyIF9hMjtcbiAgcmV0dXJuIChfYTIgPSBwcm9wcy5tYXJnaW4pICE9IG51bGwgPyBfYTIgOiBcIjAgMCAyOHB4IDBcIjtcbn19O1xuICAgIHBhZGRpbmc6ICR7KHByb3BzKSA9PiB7XG4gIHZhciBfYTI7XG4gIHJldHVybiAoX2EyID0gcHJvcHMucGFkZGluZykgIT0gbnVsbCA/IF9hMiA6IFwiMCAyNHB4XCI7XG59fTtcbiAgICBtaW4taGVpZ2h0OiAkeyhwcm9wcykgPT4ge1xuICB2YXIgX2EyO1xuICByZXR1cm4gKF9hMiA9IHByb3BzLnBhZGRpbmcpICE9IG51bGwgPyBfYTIgOiBcIjQ0cHhcIjtcbn19O1xuICAgIG1heC13aWR0aDogJHsocHJvcHMpID0+IHByb3BzLm1heFdpZHRofXB4O1xuICAgIG1hcmdpbi1sZWZ0OiAkeyhwcm9wcykgPT4gcHJvcHMubWF4V2lkdGggPyBcImF1dG9cIiA6IFwiMHB4XCJ9O1xuICAgIG1hcmdpbi1yaWdodDogJHsocHJvcHMpID0+IHByb3BzLm1heFdpZHRoID8gXCJhdXRvXCIgOiBcIjBweFwifTtcbmA7XG5zdHlsZWQoQnV0dG9uKWBcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBtYXJnaW46IDAgYXV0bztcbmA7XG5jb25zdCBUZWxlZ3JhbUJ1dHRvblN0eWxlZCA9IHN0eWxlZChCdXR0b24pYFxuICAgIG1hcmdpbjogMCAyOHB4IDI0cHg7XG4gICAgd2lkdGg6IGNhbGMoMTAwJSAtIDU2cHgpO1xuICAgIGJvcmRlci1yYWRpdXM6ICR7KHByb3BzKSA9PiBib3JkZXJzJDFbcHJvcHMudGhlbWUuYm9yZGVyUmFkaXVzXX07XG4gICAgcGFkZGluZzogMTRweCAxNnB4IDE0cHggMTRweDtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkeyhwcm9wcykgPT4gcHJvcHMudGhlbWUuY29sb3JzLnRlbGVncmFtQnV0dG9ufTtcblxuICAgIGNvbG9yOiAkeyhwcm9wcykgPT4gcHJvcHMudGhlbWUuY29sb3JzLmNvbnN0YW50LndoaXRlfTtcbiAgICBmb250LXdlaWdodDogNTAwO1xuICAgIGZvbnQtc2l6ZTogMTZweDtcbiAgICBsaW5lLWhlaWdodDogMjBweDtcblxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiAzNzVweCkge1xuICAgICAgICBtYXJnaW46IDAgMTZweCAyNHB4O1xuICAgICAgICB3aWR0aDogY2FsYygxMDAlIC0gMzJweCk7XG4gICAgfVxuYDtcbmNvbnN0IFRHSW1hZ2VTdHlsZWQgPSBzdHlsZWQoSW1hZ2UpYFxuICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuICAgIGJvcmRlci1yYWRpdXM6ICR7KHByb3BzKSA9PiB0Z0JvcmRlcnNbcHJvcHMudGhlbWUuYm9yZGVyUmFkaXVzXX07XG4gICAgd2lkdGg6IDI0cHg7XG4gICAgaGVpZ2h0OiAyNHB4O1xuYDtcbmNvbnN0IFN0eWxlZExlZnRBY3Rpb25CdXR0b24gPSBzdHlsZWQoSWNvbkJ1dHRvbilgXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHRvcDogMTZweDtcbiAgICBsZWZ0OiAxNnB4O1xuYDtcbmNvbnN0IGFjdGlvbkJ1dHRvbkJvcmRlclJhZGl1cyA9IHtcbiAgbTogXCIxNnB4XCIsXG4gIHM6IFwiOHB4XCIsXG4gIG5vbmU6IFwiMFwiXG59O1xuY29uc3QgSDFTdHlsZWQkMSA9IHN0eWxlZChIMSlgXG4gICAgbWFyZ2luLWJvdHRvbTogMnB4O1xuICAgIHBhZGRpbmc6IDAgNTJweDtcbmA7XG5jb25zdCBIMlN0eWxlZCQxID0gc3R5bGVkKEgyKWBcbiAgICBtYXJnaW4tYm90dG9tOiAyMHB4O1xuICAgIHBhZGRpbmc6IDAgNjRweDtcbmA7XG5jb25zdCBRckNvZGVXcmFwcGVyID0gc3R5bGVkLmRpdmBcbiAgICBwYWRkaW5nOiAwIDI0cHggMTZweDtcbmA7XG5jb25zdCBCdXR0b25zV3JhcHBlciA9IHN0eWxlZC5kaXZgXG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICAgIGdhcDogMTZweDtcbiAgICBwYWRkaW5nOiAwIDI0cHggMjRweDtcbiAgICBtYXJnaW4tdG9wOiAwO1xuYDtcbmNvbnN0IEFjdGlvbkJ1dHRvbiA9IHN0eWxlZChCdXR0b24pYFxuICAgIHdpZHRoOiAxMDAlO1xuICAgIGhlaWdodDogNTZweDtcbiAgICBib3JkZXItcmFkaXVzOiAkeyhwcm9wcykgPT4gYWN0aW9uQnV0dG9uQm9yZGVyUmFkaXVzW3Byb3BzLnRoZW1lLmJvcmRlclJhZGl1c119O1xuICAgIGJhY2tncm91bmQtY29sb3I6ICR7KHByb3BzKSA9PiByZ2JhKHByb3BzLnRoZW1lLmNvbG9ycy5hY2NlbnQsIDAuMTIpfTtcbiAgICBjb2xvcjogJHsocHJvcHMpID0+IHByb3BzLnRoZW1lLmNvbG9ycy5hY2NlbnR9O1xuICAgIGZvbnQtc2l6ZTogMTZweDtcbiAgICBsaW5lLWhlaWdodDogMjBweDtcbiAgICBmb250LXdlaWdodDogNTAwO1xuICAgIHBhZGRpbmc6IDE3cHggMjBweCAxOXB4IDIwcHg7XG5gO1xuY29uc3QgTW9iaWxlVW5pdmVyc2FsUVIgPSAocHJvcHMpID0+IHtcbiAgcmV0dXJuIFtjcmVhdGVDb21wb25lbnQoSDFTdHlsZWQkMSwge1xuICAgIHRyYW5zbGF0aW9uS2V5OiBcIndhbGxldE1vZGFsLm1vYmlsZVVuaXZlcnNhbE1vZGFsLmNvbm5lY3RZb3VyV2FsbGV0XCIsXG4gICAgY2hpbGRyZW46IFwiQ29ubmVjdCB5b3VyIFRPTiB3YWxsZXRcIlxuICB9KSwgY3JlYXRlQ29tcG9uZW50KEgyU3R5bGVkJDEsIHtcbiAgICB0cmFuc2xhdGlvbktleTogXCJ3YWxsZXRNb2RhbC5tb2JpbGVVbml2ZXJzYWxNb2RhbC5zY2FuXCIsXG4gICAgY2hpbGRyZW46IFwiU2NhbiB3aXRoIHlvdXIgbW9iaWxlIHdhbGxldFwiXG4gIH0pLCBjcmVhdGVDb21wb25lbnQoUXJDb2RlV3JhcHBlciwge1xuICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoUVJDb2RlLCB7XG4gICAgICAgIGdldCBpbWFnZVVybCgpIHtcbiAgICAgICAgICByZXR1cm4gSU1HLlRPTjtcbiAgICAgICAgfSxcbiAgICAgICAgZ2V0IHNvdXJjZVVybCgpIHtcbiAgICAgICAgICByZXR1cm4gYWRkUmV0dXJuU3RyYXRlZ3kocHJvcHMudW5pdmVyc2FsTGluaywgXCJub25lXCIpO1xuICAgICAgICB9LFxuICAgICAgICBkaXNhYmxlQ29weTogdHJ1ZVxuICAgICAgfSk7XG4gICAgfVxuICB9KSwgY3JlYXRlQ29tcG9uZW50KEJ1dHRvbnNXcmFwcGVyLCB7XG4gICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgcmV0dXJuIFtjcmVhdGVDb21wb25lbnQoQWN0aW9uQnV0dG9uLCB7XG4gICAgICAgIGFwcGVhcmFuY2U6IFwic2Vjb25kYXJ5XCIsXG4gICAgICAgIG9uQ2xpY2s6ICgpID0+IHByb3BzLm9uT3BlbkxpbmsoKSxcbiAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoVHJhbnNsYXRpb24sIHtcbiAgICAgICAgICAgIHRyYW5zbGF0aW9uS2V5OiBcIndhbGxldE1vZGFsLm1vYmlsZVVuaXZlcnNhbE1vZGFsLm9wZW5MaW5rXCIsXG4gICAgICAgICAgICBjaGlsZHJlbjogXCJPcGVuIExpbmtcIlxuICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICB9KSwgY3JlYXRlQ29tcG9uZW50KEFjdGlvbkJ1dHRvbiwge1xuICAgICAgICBhcHBlYXJhbmNlOiBcInNlY29uZGFyeVwiLFxuICAgICAgICBvbkNsaWNrOiAoKSA9PiBwcm9wcy5vbkNvcHkoKSxcbiAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoVHJhbnNsYXRpb24sIHtcbiAgICAgICAgICAgIGdldCB0cmFuc2xhdGlvbktleSgpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIHByb3BzLmlzQ29waWVkU2hvd24gIT09IHZvaWQgMCA/IFwiY29tbW9uLmNvcGllZFwiIDogXCJjb21tb24uY29weUxpbmtcIjtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgICAgIHJldHVybiBwcm9wcy5pc0NvcGllZFNob3duICE9PSB2b2lkIDAgPyBcIkNvcGllZFwiIDogXCJDb3B5IExpbmtcIjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgfSldO1xuICAgIH1cbiAgfSldO1xufTtcbmZ1bmN0aW9uIGdldFVuaXF1ZUJyaWRnZXMod2FsbGV0c0xpc3QpIHtcbiAgY29uc3QgdW5pcXVlQnJpZGdlcyA9IG5ldyBTZXQoXG4gICAgd2FsbGV0c0xpc3QuZmlsdGVyKGlzV2FsbGV0SW5mb1JlbW90ZSkubWFwKChpdGVtKSA9PiBpdGVtLmJyaWRnZVVybClcbiAgKTtcbiAgcmV0dXJuIEFycmF5LmZyb20odW5pcXVlQnJpZGdlcykubWFwKChicmlkZ2VVcmwpID0+ICh7IGJyaWRnZVVybCB9KSk7XG59XG5mdW5jdGlvbiBicmlkZ2VzSXNFcXVhbChsZWZ0LCByaWdodCkge1xuICBjb25zdCBsZWZ0U2V0ID0gbmV3IFNldChsZWZ0ID09IG51bGwgPyB2b2lkIDAgOiBsZWZ0Lm1hcCgoaTIpID0+IGkyLmJyaWRnZVVybCkpO1xuICBjb25zdCByaWdodFNldCA9IG5ldyBTZXQocmlnaHQgPT0gbnVsbCA/IHZvaWQgMCA6IHJpZ2h0Lm1hcCgoaTIpID0+IGkyLmJyaWRnZVVybCkpO1xuICByZXR1cm4gbGVmdFNldC5zaXplID09PSByaWdodFNldC5zaXplICYmIFsuLi5sZWZ0U2V0XS5ldmVyeSgodmFsdWUpID0+IHJpZ2h0U2V0Lmhhcyh2YWx1ZSkpO1xufVxuY29uc3QgX3RtcGwkJDEgPSAvKiBAX19QVVJFX18gKi8gdGVtcGxhdGUkMShgPGxpPjwvbGk+YCksIF90bXBsJDIgPSAvKiBAX19QVVJFX18gKi8gdGVtcGxhdGUkMShgPGRpdiBkYXRhLXRjLXdhbGxldHMtbW9kYWwtdW5pdmVyc2FsLW1vYmlsZT1cInRydWVcIj48L2Rpdj5gKTtcbmNvbnN0IE1vYmlsZVVuaXZlcnNhbE1vZGFsID0gKHByb3BzKSA9PiB7XG4gIGNvbnN0IFtzaG93UVIsIHNldFNob3dRUl0gPSBjcmVhdGVTaWduYWwoZmFsc2UpO1xuICBjb25zdCBbZmlyc3RDbGljaywgc2V0Rmlyc3RDbGlja10gPSBjcmVhdGVTaWduYWwodHJ1ZSk7XG4gIGNvbnN0IFt1bml2ZXJzYWxMaW5rLCBzZXRVbml2ZXJzYWxMaW5rXSA9IGNyZWF0ZVNpZ25hbChudWxsKTtcbiAgY29uc3QgY29ubmVjdG9yID0gYXBwU3RhdGUuY29ubmVjdG9yO1xuICBjb25zdCB3YWxsZXRzTGlzdCA9ICgpID0+IHByb3BzLndhbGxldHNMaXN0LmZpbHRlcigodykgPT4gc3VwcG9ydHNNb2JpbGUodykgJiYgdy5hcHBOYW1lICE9PSBBVF9XQUxMRVRfQVBQX05BTUUpO1xuICBjb25zdCBzaG91bGRTaG93TW9yZUJ1dHRvbiA9ICgpID0+IHdhbGxldHNMaXN0KCkubGVuZ3RoID4gNztcbiAgY29uc3Qgd2FsbGV0c0JyaWRnZXMgPSBjcmVhdGVNZW1vKCgpID0+IGdldFVuaXF1ZUJyaWRnZXMocHJvcHMud2FsbGV0c0xpc3QpLCBudWxsLCB7XG4gICAgZXF1YWxzOiBicmlkZ2VzSXNFcXVhbFxuICB9KTtcbiAgY29uc3QgYXRXYWxsZXRTdXBwb3J0RmVhdHVyZXMgPSBjcmVhdGVNZW1vKCgpID0+IHtcbiAgICB2YXIgX2EyLCBfYjI7XG4gICAgcmV0dXJuIChfYjIgPSAoX2EyID0gcHJvcHMud2FsbGV0c0xpc3QuZmluZCgod2FsbGV0KSA9PiB3YWxsZXQuYXBwTmFtZSA9PT0gQVRfV0FMTEVUX0FQUF9OQU1FKSkgPT0gbnVsbCA/IHZvaWQgMCA6IF9hMi5pc1N1cHBvcnRSZXF1aXJlZEZlYXR1cmVzKSAhPSBudWxsID8gX2IyIDogZmFsc2U7XG4gIH0sIG51bGwpO1xuICBjb25zdCBnZXRVbml2ZXJzYWxMaW5rID0gKCkgPT4ge1xuICAgIGlmICghdW5pdmVyc2FsTGluaygpKSB7XG4gICAgICBzZXRVbml2ZXJzYWxMaW5rKGNvbm5lY3Rvci5jb25uZWN0KHdhbGxldHNCcmlkZ2VzKCksIHByb3BzLmFkZGl0aW9uYWxSZXF1ZXN0KSk7XG4gICAgfVxuICAgIHJldHVybiB1bml2ZXJzYWxMaW5rKCk7XG4gIH07XG4gIHNldExhc3RTZWxlY3RlZFdhbGxldEluZm8oe1xuICAgIG9wZW5NZXRob2Q6IFwidW5pdmVyc2FsLWxpbmtcIlxuICB9KTtcbiAgY29uc3QgW2lzQ29waWVkU2hvd24sIHNldElzQ29waWVkU2hvd25dID0gY3JlYXRlU2lnbmFsKHZvaWQgMCk7XG4gIGNvbnN0IG9uQ29weSA9ICgpID0+IF9fYXN5bmModm9pZCAwLCBudWxsLCBmdW5jdGlvbiogKCkge1xuICAgIGlmIChpc0NvcGllZFNob3duKCkgIT09IHZvaWQgMCkge1xuICAgICAgY2xlYXJUaW1lb3V0KGlzQ29waWVkU2hvd24oKSk7XG4gICAgfVxuICAgIHlpZWxkIGNvcHlUb0NsaXBib2FyZChnZXRVbml2ZXJzYWxMaW5rKCkpO1xuICAgIGNvbnN0IHRpbWVvdXRJZCA9IHNldFRpbWVvdXQoKCkgPT4gc2V0SXNDb3BpZWRTaG93bih2b2lkIDApLCAxNTAwKTtcbiAgICBzZXRJc0NvcGllZFNob3duKHRpbWVvdXRJZCk7XG4gIH0pO1xuICBjb25zdCBvblNlbGVjdFVuaXZlcnNhbCA9ICgpID0+IHtcbiAgICBjb25zdCBmb3JjZVJlZGlyZWN0ID0gIWZpcnN0Q2xpY2soKTtcbiAgICBzZXRGaXJzdENsaWNrKGZhbHNlKTtcbiAgICByZWRpcmVjdFRvV2FsbGV0KGdldFVuaXZlcnNhbExpbmsoKSwgdm9pZCAwLCB7XG4gICAgICByZXR1cm5TdHJhdGVneTogYXBwU3RhdGUucmV0dXJuU3RyYXRlZ3ksXG4gICAgICBmb3JjZVJlZGlyZWN0XG4gICAgfSwgKG1ldGhvZCkgPT4ge1xuICAgICAgc2V0TGFzdFNlbGVjdGVkV2FsbGV0SW5mbyh7XG4gICAgICAgIG9wZW5NZXRob2Q6IG1ldGhvZFxuICAgICAgfSk7XG4gICAgfSk7XG4gIH07XG4gIGNvbnN0IG9uU2VsZWN0VGVsZWdyYW0gPSAoKSA9PiB7XG4gICAgc2V0VW5pdmVyc2FsTGluayhudWxsKTtcbiAgICBjb25zdCBhdFdhbGxldCA9IHByb3BzLndhbGxldHNMaXN0LmZpbmQoKHdhbGxldCkgPT4gd2FsbGV0LmFwcE5hbWUgPT09IEFUX1dBTExFVF9BUFBfTkFNRSk7XG4gICAgaWYgKCFhdFdhbGxldCB8fCAhaXNXYWxsZXRJbmZvUmVtb3RlKGF0V2FsbGV0KSkge1xuICAgICAgdGhyb3cgbmV3IFRvbkNvbm5lY3RVSUVycm9yKFwiQHdhbGxldCBib3Qgbm90IGZvdW5kIGluIHRoZSB3YWxsZXRzIGxpc3RcIik7XG4gICAgfVxuICAgIGNvbnN0IHdhbGxldExpbmsgPSBjb25uZWN0b3IuY29ubmVjdCh7XG4gICAgICBicmlkZ2VVcmw6IGF0V2FsbGV0LmJyaWRnZVVybCxcbiAgICAgIHVuaXZlcnNhbExpbms6IGF0V2FsbGV0LnVuaXZlcnNhbExpbmtcbiAgICB9LCBwcm9wcy5hZGRpdGlvbmFsUmVxdWVzdCk7XG4gICAgY29uc3QgZm9yY2VSZWRpcmVjdCA9ICFmaXJzdENsaWNrKCk7XG4gICAgc2V0Rmlyc3RDbGljayhmYWxzZSk7XG4gICAgcmVkaXJlY3RUb1RlbGVncmFtKHdhbGxldExpbmssIHtcbiAgICAgIHJldHVyblN0cmF0ZWd5OiBhcHBTdGF0ZS5yZXR1cm5TdHJhdGVneSxcbiAgICAgIHR3YVJldHVyblVybDogYXBwU3RhdGUudHdhUmV0dXJuVXJsLFxuICAgICAgZm9yY2VSZWRpcmVjdFxuICAgIH0pO1xuICB9O1xuICBjb25zdCBvbk9wZW5RUiA9ICgpID0+IHtcbiAgICBzZXRTaG93UVIodHJ1ZSk7XG4gICAgc2V0TGFzdFNlbGVjdGVkV2FsbGV0SW5mbyh7XG4gICAgICBvcGVuTWV0aG9kOiBcInFyY29kZVwiXG4gICAgfSk7XG4gIH07XG4gIGNvbnN0IG9uQ2xvc2VRUiA9ICgpID0+IHtcbiAgICBzZXRTaG93UVIoZmFsc2UpO1xuICAgIHNldExhc3RTZWxlY3RlZFdhbGxldEluZm8oe1xuICAgICAgb3Blbk1ldGhvZDogXCJ1bml2ZXJzYWwtbGlua1wiXG4gICAgfSk7XG4gIH07XG4gIGNvbnN0IHN1cHBvcnRlZFdhbGxldHMgPSBjcmVhdGVNZW1vKCgpID0+IHdhbGxldHNMaXN0KCkuZmlsdGVyKCh3YWxsZXQpID0+IHdhbGxldC5pc1N1cHBvcnRSZXF1aXJlZEZlYXR1cmVzKSwgbnVsbCk7XG4gIGNvbnN0IHZpc2libGVXYWxsZXRzID0gY3JlYXRlTWVtbygoKSA9PiBzdXBwb3J0ZWRXYWxsZXRzKCkuc2xpY2UoMCwgMyksIG51bGwpO1xuICBjb25zdCBmb3VyV2FsbGV0c0l0ZW0gPSBjcmVhdGVNZW1vKCgpID0+IHdhbGxldHNMaXN0KCkuZmlsdGVyKCh3YWxsZXQpID0+ICF2aXNpYmxlV2FsbGV0cygpLmZpbmQoKHcpID0+IHcuYXBwTmFtZSA9PT0gd2FsbGV0LmFwcE5hbWUpKS5zbGljZSgwLCA0KSwgbnVsbCk7XG4gIHJldHVybiAoKCkgPT4ge1xuICAgIGNvbnN0IF9lbCQgPSBfdG1wbCQyLmNsb25lTm9kZSh0cnVlKTtcbiAgICBpbnNlcnQoX2VsJCwgY3JlYXRlQ29tcG9uZW50KFNob3csIHtcbiAgICAgIGdldCB3aGVuKCkge1xuICAgICAgICByZXR1cm4gc2hvd1FSKCk7XG4gICAgICB9LFxuICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICByZXR1cm4gW2NyZWF0ZUNvbXBvbmVudChTdHlsZWRMZWZ0QWN0aW9uQnV0dG9uLCB7XG4gICAgICAgICAgaWNvbjogXCJhcnJvd1wiLFxuICAgICAgICAgIG9uQ2xpY2s6IG9uQ2xvc2VRUlxuICAgICAgICB9KSwgY3JlYXRlQ29tcG9uZW50KE1vYmlsZVVuaXZlcnNhbFFSLCB7XG4gICAgICAgICAgZ2V0IHVuaXZlcnNhbExpbmsoKSB7XG4gICAgICAgICAgICByZXR1cm4gZ2V0VW5pdmVyc2FsTGluaygpO1xuICAgICAgICAgIH0sXG4gICAgICAgICAgZ2V0IGlzQ29waWVkU2hvd24oKSB7XG4gICAgICAgICAgICByZXR1cm4gaXNDb3BpZWRTaG93bigpO1xuICAgICAgICAgIH0sXG4gICAgICAgICAgb25PcGVuTGluazogb25TZWxlY3RVbml2ZXJzYWwsXG4gICAgICAgICAgb25Db3B5XG4gICAgICAgIH0pXTtcbiAgICAgIH1cbiAgICB9KSwgbnVsbCk7XG4gICAgaW5zZXJ0KF9lbCQsIGNyZWF0ZUNvbXBvbmVudChTaG93LCB7XG4gICAgICBnZXQgd2hlbigpIHtcbiAgICAgICAgcmV0dXJuICFzaG93UVIoKTtcbiAgICAgIH0sXG4gICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgIHJldHVybiBbY3JlYXRlQ29tcG9uZW50KFN0eWxlZExlZnRBY3Rpb25CdXR0b24sIHtcbiAgICAgICAgICBnZXQgaWNvbigpIHtcbiAgICAgICAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoUVJJY29uLCB7fSk7XG4gICAgICAgICAgfSxcbiAgICAgICAgICBvbkNsaWNrOiBvbk9wZW5RUlxuICAgICAgICB9KSwgY3JlYXRlQ29tcG9uZW50KEgxU3R5bGVkJDIsIHtcbiAgICAgICAgICB0cmFuc2xhdGlvbktleTogXCJ3YWxsZXRNb2RhbC5tb2JpbGVVbml2ZXJzYWxNb2RhbC5jb25uZWN0WW91cldhbGxldFwiLFxuICAgICAgICAgIGNoaWxkcmVuOiBcIkNvbm5lY3QgeW91ciBUT04gd2FsbGV0XCJcbiAgICAgICAgfSksIGNyZWF0ZUNvbXBvbmVudChTaG93LCB7XG4gICAgICAgICAgZ2V0IHdoZW4oKSB7XG4gICAgICAgICAgICByZXR1cm4gYXRXYWxsZXRTdXBwb3J0RmVhdHVyZXMoKTtcbiAgICAgICAgICB9LFxuICAgICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICAgIHJldHVybiBbY3JlYXRlQ29tcG9uZW50KEgyU3R5bGVkJDIsIHtcbiAgICAgICAgICAgICAgdHJhbnNsYXRpb25LZXk6IFwid2FsbGV0TW9kYWwubW9iaWxlVW5pdmVyc2FsTW9kYWwub3BlbldhbGxldE9uVGVsZWdyYW1PclNlbGVjdFwiLFxuICAgICAgICAgICAgICBtYXhXaWR0aDogMzIwLFxuICAgICAgICAgICAgICBjaGlsZHJlbjogXCJVc2UgV2FsbGV0IGluIFRlbGVncmFtIG9yIGNob29zZSBvdGhlciBhcHBsaWNhdGlvblwiXG4gICAgICAgICAgICB9KSwgY3JlYXRlQ29tcG9uZW50KFRlbGVncmFtQnV0dG9uU3R5bGVkLCB7XG4gICAgICAgICAgICAgIGdldCBsZWZ0SWNvbigpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KEF0V2FsbGV0SWNvbiwge30pO1xuICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICBnZXQgcmlnaHRJY29uKCkge1xuICAgICAgICAgICAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoVEdJbWFnZVN0eWxlZCwge1xuICAgICAgICAgICAgICAgICAgZ2V0IHNyYygpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIElNRy5URztcbiAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgb25DbGljazogb25TZWxlY3RUZWxlZ3JhbSxcbiAgICAgICAgICAgICAgc2NhbGU6IFwic1wiLFxuICAgICAgICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChUcmFuc2xhdGlvbiwge1xuICAgICAgICAgICAgICAgICAgdHJhbnNsYXRpb25LZXk6IFwid2FsbGV0TW9kYWwubW9iaWxlVW5pdmVyc2FsTW9kYWwub3BlbldhbGxldE9uVGVsZWdyYW1cIixcbiAgICAgICAgICAgICAgICAgIGNoaWxkcmVuOiBcIkNvbm5lY3QgV2FsbGV0IGluIFRlbGVncmFtXCJcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSldO1xuICAgICAgICAgIH1cbiAgICAgICAgfSksIGNyZWF0ZUNvbXBvbmVudChIMlN0eWxlZCQyLCB7XG4gICAgICAgICAgdHJhbnNsYXRpb25LZXk6IFwid2FsbGV0TW9kYWwubW9iaWxlVW5pdmVyc2FsTW9kYWwuY2hvb3NlT3RoZXJBcHBsaWNhdGlvblwiLFxuICAgICAgICAgIG1heFdpZHRoOiAzNDIsXG4gICAgICAgICAgcGFkZGluZzogXCIwIDI0cHggOHB4IDI0cHhcIixcbiAgICAgICAgICBtYXJnaW46IFwiMFwiLFxuICAgICAgICAgIGNoaWxkcmVuOiBcIkNob29zZSBvdGhlciBhcHBsaWNhdGlvblwiXG4gICAgICAgIH0pLCBjcmVhdGVDb21wb25lbnQoV2FsbGV0VWxDb250YWluZXIsIHtcbiAgICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgICByZXR1cm4gW2NyZWF0ZUNvbXBvbmVudChGb3IsIHtcbiAgICAgICAgICAgICAgZ2V0IGVhY2goKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGNyZWF0ZU1lbW8oKCkgPT4gISFzaG91bGRTaG93TW9yZUJ1dHRvbigpKSgpID8gdmlzaWJsZVdhbGxldHMoKSA6IHN1cHBvcnRlZFdhbGxldHMoKTtcbiAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgY2hpbGRyZW46ICh3YWxsZXQpID0+ICgoKSA9PiB7XG4gICAgICAgICAgICAgICAgY29uc3QgX2VsJDMgPSBfdG1wbCQkMS5jbG9uZU5vZGUodHJ1ZSk7XG4gICAgICAgICAgICAgICAgaW5zZXJ0KF9lbCQzLCBjcmVhdGVDb21wb25lbnQoV2FsbGV0SXRlbSwge1xuICAgICAgICAgICAgICAgICAgZ2V0IGljb24oKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiB3YWxsZXQuaW1hZ2VVcmw7XG4gICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgZ2V0IG5hbWUoKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiB3YWxsZXQubmFtZTtcbiAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICBvbkNsaWNrOiAoKSA9PiBwcm9wcy5vblNlbGVjdCh3YWxsZXQpXG4gICAgICAgICAgICAgICAgfSkpO1xuICAgICAgICAgICAgICAgIHJldHVybiBfZWwkMztcbiAgICAgICAgICAgICAgfSkoKVxuICAgICAgICAgICAgfSksIGNyZWF0ZUNvbXBvbmVudChTaG93LCB7XG4gICAgICAgICAgICAgIGdldCB3aGVuKCkge1xuICAgICAgICAgICAgICAgIHJldHVybiBzaG91bGRTaG93TW9yZUJ1dHRvbigpO1xuICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgX2VsJDIgPSBfdG1wbCQkMS5jbG9uZU5vZGUodHJ1ZSk7XG4gICAgICAgICAgICAgICAgaW5zZXJ0KF9lbCQyLCBjcmVhdGVDb21wb25lbnQoRm91cldhbGxldHNJdGVtLCB7XG4gICAgICAgICAgICAgICAgICBsYWJlbExpbmUxOiBcIlZpZXcgYWxsXCIsXG4gICAgICAgICAgICAgICAgICBsYWJlbExpbmUyOiBcIndhbGxldHNcIixcbiAgICAgICAgICAgICAgICAgIGdldCBpbWFnZXMoKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBmb3VyV2FsbGV0c0l0ZW0oKS5tYXAoKGkyKSA9PiBpMi5pbWFnZVVybCk7XG4gICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgb25DbGljazogKCkgPT4gcHJvcHMub25TZWxlY3RBbGxXYWxsZXRzKClcbiAgICAgICAgICAgICAgICB9KSk7XG4gICAgICAgICAgICAgICAgcmV0dXJuIF9lbCQyO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KV07XG4gICAgICAgICAgfVxuICAgICAgICB9KV07XG4gICAgICB9XG4gICAgfSksIG51bGwpO1xuICAgIHJldHVybiBfZWwkO1xuICB9KSgpO1xufTtcbmNvbnN0IGJvcmRlcnMgPSB7XG4gIG06IFwiMTZweFwiLFxuICBzOiBcIjhweFwiLFxuICBub25lOiBcIjBcIlxufTtcbmNvbnN0IGhvdmVyQm9yZGVycyA9IHtcbiAgbTogXCI4cHhcIixcbiAgczogXCI0cHhcIixcbiAgbm9uZTogXCIwXCJcbn07XG5jb25zdCBEZXNrdG9wVW5pdmVyc2FsTW9kYWxTdHlsZWQgPSBzdHlsZWQuZGl2YFxuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIHBhZGRpbmctYm90dG9tOiAxNnB4O1xuYDtcbmNvbnN0IEgyU3R5bGVkID0gc3R5bGVkKEgyKWBcbiAgICBtYXgtd2lkdGg6IDMyMHB4O1xuICAgIG1hcmdpbi10b3A6IDJweDtcbiAgICBtYXJnaW4tYm90dG9tOiAyMHB4O1xuYDtcbmNvbnN0IEgyQXZhaWxhYmxlV2FsbGV0c1N0eWxlZCA9IHN0eWxlZChIMilgXG4gICAgbWFyZ2luLWJvdHRvbTogMTZweDtcbmA7XG5jb25zdCBRUkNvZGVTdHlsZWQgPSBzdHlsZWQoUVJDb2RlKWBcbiAgICBtYXJnaW4tYm90dG9tOiAyNHB4O1xuYDtcbmNvbnN0IFdhbGxldHNDb250YWluZXJTdHlsZWQgPSBzdHlsZWQudWxgXG4gICAgZGlzcGxheTogZmxleDtcbmA7XG5zdHlsZWQuZGl2YFxuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZ2FwOiAxNnB4O1xuICAgIHdpZHRoOiAxMDAlO1xuYDtcbnN0eWxlZChCdXR0b24pYFxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBmb250LXNpemU6IDE2cHg7XG4gICAgbGluZS1oZWlnaHQ6IDIwcHg7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgcGFkZGluZzogMCAxNnB4O1xuICAgIGhlaWdodDogNTZweDtcbiAgICBib3JkZXItcmFkaXVzOiAkeyhwcm9wcykgPT4gYm9yZGVyc1twcm9wcy50aGVtZS5ib3JkZXJSYWRpdXNdfTtcblxuICAgICY6aG92ZXIge1xuICAgICAgICAkeyhwcm9wcykgPT4gcHJvcHMuZGlzYWJsZUV2ZW50c0FuaW1hdGlvbiA/IFwidHJhbnNmb3JtOiB1bnNldDtcIiA6IFwiXCJ9XG4gICAgfVxuXG4gICAgJjphY3RpdmUge1xuICAgICAgICAkeyhwcm9wcykgPT4gcHJvcHMuZGlzYWJsZUV2ZW50c0FuaW1hdGlvbiA/IFwidHJhbnNmb3JtOiB1bnNldDtcIiA6IFwiXCJ9XG4gICAgfVxuYDtcbnN0eWxlZC51bGBcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgYm90dG9tOiAxMDAlO1xuICAgIGxlZnQ6IDA7XG4gICAgbWFyZ2luOiAwO1xuICAgIHBhZGRpbmc6IDhweDtcbiAgICB3aWR0aDogMTg4cHg7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC0xNnB4KTtcblxuICAgIGJhY2tncm91bmQtY29sb3I6ICR7KHByb3BzKSA9PiBwcm9wcy50aGVtZS5jb2xvcnMuYmFja2dyb3VuZC5wcmltYXJ5fTtcbiAgICBib3JkZXItcmFkaXVzOiAkeyhwcm9wcykgPT4gYm9yZGVyc1twcm9wcy50aGVtZS5ib3JkZXJSYWRpdXNdfTtcbiAgICBib3gtc2hhZG93OiAwIDRweCAyNHB4IHJnYmEoMCwgMCwgMCwgMC4xNik7XG5gO1xuc3R5bGVkLmxpYFxuICAgIHBhZGRpbmc6IDhweDtcblxuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBnYXA6IDhweDtcblxuICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICBib3JkZXItcmFkaXVzOiAkeyhwcm9wcykgPT4gaG92ZXJCb3JkZXJzW3Byb3BzLnRoZW1lLmJvcmRlclJhZGl1c119O1xuXG4gICAgdHJhbnNpdGlvbjogYmFja2dyb3VuZC1jb2xvciwgdHJhbnNmb3JtIDAuMXMgZWFzZS1pbi1vdXQ7XG5cbiAgICAmOmhvdmVyIHtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJHsocHJvcHMpID0+IHByb3BzLnRoZW1lLmNvbG9ycy5iYWNrZ3JvdW5kLnNlY29uZGFyeX07XG4gICAgfVxuXG4gICAgJjphY3RpdmUge1xuICAgICAgICB0cmFuc2Zvcm06IHNjYWxlKDAuOTYpO1xuICAgIH1cbmA7XG5zdHlsZWQoSW1hZ2UpYFxuICAgIHdpZHRoOiAyNHB4O1xuICAgIGhlaWdodDogMjRweDtcblxuICAgIGJvcmRlci1yYWRpdXM6IDZweDtcbmA7XG5zdHlsZWQuZGl2YFxuICAgIG1hcmdpbi10b3A6IDIzcHg7XG4gICAgbWFyZ2luLWJvdHRvbTogMXB4O1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbmA7XG5zdHlsZWQoVGV4dClgXG4gICAgY29sb3I6ICR7KHByb3BzKSA9PiBwcm9wcy50aGVtZS5jb2xvcnMudGV4dC5zZWNvbmRhcnl9O1xuICAgIGZvbnQtc2l6ZTogMTZweDtcbmA7XG5jb25zdCBfdG1wbCQgPSAvKiBAX19QVVJFX18gKi8gdGVtcGxhdGUkMShgPGxpPjwvbGk+YCk7XG5jb25zdCBEZXNrdG9wVW5pdmVyc2FsTW9kYWwgPSAocHJvcHMpID0+IHtcbiAgY29uc3QgW3BvcHVwT3BlbmVkLCBzZXRQb3B1cE9wZW5lZF0gPSBjcmVhdGVTaWduYWwoZmFsc2UpO1xuICBjb25zdCBjb25uZWN0b3IgPSBhcHBTdGF0ZS5jb25uZWN0b3I7XG4gIGNvbnN0IHdhbGxldHNCcmlkZ2VzID0gY3JlYXRlTWVtbygoKSA9PiBnZXRVbmlxdWVCcmlkZ2VzKHByb3BzLndhbGxldHNMaXN0KSwgbnVsbCwge1xuICAgIGVxdWFsczogYnJpZGdlc0lzRXF1YWxcbiAgfSk7XG4gIHNldExhc3RTZWxlY3RlZFdhbGxldEluZm8oe1xuICAgIG9wZW5NZXRob2Q6IFwicXJjb2RlXCJcbiAgfSk7XG4gIGNvbnN0IHJlcXVlc3QgPSBjcmVhdGVNZW1vKCgpID0+IGNvbm5lY3Rvci5jb25uZWN0KHdhbGxldHNCcmlkZ2VzKCksIHByb3BzLmFkZGl0aW9uYWxSZXF1ZXN0KSk7XG4gIGNvbnN0IHN1cHBvcnRlZFdhbGxldHMgPSBjcmVhdGVNZW1vKCgpID0+IHByb3BzLndhbGxldHNMaXN0LmZpbHRlcigod2FsbGV0KSA9PiB3YWxsZXQuaXNTdXBwb3J0UmVxdWlyZWRGZWF0dXJlcyksIG51bGwpO1xuICBjb25zdCB2aXNpYmxlV2FsbGV0cyA9IGNyZWF0ZU1lbW8oKCkgPT4gc3VwcG9ydGVkV2FsbGV0cygpLnNsaWNlKDAsIDMpLCBudWxsKTtcbiAgY29uc3QgZm91cldhbGxldHNJdGVtID0gY3JlYXRlTWVtbygoKSA9PiBwcm9wcy53YWxsZXRzTGlzdC5maWx0ZXIoKHdhbGxldCkgPT4gIXZpc2libGVXYWxsZXRzKCkuZmluZCgodykgPT4gdy5hcHBOYW1lID09PSB3YWxsZXQuYXBwTmFtZSkpLnNsaWNlKDAsIDQpLCBudWxsKTtcbiAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChEZXNrdG9wVW5pdmVyc2FsTW9kYWxTdHlsZWQsIHtcbiAgICBvbkNsaWNrOiAoKSA9PiBzZXRQb3B1cE9wZW5lZChmYWxzZSksXG4gICAgXCJkYXRhLXRjLXdhbGxldHMtbW9kYWwtdW5pdmVyc2FsLWRlc2t0b3BcIjogXCJ0cnVlXCIsXG4gICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgcmV0dXJuIFtjcmVhdGVDb21wb25lbnQoSDEsIHtcbiAgICAgICAgdHJhbnNsYXRpb25LZXk6IFwid2FsbGV0TW9kYWwuZGVza3RvcFVuaXZlcnNhbE1vZGFsLmNvbm5lY3RZb3VyV2FsbGV0XCIsXG4gICAgICAgIGNoaWxkcmVuOiBcIkNvbm5lY3QgeW91ciB3YWxsZXRcIlxuICAgICAgfSksIGNyZWF0ZUNvbXBvbmVudChIMlN0eWxlZCwge1xuICAgICAgICB0cmFuc2xhdGlvbktleTogXCJ3YWxsZXRNb2RhbC5kZXNrdG9wVW5pdmVyc2FsTW9kYWwuc2NhblwiLFxuICAgICAgICBjaGlsZHJlbjogXCJTY2FuIHdpdGggeW91ciBtb2JpbGUgd2FsbGV0XCJcbiAgICAgIH0pLCBjcmVhdGVDb21wb25lbnQoUVJDb2RlU3R5bGVkLCB7XG4gICAgICAgIGdldCBzb3VyY2VVcmwoKSB7XG4gICAgICAgICAgcmV0dXJuIGFkZFJldHVyblN0cmF0ZWd5KHJlcXVlc3QoKSwgXCJub25lXCIpO1xuICAgICAgICB9LFxuICAgICAgICBnZXQgZGlzYWJsZUNvcHkoKSB7XG4gICAgICAgICAgcmV0dXJuIHBvcHVwT3BlbmVkKCk7XG4gICAgICAgIH0sXG4gICAgICAgIGdldCBpbWFnZVVybCgpIHtcbiAgICAgICAgICByZXR1cm4gSU1HLlRPTjtcbiAgICAgICAgfVxuICAgICAgfSksIGNyZWF0ZUNvbXBvbmVudChIMkF2YWlsYWJsZVdhbGxldHNTdHlsZWQsIHtcbiAgICAgICAgdHJhbnNsYXRpb25LZXk6IFwid2FsbGV0TW9kYWwuZGVza3RvcFVuaXZlcnNhbE1vZGFsLmF2YWlsYWJsZVdhbGxldHNcIixcbiAgICAgICAgY2hpbGRyZW46IFwiQXZhaWxhYmxlIHdhbGxldHNcIlxuICAgICAgfSksIGNyZWF0ZUNvbXBvbmVudChXYWxsZXRzQ29udGFpbmVyU3R5bGVkLCB7XG4gICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICByZXR1cm4gW2NyZWF0ZUNvbXBvbmVudChGb3IsIHtcbiAgICAgICAgICAgIGdldCBlYWNoKCkge1xuICAgICAgICAgICAgICByZXR1cm4gdmlzaWJsZVdhbGxldHMoKTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBjaGlsZHJlbjogKHdhbGxldCkgPT4gKCgpID0+IHtcbiAgICAgICAgICAgICAgY29uc3QgX2VsJCA9IF90bXBsJC5jbG9uZU5vZGUodHJ1ZSk7XG4gICAgICAgICAgICAgIGluc2VydChfZWwkLCBjcmVhdGVDb21wb25lbnQoV2FsbGV0TGFiZWxlZEl0ZW0sIHtcbiAgICAgICAgICAgICAgICB3YWxsZXQsXG4gICAgICAgICAgICAgICAgb25DbGljazogKCkgPT4gcHJvcHMub25TZWxlY3Qod2FsbGV0KVxuICAgICAgICAgICAgICB9KSk7XG4gICAgICAgICAgICAgIHJldHVybiBfZWwkO1xuICAgICAgICAgICAgfSkoKVxuICAgICAgICAgIH0pLCBjcmVhdGVDb21wb25lbnQoRm91cldhbGxldHNJdGVtLCB7XG4gICAgICAgICAgICBsYWJlbExpbmUxOiBcIlZpZXcgYWxsXCIsXG4gICAgICAgICAgICBsYWJlbExpbmUyOiBcIndhbGxldHNcIixcbiAgICAgICAgICAgIGdldCBpbWFnZXMoKSB7XG4gICAgICAgICAgICAgIHJldHVybiBmb3VyV2FsbGV0c0l0ZW0oKS5tYXAoKGkyKSA9PiBpMi5pbWFnZVVybCk7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgb25DbGljazogKCkgPT4gcHJvcHMub25TZWxlY3RBbGxXYWxsZXRzKClcbiAgICAgICAgICB9KV07XG4gICAgICAgIH1cbiAgICAgIH0pXTtcbiAgICB9XG4gIH0pO1xufTtcbmNvbnN0IFdhbGxldHNNb2RhbCA9ICgpID0+IHtcbiAgY29uc3Qge1xuICAgIGxvY2FsZVxuICB9ID0gdXNlSTE4bigpWzFdO1xuICBjcmVhdGVFZmZlY3QoKCkgPT4gbG9jYWxlKGFwcFN0YXRlLmxhbmd1YWdlKSk7XG4gIGNyZWF0ZUVmZmVjdCgoKSA9PiB7XG4gICAgaWYgKGdldFdhbGxldHNNb2RhbElzT3BlbmVkKCkpIHtcbiAgICAgIHVwZGF0ZUlzTW9iaWxlKCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHNldFNlbGVjdGVkV2FsbGV0SW5mbyhudWxsKTtcbiAgICAgIHNldFNlbGVjdGVkVGFiKFwidW5pdmVyc2FsXCIpO1xuICAgICAgc2V0SW5mb1RhYihmYWxzZSk7XG4gICAgfVxuICB9KTtcbiAgY29uc3QgY29ubmVjdG9yID0gdXNlQ29udGV4dChDb25uZWN0b3JDb250ZXh0KTtcbiAgY29uc3QgdG9uQ29ubmVjdFVJID0gdXNlQ29udGV4dChUb25Db25uZWN0VWlDb250ZXh0KTtcbiAgY29uc3QgW2ZldGNoZWRXYWxsZXRzTGlzdF0gPSBjcmVhdGVSZXNvdXJjZSgoKSA9PiB0b25Db25uZWN0VUkuZ2V0V2FsbGV0cygpKTtcbiAgY29uc3QgW3NlbGVjdGVkV2FsbGV0SW5mbywgc2V0U2VsZWN0ZWRXYWxsZXRJbmZvXSA9IGNyZWF0ZVNpZ25hbChudWxsKTtcbiAgY29uc3QgW3NlbGVjdGVkV2FsbGV0RXJyb3IsIHNldFNlbGVjdGVkV2FsbGV0RXJyb3JdID0gY3JlYXRlU2lnbmFsKG51bGwpO1xuICBjb25zdCBbc2VsZWN0ZWRUYWIsIHNldFNlbGVjdGVkVGFiXSA9IGNyZWF0ZVNpZ25hbChcInVuaXZlcnNhbFwiKTtcbiAgY29uc3QgW2luZm9UYWIsIHNldEluZm9UYWJdID0gY3JlYXRlU2lnbmFsKGZhbHNlKTtcbiAgY29uc3Qgd2FsbGV0c0xpc3QgPSBjcmVhdGVNZW1vKCgpID0+IHtcbiAgICBpZiAoZmV0Y2hlZFdhbGxldHNMaXN0LnN0YXRlICE9PSBcInJlYWR5XCIpIHtcbiAgICAgIHJldHVybiBudWxsO1xuICAgIH1cbiAgICBsZXQgd2FsbGV0c0xpc3QyID0gYXBwbHlXYWxsZXRzTGlzdENvbmZpZ3VyYXRpb24oZmV0Y2hlZFdhbGxldHNMaXN0KCksIGFwcFN0YXRlLndhbGxldHNMaXN0Q29uZmlndXJhdGlvbik7XG4gICAgY29uc3QgaW5qZWN0ZWRXYWxsZXRzID0gd2FsbGV0c0xpc3QyLmZpbHRlcihpc1dhbGxldEluZm9DdXJyZW50bHlJbmplY3RlZCk7XG4gICAgY29uc3Qgbm90SW5qZWN0ZWRXYWxsZXRzID0gd2FsbGV0c0xpc3QyLmZpbHRlcigodykgPT4gIWlzV2FsbGV0SW5mb0N1cnJlbnRseUluamVjdGVkKHcpKTtcbiAgICB3YWxsZXRzTGlzdDIgPSAoaW5qZWN0ZWRXYWxsZXRzIHx8IFtdKS5jb25jYXQobm90SW5qZWN0ZWRXYWxsZXRzKTtcbiAgICBjb25zdCBwcmVmZXJyZWRXYWxsZXRBcHBOYW1lID0gYXBwU3RhdGUucHJlZmVycmVkV2FsbGV0QXBwTmFtZTtcbiAgICBjb25zdCBwcmVmZXJyZWRXYWxsZXQgPSB3YWxsZXRzTGlzdDIuZmluZCgoaXRlbSkgPT4gZXFXYWxsZXROYW1lKGl0ZW0sIHByZWZlcnJlZFdhbGxldEFwcE5hbWUpKTtcbiAgICBjb25zdCBzb21lV2FsbGV0c1dpdGhTYW1lTmFtZSA9IHdhbGxldHNMaXN0Mi5maWx0ZXIoKGl0ZW0pID0+IGVxV2FsbGV0TmFtZShpdGVtLCBwcmVmZXJyZWRXYWxsZXRBcHBOYW1lKSkubGVuZ3RoID49IDI7XG4gICAgaWYgKHByZWZlcnJlZFdhbGxldEFwcE5hbWUgJiYgcHJlZmVycmVkV2FsbGV0ICYmICFzb21lV2FsbGV0c1dpdGhTYW1lTmFtZSkge1xuICAgICAgd2FsbGV0c0xpc3QyID0gW19fc3ByZWFkUHJvcHMoX19zcHJlYWRWYWx1ZXMoe30sIHByZWZlcnJlZFdhbGxldCksIHtcbiAgICAgICAgaXNQcmVmZXJyZWQ6IHRydWVcbiAgICAgIH0pXS5jb25jYXQod2FsbGV0c0xpc3QyLmZpbHRlcigoaXRlbSkgPT4gIWVxV2FsbGV0TmFtZShpdGVtLCBwcmVmZXJyZWRXYWxsZXRBcHBOYW1lKSkpO1xuICAgIH1cbiAgICBjb25zdCBhdFdhbGxldCA9IHdhbGxldHNMaXN0Mi5maW5kKChpdGVtKSA9PiBlcVdhbGxldE5hbWUoaXRlbSwgQVRfV0FMTEVUX0FQUF9OQU1FKSk7XG4gICAgaWYgKGF0V2FsbGV0KSB7XG4gICAgICB3YWxsZXRzTGlzdDIgPSBbYXRXYWxsZXRdLmNvbmNhdCh3YWxsZXRzTGlzdDIuZmlsdGVyKChpdGVtKSA9PiAhZXFXYWxsZXROYW1lKGl0ZW0sIEFUX1dBTExFVF9BUFBfTkFNRSkpKTtcbiAgICB9XG4gICAgY29uc3QgdWlXYWxsZXRzID0gd2FsbGV0c0xpc3QyLm1hcCgod2FsbGV0KSA9PiB7XG4gICAgICB2YXIgX2EyO1xuICAgICAgcmV0dXJuIF9fc3ByZWFkUHJvcHMoX19zcHJlYWRWYWx1ZXMoe30sIHdhbGxldCksIHtcbiAgICAgICAgaXNTdXBwb3J0UmVxdWlyZWRGZWF0dXJlczogKHRvbkNvbm5lY3RVSSA9PSBudWxsID8gdm9pZCAwIDogdG9uQ29ubmVjdFVJLndhbGxldHNSZXF1aXJlZEZlYXR1cmVzKSA/IGNoZWNrUmVxdWlyZWRXYWxsZXRGZWF0dXJlcygoX2EyID0gd2FsbGV0LmZlYXR1cmVzKSAhPSBudWxsID8gX2EyIDogW10sIHRvbkNvbm5lY3RVSS53YWxsZXRzUmVxdWlyZWRGZWF0dXJlcykgOiB0cnVlXG4gICAgICB9KTtcbiAgICB9KTtcbiAgICByZXR1cm4gdWlXYWxsZXRzO1xuICB9KTtcbiAgY29uc3QgYWRkaXRpb25hbFJlcXVlc3RMb2FkaW5nID0gKCkgPT4ge1xuICAgIHZhciBfYTI7XG4gICAgcmV0dXJuICgoX2EyID0gYXBwU3RhdGUuY29ubmVjdFJlcXVlc3RQYXJhbWV0ZXJzKSA9PSBudWxsID8gdm9pZCAwIDogX2EyLnN0YXRlKSA9PT0gXCJsb2FkaW5nXCI7XG4gIH07XG4gIGNvbnN0IGFkZGl0aW9uYWxSZXF1ZXN0ID0gY3JlYXRlTWVtbygoKSA9PiB7XG4gICAgdmFyIF9hMjtcbiAgICBpZiAoYWRkaXRpb25hbFJlcXVlc3RMb2FkaW5nKCkpIHtcbiAgICAgIHJldHVybiB2b2lkIDA7XG4gICAgfVxuICAgIHJldHVybiAoX2EyID0gYXBwU3RhdGUuY29ubmVjdFJlcXVlc3RQYXJhbWV0ZXJzKSA9PSBudWxsID8gdm9pZCAwIDogX2EyLnZhbHVlO1xuICB9KTtcbiAgY29uc3Qgb25DbG9zZSA9IChjbG9zZVJlYXNvbikgPT4ge1xuICAgIHRvbkNvbm5lY3RVSS5jbG9zZU1vZGFsKGNsb3NlUmVhc29uKTtcbiAgfTtcbiAgY29uc3QgdW5zdWJzY3JpYmUgPSBjb25uZWN0b3Iub25TdGF0dXNDaGFuZ2UoKHdhbGxldCkgPT4ge1xuICAgIGlmICh3YWxsZXQpIHtcbiAgICAgIG9uQ2xvc2UoXCJ3YWxsZXQtc2VsZWN0ZWRcIik7XG4gICAgfVxuICB9LCAoZXJyKSA9PiB7XG4gICAgdmFyIF9hMjtcbiAgICBpZiAoZXJyIGluc3RhbmNlb2YgV2FsbGV0TWlzc2luZ1JlcXVpcmVkRmVhdHVyZXNFcnJvcikge1xuICAgICAgY29uc3QgZXJyb3JBcHBOYW1lID0gZXJyLmNhdXNlLmNvbm5lY3RFdmVudC5kZXZpY2UuYXBwTmFtZS50b0xvd2VyQ2FzZSgpO1xuICAgICAgY29uc3Qgd2FsbGV0ID0gKF9hMiA9IHdhbGxldHNMaXN0KCkpID09IG51bGwgPyB2b2lkIDAgOiBfYTIuZmluZCgodykgPT4gdy5hcHBOYW1lLnRvTG93ZXJDYXNlKCkgPT09IGVycm9yQXBwTmFtZSk7XG4gICAgICBpZiAoIXdhbGxldCkge1xuICAgICAgICB0aHJvdyBuZXcgVG9uQ29ubmVjdEVycm9yKFwiV2FsbGV0IG5vdCBmb3VuZFwiKTtcbiAgICAgIH1cbiAgICAgIGNvbnN0IHdhbGxldEVycm9yVHlwZSA9IHdhbGxldC5pc1N1cHBvcnRSZXF1aXJlZEZlYXR1cmVzID8gXCJtaXNzaW5nLWZlYXR1cmVzXCIgOiBcIm5vdC1zdXBwb3J0ZWRcIjtcbiAgICAgIHNldFNlbGVjdGVkV2FsbGV0RXJyb3Iod2FsbGV0RXJyb3JUeXBlKTtcbiAgICAgIHNldFNlbGVjdGVkV2FsbGV0SW5mbyh3YWxsZXQpO1xuICAgIH1cbiAgfSk7XG4gIGNvbnN0IG9uU2VsZWN0QWxsV2FsbGV0cyA9ICgpID0+IHtcbiAgICBzZXRTZWxlY3RlZFRhYihcImFsbC13YWxsZXRzXCIpO1xuICB9O1xuICBjb25zdCBvblNlbGVjdFVuaXZlcnNhbCA9ICgpID0+IHtcbiAgICBzZXRTZWxlY3RlZFRhYihcInVuaXZlcnNhbFwiKTtcbiAgfTtcbiAgY29uc3QgY2xlYXJTZWxlY3RlZFdhbGxldEluZm8gPSAoKSA9PiB7XG4gICAgc2V0U2VsZWN0ZWRXYWxsZXRJbmZvKG51bGwpO1xuICAgIHNldFNlbGVjdGVkV2FsbGV0RXJyb3IobnVsbCk7XG4gIH07XG4gIG9uQ2xlYW51cCgoKSA9PiB7XG4gICAgc2V0U2VsZWN0ZWRXYWxsZXRJbmZvKG51bGwpO1xuICAgIHNldFNlbGVjdGVkV2FsbGV0RXJyb3IobnVsbCk7XG4gICAgc2V0SW5mb1RhYihmYWxzZSk7XG4gIH0pO1xuICBvbkNsZWFudXAodW5zdWJzY3JpYmUpO1xuICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KFN0eWxlZE1vZGFsLCB7XG4gICAgZ2V0IG9wZW5lZCgpIHtcbiAgICAgIHJldHVybiBnZXRXYWxsZXRzTW9kYWxJc09wZW5lZCgpO1xuICAgIH0sXG4gICAgZ2V0IGVuYWJsZUFuZHJvaWRCYWNrSGFuZGxlcigpIHtcbiAgICAgIHJldHVybiBhcHBTdGF0ZS5lbmFibGVBbmRyb2lkQmFja0hhbmRsZXI7XG4gICAgfSxcbiAgICBvbkNsb3NlOiAoKSA9PiBvbkNsb3NlKFwiYWN0aW9uLWNhbmNlbGxlZFwiKSxcbiAgICBvbkNsaWNrUXVlc3Rpb246ICgpID0+IHNldEluZm9UYWIoKHYpID0+ICF2KSxcbiAgICBcImRhdGEtdGMtd2FsbGV0cy1tb2RhbC1jb250YWluZXJcIjogXCJ0cnVlXCIsXG4gICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgcmV0dXJuIFtjcmVhdGVDb21wb25lbnQoU2hvdywge1xuICAgICAgICBnZXQgd2hlbigpIHtcbiAgICAgICAgICByZXR1cm4gaW5mb1RhYigpO1xuICAgICAgICB9LFxuICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChJbmZvTW9kYWwsIHtcbiAgICAgICAgICAgIG9uQmFja0NsaWNrOiAoKSA9PiBzZXRJbmZvVGFiKGZhbHNlKVxuICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICB9KSwgY3JlYXRlQ29tcG9uZW50KFNob3csIHtcbiAgICAgICAgZ2V0IHdoZW4oKSB7XG4gICAgICAgICAgcmV0dXJuICFpbmZvVGFiKCk7XG4gICAgICAgIH0sXG4gICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICByZXR1cm4gW2NyZWF0ZUNvbXBvbmVudChTaG93LCB7XG4gICAgICAgICAgICBnZXQgd2hlbigpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIGFkZGl0aW9uYWxSZXF1ZXN0TG9hZGluZygpIHx8ICF3YWxsZXRzTGlzdCgpO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIFtjcmVhdGVDb21wb25lbnQoSDFTdHlsZWQkOCwge1xuICAgICAgICAgICAgICAgIHRyYW5zbGF0aW9uS2V5OiBcIndhbGxldE1vZGFsLmxvYWRpbmdcIixcbiAgICAgICAgICAgICAgICBjaGlsZHJlbjogXCJXYWxsZXRzIGxpc3QgaXMgbG9hZGluZ1wiXG4gICAgICAgICAgICAgIH0pLCBjcmVhdGVDb21wb25lbnQoTG9hZGVyQ29udGFpbmVyU3R5bGVkLCB7XG4gICAgICAgICAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgICAgICAgICAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChMb2FkZXJJY29uLCB7XG4gICAgICAgICAgICAgICAgICAgIHNpemU6IFwibVwiXG4gICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIH0pXTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9KSwgY3JlYXRlQ29tcG9uZW50KFNob3csIHtcbiAgICAgICAgICAgIGdldCB3aGVuKCkge1xuICAgICAgICAgICAgICByZXR1cm4gY3JlYXRlTWVtbygoKSA9PiAhISFhZGRpdGlvbmFsUmVxdWVzdExvYWRpbmcoKSkoKSAmJiB3YWxsZXRzTGlzdCgpO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChTd2l0Y2gsIHtcbiAgICAgICAgICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgICAgICAgICByZXR1cm4gW2NyZWF0ZUNvbXBvbmVudChNYXRjaCwge1xuICAgICAgICAgICAgICAgICAgICBnZXQgd2hlbigpIHtcbiAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gc2VsZWN0ZWRXYWxsZXRJbmZvKCk7XG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KER5bmFtaWMsIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGdldCBjb21wb25lbnQoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBpc01vYmlsZSgpID8gTW9iaWxlQ29ubmVjdGlvbk1vZGFsIDogRGVza3RvcENvbm5lY3Rpb25Nb2RhbDtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICBnZXQgd2FsbGV0KCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gc2VsZWN0ZWRXYWxsZXRJbmZvKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgZ2V0IGFkZGl0aW9uYWxSZXF1ZXN0KCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gYWRkaXRpb25hbFJlcXVlc3QoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICBvbkJhY2tDbGljazogY2xlYXJTZWxlY3RlZFdhbGxldEluZm8sXG4gICAgICAgICAgICAgICAgICAgICAgICBnZXQgZGVmYXVsdEVycm9yKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gc2VsZWN0ZWRXYWxsZXRFcnJvcigpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICB9KSwgY3JlYXRlQ29tcG9uZW50KE1hdGNoLCB7XG4gICAgICAgICAgICAgICAgICAgIGdldCB3aGVuKCkge1xuICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBzZWxlY3RlZFRhYigpID09PSBcInVuaXZlcnNhbFwiO1xuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChEeW5hbWljLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICBnZXQgY29tcG9uZW50KCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gaXNNb2JpbGUoKSA/IE1vYmlsZVVuaXZlcnNhbE1vZGFsIDogRGVza3RvcFVuaXZlcnNhbE1vZGFsO1xuICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgIG9uU2VsZWN0OiBzZXRTZWxlY3RlZFdhbGxldEluZm8sXG4gICAgICAgICAgICAgICAgICAgICAgICBnZXQgd2FsbGV0c0xpc3QoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB3YWxsZXRzTGlzdCgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgIGdldCBhZGRpdGlvbmFsUmVxdWVzdCgpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGFkZGl0aW9uYWxSZXF1ZXN0KCk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgb25TZWxlY3RBbGxXYWxsZXRzXG4gICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgIH0pLCBjcmVhdGVDb21wb25lbnQoTWF0Y2gsIHtcbiAgICAgICAgICAgICAgICAgICAgZ2V0IHdoZW4oKSB7XG4gICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHNlbGVjdGVkVGFiKCkgPT09IFwiYWxsLXdhbGxldHNcIjtcbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoQWxsV2FsbGV0c0xpc3RNb2RhbCwge1xuICAgICAgICAgICAgICAgICAgICAgICAgZ2V0IHdhbGxldHNMaXN0KCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gd2FsbGV0c0xpc3QoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICBvbkJhY2s6IG9uU2VsZWN0VW5pdmVyc2FsLFxuICAgICAgICAgICAgICAgICAgICAgICAgb25TZWxlY3Q6IHNldFNlbGVjdGVkV2FsbGV0SW5mb1xuICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICB9KV07XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9KV07XG4gICAgICAgIH1cbiAgICAgIH0pXTtcbiAgICB9XG4gIH0pO1xufTtcbmNvbnN0IEFjdGlvbk1vZGFsU3R5bGVkID0gc3R5bGVkLmRpdmBcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBwYWRkaW5nLWJvdHRvbTogOHB4O1xuYDtcbmNvbnN0IEgxU3R5bGVkID0gc3R5bGVkKEgxKWBcbiAgICBtYXJnaW4tdG9wOiAxNnB4O1xuYDtcbmNvbnN0IFRleHRTdHlsZWQgPSBzdHlsZWQoVGV4dClgXG4gICAgZm9udC13ZWlnaHQ6IDUxMDtcbiAgICBmb250LXNpemU6IDE2cHg7XG4gICAgbGluZS1oZWlnaHQ6IDIwcHg7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIG1heC13aWR0aDogMjUwcHg7XG5cbiAgICBjb2xvcjogJHsocHJvcHMpID0+IHByb3BzLnRoZW1lLmNvbG9ycy50ZXh0LnNlY29uZGFyeX07XG5gO1xuY29uc3QgTG9hZGVyQnV0dG9uU3R5bGVkID0gc3R5bGVkKEJ1dHRvbilgXG4gICAgbWluLXdpZHRoOiAxMTJweDtcbiAgICBtYXJnaW4tdG9wOiAzMnB4O1xuYDtcbmNvbnN0IExvYWRlckljb25TdHlsZWQgPSBzdHlsZWQoTG9hZGVySWNvbilgXG4gICAgaGVpZ2h0OiAxNnB4O1xuICAgIHdpZHRoOiAxNnB4O1xuYDtcbmNvbnN0IEJ1dHRvblN0eWxlZCA9IHN0eWxlZChCdXR0b24pYFxuICAgIG1hcmdpbi10b3A6IDMycHg7XG5gO1xuY29uc3QgQWN0aW9uTW9kYWwgPSAocHJvcHMpID0+IHtcbiAgY29uc3QgZGF0YUF0dHJzID0gdXNlRGF0YUF0dHJpYnV0ZXMocHJvcHMpO1xuICBjb25zdCB0b25Db25uZWN0VUkgPSB1c2VDb250ZXh0KFRvbkNvbm5lY3RVaUNvbnRleHQpO1xuICBjb25zdCBbZmlyc3RDbGljaywgc2V0Rmlyc3RDbGlja10gPSBjcmVhdGVTaWduYWwodHJ1ZSk7XG4gIGNvbnN0IFtzZW50LCBzZXRTZW50XSA9IGNyZWF0ZVNpZ25hbChmYWxzZSk7XG4gIGNyZWF0ZUVmZmVjdCgoKSA9PiB7XG4gICAgY29uc3QgY3VycmVudEFjdGlvbiA9IGFjdGlvbigpO1xuICAgIHNldFNlbnQoISFjdXJyZW50QWN0aW9uICYmIFwic2VudFwiIGluIGN1cnJlbnRBY3Rpb24gJiYgY3VycmVudEFjdGlvbi5zZW50KTtcbiAgfSk7XG4gIGxldCB1bml2ZXJzYWxMaW5rO1xuICBpZiAoKHRvbkNvbm5lY3RVSSA9PSBudWxsID8gdm9pZCAwIDogdG9uQ29ubmVjdFVJLndhbGxldCkgJiYgXCJ1bml2ZXJzYWxMaW5rXCIgaW4gdG9uQ29ubmVjdFVJLndhbGxldCAmJiAodG9uQ29ubmVjdFVJLndhbGxldC5vcGVuTWV0aG9kID09PSBcInVuaXZlcnNhbC1saW5rXCIgfHwgaXNUZWxlZ3JhbVVybCh0b25Db25uZWN0VUkud2FsbGV0LnVuaXZlcnNhbExpbmspICYmIGlzSW5UTUEoKSkpIHtcbiAgICB1bml2ZXJzYWxMaW5rID0gdG9uQ29ubmVjdFVJLndhbGxldC51bml2ZXJzYWxMaW5rO1xuICB9XG4gIGxldCBkZWVwTGluaztcbiAgaWYgKCh0b25Db25uZWN0VUkgPT0gbnVsbCA/IHZvaWQgMCA6IHRvbkNvbm5lY3RVSS53YWxsZXQpICYmIFwiZGVlcExpbmtcIiBpbiB0b25Db25uZWN0VUkud2FsbGV0ICYmICh0b25Db25uZWN0VUkud2FsbGV0Lm9wZW5NZXRob2QgPT09IFwiY3VzdG9tLWRlZXBsaW5rXCIgfHwgaXNUZWxlZ3JhbVVybCh0b25Db25uZWN0VUkud2FsbGV0LmRlZXBMaW5rKSAmJiBpc0luVE1BKCkpKSB7XG4gICAgZGVlcExpbmsgPSB0b25Db25uZWN0VUkud2FsbGV0LmRlZXBMaW5rO1xuICB9XG4gIGNvbnN0IG9uT3BlbldhbGxldCA9ICgpID0+IHtcbiAgICBjb25zdCBjdXJyZW50QWN0aW9uID0gYWN0aW9uKCk7XG4gICAgY29uc3QgcmV0dXJuU3RyYXRlZ3kgPSBcInJldHVyblN0cmF0ZWd5XCIgaW4gY3VycmVudEFjdGlvbiA/IGN1cnJlbnRBY3Rpb24ucmV0dXJuU3RyYXRlZ3kgOiBhcHBTdGF0ZS5yZXR1cm5TdHJhdGVneTtcbiAgICBjb25zdCBmb3JjZVJlZGlyZWN0ID0gIWZpcnN0Q2xpY2soKTtcbiAgICBzZXRGaXJzdENsaWNrKGZhbHNlKTtcbiAgICBpZiAoaXNUZWxlZ3JhbVVybCh1bml2ZXJzYWxMaW5rKSkge1xuICAgICAgcmVkaXJlY3RUb1RlbGVncmFtKHVuaXZlcnNhbExpbmssIHtcbiAgICAgICAgcmV0dXJuU3RyYXRlZ3ksXG4gICAgICAgIHR3YVJldHVyblVybDogXCJ0d2FSZXR1cm5VcmxcIiBpbiBjdXJyZW50QWN0aW9uID8gY3VycmVudEFjdGlvbi50d2FSZXR1cm5VcmwgOiBhcHBTdGF0ZS50d2FSZXR1cm5VcmwsXG4gICAgICAgIGZvcmNlUmVkaXJlY3RcbiAgICAgIH0pO1xuICAgIH0gZWxzZSB7XG4gICAgICByZWRpcmVjdFRvV2FsbGV0KHVuaXZlcnNhbExpbmssIGRlZXBMaW5rLCB7XG4gICAgICAgIHJldHVyblN0cmF0ZWd5LFxuICAgICAgICBmb3JjZVJlZGlyZWN0XG4gICAgICB9LCAoKSA9PiB7XG4gICAgICB9KTtcbiAgICB9XG4gIH07XG4gIHJldHVybiBjcmVhdGVDb21wb25lbnQoQWN0aW9uTW9kYWxTdHlsZWQsIG1lcmdlUHJvcHMoZGF0YUF0dHJzLCB7XG4gICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgcmV0dXJuIFtjcmVhdGVNZW1vKCgpID0+IHByb3BzLmljb24pLCBjcmVhdGVDb21wb25lbnQoSDFTdHlsZWQsIHtcbiAgICAgICAgZ2V0IHRyYW5zbGF0aW9uS2V5KCkge1xuICAgICAgICAgIHJldHVybiBwcm9wcy5oZWFkZXJUcmFuc2xhdGlvbktleTtcbiAgICAgICAgfSxcbiAgICAgICAgZ2V0IHRyYW5zbGF0aW9uVmFsdWVzKCkge1xuICAgICAgICAgIHJldHVybiBwcm9wcy5oZWFkZXJUcmFuc2xhdGlvblZhbHVlcztcbiAgICAgICAgfVxuICAgICAgfSksIGNyZWF0ZUNvbXBvbmVudChUZXh0U3R5bGVkLCB7XG4gICAgICAgIGdldCB0cmFuc2xhdGlvbktleSgpIHtcbiAgICAgICAgICByZXR1cm4gcHJvcHMudGV4dFRyYW5zbGF0aW9uS2V5O1xuICAgICAgICB9LFxuICAgICAgICBnZXQgdHJhbnNsYXRpb25WYWx1ZXMoKSB7XG4gICAgICAgICAgcmV0dXJuIHByb3BzLnRleHRUcmFuc2xhdGlvblZhbHVlcztcbiAgICAgICAgfVxuICAgICAgfSksIGNyZWF0ZUNvbXBvbmVudChTaG93LCB7XG4gICAgICAgIGdldCB3aGVuKCkge1xuICAgICAgICAgIHJldHVybiAhc2VudCgpICYmIChwcm9wcy5zaG93QnV0dG9uID09PSBcIm9wZW4td2FsbGV0XCIgJiYgdW5pdmVyc2FsTGluayB8fCBwcm9wcy5zaG93QnV0dG9uICE9PSBcIm9wZW4td2FsbGV0XCIpO1xuICAgICAgICB9LFxuICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChMb2FkZXJCdXR0b25TdHlsZWQsIHtcbiAgICAgICAgICAgIGRpc2FibGVkOiB0cnVlLFxuICAgICAgICAgICAgXCJkYXRhLXRjLWNvbm5lY3QtYnV0dG9uLWxvYWRpbmdcIjogXCJ0cnVlXCIsXG4gICAgICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoTG9hZGVySWNvblN0eWxlZCwge30pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICB9KSwgY3JlYXRlQ29tcG9uZW50KFNob3csIHtcbiAgICAgICAgZ2V0IHdoZW4oKSB7XG4gICAgICAgICAgcmV0dXJuIHNlbnQoKTtcbiAgICAgICAgfSxcbiAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgIHJldHVybiBbY3JlYXRlQ29tcG9uZW50KFNob3csIHtcbiAgICAgICAgICAgIGdldCB3aGVuKCkge1xuICAgICAgICAgICAgICByZXR1cm4gcHJvcHMuc2hvd0J1dHRvbiAhPT0gXCJvcGVuLXdhbGxldFwiO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChCdXR0b25TdHlsZWQsIHtcbiAgICAgICAgICAgICAgICBvbkNsaWNrOiAoKSA9PiBwcm9wcy5vbkNsb3NlKCksXG4gICAgICAgICAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgICAgICAgICAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChUcmFuc2xhdGlvbiwge1xuICAgICAgICAgICAgICAgICAgICB0cmFuc2xhdGlvbktleTogXCJjb21tb24uY2xvc2VcIixcbiAgICAgICAgICAgICAgICAgICAgY2hpbGRyZW46IFwiQ2xvc2VcIlxuICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9KSwgY3JlYXRlQ29tcG9uZW50KFNob3csIHtcbiAgICAgICAgICAgIGdldCB3aGVuKCkge1xuICAgICAgICAgICAgICByZXR1cm4gcHJvcHMuc2hvd0J1dHRvbiA9PT0gXCJvcGVuLXdhbGxldFwiICYmIHVuaXZlcnNhbExpbms7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgICAgICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KEJ1dHRvblN0eWxlZCwge1xuICAgICAgICAgICAgICAgIG9uQ2xpY2s6IG9uT3BlbldhbGxldCxcbiAgICAgICAgICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgICAgICAgICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KFRyYW5zbGF0aW9uLCB7XG4gICAgICAgICAgICAgICAgICAgIHRyYW5zbGF0aW9uS2V5OiBcImNvbW1vbi5vcGVuV2FsbGV0XCIsXG4gICAgICAgICAgICAgICAgICAgIGNoaWxkcmVuOiBcIk9wZW4gd2FsbGV0XCJcbiAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSldO1xuICAgICAgICB9XG4gICAgICB9KV07XG4gICAgfVxuICB9KSk7XG59O1xuY29uc3QgQ29uZmlybVRyYW5zYWN0aW9uTW9kYWwgPSAocHJvcHMpID0+IHtcbiAgY29uc3QgdG9uQ29ubmVjdFVJID0gdXNlQ29udGV4dChUb25Db25uZWN0VWlDb250ZXh0KTtcbiAgY29uc3QgW3QyXSA9IHVzZUkxOG4oKTtcbiAgY29uc3QgbmFtZSA9ICgpID0+IHRvbkNvbm5lY3RVSS53YWxsZXQgJiYgXCJuYW1lXCIgaW4gdG9uQ29ubmVjdFVJLndhbGxldCA/IHRvbkNvbm5lY3RVSS53YWxsZXQubmFtZSA6IHQyKFwiY29tbW9uLnlvdXJXYWxsZXRcIiwge30sIFwiWW91ciB3YWxsZXRcIik7XG4gIHJldHVybiBjcmVhdGVDb21wb25lbnQoQWN0aW9uTW9kYWwsIHtcbiAgICBoZWFkZXJUcmFuc2xhdGlvbktleTogXCJhY3Rpb25Nb2RhbC5jb25maXJtVHJhbnNhY3Rpb24uaGVhZGVyXCIsXG4gICAgZ2V0IGhlYWRlclRyYW5zbGF0aW9uVmFsdWVzKCkge1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgbmFtZTogbmFtZSgpXG4gICAgICB9O1xuICAgIH0sXG4gICAgdGV4dFRyYW5zbGF0aW9uS2V5OiBcImFjdGlvbk1vZGFsLmNvbmZpcm1UcmFuc2FjdGlvbi50ZXh0XCIsXG4gICAgZ2V0IGljb24oKSB7XG4gICAgICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KExvYWRlckljb24sIHtcbiAgICAgICAgc2l6ZTogXCJtXCJcbiAgICAgIH0pO1xuICAgIH0sXG4gICAgb25DbG9zZTogKCkgPT4gcHJvcHMub25DbG9zZSgpLFxuICAgIHNob3dCdXR0b246IFwib3Blbi13YWxsZXRcIixcbiAgICBcImRhdGEtdGMtY29uZmlybS1tb2RhbFwiOiBcInRydWVcIlxuICB9KTtcbn07XG5jb25zdCBUcmFuc2FjdGlvbkNhbmNlbGVkTW9kYWwgPSAocHJvcHMpID0+IHtcbiAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChBY3Rpb25Nb2RhbCwge1xuICAgIGhlYWRlclRyYW5zbGF0aW9uS2V5OiBcImFjdGlvbk1vZGFsLnRyYW5zYWN0aW9uQ2FuY2VsZWQuaGVhZGVyXCIsXG4gICAgdGV4dFRyYW5zbGF0aW9uS2V5OiBcImFjdGlvbk1vZGFsLnRyYW5zYWN0aW9uQ2FuY2VsZWQudGV4dFwiLFxuICAgIGdldCBpY29uKCkge1xuICAgICAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChFcnJvckljb24sIHtcbiAgICAgICAgc2l6ZTogXCJtXCJcbiAgICAgIH0pO1xuICAgIH0sXG4gICAgb25DbG9zZTogKCkgPT4gcHJvcHMub25DbG9zZSgpLFxuICAgIFwiZGF0YS10Yy10cmFuc2FjdGlvbi1jYW5jZWxlZC1tb2RhbFwiOiBcInRydWVcIlxuICB9KTtcbn07XG5jb25zdCBUcmFuc2FjdGlvblNlbnRNb2RhbCA9IChwcm9wcykgPT4ge1xuICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KEFjdGlvbk1vZGFsLCB7XG4gICAgaGVhZGVyVHJhbnNsYXRpb25LZXk6IFwiYWN0aW9uTW9kYWwudHJhbnNhY3Rpb25TZW50LmhlYWRlclwiLFxuICAgIHRleHRUcmFuc2xhdGlvbktleTogXCJhY3Rpb25Nb2RhbC50cmFuc2FjdGlvblNlbnQudGV4dFwiLFxuICAgIGdldCBpY29uKCkge1xuICAgICAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChTdWNjZXNzSWNvbiwge1xuICAgICAgICBzaXplOiBcIm1cIlxuICAgICAgfSk7XG4gICAgfSxcbiAgICBvbkNsb3NlOiAoKSA9PiBwcm9wcy5vbkNsb3NlKCksXG4gICAgXCJkYXRhLXRjLXRyYW5zYWN0aW9uLXNlbnQtbW9kYWxcIjogXCJ0cnVlXCJcbiAgfSk7XG59O1xuY29uc3QgQWN0aW9uc01vZGFsID0gKCkgPT4ge1xuICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KE1vZGFsLCB7XG4gICAgZ2V0IG9wZW5lZCgpIHtcbiAgICAgIHZhciBfYTI7XG4gICAgICByZXR1cm4gY3JlYXRlTWVtbygoKSA9PiBhY3Rpb24oKSAhPT0gbnVsbCkoKSAmJiAoKF9hMiA9IGFjdGlvbigpKSA9PSBudWxsID8gdm9pZCAwIDogX2EyLm9wZW5Nb2RhbCkgPT09IHRydWU7XG4gICAgfSxcbiAgICBnZXQgZW5hYmxlQW5kcm9pZEJhY2tIYW5kbGVyKCkge1xuICAgICAgcmV0dXJuIGFwcFN0YXRlLmVuYWJsZUFuZHJvaWRCYWNrSGFuZGxlcjtcbiAgICB9LFxuICAgIG9uQ2xvc2U6ICgpID0+IHNldEFjdGlvbihudWxsKSxcbiAgICBcImRhdGEtdGMtYWN0aW9ucy1tb2RhbC1jb250YWluZXJcIjogXCJ0cnVlXCIsXG4gICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChTd2l0Y2gsIHtcbiAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgIHJldHVybiBbY3JlYXRlQ29tcG9uZW50KE1hdGNoLCB7XG4gICAgICAgICAgICBnZXQgd2hlbigpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIGFjdGlvbigpLm5hbWUgPT09IFwidHJhbnNhY3Rpb24tc2VudFwiO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChUcmFuc2FjdGlvblNlbnRNb2RhbCwge1xuICAgICAgICAgICAgICAgIG9uQ2xvc2U6ICgpID0+IHNldEFjdGlvbihudWxsKVxuICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9KSwgY3JlYXRlQ29tcG9uZW50KE1hdGNoLCB7XG4gICAgICAgICAgICBnZXQgd2hlbigpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIGFjdGlvbigpLm5hbWUgPT09IFwidHJhbnNhY3Rpb24tY2FuY2VsZWRcIjtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoVHJhbnNhY3Rpb25DYW5jZWxlZE1vZGFsLCB7XG4gICAgICAgICAgICAgICAgb25DbG9zZTogKCkgPT4gc2V0QWN0aW9uKG51bGwpXG4gICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH0pLCBjcmVhdGVDb21wb25lbnQoTWF0Y2gsIHtcbiAgICAgICAgICAgIGdldCB3aGVuKCkge1xuICAgICAgICAgICAgICByZXR1cm4gYWN0aW9uKCkubmFtZSA9PT0gXCJjb25maXJtLXRyYW5zYWN0aW9uXCI7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgICAgICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KENvbmZpcm1UcmFuc2FjdGlvbk1vZGFsLCB7XG4gICAgICAgICAgICAgICAgb25DbG9zZTogKCkgPT4gc2V0QWN0aW9uKG51bGwpXG4gICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH0pXTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfVxuICB9KTtcbn07XG5jb25zdCBTaW5nbGVXYWxsZXRNb2RhbCA9ICgpID0+IHtcbiAgY29uc3Qge1xuICAgIGxvY2FsZVxuICB9ID0gdXNlSTE4bigpWzFdO1xuICBjcmVhdGVFZmZlY3QoKCkgPT4gbG9jYWxlKGFwcFN0YXRlLmxhbmd1YWdlKSk7XG4gIGNyZWF0ZUVmZmVjdCgoKSA9PiB7XG4gICAgaWYgKGdldFNpbmdsZVdhbGxldE1vZGFsSXNPcGVuZWQoKSkge1xuICAgICAgdXBkYXRlSXNNb2JpbGUoKTtcbiAgICB9XG4gIH0pO1xuICBjb25zdCBjb25uZWN0b3IgPSB1c2VDb250ZXh0KENvbm5lY3RvckNvbnRleHQpO1xuICBjb25zdCB0b25Db25uZWN0VUkgPSB1c2VDb250ZXh0KFRvbkNvbm5lY3RVaUNvbnRleHQpO1xuICBjb25zdCBbaW5mb1RhYiwgc2V0SW5mb1RhYl0gPSBjcmVhdGVTaWduYWwoZmFsc2UpO1xuICBjb25zdCBhZGRpdGlvbmFsUmVxdWVzdExvYWRpbmcgPSAoKSA9PiB7XG4gICAgdmFyIF9hMjtcbiAgICByZXR1cm4gKChfYTIgPSBhcHBTdGF0ZS5jb25uZWN0UmVxdWVzdFBhcmFtZXRlcnMpID09IG51bGwgPyB2b2lkIDAgOiBfYTIuc3RhdGUpID09PSBcImxvYWRpbmdcIjtcbiAgfTtcbiAgY29uc3QgYWRkaXRpb25hbFJlcXVlc3QgPSBjcmVhdGVNZW1vKCgpID0+IHtcbiAgICB2YXIgX2EyO1xuICAgIGlmIChhZGRpdGlvbmFsUmVxdWVzdExvYWRpbmcoKSkge1xuICAgICAgcmV0dXJuIHZvaWQgMDtcbiAgICB9XG4gICAgcmV0dXJuIChfYTIgPSBhcHBTdGF0ZS5jb25uZWN0UmVxdWVzdFBhcmFtZXRlcnMpID09IG51bGwgPyB2b2lkIDAgOiBfYTIudmFsdWU7XG4gIH0pO1xuICBjb25zdCBvbkNsb3NlID0gKGNsb3NlUmVhc29uKSA9PiB7XG4gICAgdG9uQ29ubmVjdFVJLmNsb3NlU2luZ2xlV2FsbGV0TW9kYWwoY2xvc2VSZWFzb24pO1xuICB9O1xuICBjb25zdCB1bnN1YnNjcmliZSA9IGNvbm5lY3Rvci5vblN0YXR1c0NoYW5nZSgod2FsbGV0KSA9PiB7XG4gICAgaWYgKHdhbGxldCkge1xuICAgICAgb25DbG9zZShcIndhbGxldC1zZWxlY3RlZFwiKTtcbiAgICB9XG4gIH0pO1xuICBvbkNsZWFudXAodW5zdWJzY3JpYmUpO1xuICBvbkNsZWFudXAoKCkgPT4ge1xuICAgIHNldEluZm9UYWIoZmFsc2UpO1xuICB9KTtcbiAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChTdHlsZWRNb2RhbCwge1xuICAgIGdldCBvcGVuZWQoKSB7XG4gICAgICByZXR1cm4gZ2V0U2luZ2xlV2FsbGV0TW9kYWxJc09wZW5lZCgpO1xuICAgIH0sXG4gICAgZ2V0IGVuYWJsZUFuZHJvaWRCYWNrSGFuZGxlcigpIHtcbiAgICAgIHJldHVybiBhcHBTdGF0ZS5lbmFibGVBbmRyb2lkQmFja0hhbmRsZXI7XG4gICAgfSxcbiAgICBvbkNsb3NlOiAoKSA9PiBvbkNsb3NlKFwiYWN0aW9uLWNhbmNlbGxlZFwiKSxcbiAgICBvbkNsaWNrUXVlc3Rpb246ICgpID0+IHNldEluZm9UYWIoKHYpID0+ICF2KSxcbiAgICBcImRhdGEtdGMtd2FsbGV0cy1tb2RhbC1jb250YWluZXJcIjogXCJ0cnVlXCIsXG4gICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgcmV0dXJuIFtjcmVhdGVDb21wb25lbnQoU2hvdywge1xuICAgICAgICBnZXQgd2hlbigpIHtcbiAgICAgICAgICByZXR1cm4gaW5mb1RhYigpO1xuICAgICAgICB9LFxuICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChJbmZvTW9kYWwsIHtcbiAgICAgICAgICAgIG9uQmFja0NsaWNrOiAoKSA9PiBzZXRJbmZvVGFiKGZhbHNlKVxuICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICB9KSwgY3JlYXRlQ29tcG9uZW50KFNob3csIHtcbiAgICAgICAgZ2V0IHdoZW4oKSB7XG4gICAgICAgICAgcmV0dXJuICFpbmZvVGFiKCk7XG4gICAgICAgIH0sXG4gICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICByZXR1cm4gW2NyZWF0ZUNvbXBvbmVudChTaG93LCB7XG4gICAgICAgICAgICBnZXQgd2hlbigpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIGFkZGl0aW9uYWxSZXF1ZXN0TG9hZGluZygpO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIFtjcmVhdGVDb21wb25lbnQoSDFTdHlsZWQkOCwge1xuICAgICAgICAgICAgICAgIHRyYW5zbGF0aW9uS2V5OiBcIndhbGxldE1vZGFsLmxvYWRpbmdcIixcbiAgICAgICAgICAgICAgICBjaGlsZHJlbjogXCJXYWxsZXRzIGxpc3QgaXMgbG9hZGluZ1wiXG4gICAgICAgICAgICAgIH0pLCBjcmVhdGVDb21wb25lbnQoTG9hZGVyQ29udGFpbmVyU3R5bGVkLCB7XG4gICAgICAgICAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgICAgICAgICAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChMb2FkZXJJY29uLCB7XG4gICAgICAgICAgICAgICAgICAgIHNpemU6IFwibVwiXG4gICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIH0pXTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9KSwgY3JlYXRlQ29tcG9uZW50KFNob3csIHtcbiAgICAgICAgICAgIGdldCB3aGVuKCkge1xuICAgICAgICAgICAgICByZXR1cm4gIWFkZGl0aW9uYWxSZXF1ZXN0TG9hZGluZygpO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChEeW5hbWljLCB7XG4gICAgICAgICAgICAgICAgZ2V0IGNvbXBvbmVudCgpIHtcbiAgICAgICAgICAgICAgICAgIHJldHVybiBpc01vYmlsZSgpID8gTW9iaWxlQ29ubmVjdGlvbk1vZGFsIDogRGVza3RvcENvbm5lY3Rpb25Nb2RhbDtcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGdldCB3YWxsZXQoKSB7XG4gICAgICAgICAgICAgICAgICByZXR1cm4gZ2V0U2luZ2xlV2FsbGV0TW9kYWxXYWxsZXRJbmZvKCk7XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBnZXQgYWRkaXRpb25hbFJlcXVlc3QoKSB7XG4gICAgICAgICAgICAgICAgICByZXR1cm4gYWRkaXRpb25hbFJlcXVlc3QoKTtcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIG9uQmFja0NsaWNrOiAoKSA9PiB7XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBiYWNrRGlzYWJsZWQ6IHRydWVcbiAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSldO1xuICAgICAgICB9XG4gICAgICB9KV07XG4gICAgfVxuICB9KTtcbn07XG5jb25zdCBBcHAgPSAocHJvcHMpID0+IHtcbiAgY29uc3QgdHJhbnNsYXRpb25zID0gY3JlYXRlSTE4bkNvbnRleHQoaTE4bkRpY3Rpb25hcnksIGFwcFN0YXRlLmxhbmd1YWdlKTtcbiAgZGVmaW5lU3R5bGVzUm9vdCgpO1xuICBmaXhNb2JpbGVTYWZhcmlBY3RpdmVUcmFuc2l0aW9uKCk7XG4gIHJldHVybiBjcmVhdGVDb21wb25lbnQoSTE4bkNvbnRleHQuUHJvdmlkZXIsIHtcbiAgICB2YWx1ZTogdHJhbnNsYXRpb25zLFxuICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoVG9uQ29ubmVjdFVpQ29udGV4dC5Qcm92aWRlciwge1xuICAgICAgICBnZXQgdmFsdWUoKSB7XG4gICAgICAgICAgcmV0dXJuIHByb3BzLnRvbkNvbm5lY3RVSTtcbiAgICAgICAgfSxcbiAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgIHJldHVybiBjcmVhdGVDb21wb25lbnQoQ29ubmVjdG9yQ29udGV4dC5Qcm92aWRlciwge1xuICAgICAgICAgICAgZ2V0IHZhbHVlKCkge1xuICAgICAgICAgICAgICByZXR1cm4gYXBwU3RhdGUuY29ubmVjdG9yO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGdldCBjaGlsZHJlbigpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIFtjcmVhdGVDb21wb25lbnQoR2xvYmFsU3R5bGVzLCB7fSksIGNyZWF0ZUNvbXBvbmVudChUaGVtZVByb3ZpZGVyLCB7XG4gICAgICAgICAgICAgICAgdGhlbWU6IHRoZW1lU3RhdGUsXG4gICAgICAgICAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgICAgICAgICAgcmV0dXJuIFtjcmVhdGVDb21wb25lbnQoU2hvdywge1xuICAgICAgICAgICAgICAgICAgICBnZXQgd2hlbigpIHtcbiAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gYXBwU3RhdGUuYnV0dG9uUm9vdElkO1xuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGNyZWF0ZUNvbXBvbmVudChQb3J0YWwsIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGdldCBtb3VudCgpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGFwcFN0YXRlLmJ1dHRvblJvb3RJZCk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgZ2V0IGNoaWxkcmVuKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gY3JlYXRlQ29tcG9uZW50KEFjY291bnRCdXR0b24sIHt9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgfSksIGNyZWF0ZUNvbXBvbmVudChEeW5hbWljLCB7XG4gICAgICAgICAgICAgICAgICAgIGNvbXBvbmVudDogZ2xvYmFsU3R5bGVzVGFnLFxuICAgICAgICAgICAgICAgICAgICBnZXQgY2hpbGRyZW4oKSB7XG4gICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFtjcmVhdGVDb21wb25lbnQoV2FsbGV0c01vZGFsLCB7fSksIGNyZWF0ZUNvbXBvbmVudChTaW5nbGVXYWxsZXRNb2RhbCwge30pLCBjcmVhdGVDb21wb25lbnQoQWN0aW9uc01vZGFsLCB7fSldO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICB9KV07XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICB9KV07XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH1cbiAgfSk7XG59O1xuY29uc3Qgd2lkZ2V0Q29udHJvbGxlciA9IHtcbiAgb3BlbldhbGxldHNNb2RhbDogKCkgPT4gdm9pZCBzZXRUaW1lb3V0KCgpID0+IHNldFdhbGxldHNNb2RhbFN0YXRlKHtcbiAgICBzdGF0dXM6IFwib3BlbmVkXCIsXG4gICAgY2xvc2VSZWFzb246IG51bGxcbiAgfSkpLFxuICBjbG9zZVdhbGxldHNNb2RhbDogKHJlYXNvbikgPT4gdm9pZCBzZXRUaW1lb3V0KCgpID0+IHNldFdhbGxldHNNb2RhbFN0YXRlKHtcbiAgICBzdGF0dXM6IFwiY2xvc2VkXCIsXG4gICAgY2xvc2VSZWFzb246IHJlYXNvblxuICB9KSksXG4gIG9wZW5TaW5nbGVXYWxsZXRNb2RhbDogKHdhbGxldEluZm8pID0+IHtcbiAgICB2b2lkIHNldFRpbWVvdXQoKCkgPT4gc2V0U2luZ2xlV2FsbGV0TW9kYWxTdGF0ZSh7XG4gICAgICBzdGF0dXM6IFwib3BlbmVkXCIsXG4gICAgICBjbG9zZVJlYXNvbjogbnVsbCxcbiAgICAgIHdhbGxldEluZm9cbiAgICB9KSk7XG4gIH0sXG4gIGNsb3NlU2luZ2xlV2FsbGV0TW9kYWw6IChyZWFzb24pID0+IHZvaWQgc2V0VGltZW91dCgoKSA9PiBzZXRTaW5nbGVXYWxsZXRNb2RhbFN0YXRlKHtcbiAgICBzdGF0dXM6IFwiY2xvc2VkXCIsXG4gICAgY2xvc2VSZWFzb246IHJlYXNvblxuICB9KSksXG4gIHNldEFjdGlvbjogKGFjdGlvbjIpID0+IHZvaWQgc2V0VGltZW91dCgoKSA9PiBzZXRBY3Rpb24oYWN0aW9uMikpLFxuICBjbGVhckFjdGlvbjogKCkgPT4gdm9pZCBzZXRUaW1lb3V0KCgpID0+IHNldEFjdGlvbihudWxsKSksXG4gIGdldFNlbGVjdGVkV2FsbGV0SW5mbzogKCkgPT4gbGFzdFNlbGVjdGVkV2FsbGV0SW5mbygpLFxuICByZW1vdmVTZWxlY3RlZFdhbGxldEluZm86ICgpID0+IHNldExhc3RTZWxlY3RlZFdhbGxldEluZm8obnVsbCksXG4gIHJlbmRlckFwcDogKHJvb3QsIHRvbkNvbm5lY3RVSSkgPT4gcmVuZGVyKCgpID0+IGNyZWF0ZUNvbXBvbmVudChBcHAsIHtcbiAgICB0b25Db25uZWN0VUlcbiAgfSksIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKHJvb3QpKVxufTtcbmNsYXNzIFdhbGxldHNNb2RhbE1hbmFnZXIge1xuICBjb25zdHJ1Y3RvcihvcHRpb25zKSB7XG4gICAgX19wdWJsaWNGaWVsZCh0aGlzLCBcImNvbm5lY3RvclwiKTtcbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwic2V0Q29ubmVjdFJlcXVlc3RQYXJhbWV0ZXJzQ2FsbGJhY2tcIik7XG4gICAgX19wdWJsaWNGaWVsZCh0aGlzLCBcImNvbnN1bWVyc1wiLCBbXSk7XG4gICAgX19wdWJsaWNGaWVsZCh0aGlzLCBcInRyYWNrZXJcIik7XG4gICAgX19wdWJsaWNGaWVsZCh0aGlzLCBcInN0YXRlXCIsIHdhbGxldHNNb2RhbFN0YXRlKCkpO1xuICAgIHRoaXMuY29ubmVjdG9yID0gb3B0aW9ucy5jb25uZWN0b3I7XG4gICAgdGhpcy50cmFja2VyID0gb3B0aW9ucy50cmFja2VyO1xuICAgIHRoaXMuc2V0Q29ubmVjdFJlcXVlc3RQYXJhbWV0ZXJzQ2FsbGJhY2sgPSBvcHRpb25zLnNldENvbm5lY3RSZXF1ZXN0UGFyYW1ldGVyc0NhbGxiYWNrO1xuICAgIGNyZWF0ZUVmZmVjdCgoKSA9PiB7XG4gICAgICBjb25zdCBzdGF0ZSA9IHdhbGxldHNNb2RhbFN0YXRlKCk7XG4gICAgICB0aGlzLnN0YXRlID0gc3RhdGU7XG4gICAgICB0aGlzLmNvbnN1bWVycy5mb3JFYWNoKChjb25zdW1lcikgPT4gY29uc3VtZXIoc3RhdGUpKTtcbiAgICB9KTtcbiAgfVxuICBvcGVuKCkge1xuICAgIHJldHVybiBfX2FzeW5jKHRoaXMsIG51bGwsIGZ1bmN0aW9uKiAoKSB7XG4gICAgICB0aGlzLnRyYWNrZXIudHJhY2tDb25uZWN0aW9uU3RhcnRlZCgpO1xuICAgICAgY29uc3Qgd2FsbGV0c0xpc3QgPSB5aWVsZCB0aGlzLmNvbm5lY3Rvci5nZXRXYWxsZXRzKCk7XG4gICAgICBjb25zdCBlbWJlZGRlZFdhbGxldCA9IHdhbGxldHNMaXN0LmZpbmQoaXNXYWxsZXRJbmZvQ3VycmVudGx5RW1iZWRkZWQpO1xuICAgICAgaWYgKGVtYmVkZGVkV2FsbGV0KSB7XG4gICAgICAgIHJldHVybiB0aGlzLmNvbm5lY3RFbWJlZGRlZFdhbGxldChlbWJlZGRlZFdhbGxldCk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICByZXR1cm4gdGhpcy5vcGVuV2FsbGV0c01vZGFsKCk7XG4gICAgICB9XG4gICAgfSk7XG4gIH1cbiAgY2xvc2UocmVhc29uID0gXCJhY3Rpb24tY2FuY2VsbGVkXCIpIHtcbiAgICBpZiAocmVhc29uID09PSBcImFjdGlvbi1jYW5jZWxsZWRcIikge1xuICAgICAgdGhpcy50cmFja2VyLnRyYWNrQ29ubmVjdGlvbkVycm9yKFwiQ29ubmVjdGlvbiB3YXMgY2FuY2VsbGVkXCIpO1xuICAgIH1cbiAgICB3aWRnZXRDb250cm9sbGVyLmNsb3NlV2FsbGV0c01vZGFsKHJlYXNvbik7XG4gIH1cbiAgb25TdGF0ZUNoYW5nZShvbkNoYW5nZSkge1xuICAgIHRoaXMuY29uc3VtZXJzLnB1c2gob25DaGFuZ2UpO1xuICAgIHJldHVybiAoKSA9PiB7XG4gICAgICB0aGlzLmNvbnN1bWVycyA9IHRoaXMuY29uc3VtZXJzLmZpbHRlcigoY29uc3VtZXIpID0+IGNvbnN1bWVyICE9PSBvbkNoYW5nZSk7XG4gICAgfTtcbiAgfVxuICBjb25uZWN0RW1iZWRkZWRXYWxsZXQoZW1iZWRkZWRXYWxsZXQpIHtcbiAgICBjb25zdCBjb25uZWN0ID0gKHBhcmFtZXRlcnMpID0+IHtcbiAgICAgIHNldExhc3RTZWxlY3RlZFdhbGxldEluZm8oZW1iZWRkZWRXYWxsZXQpO1xuICAgICAgdGhpcy5jb25uZWN0b3IuY29ubmVjdCh7IGpzQnJpZGdlS2V5OiBlbWJlZGRlZFdhbGxldC5qc0JyaWRnZUtleSB9LCBwYXJhbWV0ZXJzKTtcbiAgICB9O1xuICAgIGNvbnN0IGFkZGl0aW9uYWxSZXF1ZXN0ID0gYXBwU3RhdGUuY29ubmVjdFJlcXVlc3RQYXJhbWV0ZXJzO1xuICAgIGlmICgoYWRkaXRpb25hbFJlcXVlc3QgPT0gbnVsbCA/IHZvaWQgMCA6IGFkZGl0aW9uYWxSZXF1ZXN0LnN0YXRlKSA9PT0gXCJsb2FkaW5nXCIpIHtcbiAgICAgIHRoaXMuc2V0Q29ubmVjdFJlcXVlc3RQYXJhbWV0ZXJzQ2FsbGJhY2soY29ubmVjdCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGNvbm5lY3QoYWRkaXRpb25hbFJlcXVlc3QgPT0gbnVsbCA/IHZvaWQgMCA6IGFkZGl0aW9uYWxSZXF1ZXN0LnZhbHVlKTtcbiAgICB9XG4gIH1cbiAgb3BlbldhbGxldHNNb2RhbCgpIHtcbiAgICByZXR1cm4gX19hc3luYyh0aGlzLCBudWxsLCBmdW5jdGlvbiogKCkge1xuICAgICAgaWYgKGlzSW5UTUEoKSkge1xuICAgICAgICBzZW5kRXhwYW5kKCk7XG4gICAgICB9XG4gICAgICB3aWRnZXRDb250cm9sbGVyLm9wZW5XYWxsZXRzTW9kYWwoKTtcbiAgICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4ge1xuICAgICAgICBjb25zdCB1bnN1YnNjcmliZSA9IHRoaXMub25TdGF0ZUNoYW5nZSgoc3RhdGUpID0+IHtcbiAgICAgICAgICBjb25zdCB7IHN0YXR1cyB9ID0gc3RhdGU7XG4gICAgICAgICAgaWYgKHN0YXR1cyA9PT0gXCJvcGVuZWRcIikge1xuICAgICAgICAgICAgdW5zdWJzY3JpYmUoKTtcbiAgICAgICAgICAgIHJlc29sdmUoKTtcbiAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgfSk7XG4gICAgfSk7XG4gIH1cbn1cbmNsYXNzIFRyYW5zYWN0aW9uTW9kYWxNYW5hZ2VyIHtcbiAgY29uc3RydWN0b3Iob3B0aW9ucykge1xuICAgIF9fcHVibGljRmllbGQodGhpcywgXCJjb25uZWN0b3JcIik7XG4gICAgX19wdWJsaWNGaWVsZCh0aGlzLCBcImNvbnN1bWVyc1wiLCBbXSk7XG4gICAgdGhpcy5jb25uZWN0b3IgPSBvcHRpb25zLmNvbm5lY3RvcjtcbiAgICBjcmVhdGVFZmZlY3QoKCkgPT4ge1xuICAgICAgY29uc3QgY3VycmVudEFjdGlvbiA9IGFjdGlvbigpO1xuICAgICAgdGhpcy5jb25zdW1lcnMuZm9yRWFjaCgoY29uc3VtZXIpID0+IGNvbnN1bWVyKGN1cnJlbnRBY3Rpb24pKTtcbiAgICB9KTtcbiAgfVxuICBvblN0YXRlQ2hhbmdlKGNvbnN1bWVyKSB7XG4gICAgdGhpcy5jb25zdW1lcnMucHVzaChjb25zdW1lcik7XG4gICAgcmV0dXJuICgpID0+IHtcbiAgICAgIHRoaXMuY29uc3VtZXJzID0gdGhpcy5jb25zdW1lcnMuZmlsdGVyKChjMikgPT4gYzIgIT09IGNvbnN1bWVyKTtcbiAgICB9O1xuICB9XG59XG5jbGFzcyBTaW5nbGVXYWxsZXRNb2RhbE1hbmFnZXIge1xuICBjb25zdHJ1Y3RvcihvcHRpb25zKSB7XG4gICAgX19wdWJsaWNGaWVsZCh0aGlzLCBcImNvbm5lY3RvclwiKTtcbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwic2V0Q29ubmVjdFJlcXVlc3RQYXJhbWV0ZXJzQ2FsbGJhY2tcIik7XG4gICAgX19wdWJsaWNGaWVsZCh0aGlzLCBcImNvbnN1bWVyc1wiLCBbXSk7XG4gICAgX19wdWJsaWNGaWVsZCh0aGlzLCBcInRyYWNrZXJcIik7XG4gICAgX19wdWJsaWNGaWVsZCh0aGlzLCBcInN0YXRlXCIsIHNpbmdsZVdhbGxldE1vZGFsU3RhdGUoKSk7XG4gICAgdGhpcy5jb25uZWN0b3IgPSBvcHRpb25zLmNvbm5lY3RvcjtcbiAgICB0aGlzLnRyYWNrZXIgPSBvcHRpb25zLnRyYWNrZXI7XG4gICAgdGhpcy5zZXRDb25uZWN0UmVxdWVzdFBhcmFtZXRlcnNDYWxsYmFjayA9IG9wdGlvbnMuc2V0Q29ubmVjdFJlcXVlc3RQYXJhbWV0ZXJzQ2FsbGJhY2s7XG4gICAgY3JlYXRlRWZmZWN0KCgpID0+IHtcbiAgICAgIGNvbnN0IHN0YXRlID0gc2luZ2xlV2FsbGV0TW9kYWxTdGF0ZSgpO1xuICAgICAgdGhpcy5zdGF0ZSA9IHN0YXRlO1xuICAgICAgdGhpcy5jb25zdW1lcnMuZm9yRWFjaCgoY29uc3VtZXIpID0+IGNvbnN1bWVyKHN0YXRlKSk7XG4gICAgfSk7XG4gIH1cbiAgb3Blbih3YWxsZXQpIHtcbiAgICByZXR1cm4gX19hc3luYyh0aGlzLCBudWxsLCBmdW5jdGlvbiogKCkge1xuICAgICAgdGhpcy50cmFja2VyLnRyYWNrQ29ubmVjdGlvblN0YXJ0ZWQoKTtcbiAgICAgIGNvbnN0IGZldGNoZWRXYWxsZXRzTGlzdCA9IHlpZWxkIHRoaXMuY29ubmVjdG9yLmdldFdhbGxldHMoKTtcbiAgICAgIGNvbnN0IHdhbGxldHNMaXN0ID0gYXBwbHlXYWxsZXRzTGlzdENvbmZpZ3VyYXRpb24oXG4gICAgICAgIGZldGNoZWRXYWxsZXRzTGlzdCxcbiAgICAgICAgYXBwU3RhdGUud2FsbGV0c0xpc3RDb25maWd1cmF0aW9uXG4gICAgICApO1xuICAgICAgY29uc3QgZW1iZWRkZWRXYWxsZXQgPSB3YWxsZXRzTGlzdC5maW5kKGlzV2FsbGV0SW5mb0N1cnJlbnRseUVtYmVkZGVkKTtcbiAgICAgIGNvbnN0IGlzRW1iZWRkZWRXYWxsZXRFeGlzdCA9ICEhZW1iZWRkZWRXYWxsZXQ7XG4gICAgICBpZiAoaXNFbWJlZGRlZFdhbGxldEV4aXN0KSB7XG4gICAgICAgIHJldHVybiB0aGlzLmNvbm5lY3RFbWJlZGRlZFdhbGxldChlbWJlZGRlZFdhbGxldCk7XG4gICAgICB9XG4gICAgICBjb25zdCBleHRlcm5hbFdhbGxldHMgPSB3YWxsZXRzTGlzdC5maWx0ZXIoaXNXYWxsZXRJbmZvUmVtb3RlKTtcbiAgICAgIGNvbnN0IGV4dGVybmFsV2FsbGV0ID0gZXh0ZXJuYWxXYWxsZXRzLmZpbmQoKHdhbGxldEluZm8pID0+IGVxV2FsbGV0TmFtZSh3YWxsZXRJbmZvLCB3YWxsZXQpKTtcbiAgICAgIGNvbnN0IGlzRXh0ZXJuYWxXYWxsZXRFeGlzdCA9ICEhZXh0ZXJuYWxXYWxsZXQ7XG4gICAgICBpZiAoaXNFeHRlcm5hbFdhbGxldEV4aXN0KSB7XG4gICAgICAgIHJldHVybiB0aGlzLm9wZW5TaW5nbGVXYWxsZXRNb2RhbChleHRlcm5hbFdhbGxldCk7XG4gICAgICB9XG4gICAgICBjb25zdCBlcnJvciA9IGBUcnlpbmcgdG8gb3BlbiBtb2RhbCB3aW5kb3cgd2l0aCB1bmtub3duIHdhbGxldCBcIiR7d2FsbGV0fVwiLmA7XG4gICAgICB0aGlzLnRyYWNrZXIudHJhY2tDb25uZWN0aW9uRXJyb3IoZXJyb3IpO1xuICAgICAgdGhyb3cgbmV3IFRvbkNvbm5lY3RVSUVycm9yKGVycm9yKTtcbiAgICB9KTtcbiAgfVxuICBjbG9zZShyZWFzb24gPSBcImFjdGlvbi1jYW5jZWxsZWRcIikge1xuICAgIGlmIChyZWFzb24gPT09IFwiYWN0aW9uLWNhbmNlbGxlZFwiKSB7XG4gICAgICB0aGlzLnRyYWNrZXIudHJhY2tDb25uZWN0aW9uRXJyb3IoXCJDb25uZWN0aW9uIHdhcyBjYW5jZWxsZWRcIik7XG4gICAgfVxuICAgIHdpZGdldENvbnRyb2xsZXIuY2xvc2VTaW5nbGVXYWxsZXRNb2RhbChcImFjdGlvbi1jYW5jZWxsZWRcIik7XG4gIH1cbiAgb25TdGF0ZUNoYW5nZShvbkNoYW5nZSkge1xuICAgIHRoaXMuY29uc3VtZXJzLnB1c2gob25DaGFuZ2UpO1xuICAgIHJldHVybiAoKSA9PiB7XG4gICAgICB0aGlzLmNvbnN1bWVycyA9IHRoaXMuY29uc3VtZXJzLmZpbHRlcigoY29uc3VtZXIpID0+IGNvbnN1bWVyICE9PSBvbkNoYW5nZSk7XG4gICAgfTtcbiAgfVxuICBjb25uZWN0RW1iZWRkZWRXYWxsZXQoZW1iZWRkZWRXYWxsZXQpIHtcbiAgICBjb25zdCBjb25uZWN0ID0gKHBhcmFtZXRlcnMpID0+IHtcbiAgICAgIHNldExhc3RTZWxlY3RlZFdhbGxldEluZm8oZW1iZWRkZWRXYWxsZXQpO1xuICAgICAgdGhpcy5jb25uZWN0b3IuY29ubmVjdCh7IGpzQnJpZGdlS2V5OiBlbWJlZGRlZFdhbGxldC5qc0JyaWRnZUtleSB9LCBwYXJhbWV0ZXJzKTtcbiAgICB9O1xuICAgIGNvbnN0IGFkZGl0aW9uYWxSZXF1ZXN0ID0gYXBwU3RhdGUuY29ubmVjdFJlcXVlc3RQYXJhbWV0ZXJzO1xuICAgIGlmICgoYWRkaXRpb25hbFJlcXVlc3QgPT0gbnVsbCA/IHZvaWQgMCA6IGFkZGl0aW9uYWxSZXF1ZXN0LnN0YXRlKSA9PT0gXCJsb2FkaW5nXCIpIHtcbiAgICAgIHRoaXMuc2V0Q29ubmVjdFJlcXVlc3RQYXJhbWV0ZXJzQ2FsbGJhY2soY29ubmVjdCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGNvbm5lY3QoYWRkaXRpb25hbFJlcXVlc3QgPT0gbnVsbCA/IHZvaWQgMCA6IGFkZGl0aW9uYWxSZXF1ZXN0LnZhbHVlKTtcbiAgICB9XG4gIH1cbiAgb3BlblNpbmdsZVdhbGxldE1vZGFsKHdhbGxldCkge1xuICAgIHJldHVybiBfX2FzeW5jKHRoaXMsIG51bGwsIGZ1bmN0aW9uKiAoKSB7XG4gICAgICBpZiAoaXNJblRNQSgpKSB7XG4gICAgICAgIHNlbmRFeHBhbmQoKTtcbiAgICAgIH1cbiAgICAgIHdpZGdldENvbnRyb2xsZXIub3BlblNpbmdsZVdhbGxldE1vZGFsKHdhbGxldCk7XG4gICAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUpID0+IHtcbiAgICAgICAgY29uc3QgdW5zdWJzY3JpYmUgPSB0aGlzLm9uU3RhdGVDaGFuZ2UoKHN0YXRlKSA9PiB7XG4gICAgICAgICAgY29uc3QgeyBzdGF0dXMgfSA9IHN0YXRlO1xuICAgICAgICAgIGlmIChzdGF0dXMgPT09IFwib3BlbmVkXCIpIHtcbiAgICAgICAgICAgIHVuc3Vic2NyaWJlKCk7XG4gICAgICAgICAgICByZXNvbHZlKCk7XG4gICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgIH0pO1xuICAgIH0pO1xuICB9XG59XG5jbGFzcyBUb25Db25uZWN0VUlUcmFja2VyIHtcbiAgY29uc3RydWN0b3Iob3B0aW9ucykge1xuICAgIF9fcHVibGljRmllbGQodGhpcywgXCJldmVudFByZWZpeFwiLCBcInRvbi1jb25uZWN0LXVpLVwiKTtcbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwidG9uQ29ubmVjdFVpVmVyc2lvblwiKTtcbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwidG9uQ29ubmVjdFNka1ZlcnNpb25cIiwgbnVsbCk7XG4gICAgX19wdWJsaWNGaWVsZCh0aGlzLCBcImV2ZW50RGlzcGF0Y2hlclwiKTtcbiAgICB2YXIgX2EyO1xuICAgIHRoaXMuZXZlbnREaXNwYXRjaGVyID0gKF9hMiA9IG9wdGlvbnMgPT0gbnVsbCA/IHZvaWQgMCA6IG9wdGlvbnMuZXZlbnREaXNwYXRjaGVyKSAhPSBudWxsID8gX2EyIDogbmV3IEJyb3dzZXJFdmVudERpc3BhdGNoZXIoKTtcbiAgICB0aGlzLnRvbkNvbm5lY3RVaVZlcnNpb24gPSBvcHRpb25zLnRvbkNvbm5lY3RVaVZlcnNpb247XG4gICAgdGhpcy5pbml0KCkuY2F0Y2goKTtcbiAgfVxuICBnZXQgdmVyc2lvbigpIHtcbiAgICByZXR1cm4gY3JlYXRlVmVyc2lvbkluZm8oe1xuICAgICAgdG9uX2Nvbm5lY3Rfc2RrX2xpYjogdGhpcy50b25Db25uZWN0U2RrVmVyc2lvbixcbiAgICAgIHRvbl9jb25uZWN0X3VpX2xpYjogdGhpcy50b25Db25uZWN0VWlWZXJzaW9uXG4gICAgfSk7XG4gIH1cbiAgaW5pdCgpIHtcbiAgICByZXR1cm4gX19hc3luYyh0aGlzLCBudWxsLCBmdW5jdGlvbiogKCkge1xuICAgICAgdHJ5IHtcbiAgICAgICAgeWllbGQgdGhpcy5zZXRSZXF1ZXN0VmVyc2lvbkhhbmRsZXIoKTtcbiAgICAgICAgdGhpcy50b25Db25uZWN0U2RrVmVyc2lvbiA9IHlpZWxkIHRoaXMucmVxdWVzdFRvbkNvbm5lY3RTZGtWZXJzaW9uKCk7XG4gICAgICB9IGNhdGNoIChlMikge1xuICAgICAgfVxuICAgIH0pO1xuICB9XG4gIHNldFJlcXVlc3RWZXJzaW9uSGFuZGxlcigpIHtcbiAgICByZXR1cm4gX19hc3luYyh0aGlzLCBudWxsLCBmdW5jdGlvbiogKCkge1xuICAgICAgeWllbGQgdGhpcy5ldmVudERpc3BhdGNoZXIuYWRkRXZlbnRMaXN0ZW5lcihcInRvbi1jb25uZWN0LXVpLXJlcXVlc3QtdmVyc2lvblwiLCAoKSA9PiBfX2FzeW5jKHRoaXMsIG51bGwsIGZ1bmN0aW9uKiAoKSB7XG4gICAgICAgIHlpZWxkIHRoaXMuZXZlbnREaXNwYXRjaGVyLmRpc3BhdGNoRXZlbnQoXG4gICAgICAgICAgXCJ0b24tY29ubmVjdC11aS1yZXNwb25zZS12ZXJzaW9uXCIsXG4gICAgICAgICAgY3JlYXRlUmVzcG9uc2VWZXJzaW9uRXZlbnQodGhpcy50b25Db25uZWN0VWlWZXJzaW9uKVxuICAgICAgICApO1xuICAgICAgfSkpO1xuICAgIH0pO1xuICB9XG4gIHJlcXVlc3RUb25Db25uZWN0U2RrVmVyc2lvbigpIHtcbiAgICByZXR1cm4gX19hc3luYyh0aGlzLCBudWxsLCBmdW5jdGlvbiogKCkge1xuICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IF9fYXN5bmModGhpcywgbnVsbCwgZnVuY3Rpb24qICgpIHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICB5aWVsZCB0aGlzLmV2ZW50RGlzcGF0Y2hlci5hZGRFdmVudExpc3RlbmVyKFxuICAgICAgICAgICAgXCJ0b24tY29ubmVjdC1yZXNwb25zZS12ZXJzaW9uXCIsXG4gICAgICAgICAgICAoZXZlbnQpID0+IHtcbiAgICAgICAgICAgICAgcmVzb2x2ZShldmVudC5kZXRhaWwudmVyc2lvbik7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgeyBvbmNlOiB0cnVlIH1cbiAgICAgICAgICApO1xuICAgICAgICAgIHlpZWxkIHRoaXMuZXZlbnREaXNwYXRjaGVyLmRpc3BhdGNoRXZlbnQoXG4gICAgICAgICAgICBcInRvbi1jb25uZWN0LXJlcXVlc3QtdmVyc2lvblwiLFxuICAgICAgICAgICAgY3JlYXRlUmVxdWVzdFZlcnNpb25FdmVudCgpXG4gICAgICAgICAgKTtcbiAgICAgICAgfSBjYXRjaCAoZTIpIHtcbiAgICAgICAgICByZWplY3QoZTIpO1xuICAgICAgICB9XG4gICAgICB9KSk7XG4gICAgfSk7XG4gIH1cbiAgZGlzcGF0Y2hVc2VyQWN0aW9uRXZlbnQoZXZlbnREZXRhaWxzKSB7XG4gICAgdmFyIF9hMjtcbiAgICB0cnkge1xuICAgICAgKF9hMiA9IHRoaXMuZXZlbnREaXNwYXRjaGVyKSA9PSBudWxsID8gdm9pZCAwIDogX2EyLmRpc3BhdGNoRXZlbnQoYCR7dGhpcy5ldmVudFByZWZpeH0ke2V2ZW50RGV0YWlscy50eXBlfWAsIGV2ZW50RGV0YWlscykuY2F0Y2goKTtcbiAgICB9IGNhdGNoIChlMikge1xuICAgIH1cbiAgfVxuICB0cmFja0Nvbm5lY3Rpb25TdGFydGVkKC4uLmFyZ3MpIHtcbiAgICB0cnkge1xuICAgICAgY29uc3QgZXZlbnQgPSBjcmVhdGVDb25uZWN0aW9uU3RhcnRlZEV2ZW50KHRoaXMudmVyc2lvbiwgLi4uYXJncyk7XG4gICAgICB0aGlzLmRpc3BhdGNoVXNlckFjdGlvbkV2ZW50KGV2ZW50KTtcbiAgICB9IGNhdGNoIChlMikge1xuICAgIH1cbiAgfVxuICB0cmFja0Nvbm5lY3Rpb25Db21wbGV0ZWQoLi4uYXJncykge1xuICAgIHRyeSB7XG4gICAgICBjb25zdCBldmVudCA9IGNyZWF0ZUNvbm5lY3Rpb25Db21wbGV0ZWRFdmVudCh0aGlzLnZlcnNpb24sIC4uLmFyZ3MpO1xuICAgICAgdGhpcy5kaXNwYXRjaFVzZXJBY3Rpb25FdmVudChldmVudCk7XG4gICAgfSBjYXRjaCAoZTIpIHtcbiAgICB9XG4gIH1cbiAgdHJhY2tDb25uZWN0aW9uRXJyb3IoLi4uYXJncykge1xuICAgIHRyeSB7XG4gICAgICBjb25zdCBldmVudCA9IGNyZWF0ZUNvbm5lY3Rpb25FcnJvckV2ZW50KHRoaXMudmVyc2lvbiwgLi4uYXJncyk7XG4gICAgICB0aGlzLmRpc3BhdGNoVXNlckFjdGlvbkV2ZW50KGV2ZW50KTtcbiAgICB9IGNhdGNoIChlMikge1xuICAgIH1cbiAgfVxuICB0cmFja0Nvbm5lY3Rpb25SZXN0b3JpbmdTdGFydGVkKC4uLmFyZ3MpIHtcbiAgICB0cnkge1xuICAgICAgY29uc3QgZXZlbnQgPSBjcmVhdGVDb25uZWN0aW9uUmVzdG9yaW5nU3RhcnRlZEV2ZW50KHRoaXMudmVyc2lvbiwgLi4uYXJncyk7XG4gICAgICB0aGlzLmRpc3BhdGNoVXNlckFjdGlvbkV2ZW50KGV2ZW50KTtcbiAgICB9IGNhdGNoIChlMikge1xuICAgIH1cbiAgfVxuICB0cmFja0Nvbm5lY3Rpb25SZXN0b3JpbmdDb21wbGV0ZWQoLi4uYXJncykge1xuICAgIHRyeSB7XG4gICAgICBjb25zdCBldmVudCA9IGNyZWF0ZUNvbm5lY3Rpb25SZXN0b3JpbmdDb21wbGV0ZWRFdmVudCh0aGlzLnZlcnNpb24sIC4uLmFyZ3MpO1xuICAgICAgdGhpcy5kaXNwYXRjaFVzZXJBY3Rpb25FdmVudChldmVudCk7XG4gICAgfSBjYXRjaCAoZTIpIHtcbiAgICB9XG4gIH1cbiAgdHJhY2tDb25uZWN0aW9uUmVzdG9yaW5nRXJyb3IoLi4uYXJncykge1xuICAgIHRyeSB7XG4gICAgICBjb25zdCBldmVudCA9IGNyZWF0ZUNvbm5lY3Rpb25SZXN0b3JpbmdFcnJvckV2ZW50KHRoaXMudmVyc2lvbiwgLi4uYXJncyk7XG4gICAgICB0aGlzLmRpc3BhdGNoVXNlckFjdGlvbkV2ZW50KGV2ZW50KTtcbiAgICB9IGNhdGNoIChlMikge1xuICAgIH1cbiAgfVxuICB0cmFja0Rpc2Nvbm5lY3Rpb24oLi4uYXJncykge1xuICAgIHRyeSB7XG4gICAgICBjb25zdCBldmVudCA9IGNyZWF0ZURpc2Nvbm5lY3Rpb25FdmVudCh0aGlzLnZlcnNpb24sIC4uLmFyZ3MpO1xuICAgICAgdGhpcy5kaXNwYXRjaFVzZXJBY3Rpb25FdmVudChldmVudCk7XG4gICAgfSBjYXRjaCAoZTIpIHtcbiAgICB9XG4gIH1cbiAgdHJhY2tUcmFuc2FjdGlvblNlbnRGb3JTaWduYXR1cmUoLi4uYXJncykge1xuICAgIHRyeSB7XG4gICAgICBjb25zdCBldmVudCA9IGNyZWF0ZVRyYW5zYWN0aW9uU2VudEZvclNpZ25hdHVyZUV2ZW50KHRoaXMudmVyc2lvbiwgLi4uYXJncyk7XG4gICAgICB0aGlzLmRpc3BhdGNoVXNlckFjdGlvbkV2ZW50KGV2ZW50KTtcbiAgICB9IGNhdGNoIChlMikge1xuICAgIH1cbiAgfVxuICB0cmFja1RyYW5zYWN0aW9uU2lnbmVkKC4uLmFyZ3MpIHtcbiAgICB0cnkge1xuICAgICAgY29uc3QgZXZlbnQgPSBjcmVhdGVUcmFuc2FjdGlvblNpZ25lZEV2ZW50KHRoaXMudmVyc2lvbiwgLi4uYXJncyk7XG4gICAgICB0aGlzLmRpc3BhdGNoVXNlckFjdGlvbkV2ZW50KGV2ZW50KTtcbiAgICB9IGNhdGNoIChlMikge1xuICAgIH1cbiAgfVxuICB0cmFja1RyYW5zYWN0aW9uU2lnbmluZ0ZhaWxlZCguLi5hcmdzKSB7XG4gICAgdHJ5IHtcbiAgICAgIGNvbnN0IGV2ZW50ID0gY3JlYXRlVHJhbnNhY3Rpb25TaWduaW5nRmFpbGVkRXZlbnQodGhpcy52ZXJzaW9uLCAuLi5hcmdzKTtcbiAgICAgIHRoaXMuZGlzcGF0Y2hVc2VyQWN0aW9uRXZlbnQoZXZlbnQpO1xuICAgIH0gY2F0Y2ggKGUyKSB7XG4gICAgfVxuICB9XG59XG5jb25zdCB0b25Db25uZWN0VWlWZXJzaW9uID0gXCIyLjEuMFwiO1xuY2xhc3MgVG9uQ29ubmVjdFVJIHtcbiAgY29uc3RydWN0b3Iob3B0aW9ucykge1xuICAgIF9fcHVibGljRmllbGQodGhpcywgXCJ3YWxsZXRJbmZvU3RvcmFnZVwiLCBuZXcgV2FsbGV0SW5mb1N0b3JhZ2UoKSk7XG4gICAgX19wdWJsaWNGaWVsZCh0aGlzLCBcInByZWZlcnJlZFdhbGxldFN0b3JhZ2VcIiwgbmV3IFByZWZlcnJlZFdhbGxldFN0b3JhZ2UoKSk7XG4gICAgX19wdWJsaWNGaWVsZCh0aGlzLCBcInRyYWNrZXJcIik7XG4gICAgX19wdWJsaWNGaWVsZCh0aGlzLCBcIndhbGxldEluZm9cIiwgbnVsbCk7XG4gICAgX19wdWJsaWNGaWVsZCh0aGlzLCBcInN5c3RlbVRoZW1lQ2hhbmdlVW5zdWJzY3JpYmVcIiwgbnVsbCk7XG4gICAgX19wdWJsaWNGaWVsZCh0aGlzLCBcImFjdGlvbnNDb25maWd1cmF0aW9uXCIpO1xuICAgIF9fcHVibGljRmllbGQodGhpcywgXCJ3YWxsZXRzTGlzdFwiKTtcbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwid2FsbGV0c1JlcXVpcmVkRmVhdHVyZXNcIik7XG4gICAgX19wdWJsaWNGaWVsZCh0aGlzLCBcImNvbm5lY3RSZXF1ZXN0UGFyYW1ldGVyc0NhbGxiYWNrXCIpO1xuICAgIF9fcHVibGljRmllbGQodGhpcywgXCJjb25uZWN0b3JcIik7XG4gICAgX19wdWJsaWNGaWVsZCh0aGlzLCBcIm1vZGFsXCIpO1xuICAgIF9fcHVibGljRmllbGQodGhpcywgXCJzaW5nbGVXYWxsZXRNb2RhbFwiKTtcbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwidHJhbnNhY3Rpb25Nb2RhbFwiKTtcbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwiY29ubmVjdGlvblJlc3RvcmVkXCIsIFByb21pc2UucmVzb2x2ZShmYWxzZSkpO1xuICAgIGlmIChvcHRpb25zICYmIFwiY29ubmVjdG9yXCIgaW4gb3B0aW9ucyAmJiBvcHRpb25zLmNvbm5lY3Rvcikge1xuICAgICAgdGhpcy5jb25uZWN0b3IgPSBvcHRpb25zLmNvbm5lY3RvcjtcbiAgICB9IGVsc2UgaWYgKG9wdGlvbnMgJiYgXCJtYW5pZmVzdFVybFwiIGluIG9wdGlvbnMgJiYgb3B0aW9ucy5tYW5pZmVzdFVybCkge1xuICAgICAgdGhpcy5jb25uZWN0b3IgPSBuZXcgVG9uQ29ubmVjdCh7XG4gICAgICAgIG1hbmlmZXN0VXJsOiBvcHRpb25zLm1hbmlmZXN0VXJsLFxuICAgICAgICBldmVudERpc3BhdGNoZXI6IG9wdGlvbnMuZXZlbnREaXNwYXRjaGVyLFxuICAgICAgICB3YWxsZXRzUmVxdWlyZWRGZWF0dXJlczogb3B0aW9ucy53YWxsZXRzUmVxdWlyZWRGZWF0dXJlc1xuICAgICAgfSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRocm93IG5ldyBUb25Db25uZWN0VUlFcnJvcihcbiAgICAgICAgXCJZb3UgaGF2ZSB0byBzcGVjaWZ5IGEgYG1hbmlmZXN0VXJsYCBvciBhIGBjb25uZWN0b3JgIGluIHRoZSBvcHRpb25zLlwiXG4gICAgICApO1xuICAgIH1cbiAgICB0aGlzLnRyYWNrZXIgPSBuZXcgVG9uQ29ubmVjdFVJVHJhY2tlcih7XG4gICAgICBldmVudERpc3BhdGNoZXI6IG9wdGlvbnMgPT0gbnVsbCA/IHZvaWQgMCA6IG9wdGlvbnMuZXZlbnREaXNwYXRjaGVyLFxuICAgICAgdG9uQ29ubmVjdFVpVmVyc2lvblxuICAgIH0pO1xuICAgIHRoaXMubW9kYWwgPSBuZXcgV2FsbGV0c01vZGFsTWFuYWdlcih7XG4gICAgICBjb25uZWN0b3I6IHRoaXMuY29ubmVjdG9yLFxuICAgICAgdHJhY2tlcjogdGhpcy50cmFja2VyLFxuICAgICAgc2V0Q29ubmVjdFJlcXVlc3RQYXJhbWV0ZXJzQ2FsbGJhY2s6IChjYWxsYmFjaykgPT4ge1xuICAgICAgICB0aGlzLmNvbm5lY3RSZXF1ZXN0UGFyYW1ldGVyc0NhbGxiYWNrID0gY2FsbGJhY2s7XG4gICAgICB9XG4gICAgfSk7XG4gICAgdGhpcy5zaW5nbGVXYWxsZXRNb2RhbCA9IG5ldyBTaW5nbGVXYWxsZXRNb2RhbE1hbmFnZXIoe1xuICAgICAgY29ubmVjdG9yOiB0aGlzLmNvbm5lY3RvcixcbiAgICAgIHRyYWNrZXI6IHRoaXMudHJhY2tlcixcbiAgICAgIHNldENvbm5lY3RSZXF1ZXN0UGFyYW1ldGVyc0NhbGxiYWNrOiAoY2FsbGJhY2spID0+IHtcbiAgICAgICAgdGhpcy5jb25uZWN0UmVxdWVzdFBhcmFtZXRlcnNDYWxsYmFjayA9IGNhbGxiYWNrO1xuICAgICAgfVxuICAgIH0pO1xuICAgIHRoaXMudHJhbnNhY3Rpb25Nb2RhbCA9IG5ldyBUcmFuc2FjdGlvbk1vZGFsTWFuYWdlcih7XG4gICAgICBjb25uZWN0b3I6IHRoaXMuY29ubmVjdG9yXG4gICAgfSk7XG4gICAgdGhpcy53YWxsZXRzUmVxdWlyZWRGZWF0dXJlcyA9IG9wdGlvbnMud2FsbGV0c1JlcXVpcmVkRmVhdHVyZXM7XG4gICAgdGhpcy53YWxsZXRzTGlzdCA9IHRoaXMuZ2V0V2FsbGV0cygpO1xuICAgIHRoaXMud2FsbGV0c0xpc3QudGhlbigobGlzdCkgPT4gcHJlbG9hZEltYWdlcyh1bmlxKGxpc3QubWFwKChpdGVtKSA9PiBpdGVtLmltYWdlVXJsKSkpKTtcbiAgICBjb25zdCByb290SWQgPSB0aGlzLm5vcm1hbGl6ZVdpZGdldFJvb3Qob3B0aW9ucyA9PSBudWxsID8gdm9pZCAwIDogb3B0aW9ucy53aWRnZXRSb290SWQpO1xuICAgIHRoaXMuc3Vic2NyaWJlVG9XYWxsZXRDaGFuZ2UoKTtcbiAgICBpZiAoKG9wdGlvbnMgPT0gbnVsbCA/IHZvaWQgMCA6IG9wdGlvbnMucmVzdG9yZUNvbm5lY3Rpb24pICE9PSBmYWxzZSkge1xuICAgICAgdGhpcy5jb25uZWN0aW9uUmVzdG9yZWQgPSBjcmVhdGVNYWNyb3Rhc2tBc3luYygoKSA9PiBfX2FzeW5jKHRoaXMsIG51bGwsIGZ1bmN0aW9uKiAoKSB7XG4gICAgICAgIHRoaXMudHJhY2tlci50cmFja0Nvbm5lY3Rpb25SZXN0b3JpbmdTdGFydGVkKCk7XG4gICAgICAgIHlpZWxkIHRoaXMuY29ubmVjdG9yLnJlc3RvcmVDb25uZWN0aW9uKCk7XG4gICAgICAgIGlmICghdGhpcy5jb25uZWN0b3IuY29ubmVjdGVkKSB7XG4gICAgICAgICAgdGhpcy50cmFja2VyLnRyYWNrQ29ubmVjdGlvblJlc3RvcmluZ0Vycm9yKFwiQ29ubmVjdGlvbiB3YXMgbm90IHJlc3RvcmVkXCIpO1xuICAgICAgICAgIHRoaXMud2FsbGV0SW5mb1N0b3JhZ2UucmVtb3ZlV2FsbGV0SW5mbygpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHRoaXMudHJhY2tlci50cmFja0Nvbm5lY3Rpb25SZXN0b3JpbmdDb21wbGV0ZWQodGhpcy53YWxsZXQpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0aGlzLmNvbm5lY3Rvci5jb25uZWN0ZWQ7XG4gICAgICB9KSk7XG4gICAgfVxuICAgIHRoaXMudWlPcHRpb25zID0gbWVyZ2VPcHRpb25zKG9wdGlvbnMsIHsgdWlQcmVmZXJlbmNlczogeyB0aGVtZTogXCJTWVNURU1cIiB9IH0pO1xuICAgIGNvbnN0IHByZWZlcnJlZFdhbGxldE5hbWUgPSB0aGlzLnByZWZlcnJlZFdhbGxldFN0b3JhZ2UuZ2V0UHJlZmVycmVkV2FsbGV0QXBwTmFtZSgpO1xuICAgIHNldEFwcFN0YXRlKHtcbiAgICAgIGNvbm5lY3RvcjogdGhpcy5jb25uZWN0b3IsXG4gICAgICBwcmVmZXJyZWRXYWxsZXRBcHBOYW1lOiBwcmVmZXJyZWRXYWxsZXROYW1lXG4gICAgfSk7XG4gICAgd2lkZ2V0Q29udHJvbGxlci5yZW5kZXJBcHAocm9vdElkLCB0aGlzKTtcbiAgfVxuICBzdGF0aWMgZ2V0V2FsbGV0cygpIHtcbiAgICByZXR1cm4gVG9uQ29ubmVjdC5nZXRXYWxsZXRzKCk7XG4gIH1cbiAgZ2V0IGNvbm5lY3RlZCgpIHtcbiAgICByZXR1cm4gdGhpcy5jb25uZWN0b3IuY29ubmVjdGVkO1xuICB9XG4gIGdldCBhY2NvdW50KCkge1xuICAgIHJldHVybiB0aGlzLmNvbm5lY3Rvci5hY2NvdW50O1xuICB9XG4gIGdldCB3YWxsZXQoKSB7XG4gICAgaWYgKCF0aGlzLmNvbm5lY3Rvci53YWxsZXQpIHtcbiAgICAgIHJldHVybiBudWxsO1xuICAgIH1cbiAgICByZXR1cm4gX19zcHJlYWRWYWx1ZXMoX19zcHJlYWRWYWx1ZXMoe30sIHRoaXMuY29ubmVjdG9yLndhbGxldCksIHRoaXMud2FsbGV0SW5mbyk7XG4gIH1cbiAgc2V0IHVpT3B0aW9ucyhvcHRpb25zKSB7XG4gICAgdmFyIF9hMiwgX2IyLCBfYzIsIF9kMiwgX2UyO1xuICAgIHRoaXMuY2hlY2tCdXR0b25Sb290RXhpc3Qob3B0aW9ucy5idXR0b25Sb290SWQpO1xuICAgIHRoaXMuYWN0aW9uc0NvbmZpZ3VyYXRpb24gPSBvcHRpb25zLmFjdGlvbnNDb25maWd1cmF0aW9uO1xuICAgIGlmICgoX2EyID0gb3B0aW9ucy51aVByZWZlcmVuY2VzKSA9PSBudWxsID8gdm9pZCAwIDogX2EyLnRoZW1lKSB7XG4gICAgICBpZiAoKChfYjIgPSBvcHRpb25zLnVpUHJlZmVyZW5jZXMpID09IG51bGwgPyB2b2lkIDAgOiBfYjIudGhlbWUpICE9PSBcIlNZU1RFTVwiKSB7XG4gICAgICAgIChfYzIgPSB0aGlzLnN5c3RlbVRoZW1lQ2hhbmdlVW5zdWJzY3JpYmUpID09IG51bGwgPyB2b2lkIDAgOiBfYzIuY2FsbCh0aGlzKTtcbiAgICAgICAgc2V0VGhlbWUob3B0aW9ucy51aVByZWZlcmVuY2VzLnRoZW1lLCBvcHRpb25zLnVpUHJlZmVyZW5jZXMuY29sb3JzU2V0KTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHNldFRoZW1lKGdldFN5c3RlbVRoZW1lKCksIG9wdGlvbnMudWlQcmVmZXJlbmNlcy5jb2xvcnNTZXQpO1xuICAgICAgICBpZiAoIXRoaXMuc3lzdGVtVGhlbWVDaGFuZ2VVbnN1YnNjcmliZSkge1xuICAgICAgICAgIHRoaXMuc3lzdGVtVGhlbWVDaGFuZ2VVbnN1YnNjcmliZSA9IHN1YnNjcmliZVRvVGhlbWVDaGFuZ2Uoc2V0VGhlbWUpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIGlmICgoX2QyID0gb3B0aW9ucy51aVByZWZlcmVuY2VzKSA9PSBudWxsID8gdm9pZCAwIDogX2QyLmNvbG9yc1NldCkge1xuICAgICAgICBzZXRDb2xvcnMob3B0aW9ucy51aVByZWZlcmVuY2VzLmNvbG9yc1NldCk7XG4gICAgICB9XG4gICAgfVxuICAgIGlmICgoX2UyID0gb3B0aW9ucy51aVByZWZlcmVuY2VzKSA9PSBudWxsID8gdm9pZCAwIDogX2UyLmJvcmRlclJhZGl1cykge1xuICAgICAgc2V0Qm9yZGVyUmFkaXVzKG9wdGlvbnMudWlQcmVmZXJlbmNlcy5ib3JkZXJSYWRpdXMpO1xuICAgIH1cbiAgICBzZXRBcHBTdGF0ZSgoc3RhdGUpID0+IHtcbiAgICAgIHZhciBfYTMsIF9iMztcbiAgICAgIGNvbnN0IG1lcmdlZCA9IG1lcmdlT3B0aW9ucyhcbiAgICAgICAgX19zcHJlYWRWYWx1ZXMoX19zcHJlYWRWYWx1ZXMoX19zcHJlYWRWYWx1ZXMoX19zcHJlYWRWYWx1ZXMoe30sIG9wdGlvbnMubGFuZ3VhZ2UgJiYgeyBsYW5ndWFnZTogb3B0aW9ucy5sYW5ndWFnZSB9KSwgISEoKF9hMyA9IG9wdGlvbnMuYWN0aW9uc0NvbmZpZ3VyYXRpb24pID09IG51bGwgPyB2b2lkIDAgOiBfYTMucmV0dXJuU3RyYXRlZ3kpICYmIHtcbiAgICAgICAgICByZXR1cm5TdHJhdGVneTogb3B0aW9ucy5hY3Rpb25zQ29uZmlndXJhdGlvbi5yZXR1cm5TdHJhdGVneVxuICAgICAgICB9KSwgISEoKF9iMyA9IG9wdGlvbnMuYWN0aW9uc0NvbmZpZ3VyYXRpb24pID09IG51bGwgPyB2b2lkIDAgOiBfYjMudHdhUmV0dXJuVXJsKSAmJiB7XG4gICAgICAgICAgdHdhUmV0dXJuVXJsOiBvcHRpb25zLmFjdGlvbnNDb25maWd1cmF0aW9uLnR3YVJldHVyblVybFxuICAgICAgICB9KSwgISFvcHRpb25zLndhbGxldHNMaXN0Q29uZmlndXJhdGlvbiAmJiB7XG4gICAgICAgICAgd2FsbGV0c0xpc3RDb25maWd1cmF0aW9uOiBvcHRpb25zLndhbGxldHNMaXN0Q29uZmlndXJhdGlvblxuICAgICAgICB9KSxcbiAgICAgICAgdW53cmFwKHN0YXRlKVxuICAgICAgKTtcbiAgICAgIGlmIChvcHRpb25zLmJ1dHRvblJvb3RJZCAhPT0gdm9pZCAwKSB7XG4gICAgICAgIG1lcmdlZC5idXR0b25Sb290SWQgPSBvcHRpb25zLmJ1dHRvblJvb3RJZDtcbiAgICAgIH1cbiAgICAgIGlmIChvcHRpb25zLmVuYWJsZUFuZHJvaWRCYWNrSGFuZGxlciAhPT0gdm9pZCAwKSB7XG4gICAgICAgIG1lcmdlZC5lbmFibGVBbmRyb2lkQmFja0hhbmRsZXIgPSBvcHRpb25zLmVuYWJsZUFuZHJvaWRCYWNrSGFuZGxlcjtcbiAgICAgIH1cbiAgICAgIHJldHVybiBtZXJnZWQ7XG4gICAgfSk7XG4gIH1cbiAgc2V0Q29ubmVjdFJlcXVlc3RQYXJhbWV0ZXJzKGNvbm5lY3RSZXF1ZXN0UGFyYW1ldGVycykge1xuICAgIHZhciBfYTI7XG4gICAgc2V0QXBwU3RhdGUoeyBjb25uZWN0UmVxdWVzdFBhcmFtZXRlcnMgfSk7XG4gICAgaWYgKChjb25uZWN0UmVxdWVzdFBhcmFtZXRlcnMgPT0gbnVsbCA/IHZvaWQgMCA6IGNvbm5lY3RSZXF1ZXN0UGFyYW1ldGVycy5zdGF0ZSkgPT09IFwicmVhZHlcIiB8fCAhY29ubmVjdFJlcXVlc3RQYXJhbWV0ZXJzKSB7XG4gICAgICAoX2EyID0gdGhpcy5jb25uZWN0UmVxdWVzdFBhcmFtZXRlcnNDYWxsYmFjaykgPT0gbnVsbCA/IHZvaWQgMCA6IF9hMi5jYWxsKHRoaXMsIGNvbm5lY3RSZXF1ZXN0UGFyYW1ldGVycyA9PSBudWxsID8gdm9pZCAwIDogY29ubmVjdFJlcXVlc3RQYXJhbWV0ZXJzLnZhbHVlKTtcbiAgICB9XG4gIH1cbiAgZ2V0V2FsbGV0cygpIHtcbiAgICByZXR1cm4gX19hc3luYyh0aGlzLCBudWxsLCBmdW5jdGlvbiogKCkge1xuICAgICAgcmV0dXJuIHRoaXMuY29ubmVjdG9yLmdldFdhbGxldHMoKTtcbiAgICB9KTtcbiAgfVxuICBvblN0YXR1c0NoYW5nZShjYWxsYmFjaywgZXJyb3JzSGFuZGxlcikge1xuICAgIHJldHVybiB0aGlzLmNvbm5lY3Rvci5vblN0YXR1c0NoYW5nZSgod2FsbGV0KSA9PiBfX2FzeW5jKHRoaXMsIG51bGwsIGZ1bmN0aW9uKiAoKSB7XG4gICAgICBpZiAod2FsbGV0KSB7XG4gICAgICAgIGNvbnN0IGxhc3RTZWxlY3RlZFdhbGxldEluZm8yID0geWllbGQgdGhpcy5nZXRTZWxlY3RlZFdhbGxldEluZm8od2FsbGV0KTtcbiAgICAgICAgY2FsbGJhY2soX19zcHJlYWRWYWx1ZXMoX19zcHJlYWRWYWx1ZXMoe30sIHdhbGxldCksIGxhc3RTZWxlY3RlZFdhbGxldEluZm8yIHx8IHRoaXMud2FsbGV0SW5mb1N0b3JhZ2UuZ2V0V2FsbGV0SW5mbygpKSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBjYWxsYmFjayh3YWxsZXQpO1xuICAgICAgfVxuICAgIH0pLCBlcnJvcnNIYW5kbGVyKTtcbiAgfVxuICBvcGVuTW9kYWwoKSB7XG4gICAgcmV0dXJuIF9fYXN5bmModGhpcywgbnVsbCwgZnVuY3Rpb24qICgpIHtcbiAgICAgIHJldHVybiB0aGlzLm1vZGFsLm9wZW4oKTtcbiAgICB9KTtcbiAgfVxuICBjbG9zZU1vZGFsKHJlYXNvbikge1xuICAgIHRoaXMubW9kYWwuY2xvc2UocmVhc29uKTtcbiAgfVxuICBvbk1vZGFsU3RhdGVDaGFuZ2Uob25DaGFuZ2UpIHtcbiAgICByZXR1cm4gdGhpcy5tb2RhbC5vblN0YXRlQ2hhbmdlKG9uQ2hhbmdlKTtcbiAgfVxuICBnZXQgbW9kYWxTdGF0ZSgpIHtcbiAgICByZXR1cm4gdGhpcy5tb2RhbC5zdGF0ZTtcbiAgfVxuICBvcGVuU2luZ2xlV2FsbGV0TW9kYWwod2FsbGV0KSB7XG4gICAgcmV0dXJuIF9fYXN5bmModGhpcywgbnVsbCwgZnVuY3Rpb24qICgpIHtcbiAgICAgIHJldHVybiB0aGlzLnNpbmdsZVdhbGxldE1vZGFsLm9wZW4od2FsbGV0KTtcbiAgICB9KTtcbiAgfVxuICBjbG9zZVNpbmdsZVdhbGxldE1vZGFsKGNsb3NlUmVhc29uKSB7XG4gICAgdGhpcy5zaW5nbGVXYWxsZXRNb2RhbC5jbG9zZShjbG9zZVJlYXNvbik7XG4gIH1cbiAgb25TaW5nbGVXYWxsZXRNb2RhbFN0YXRlQ2hhbmdlKG9uQ2hhbmdlKSB7XG4gICAgcmV0dXJuIHRoaXMuc2luZ2xlV2FsbGV0TW9kYWwub25TdGF0ZUNoYW5nZShvbkNoYW5nZSk7XG4gIH1cbiAgZ2V0IHNpbmdsZVdhbGxldE1vZGFsU3RhdGUoKSB7XG4gICAgcmV0dXJuIHRoaXMuc2luZ2xlV2FsbGV0TW9kYWwuc3RhdGU7XG4gIH1cbiAgY29ubmVjdFdhbGxldCgpIHtcbiAgICByZXR1cm4gX19hc3luYyh0aGlzLCBudWxsLCBmdW5jdGlvbiogKCkge1xuICAgICAgY29uc3Qgd2FsbGV0c0xpc3QgPSB5aWVsZCB0aGlzLmdldFdhbGxldHMoKTtcbiAgICAgIGNvbnN0IGVtYmVkZGVkV2FsbGV0ID0gd2FsbGV0c0xpc3QuZmluZChpc1dhbGxldEluZm9DdXJyZW50bHlFbWJlZGRlZCk7XG4gICAgICBpZiAoZW1iZWRkZWRXYWxsZXQpIHtcbiAgICAgICAgcmV0dXJuIHlpZWxkIHRoaXMuY29ubmVjdEVtYmVkZGVkV2FsbGV0KGVtYmVkZGVkV2FsbGV0KTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHJldHVybiB5aWVsZCB0aGlzLmNvbm5lY3RFeHRlcm5hbFdhbGxldCgpO1xuICAgICAgfVxuICAgIH0pO1xuICB9XG4gIGRpc2Nvbm5lY3QoKSB7XG4gICAgdGhpcy50cmFja2VyLnRyYWNrRGlzY29ubmVjdGlvbih0aGlzLndhbGxldCwgXCJkYXBwXCIpO1xuICAgIHdpZGdldENvbnRyb2xsZXIuY2xlYXJBY3Rpb24oKTtcbiAgICB3aWRnZXRDb250cm9sbGVyLnJlbW92ZVNlbGVjdGVkV2FsbGV0SW5mbygpO1xuICAgIHRoaXMud2FsbGV0SW5mb1N0b3JhZ2UucmVtb3ZlV2FsbGV0SW5mbygpO1xuICAgIHJldHVybiB0aGlzLmNvbm5lY3Rvci5kaXNjb25uZWN0KCk7XG4gIH1cbiAgc2VuZFRyYW5zYWN0aW9uKHR4LCBvcHRpb25zKSB7XG4gICAgcmV0dXJuIF9fYXN5bmModGhpcywgbnVsbCwgZnVuY3Rpb24qICgpIHtcbiAgICAgIHRoaXMudHJhY2tlci50cmFja1RyYW5zYWN0aW9uU2VudEZvclNpZ25hdHVyZSh0aGlzLndhbGxldCwgdHgpO1xuICAgICAgaWYgKCF0aGlzLmNvbm5lY3RlZCkge1xuICAgICAgICB0aGlzLnRyYWNrZXIudHJhY2tUcmFuc2FjdGlvblNpZ25pbmdGYWlsZWQodGhpcy53YWxsZXQsIHR4LCBcIldhbGxldCB3YXMgbm90IGNvbm5lY3RlZFwiKTtcbiAgICAgICAgdGhyb3cgbmV3IFRvbkNvbm5lY3RVSUVycm9yKFwiQ29ubmVjdCB3YWxsZXQgdG8gc2VuZCBhIHRyYW5zYWN0aW9uLlwiKTtcbiAgICAgIH1cbiAgICAgIGlmIChpc0luVE1BKCkpIHtcbiAgICAgICAgc2VuZEV4cGFuZCgpO1xuICAgICAgfVxuICAgICAgY29uc3QgeyBub3RpZmljYXRpb25zOiBub3RpZmljYXRpb25zMiwgbW9kYWxzLCByZXR1cm5TdHJhdGVneSwgdHdhUmV0dXJuVXJsIH0gPSB0aGlzLmdldE1vZGFsc0FuZE5vdGlmaWNhdGlvbnNDb25maWd1cmF0aW9uKG9wdGlvbnMpO1xuICAgICAgd2lkZ2V0Q29udHJvbGxlci5zZXRBY3Rpb24oe1xuICAgICAgICBuYW1lOiBcImNvbmZpcm0tdHJhbnNhY3Rpb25cIixcbiAgICAgICAgc2hvd05vdGlmaWNhdGlvbjogbm90aWZpY2F0aW9uczIuaW5jbHVkZXMoXCJiZWZvcmVcIiksXG4gICAgICAgIG9wZW5Nb2RhbDogbW9kYWxzLmluY2x1ZGVzKFwiYmVmb3JlXCIpLFxuICAgICAgICBzZW50OiBmYWxzZVxuICAgICAgfSk7XG4gICAgICBjb25zdCBvblJlcXVlc3RTZW50ID0gKCkgPT4ge1xuICAgICAgICBpZiAoYWJvcnRDb250cm9sbGVyLnNpZ25hbC5hYm9ydGVkKSB7XG4gICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIHdpZGdldENvbnRyb2xsZXIuc2V0QWN0aW9uKHtcbiAgICAgICAgICBuYW1lOiBcImNvbmZpcm0tdHJhbnNhY3Rpb25cIixcbiAgICAgICAgICBzaG93Tm90aWZpY2F0aW9uOiBub3RpZmljYXRpb25zMi5pbmNsdWRlcyhcImJlZm9yZVwiKSxcbiAgICAgICAgICBvcGVuTW9kYWw6IG1vZGFscy5pbmNsdWRlcyhcImJlZm9yZVwiKSxcbiAgICAgICAgICBzZW50OiB0cnVlXG4gICAgICAgIH0pO1xuICAgICAgICBpZiAodGhpcy53YWxsZXRJbmZvICYmIFwidW5pdmVyc2FsTGlua1wiIGluIHRoaXMud2FsbGV0SW5mbyAmJiAodGhpcy53YWxsZXRJbmZvLm9wZW5NZXRob2QgPT09IFwidW5pdmVyc2FsLWxpbmtcIiB8fCB0aGlzLndhbGxldEluZm8ub3Blbk1ldGhvZCA9PT0gXCJjdXN0b20tZGVlcGxpbmtcIikpIHtcbiAgICAgICAgICBpZiAoaXNUZWxlZ3JhbVVybCh0aGlzLndhbGxldEluZm8udW5pdmVyc2FsTGluaykpIHtcbiAgICAgICAgICAgIHJlZGlyZWN0VG9UZWxlZ3JhbSh0aGlzLndhbGxldEluZm8udW5pdmVyc2FsTGluaywge1xuICAgICAgICAgICAgICByZXR1cm5TdHJhdGVneSxcbiAgICAgICAgICAgICAgdHdhUmV0dXJuVXJsOiB0d2FSZXR1cm5VcmwgfHwgYXBwU3RhdGUudHdhUmV0dXJuVXJsLFxuICAgICAgICAgICAgICBmb3JjZVJlZGlyZWN0OiBmYWxzZVxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHJlZGlyZWN0VG9XYWxsZXQoXG4gICAgICAgICAgICAgIHRoaXMud2FsbGV0SW5mby51bml2ZXJzYWxMaW5rLFxuICAgICAgICAgICAgICB0aGlzLndhbGxldEluZm8uZGVlcExpbmssXG4gICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICByZXR1cm5TdHJhdGVneSxcbiAgICAgICAgICAgICAgICBmb3JjZVJlZGlyZWN0OiBmYWxzZVxuICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAoKSA9PiB7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9O1xuICAgICAgY29uc3QgYWJvcnRDb250cm9sbGVyID0gbmV3IEFib3J0Q29udHJvbGxlcigpO1xuICAgICAgY29uc3QgdW5zdWJzY3JpYmUgPSB0aGlzLm9uVHJhbnNhY3Rpb25Nb2RhbFN0YXRlQ2hhbmdlKChhY3Rpb24yKSA9PiB7XG4gICAgICAgIGlmIChhY3Rpb24yID09IG51bGwgPyB2b2lkIDAgOiBhY3Rpb24yLm9wZW5Nb2RhbCkge1xuICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICB1bnN1YnNjcmliZSgpO1xuICAgICAgICBpZiAoIWFjdGlvbjIpIHtcbiAgICAgICAgICBhYm9ydENvbnRyb2xsZXIuYWJvcnQoKTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgICB0cnkge1xuICAgICAgICBjb25zdCByZXN1bHQgPSB5aWVsZCB0aGlzLndhaXRGb3JTZW5kVHJhbnNhY3Rpb24oXG4gICAgICAgICAge1xuICAgICAgICAgICAgdHJhbnNhY3Rpb246IHR4LFxuICAgICAgICAgICAgc2lnbmFsOiBhYm9ydENvbnRyb2xsZXIuc2lnbmFsXG4gICAgICAgICAgfSxcbiAgICAgICAgICBvblJlcXVlc3RTZW50XG4gICAgICAgICk7XG4gICAgICAgIHRoaXMudHJhY2tlci50cmFja1RyYW5zYWN0aW9uU2lnbmVkKHRoaXMud2FsbGV0LCB0eCwgcmVzdWx0KTtcbiAgICAgICAgd2lkZ2V0Q29udHJvbGxlci5zZXRBY3Rpb24oe1xuICAgICAgICAgIG5hbWU6IFwidHJhbnNhY3Rpb24tc2VudFwiLFxuICAgICAgICAgIHNob3dOb3RpZmljYXRpb246IG5vdGlmaWNhdGlvbnMyLmluY2x1ZGVzKFwic3VjY2Vzc1wiKSxcbiAgICAgICAgICBvcGVuTW9kYWw6IG1vZGFscy5pbmNsdWRlcyhcInN1Y2Nlc3NcIilcbiAgICAgICAgfSk7XG4gICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgICB9IGNhdGNoIChlMikge1xuICAgICAgICB3aWRnZXRDb250cm9sbGVyLnNldEFjdGlvbih7XG4gICAgICAgICAgbmFtZTogXCJ0cmFuc2FjdGlvbi1jYW5jZWxlZFwiLFxuICAgICAgICAgIHNob3dOb3RpZmljYXRpb246IG5vdGlmaWNhdGlvbnMyLmluY2x1ZGVzKFwiZXJyb3JcIiksXG4gICAgICAgICAgb3Blbk1vZGFsOiBtb2RhbHMuaW5jbHVkZXMoXCJlcnJvclwiKVxuICAgICAgICB9KTtcbiAgICAgICAgaWYgKGUyIGluc3RhbmNlb2YgVG9uQ29ubmVjdEVycm9yKSB7XG4gICAgICAgICAgdGhyb3cgZTI7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgY29uc29sZS5lcnJvcihlMik7XG4gICAgICAgICAgdGhyb3cgbmV3IFRvbkNvbm5lY3RVSUVycm9yKFwiVW5oYW5kbGVkIGVycm9yOlwiICsgZTIpO1xuICAgICAgICB9XG4gICAgICB9IGZpbmFsbHkge1xuICAgICAgICB1bnN1YnNjcmliZSgpO1xuICAgICAgfVxuICAgIH0pO1xuICB9XG4gIGNvbm5lY3RFbWJlZGRlZFdhbGxldChlbWJlZGRlZFdhbGxldCkge1xuICAgIHJldHVybiBfX2FzeW5jKHRoaXMsIG51bGwsIGZ1bmN0aW9uKiAoKSB7XG4gICAgICBjb25zdCBjb25uZWN0ID0gKHBhcmFtZXRlcnMpID0+IHtcbiAgICAgICAgc2V0TGFzdFNlbGVjdGVkV2FsbGV0SW5mbyhlbWJlZGRlZFdhbGxldCk7XG4gICAgICAgIHRoaXMuY29ubmVjdG9yLmNvbm5lY3QoeyBqc0JyaWRnZUtleTogZW1iZWRkZWRXYWxsZXQuanNCcmlkZ2VLZXkgfSwgcGFyYW1ldGVycyk7XG4gICAgICB9O1xuICAgICAgY29uc3QgYWRkaXRpb25hbFJlcXVlc3QgPSBhcHBTdGF0ZS5jb25uZWN0UmVxdWVzdFBhcmFtZXRlcnM7XG4gICAgICBpZiAoKGFkZGl0aW9uYWxSZXF1ZXN0ID09IG51bGwgPyB2b2lkIDAgOiBhZGRpdGlvbmFsUmVxdWVzdC5zdGF0ZSkgPT09IFwibG9hZGluZ1wiKSB7XG4gICAgICAgIHRoaXMuY29ubmVjdFJlcXVlc3RQYXJhbWV0ZXJzQ2FsbGJhY2sgPSBjb25uZWN0O1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgY29ubmVjdChhZGRpdGlvbmFsUmVxdWVzdCA9PSBudWxsID8gdm9pZCAwIDogYWRkaXRpb25hbFJlcXVlc3QudmFsdWUpO1xuICAgICAgfVxuICAgICAgcmV0dXJuIHlpZWxkIHRoaXMud2FpdEZvcldhbGxldENvbm5lY3Rpb24oe1xuICAgICAgICBpZ25vcmVFcnJvcnM6IGZhbHNlXG4gICAgICB9KTtcbiAgICB9KTtcbiAgfVxuICBjb25uZWN0RXh0ZXJuYWxXYWxsZXQoKSB7XG4gICAgcmV0dXJuIF9fYXN5bmModGhpcywgbnVsbCwgZnVuY3Rpb24qICgpIHtcbiAgICAgIGNvbnN0IGFib3J0Q29udHJvbGxlciA9IG5ldyBBYm9ydENvbnRyb2xsZXIoKTtcbiAgICAgIHdpZGdldENvbnRyb2xsZXIub3BlbldhbGxldHNNb2RhbCgpO1xuICAgICAgY29uc3QgdW5zdWJzY3JpYmUgPSB0aGlzLm9uTW9kYWxTdGF0ZUNoYW5nZSgoc3RhdGUpID0+IHtcbiAgICAgICAgY29uc3QgeyBzdGF0dXMsIGNsb3NlUmVhc29uIH0gPSBzdGF0ZTtcbiAgICAgICAgaWYgKHN0YXR1cyA9PT0gXCJvcGVuZWRcIikge1xuICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICB1bnN1YnNjcmliZSgpO1xuICAgICAgICBpZiAoY2xvc2VSZWFzb24gPT09IFwiYWN0aW9uLWNhbmNlbGxlZFwiKSB7XG4gICAgICAgICAgYWJvcnRDb250cm9sbGVyLmFib3J0KCk7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgICAgcmV0dXJuIHlpZWxkIHRoaXMud2FpdEZvcldhbGxldENvbm5lY3Rpb24oe1xuICAgICAgICBpZ25vcmVFcnJvcnM6IHRydWUsXG4gICAgICAgIHNpZ25hbDogYWJvcnRDb250cm9sbGVyLnNpZ25hbFxuICAgICAgfSk7XG4gICAgfSk7XG4gIH1cbiAgd2FpdEZvcldhbGxldENvbm5lY3Rpb24ob3B0aW9ucykge1xuICAgIHJldHVybiBfX2FzeW5jKHRoaXMsIG51bGwsIGZ1bmN0aW9uKiAoKSB7XG4gICAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgICAgICB0aGlzLnRyYWNrZXIudHJhY2tDb25uZWN0aW9uU3RhcnRlZCgpO1xuICAgICAgICBjb25zdCB7IGlnbm9yZUVycm9ycyA9IGZhbHNlLCBzaWduYWwgPSBudWxsIH0gPSBvcHRpb25zO1xuICAgICAgICBpZiAoc2lnbmFsICYmIHNpZ25hbC5hYm9ydGVkKSB7XG4gICAgICAgICAgdGhpcy50cmFja2VyLnRyYWNrQ29ubmVjdGlvbkVycm9yKFwiQ29ubmVjdGlvbiB3YXMgY2FuY2VsbGVkXCIpO1xuICAgICAgICAgIHJldHVybiByZWplY3QobmV3IFRvbkNvbm5lY3RVSUVycm9yKFwiV2FsbGV0IHdhcyBub3QgY29ubmVjdGVkXCIpKTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBvblN0YXR1c0NoYW5nZUhhbmRsZXIgPSAod2FsbGV0KSA9PiBfX2FzeW5jKHRoaXMsIG51bGwsIGZ1bmN0aW9uKiAoKSB7XG4gICAgICAgICAgaWYgKCF3YWxsZXQpIHtcbiAgICAgICAgICAgIHRoaXMudHJhY2tlci50cmFja0Nvbm5lY3Rpb25FcnJvcihcIkNvbm5lY3Rpb24gd2FzIGNhbmNlbGxlZFwiKTtcbiAgICAgICAgICAgIGlmIChpZ25vcmVFcnJvcnMpIHtcbiAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdW5zdWJzY3JpYmUoKTtcbiAgICAgICAgICAgIHJlamVjdChuZXcgVG9uQ29ubmVjdFVJRXJyb3IoXCJXYWxsZXQgd2FzIG5vdCBjb25uZWN0ZWRcIikpO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICB0aGlzLnRyYWNrZXIudHJhY2tDb25uZWN0aW9uQ29tcGxldGVkKHdhbGxldCk7XG4gICAgICAgICAgICB1bnN1YnNjcmliZSgpO1xuICAgICAgICAgICAgcmVzb2x2ZSh3YWxsZXQpO1xuICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgICAgIGNvbnN0IG9uRXJyb3JzSGFuZGxlciA9IChyZWFzb24pID0+IHtcbiAgICAgICAgICB0aGlzLnRyYWNrZXIudHJhY2tDb25uZWN0aW9uRXJyb3IocmVhc29uLm1lc3NhZ2UpO1xuICAgICAgICAgIGlmIChpZ25vcmVFcnJvcnMpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICB9XG4gICAgICAgICAgdW5zdWJzY3JpYmUoKTtcbiAgICAgICAgICByZWplY3QocmVhc29uKTtcbiAgICAgICAgfTtcbiAgICAgICAgY29uc3QgdW5zdWJzY3JpYmUgPSB0aGlzLm9uU3RhdHVzQ2hhbmdlKFxuICAgICAgICAgICh3YWxsZXQpID0+IG9uU3RhdHVzQ2hhbmdlSGFuZGxlcih3YWxsZXQpLFxuICAgICAgICAgIChyZWFzb24pID0+IG9uRXJyb3JzSGFuZGxlcihyZWFzb24pXG4gICAgICAgICk7XG4gICAgICAgIGlmIChzaWduYWwpIHtcbiAgICAgICAgICBzaWduYWwuYWRkRXZlbnRMaXN0ZW5lcihcbiAgICAgICAgICAgIFwiYWJvcnRcIixcbiAgICAgICAgICAgICgpID0+IHtcbiAgICAgICAgICAgICAgdW5zdWJzY3JpYmUoKTtcbiAgICAgICAgICAgICAgcmVqZWN0KG5ldyBUb25Db25uZWN0VUlFcnJvcihcIldhbGxldCB3YXMgbm90IGNvbm5lY3RlZFwiKSk7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgeyBvbmNlOiB0cnVlIH1cbiAgICAgICAgICApO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9KTtcbiAgfVxuICB3YWl0Rm9yU2VuZFRyYW5zYWN0aW9uKG9wdGlvbnMsIG9uUmVxdWVzdFNlbnQpIHtcbiAgICByZXR1cm4gX19hc3luYyh0aGlzLCBudWxsLCBmdW5jdGlvbiogKCkge1xuICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICAgICAgY29uc3QgeyB0cmFuc2FjdGlvbiwgc2lnbmFsIH0gPSBvcHRpb25zO1xuICAgICAgICBpZiAoc2lnbmFsLmFib3J0ZWQpIHtcbiAgICAgICAgICB0aGlzLnRyYWNrZXIudHJhY2tUcmFuc2FjdGlvblNpZ25pbmdGYWlsZWQoXG4gICAgICAgICAgICB0aGlzLndhbGxldCxcbiAgICAgICAgICAgIHRyYW5zYWN0aW9uLFxuICAgICAgICAgICAgXCJUcmFuc2FjdGlvbiB3YXMgY2FuY2VsbGVkXCJcbiAgICAgICAgICApO1xuICAgICAgICAgIHJldHVybiByZWplY3QobmV3IFRvbkNvbm5lY3RVSUVycm9yKFwiVHJhbnNhY3Rpb24gd2FzIG5vdCBzZW50XCIpKTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBvblRyYW5zYWN0aW9uSGFuZGxlciA9ICh0cmFuc2FjdGlvbjIpID0+IF9fYXN5bmModGhpcywgbnVsbCwgZnVuY3Rpb24qICgpIHtcbiAgICAgICAgICByZXNvbHZlKHRyYW5zYWN0aW9uMik7XG4gICAgICAgIH0pO1xuICAgICAgICBjb25zdCBvbkVycm9yc0hhbmRsZXIgPSAocmVhc29uKSA9PiB7XG4gICAgICAgICAgcmVqZWN0KHJlYXNvbik7XG4gICAgICAgIH07XG4gICAgICAgIGNvbnN0IG9uQ2FuY2VsZWRIYW5kbGVyID0gKCkgPT4ge1xuICAgICAgICAgIHRoaXMudHJhY2tlci50cmFja1RyYW5zYWN0aW9uU2lnbmluZ0ZhaWxlZChcbiAgICAgICAgICAgIHRoaXMud2FsbGV0LFxuICAgICAgICAgICAgdHJhbnNhY3Rpb24sXG4gICAgICAgICAgICBcIlRyYW5zYWN0aW9uIHdhcyBjYW5jZWxsZWRcIlxuICAgICAgICAgICk7XG4gICAgICAgICAgcmVqZWN0KG5ldyBUb25Db25uZWN0VUlFcnJvcihcIlRyYW5zYWN0aW9uIHdhcyBub3Qgc2VudFwiKSk7XG4gICAgICAgIH07XG4gICAgICAgIHNpZ25hbC5hZGRFdmVudExpc3RlbmVyKFwiYWJvcnRcIiwgb25DYW5jZWxlZEhhbmRsZXIsIHsgb25jZTogdHJ1ZSB9KTtcbiAgICAgICAgdGhpcy5jb25uZWN0b3Iuc2VuZFRyYW5zYWN0aW9uKHRyYW5zYWN0aW9uLCB7IG9uUmVxdWVzdFNlbnQsIHNpZ25hbCB9KS50aGVuKChyZXN1bHQpID0+IHtcbiAgICAgICAgICBzaWduYWwucmVtb3ZlRXZlbnRMaXN0ZW5lcihcImFib3J0XCIsIG9uQ2FuY2VsZWRIYW5kbGVyKTtcbiAgICAgICAgICByZXR1cm4gb25UcmFuc2FjdGlvbkhhbmRsZXIocmVzdWx0KTtcbiAgICAgICAgfSkuY2F0Y2goKHJlYXNvbikgPT4ge1xuICAgICAgICAgIHNpZ25hbC5yZW1vdmVFdmVudExpc3RlbmVyKFwiYWJvcnRcIiwgb25DYW5jZWxlZEhhbmRsZXIpO1xuICAgICAgICAgIHJldHVybiBvbkVycm9yc0hhbmRsZXIocmVhc29uKTtcbiAgICAgICAgfSk7XG4gICAgICB9KTtcbiAgICB9KTtcbiAgfVxuICBvblRyYW5zYWN0aW9uTW9kYWxTdGF0ZUNoYW5nZShvbkNoYW5nZSkge1xuICAgIHJldHVybiB0aGlzLnRyYW5zYWN0aW9uTW9kYWwub25TdGF0ZUNoYW5nZShvbkNoYW5nZSk7XG4gIH1cbiAgc3Vic2NyaWJlVG9XYWxsZXRDaGFuZ2UoKSB7XG4gICAgdGhpcy5jb25uZWN0b3Iub25TdGF0dXNDaGFuZ2UoKHdhbGxldCkgPT4gX19hc3luYyh0aGlzLCBudWxsLCBmdW5jdGlvbiogKCkge1xuICAgICAgdmFyIF9hMjtcbiAgICAgIGlmICh3YWxsZXQpIHtcbiAgICAgICAgeWllbGQgdGhpcy51cGRhdGVXYWxsZXRJbmZvKHdhbGxldCk7XG4gICAgICAgIHRoaXMuc2V0UHJlZmVycmVkV2FsbGV0QXBwTmFtZSgoKF9hMiA9IHRoaXMud2FsbGV0SW5mbykgPT0gbnVsbCA/IHZvaWQgMCA6IF9hMi5hcHBOYW1lKSB8fCB3YWxsZXQuZGV2aWNlLmFwcE5hbWUpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdGhpcy53YWxsZXRJbmZvU3RvcmFnZS5yZW1vdmVXYWxsZXRJbmZvKCk7XG4gICAgICB9XG4gICAgfSkpO1xuICB9XG4gIHNldFByZWZlcnJlZFdhbGxldEFwcE5hbWUodmFsdWUpIHtcbiAgICB0aGlzLnByZWZlcnJlZFdhbGxldFN0b3JhZ2Uuc2V0UHJlZmVycmVkV2FsbGV0QXBwTmFtZSh2YWx1ZSk7XG4gICAgc2V0QXBwU3RhdGUoeyBwcmVmZXJyZWRXYWxsZXRBcHBOYW1lOiB2YWx1ZSB9KTtcbiAgfVxuICBnZXRTZWxlY3RlZFdhbGxldEluZm8od2FsbGV0KSB7XG4gICAgcmV0dXJuIF9fYXN5bmModGhpcywgbnVsbCwgZnVuY3Rpb24qICgpIHtcbiAgICAgIGxldCBsYXN0U2VsZWN0ZWRXYWxsZXRJbmZvMiA9IHdpZGdldENvbnRyb2xsZXIuZ2V0U2VsZWN0ZWRXYWxsZXRJbmZvKCk7XG4gICAgICBpZiAoIWxhc3RTZWxlY3RlZFdhbGxldEluZm8yKSB7XG4gICAgICAgIHJldHVybiBudWxsO1xuICAgICAgfVxuICAgICAgbGV0IGZ1bGxMYXN0U2VsZWN0ZWRXYWxsZXRJbmZvO1xuICAgICAgaWYgKCEoXCJuYW1lXCIgaW4gbGFzdFNlbGVjdGVkV2FsbGV0SW5mbzIpKSB7XG4gICAgICAgIGNvbnN0IHdhbGxldHNMaXN0ID0gYXBwbHlXYWxsZXRzTGlzdENvbmZpZ3VyYXRpb24oXG4gICAgICAgICAgeWllbGQgdGhpcy53YWxsZXRzTGlzdCxcbiAgICAgICAgICBhcHBTdGF0ZS53YWxsZXRzTGlzdENvbmZpZ3VyYXRpb25cbiAgICAgICAgKTtcbiAgICAgICAgY29uc3Qgd2FsbGV0SW5mbyA9IHdhbGxldHNMaXN0LmZpbmQoKGl0ZW0pID0+IGVxV2FsbGV0TmFtZShpdGVtLCB3YWxsZXQuZGV2aWNlLmFwcE5hbWUpKTtcbiAgICAgICAgaWYgKCF3YWxsZXRJbmZvKSB7XG4gICAgICAgICAgdGhyb3cgbmV3IFRvbkNvbm5lY3RVSUVycm9yKFxuICAgICAgICAgICAgYENhbm5vdCBmaW5kIFdhbGxldEluZm8gZm9yIHRoZSAnJHt3YWxsZXQuZGV2aWNlLmFwcE5hbWV9JyB3YWxsZXRgXG4gICAgICAgICAgKTtcbiAgICAgICAgfVxuICAgICAgICBmdWxsTGFzdFNlbGVjdGVkV2FsbGV0SW5mbyA9IF9fc3ByZWFkVmFsdWVzKF9fc3ByZWFkVmFsdWVzKHt9LCB3YWxsZXRJbmZvKSwgbGFzdFNlbGVjdGVkV2FsbGV0SW5mbzIpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgZnVsbExhc3RTZWxlY3RlZFdhbGxldEluZm8gPSBsYXN0U2VsZWN0ZWRXYWxsZXRJbmZvMjtcbiAgICAgIH1cbiAgICAgIHJldHVybiBmdWxsTGFzdFNlbGVjdGVkV2FsbGV0SW5mbztcbiAgICB9KTtcbiAgfVxuICB1cGRhdGVXYWxsZXRJbmZvKHdhbGxldCkge1xuICAgIHJldHVybiBfX2FzeW5jKHRoaXMsIG51bGwsIGZ1bmN0aW9uKiAoKSB7XG4gICAgICBjb25zdCBzZWxlY3RlZFdhbGxldEluZm8gPSB5aWVsZCB0aGlzLmdldFNlbGVjdGVkV2FsbGV0SW5mbyh3YWxsZXQpO1xuICAgICAgaWYgKHNlbGVjdGVkV2FsbGV0SW5mbykge1xuICAgICAgICB0aGlzLndhbGxldEluZm8gPSBzZWxlY3RlZFdhbGxldEluZm87XG4gICAgICAgIHRoaXMud2FsbGV0SW5mb1N0b3JhZ2Uuc2V0V2FsbGV0SW5mbyhzZWxlY3RlZFdhbGxldEluZm8pO1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgICBjb25zdCBzdG9yZWRXYWxsZXRJbmZvID0gdGhpcy53YWxsZXRJbmZvU3RvcmFnZS5nZXRXYWxsZXRJbmZvKCk7XG4gICAgICBpZiAoc3RvcmVkV2FsbGV0SW5mbykge1xuICAgICAgICB0aGlzLndhbGxldEluZm8gPSBzdG9yZWRXYWxsZXRJbmZvO1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgICB0aGlzLndhbGxldEluZm8gPSAoeWllbGQgdGhpcy53YWxsZXRzTGlzdCkuZmluZChcbiAgICAgICAgKHdhbGxldEluZm8pID0+IGVxV2FsbGV0TmFtZSh3YWxsZXRJbmZvLCB3YWxsZXQuZGV2aWNlLmFwcE5hbWUpXG4gICAgICApIHx8IG51bGw7XG4gICAgfSk7XG4gIH1cbiAgbm9ybWFsaXplV2lkZ2V0Um9vdChyb290SWQpIHtcbiAgICBpZiAoIXJvb3RJZCB8fCAhZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQocm9vdElkKSkge1xuICAgICAgcm9vdElkID0gXCJ0Yy13aWRnZXQtcm9vdFwiO1xuICAgICAgY29uc3Qgcm9vdEVsZW1lbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICAgICAgcm9vdEVsZW1lbnQuaWQgPSByb290SWQ7XG4gICAgICBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKHJvb3RFbGVtZW50KTtcbiAgICB9XG4gICAgcmV0dXJuIHJvb3RJZDtcbiAgfVxuICBjaGVja0J1dHRvblJvb3RFeGlzdChidXR0b25Sb290SWQpIHtcbiAgICBpZiAoYnV0dG9uUm9vdElkID09IG51bGwpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgaWYgKCFkb2N1bWVudC5nZXRFbGVtZW50QnlJZChidXR0b25Sb290SWQpKSB7XG4gICAgICB0aHJvdyBuZXcgVG9uQ29ubmVjdFVJRXJyb3IoYCR7YnV0dG9uUm9vdElkfSBlbGVtZW50IG5vdCBmb3VuZCBpbiB0aGUgZG9jdW1lbnQuYCk7XG4gICAgfVxuICB9XG4gIGdldE1vZGFsc0FuZE5vdGlmaWNhdGlvbnNDb25maWd1cmF0aW9uKG9wdGlvbnMpIHtcbiAgICB2YXIgX2EyLCBfYjIsIF9jMiwgX2QyLCBfZTIsIF9mMjtcbiAgICBjb25zdCBhbGxBY3Rpb25zID0gW1xuICAgICAgXCJiZWZvcmVcIixcbiAgICAgIFwic3VjY2Vzc1wiLFxuICAgICAgXCJlcnJvclwiXG4gICAgXTtcbiAgICBsZXQgbm90aWZpY2F0aW9uczIgPSBhbGxBY3Rpb25zO1xuICAgIGlmICgoKF9hMiA9IHRoaXMuYWN0aW9uc0NvbmZpZ3VyYXRpb24pID09IG51bGwgPyB2b2lkIDAgOiBfYTIubm90aWZpY2F0aW9ucykgJiYgKChfYjIgPSB0aGlzLmFjdGlvbnNDb25maWd1cmF0aW9uKSA9PSBudWxsID8gdm9pZCAwIDogX2IyLm5vdGlmaWNhdGlvbnMpICE9PSBcImFsbFwiKSB7XG4gICAgICBub3RpZmljYXRpb25zMiA9IHRoaXMuYWN0aW9uc0NvbmZpZ3VyYXRpb24ubm90aWZpY2F0aW9ucztcbiAgICB9XG4gICAgaWYgKG9wdGlvbnMgPT0gbnVsbCA/IHZvaWQgMCA6IG9wdGlvbnMubm90aWZpY2F0aW9ucykge1xuICAgICAgaWYgKG9wdGlvbnMubm90aWZpY2F0aW9ucyA9PT0gXCJhbGxcIikge1xuICAgICAgICBub3RpZmljYXRpb25zMiA9IGFsbEFjdGlvbnM7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBub3RpZmljYXRpb25zMiA9IG9wdGlvbnMubm90aWZpY2F0aW9ucztcbiAgICAgIH1cbiAgICB9XG4gICAgbGV0IG1vZGFscyA9IFtcImJlZm9yZVwiXTtcbiAgICBpZiAoKF9jMiA9IHRoaXMuYWN0aW9uc0NvbmZpZ3VyYXRpb24pID09IG51bGwgPyB2b2lkIDAgOiBfYzIubW9kYWxzKSB7XG4gICAgICBpZiAodGhpcy5hY3Rpb25zQ29uZmlndXJhdGlvbi5tb2RhbHMgPT09IFwiYWxsXCIpIHtcbiAgICAgICAgbW9kYWxzID0gYWxsQWN0aW9ucztcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIG1vZGFscyA9IHRoaXMuYWN0aW9uc0NvbmZpZ3VyYXRpb24ubW9kYWxzO1xuICAgICAgfVxuICAgIH1cbiAgICBpZiAob3B0aW9ucyA9PSBudWxsID8gdm9pZCAwIDogb3B0aW9ucy5tb2RhbHMpIHtcbiAgICAgIGlmIChvcHRpb25zLm1vZGFscyA9PT0gXCJhbGxcIikge1xuICAgICAgICBtb2RhbHMgPSBhbGxBY3Rpb25zO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgbW9kYWxzID0gb3B0aW9ucy5tb2RhbHM7XG4gICAgICB9XG4gICAgfVxuICAgIGNvbnN0IHJldHVyblN0cmF0ZWd5ID0gKG9wdGlvbnMgPT0gbnVsbCA/IHZvaWQgMCA6IG9wdGlvbnMucmV0dXJuU3RyYXRlZ3kpIHx8ICgoX2QyID0gdGhpcy5hY3Rpb25zQ29uZmlndXJhdGlvbikgPT0gbnVsbCA/IHZvaWQgMCA6IF9kMi5yZXR1cm5TdHJhdGVneSkgfHwgXCJiYWNrXCI7XG4gICAgY29uc3QgdHdhUmV0dXJuVXJsID0gKG9wdGlvbnMgPT0gbnVsbCA/IHZvaWQgMCA6IG9wdGlvbnMudHdhUmV0dXJuVXJsKSB8fCAoKF9lMiA9IHRoaXMuYWN0aW9uc0NvbmZpZ3VyYXRpb24pID09IG51bGwgPyB2b2lkIDAgOiBfZTIudHdhUmV0dXJuVXJsKTtcbiAgICBsZXQgc2tpcFJlZGlyZWN0VG9XYWxsZXQgPSAob3B0aW9ucyA9PSBudWxsID8gdm9pZCAwIDogb3B0aW9ucy5za2lwUmVkaXJlY3RUb1dhbGxldCkgfHwgKChfZjIgPSB0aGlzLmFjdGlvbnNDb25maWd1cmF0aW9uKSA9PSBudWxsID8gdm9pZCAwIDogX2YyLnNraXBSZWRpcmVjdFRvV2FsbGV0KSB8fCBcImlvc1wiO1xuICAgIGlmIChpc0luVE1BKCkpIHtcbiAgICAgIHNraXBSZWRpcmVjdFRvV2FsbGV0ID0gXCJuZXZlclwiO1xuICAgIH1cbiAgICByZXR1cm4ge1xuICAgICAgbm90aWZpY2F0aW9uczogbm90aWZpY2F0aW9uczIsXG4gICAgICBtb2RhbHMsXG4gICAgICByZXR1cm5TdHJhdGVneSxcbiAgICAgIHR3YVJldHVyblVybCxcbiAgICAgIHNraXBSZWRpcmVjdFRvV2FsbGV0XG4gICAgfTtcbiAgfVxufVxuZXhwb3J0IHtcbiAgVEhFTUUsXG4gIFRvbkNvbm5lY3RVSSxcbiAgVG9uQ29ubmVjdFVJRXJyb3Jcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5tanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@tonconnect/ui/lib/index.mjs\n");

/***/ })

};
;