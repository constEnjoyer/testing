"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/telegram-user/route";
exports.ids = ["app/api/telegram-user/route"];
exports.modules = {

/***/ "mongoose":
/*!***************************!*\
  !*** external "mongoose" ***!
  \***************************/
/***/ ((module) => {

module.exports = require("mongoose");

/***/ }),

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Ftelegram-user%2Froute&page=%2Fapi%2Ftelegram-user%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Ftelegram-user%2Froute.ts&appDir=C%3A%5CUsers%5Cconst%5CDesktop%5Ctonotchance-main%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Cconst%5CDesktop%5Ctonotchance-main&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Ftelegram-user%2Froute&page=%2Fapi%2Ftelegram-user%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Ftelegram-user%2Froute.ts&appDir=C%3A%5CUsers%5Cconst%5CDesktop%5Ctonotchance-main%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Cconst%5CDesktop%5Ctonotchance-main&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var C_Users_const_Desktop_tonotchance_main_src_app_api_telegram_user_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./src/app/api/telegram-user/route.ts */ \"(rsc)/./src/app/api/telegram-user/route.ts\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/telegram-user/route\",\n        pathname: \"/api/telegram-user\",\n        filename: \"route\",\n        bundlePath: \"app/api/telegram-user/route\"\n    },\n    resolvedPagePath: \"C:\\\\Users\\\\const\\\\Desktop\\\\tonotchance-main\\\\src\\\\app\\\\api\\\\telegram-user\\\\route.ts\",\n    nextConfigOutput,\n    userland: C_Users_const_Desktop_tonotchance_main_src_app_api_telegram_user_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks } = routeModule;\nconst originalPathname = \"/api/telegram-user/route\";\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        serverHooks,\n        staticGenerationAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZhcGklMkZ0ZWxlZ3JhbS11c2VyJTJGcm91dGUmcGFnZT0lMkZhcGklMkZ0ZWxlZ3JhbS11c2VyJTJGcm91dGUmYXBwUGF0aHM9JnBhZ2VQYXRoPXByaXZhdGUtbmV4dC1hcHAtZGlyJTJGYXBpJTJGdGVsZWdyYW0tdXNlciUyRnJvdXRlLnRzJmFwcERpcj1DJTNBJTVDVXNlcnMlNUNjb25zdCU1Q0Rlc2t0b3AlNUN0b25vdGNoYW5jZS1tYWluJTVDc3JjJTVDYXBwJnBhZ2VFeHRlbnNpb25zPXRzeCZwYWdlRXh0ZW5zaW9ucz10cyZwYWdlRXh0ZW5zaW9ucz1qc3gmcGFnZUV4dGVuc2lvbnM9anMmcm9vdERpcj1DJTNBJTVDVXNlcnMlNUNjb25zdCU1Q0Rlc2t0b3AlNUN0b25vdGNoYW5jZS1tYWluJmlzRGV2PXRydWUmdHNjb25maWdQYXRoPXRzY29uZmlnLmpzb24mYmFzZVBhdGg9JmFzc2V0UHJlZml4PSZuZXh0Q29uZmlnT3V0cHV0PSZwcmVmZXJyZWRSZWdpb249Jm1pZGRsZXdhcmVDb25maWc9ZTMwJTNEISIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7QUFBc0c7QUFDdkM7QUFDYztBQUNtQztBQUNoSDtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsZ0hBQW1CO0FBQzNDO0FBQ0EsY0FBYyx5RUFBUztBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsWUFBWTtBQUNaLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQSxRQUFRLGlFQUFpRTtBQUN6RTtBQUNBO0FBQ0EsV0FBVyw0RUFBVztBQUN0QjtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ3VIOztBQUV2SCIsInNvdXJjZXMiOlsid2VicGFjazovL25leHRqcy10ZW1wbGF0ZS8/MDQ0YyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBcHBSb3V0ZVJvdXRlTW9kdWxlIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLW1vZHVsZXMvYXBwLXJvdXRlL21vZHVsZS5jb21waWxlZFwiO1xuaW1wb3J0IHsgUm91dGVLaW5kIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLWtpbmRcIjtcbmltcG9ydCB7IHBhdGNoRmV0Y2ggYXMgX3BhdGNoRmV0Y2ggfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9saWIvcGF0Y2gtZmV0Y2hcIjtcbmltcG9ydCAqIGFzIHVzZXJsYW5kIGZyb20gXCJDOlxcXFxVc2Vyc1xcXFxjb25zdFxcXFxEZXNrdG9wXFxcXHRvbm90Y2hhbmNlLW1haW5cXFxcc3JjXFxcXGFwcFxcXFxhcGlcXFxcdGVsZWdyYW0tdXNlclxcXFxyb3V0ZS50c1wiO1xuLy8gV2UgaW5qZWN0IHRoZSBuZXh0Q29uZmlnT3V0cHV0IGhlcmUgc28gdGhhdCB3ZSBjYW4gdXNlIHRoZW0gaW4gdGhlIHJvdXRlXG4vLyBtb2R1bGUuXG5jb25zdCBuZXh0Q29uZmlnT3V0cHV0ID0gXCJcIlxuY29uc3Qgcm91dGVNb2R1bGUgPSBuZXcgQXBwUm91dGVSb3V0ZU1vZHVsZSh7XG4gICAgZGVmaW5pdGlvbjoge1xuICAgICAgICBraW5kOiBSb3V0ZUtpbmQuQVBQX1JPVVRFLFxuICAgICAgICBwYWdlOiBcIi9hcGkvdGVsZWdyYW0tdXNlci9yb3V0ZVwiLFxuICAgICAgICBwYXRobmFtZTogXCIvYXBpL3RlbGVncmFtLXVzZXJcIixcbiAgICAgICAgZmlsZW5hbWU6IFwicm91dGVcIixcbiAgICAgICAgYnVuZGxlUGF0aDogXCJhcHAvYXBpL3RlbGVncmFtLXVzZXIvcm91dGVcIlxuICAgIH0sXG4gICAgcmVzb2x2ZWRQYWdlUGF0aDogXCJDOlxcXFxVc2Vyc1xcXFxjb25zdFxcXFxEZXNrdG9wXFxcXHRvbm90Y2hhbmNlLW1haW5cXFxcc3JjXFxcXGFwcFxcXFxhcGlcXFxcdGVsZWdyYW0tdXNlclxcXFxyb3V0ZS50c1wiLFxuICAgIG5leHRDb25maWdPdXRwdXQsXG4gICAgdXNlcmxhbmRcbn0pO1xuLy8gUHVsbCBvdXQgdGhlIGV4cG9ydHMgdGhhdCB3ZSBuZWVkIHRvIGV4cG9zZSBmcm9tIHRoZSBtb2R1bGUuIFRoaXMgc2hvdWxkXG4vLyBiZSBlbGltaW5hdGVkIHdoZW4gd2UndmUgbW92ZWQgdGhlIG90aGVyIHJvdXRlcyB0byB0aGUgbmV3IGZvcm1hdC4gVGhlc2Vcbi8vIGFyZSB1c2VkIHRvIGhvb2sgaW50byB0aGUgcm91dGUuXG5jb25zdCB7IHJlcXVlc3RBc3luY1N0b3JhZ2UsIHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2UsIHNlcnZlckhvb2tzIH0gPSByb3V0ZU1vZHVsZTtcbmNvbnN0IG9yaWdpbmFsUGF0aG5hbWUgPSBcIi9hcGkvdGVsZWdyYW0tdXNlci9yb3V0ZVwiO1xuZnVuY3Rpb24gcGF0Y2hGZXRjaCgpIHtcbiAgICByZXR1cm4gX3BhdGNoRmV0Y2goe1xuICAgICAgICBzZXJ2ZXJIb29rcyxcbiAgICAgICAgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZVxuICAgIH0pO1xufVxuZXhwb3J0IHsgcm91dGVNb2R1bGUsIHJlcXVlc3RBc3luY1N0b3JhZ2UsIHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2UsIHNlcnZlckhvb2tzLCBvcmlnaW5hbFBhdGhuYW1lLCBwYXRjaEZldGNoLCAgfTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YXBwLXJvdXRlLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Ftelegram-user%2Froute&page=%2Fapi%2Ftelegram-user%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Ftelegram-user%2Froute.ts&appDir=C%3A%5CUsers%5Cconst%5CDesktop%5Ctonotchance-main%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Cconst%5CDesktop%5Ctonotchance-main&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./src/app/api/telegram-user/route.ts":
/*!********************************************!*\
  !*** ./src/app/api/telegram-user/route.ts ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   POST: () => (/* binding */ POST),\n/* harmony export */   dynamic: () => (/* binding */ dynamic)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n/* harmony import */ var _lib_db__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/db */ \"(rsc)/./src/lib/db.js\");\n/* harmony import */ var _models_User__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/models/User */ \"(rsc)/./src/models/User.js\");\n/* harmony import */ var _models_Referral__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/models/Referral */ \"(rsc)/./src/models/Referral.js\");\n\n\n\n\nconst dynamic = \"force-dynamic\";\n/**\n * Создает или обновляет пользователя Telegram\n */ async function createTelegramUser(telegramId, userData) {\n    console.log(\"[API telegram-user] \\uD83D\\uDCDD Создание/обновление пользователя:\", {\n        telegramId\n    });\n    const user = await _models_User__WEBPACK_IMPORTED_MODULE_2__[\"default\"].findOne({\n        telegramId\n    });\n    if (user) {\n        console.log(\"[API telegram-user] ✏️ Обновление существующего пользователя\");\n        // Обновляем существующего пользователя\n        user.firstName = userData.firstName || user.firstName;\n        user.lastName = userData.lastName || user.lastName;\n        user.username = userData.username || user.username;\n        user.photoUrl = userData.photoUrl || user.photoUrl;\n        user.chatId = userData.chatId || user.chatId;\n        await user.save();\n        return user;\n    }\n    console.log(\"[API telegram-user] ➕ Создание нового пользователя\");\n    // Создаем нового пользователя\n    const newUser = await _models_User__WEBPACK_IMPORTED_MODULE_2__[\"default\"].create({\n        telegramId,\n        firstName: userData.firstName || \"\",\n        lastName: userData.lastName || \"\",\n        username: userData.username || \"\",\n        photoUrl: userData.photoUrl || \"\",\n        chatId: userData.chatId || \"\",\n        referralCode: `${telegramId.slice(-5)}_${Math.random().toString(36).substring(2, 7)}`,\n        tickets: 0,\n        tonotChanceTickets: 0,\n        balance: 0,\n        tonBalance: 0,\n        lastActive: new Date()\n    });\n    console.log(\"[API telegram-user] ✅ Пользователь создан:\", {\n        id: newUser.telegramId\n    });\n    return newUser;\n}\n/**\n * Регистрирует реферальную связь\n */ async function registerReferral(telegramId, startParam) {\n    console.log(\"[API telegram-user] \\uD83D\\uDD04 Регистрация реферала:\", {\n        telegramId,\n        startParam\n    });\n    // Проверяем существование реферера\n    const referer = await _models_User__WEBPACK_IMPORTED_MODULE_2__[\"default\"].findOne({\n        referralCode: startParam\n    });\n    if (!referer) {\n        console.log(\"[API telegram-user] ❌ Реферер не найден:\", startParam);\n        throw new Error(\"Invalid referral code\");\n    }\n    console.log(\"[API telegram-user] ✅ Найден реферер:\", {\n        id: referer.telegramId,\n        code: startParam\n    });\n    // Проверяем самореферальность\n    if (referer.telegramId === telegramId) {\n        console.log(\"[API telegram-user] ❌ Попытка самореферальности:\", telegramId);\n        throw new Error(\"Cannot register your own referral code\");\n    }\n    // Проверяем существующую связь\n    const existingReferral = await _models_Referral__WEBPACK_IMPORTED_MODULE_3__[\"default\"].findOne({\n        refererId: referer.telegramId,\n        referralId: telegramId\n    });\n    if (existingReferral) {\n        console.log(\"[API telegram-user] ℹ️ Связь уже существует:\", {\n            refererId: existingReferral.refererId,\n            referralId: existingReferral.referralId,\n            isValid: existingReferral.isValid\n        });\n        return existingReferral;\n    }\n    // Получаем данные реферала\n    const referal = await _models_User__WEBPACK_IMPORTED_MODULE_2__[\"default\"].findOne({\n        telegramId\n    });\n    if (!referal) {\n        console.log(\"[API telegram-user] ❌ Реферал не найден:\", telegramId);\n        throw new Error(\"Referral user not found\");\n    }\n    // Создаем новую реферальную связь\n    console.log(\"[API telegram-user] \\uD83D\\uDCDD Создание новой реферальной связи\");\n    const newReferral = new _models_Referral__WEBPACK_IMPORTED_MODULE_3__[\"default\"]({\n        refererId: referer.telegramId,\n        referralId: telegramId,\n        username: referal.username,\n        firstName: referal.firstName,\n        lastName: referal.lastName,\n        photoUrl: referal.photoUrl,\n        hasPlayedRoomA: false,\n        hasPlayedRoomB: false,\n        isValid: false,\n        createdAt: new Date()\n    });\n    await newReferral.save();\n    console.log(\"[API telegram-user] ✅ Реферальная связь создана:\", {\n        id: newReferral._id,\n        refererId: newReferral.refererId,\n        referralId: newReferral.referralId\n    });\n    // Обновляем список рефералов у реферера\n    if (!referer.referrals) {\n        referer.referrals = [];\n    }\n    referer.referrals.push({\n        userId: telegramId,\n        username: referal.username,\n        photoUrl: referal.photoUrl,\n        roomAPlayed: false,\n        roomBPlayed: false,\n        isValid: false\n    });\n    await referer.save();\n    console.log(\"[API telegram-user] ✅ Профиль реферера обновлен:\", {\n        refererId: referer.telegramId,\n        referralsCount: referer.referrals.length\n    });\n    return newReferral;\n}\n/**\n * Получает пользователя с информацией о рефералах\n */ async function getUserWithReferrals(telegramId) {\n    console.log(\"[API telegram-user] \\uD83D\\uDD0D Получение данных пользователя с рефералами:\", telegramId);\n    const user = await _models_User__WEBPACK_IMPORTED_MODULE_2__[\"default\"].findOne({\n        telegramId\n    });\n    if (!user) {\n        throw new Error(\"User not found\");\n    }\n    return user;\n}\nasync function POST(req) {\n    console.log(\"[API telegram-user] \\uD83D\\uDCE5 Начало обработки запроса\");\n    try {\n        // 1. Логируем все заголовки запроса\n        const headers = {\n            contentType: req.headers.get(\"content-type\"),\n            userAgent: req.headers.get(\"user-agent\"),\n            referer: req.headers.get(\"referer\")\n        };\n        console.log(\"[API telegram-user] \\uD83D\\uDCCB Headers:\", headers);\n        // 2. Получаем и логируем URL параметры из referer\n        const refererUrl = headers.referer ? new URL(headers.referer) : null;\n        const startParamFromReferer = refererUrl?.searchParams.get(\"tgWebAppStartParam\");\n        console.log(\"[API telegram-user] \\uD83D\\uDD0D Параметры из referer:\", {\n            startParamFromReferer,\n            fullRefererUrl: headers.referer\n        });\n        const body = await req.json();\n        console.log(\"[API telegram-user] \\uD83D\\uDCE5 Тело запроса:\", {\n            id: body.id,\n            startParam: body.startParam,\n            hasStartParam: !!body.startParam\n        });\n        // Используем startParam из тела запроса или из referer\n        const startParam = body.startParam || startParamFromReferer;\n        // 3. Логируем полное тело запроса\n        console.log(\"[API telegram-user] \\uD83D\\uDCE6 Полное тело запроса:\", body);\n        // 4. Проверяем все возможные источники startParam\n        const startParamSources = {\n            fromBody: body.startParam,\n            fromStartParam: body.start_param,\n            fromWebApp: body.tgWebAppStartParam,\n            fromWebAppData: body.webAppData?.start_param,\n            fromReferer: startParamFromReferer\n        };\n        console.log(\"[API telegram-user] \\uD83D\\uDD0D Все источники startParam:\", startParamSources);\n        // 5. Определяем итоговый startParam\n        const finalStartParam = startParamSources.fromBody || startParamSources.fromStartParam || startParamSources.fromWebApp || startParamSources.fromWebAppData || startParamSources.fromReferer;\n        console.log(\"[API telegram-user] ✨ Итоговый startParam:\", finalStartParam);\n        // Поддерживаем оба формата данных\n        const telegramId = body.telegramId || body.id;\n        const userData = {\n            firstName: body.firstName || body.first_name,\n            lastName: body.lastName || body.last_name,\n            username: body.username,\n            chatId: body.chatId || body.telegram_chat_id\n        };\n        if (!telegramId) {\n            console.log(\"[API telegram-user] ❌ Отсутствует telegramId\");\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: false,\n                error: \"Telegram ID is required\"\n            }, {\n                status: 400\n            });\n        }\n        await (0,_lib_db__WEBPACK_IMPORTED_MODULE_1__.connectToDatabase)();\n        // 1. Создаем/обновляем пользователя\n        const user = await createTelegramUser(String(telegramId), userData);\n        // 2. Если есть startParam, регистрируем реферала\n        let referral = null;\n        if (finalStartParam) {\n            try {\n                console.log(\"[API telegram-user] \\uD83C\\uDFAF Попытка регистрации реферала:\", {\n                    telegramId,\n                    startParam: finalStartParam,\n                    userData\n                });\n                referral = await registerReferral(String(telegramId), finalStartParam);\n            } catch (refError) {\n                console.error(\"[API telegram-user] ❌ Ошибка при регистрации реферала:\", refError);\n            }\n        } else {\n            console.log(\"[API telegram-user] ℹ️ startParam отсутствует, пропускаем регистрацию реферала\");\n        }\n        // 3. Получаем обновленные данные пользователя\n        const updatedUser = await getUserWithReferrals(String(telegramId));\n        console.log(\"[API telegram-user] ✅ Запрос обработан успешно:\", {\n            userId: telegramId,\n            hasStartParam: !!finalStartParam,\n            hasReferral: !!referral,\n            referralStatus: referral ? {\n                isValid: referral.isValid,\n                hasPlayedRoomA: referral.hasPlayedRoomA,\n                hasPlayedRoomB: referral.hasPlayedRoomB\n            } : null\n        });\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: true,\n            data: updatedUser,\n            referral: referral\n        });\n    } catch (error) {\n        console.error(\"[API telegram-user] ❌ Ошибка:\", error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: false,\n            error: error instanceof Error ? error.message : \"Failed to process user\"\n        }, {\n            status: 500\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/app/api/telegram-user/route.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/config.ts":
/*!***************************!*\
  !*** ./src/lib/config.ts ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   APP_CONFIG: () => (/* binding */ APP_CONFIG),\n/* harmony export */   CONFIG: () => (/* binding */ CONFIG),\n/* harmony export */   IS_DEV_MODE: () => (/* binding */ IS_DEV_MODE),\n/* harmony export */   MATCH_TIMEOUT: () => (/* binding */ MATCH_TIMEOUT),\n/* harmony export */   MAX_PLAYERS: () => (/* binding */ MAX_PLAYERS),\n/* harmony export */   MIN_PLAYERS: () => (/* binding */ MIN_PLAYERS),\n/* harmony export */   QUEUE_TIMEOUT: () => (/* binding */ QUEUE_TIMEOUT),\n/* harmony export */   SOCKET_CONFIG: () => (/* binding */ SOCKET_CONFIG),\n/* harmony export */   SOCKET_URL: () => (/* binding */ SOCKET_URL),\n/* harmony export */   TON_CONFIG: () => (/* binding */ TON_CONFIG),\n/* harmony export */   X10_CONFIG: () => (/* binding */ X10_CONFIG),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n// Объявление типов для переменных окружения\n/**\n * Конфигурация приложения\n */ const CONFIG = {\n    // Адрес кошелька для приема платежей\n    WALLET_ADDRESS: process.env.NEXT_PUBLIC_WALLET_ADDRESS,\n    // Адрес кошелька разработчика для отправки TON\n    DEVELOPER_ADDRESS: \"UQBDpsvrVFPp5P5gLXJKGNl42BVq5zzqfJYJXQuufQwhxBf7\",\n    // Настройки сети TON\n    NETWORK: process.env.NEXT_PUBLIC_NETWORK || \"mainnet\",\n    // API ключ TON\n    TON_API_KEY: \"cacf6f5bd0603089739e73cb7619d972c34743f0e718b59d4cea17c4dfb9db95\",\n    // URL-адреса для приложения\n    APP_URL: \"https://oldfrager.xyz\",\n    API_URL: \"https://oldfrager.xyz/api\",\n    // Настройки MongoDB\n    MONGODB_URI: process.env.MONGODB_URI,\n    // Цена за 1 билет в TON\n    TICKET_PRICE: Number(process.env.NEXT_PUBLIC_TICKET_PRICE) || 0.000000001,\n    // Комиссия платформы в процентах\n    PLATFORM_FEE: Number(process.env.NEXT_PUBLIC_PLATFORM_FEE) || 5,\n    // Параметры для хранения данных в localStorage\n    STORAGE_KEYS: {\n        AUTH: \"tonot_auth\",\n        USER: \"tonot_user\",\n        THEME: \"tonot_theme\",\n        LANG: \"tonot_lang\",\n        TELEGRAM_USER: \"telegram_user\",\n        ACCESS_TOKEN: \"access_token\",\n        TICKETS: \"tickets\",\n        TONOT_CHANCE_TICKETS: \"tonotChanceTickets\",\n        X10_GAME_STATE: \"x10_game_state\"\n    },\n    // Максимальное количество попыток подключения к базе данных\n    MAX_DB_CONNECT_RETRIES: 5,\n    // Задержка между попытками подключения к базе данных (в миллисекундах)\n    DB_RETRY_DELAY: 2000,\n    // API эндпоинты\n    API_ENDPOINTS: {\n        // Основные эндпоинты\n        USER_DATA: \"/api/user-data\",\n        TELEGRAM_USER: \"/api/telegram-user\",\n        TICKETS: \"/api/tickets/purchase\",\n        // X2 эндпоинты (классическая игра)\n        X2: {\n            GAME: \"/api/match/game\",\n            CREATE: \"/api/match/create\",\n            CANCEL: \"/api/match/cancel\",\n            COMPLETE: \"/api/match/complete\" // Завершение матча\n        },\n        // X10 эндпоинты (мультиплеер)\n        X10: {\n            GAME: \"/api/match/x10/game\",\n            CREATE: \"/api/match/x10/create\",\n            CANCEL: \"/api/match/x10/cancel\",\n            COMPLETE: \"/api/match/x10/complete\" // Завершение матча\n        }\n    }\n};\n/**\n * URL для WebSocket соединения\n */ const SOCKET_URL = process.env.NEXT_PUBLIC_SOCKET_URL;\n/**\n * Конфигурация для Socket.IO сервера\n */ const SOCKET_CONFIG = {\n    // CORS настройки\n    cors: {\n        origin: process.env.SOCKET_CORS_ORIGIN || \"*\",\n        methods: [\n            \"GET\",\n            \"POST\"\n        ],\n        credentials: true\n    },\n    // Настройки пинга и таймаутов\n    pingTimeout: 30000,\n    pingInterval: 15000,\n    connectTimeout: 10000,\n    // Настройки переподключения\n    reconnection: true,\n    reconnectionAttempts: 3,\n    reconnectionDelay: 2000,\n    // Настройки для игры\n    waitingTimeout: 120000,\n    matchTimeout: 300000,\n    countdownTime: 5 // время обратного отсчета в секундах\n};\n/**\n * Конфигурация для режима X10\n */ const X10_CONFIG = {\n    // Основные настройки\n    MIN_PLAYERS: 10,\n    MAX_PLAYERS: 10,\n    WINNERS_COUNT: 3,\n    // Для обратной совместимости\n    PLAYERS: {\n        MIN: 10,\n        MAX: 10\n    },\n    // Настройки призов (в процентах от общего пула)\n    PRIZE_DISTRIBUTION: {\n        FIRST_PLACE: 50,\n        SECOND_PLACE: 30,\n        THIRD_PLACE: 20 // 20% пула для третьего места\n    },\n    // Таймауты\n    QUEUE_TIMEOUT: 600000,\n    MATCH_TIMEOUT: 300000,\n    COUNTDOWN_TIME: 10,\n    // Настройки переподключения\n    MAX_RECONNECT_ATTEMPTS: 3,\n    RECONNECT_DELAY: 2000,\n    // Настройки билетов\n    TICKETS: {\n        // Активные билеты для игры (сгорают при использовании)\n        GAME: {\n            COST: 1,\n            FIELD_NAME: \"chance\" // Название поля в API и базе данных\n        },\n        // Пассивные билеты TONOT CHANCE (начисляются за проигрыш)\n        TONOT_CHANCE: {\n            REWARD: 1,\n            FIELD_NAME: \"tonotChanceTickets\" // Название поля в API и базе данных\n        }\n    },\n    // Настройки матча\n    MATCH: {\n        MIN_PLAYERS: 10,\n        MAX_PLAYERS: 10,\n        TIMEOUT: 300000,\n        QUEUE_TIMEOUT: 600000 // 10 минут\n    },\n    // Настройки призов\n    PRIZES: {\n        FIRST: 450,\n        SECOND: 270,\n        THIRD: 180,\n        CONSOLATION_TICKET: 1 // Утешительный билет для проигравших\n    },\n    // Тайминги анимаций\n    GAME_TIMINGS: {\n        PREPARING: 5000,\n        MERGING: 7500,\n        WHEEL_APPEAR: 4000,\n        WHEEL_SPIN: 7000,\n        WHEEL_STOP: 2000,\n        RESULT: 1000 // 1 секунда\n    }\n};\n// Экспортируем также отдельные константы для обратной совместимости\nconst MAX_PLAYERS = X10_CONFIG.MAX_PLAYERS;\nconst MIN_PLAYERS = X10_CONFIG.MIN_PLAYERS;\nconst MATCH_TIMEOUT = X10_CONFIG.MATCH_TIMEOUT;\nconst QUEUE_TIMEOUT = X10_CONFIG.QUEUE_TIMEOUT;\n/**\n * Конфигурация для работы с TON\n */ const TON_CONFIG = {\n    // Адрес TON кошелька приложения\n    WALLET_ADDRESS: process.env.NEXT_PUBLIC_WALLET_ADDRESS || CONFIG.WALLET_ADDRESS,\n    // Адрес кошелька разработчика\n    DEVELOPER_ADDRESS: \"UQBDpsvrVFPp5P5gLXJKGNl42BVq5zzqfJYJXQuufQwhxBf7\" || 0,\n    // API ключ для TON\n    API_KEY: \"cacf6f5bd0603089739e73cb7619d972c34743f0e718b59d4cea17c4dfb9db95\" || 0\n};\n// Другие настройки приложения\nconst APP_CONFIG = {\n    buildTimeDBConnection: \"true\" !== \"true\"\n};\n// Добавляем конфигурацию для режима симуляции\nconst IS_DEV_MODE = \"development\" === \"development\";\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (CONFIG);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/config.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/db.js":
/*!***********************!*\
  !*** ./src/lib/db.js ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   connectToDatabase: () => (/* binding */ connectToDatabase),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   ensureDbConnected: () => (/* binding */ ensureDbConnected)\n/* harmony export */ });\n/* harmony import */ var mongoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mongoose */ \"mongoose\");\n/* harmony import */ var mongoose__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(mongoose__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _config__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./config */ \"(rsc)/./src/lib/config.ts\");\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n\n\n\nconst MONGODB_URI = _config__WEBPACK_IMPORTED_MODULE_1__.CONFIG.MONGODB_URI;\n// Логгирование информации о подключении\nconsole.log(\"[DB] Строка подключения MongoDB (без пароля):\", MONGODB_URI?.includes(\"@\") ? MONGODB_URI.split(\"@\")[1] : \"Не задана\");\nconsole.log(\"[DB] Кластер в URI:\", MONGODB_URI?.includes(\"cluster0\") ? \"cluster0\" : \"Нет кластера\");\n// Кеш подключения к MongoDB для повторного использования между функциями API\nlet cachedConnection = null;\n// Функция, определяющая окружение выполнения\nfunction isServerSideRendering() {\n    // Vercel использует переменную VERCEL=1 в production среде\n    return !process.env.VERCEL && \"development\" === \"development\" && \"undefined\" === \"undefined\" && !global.isConnecting;\n}\n/**\n * Подключение к MongoDB, с кешированием соединения\n * @returns {Promise<{db: any, connection: typeof mongoose}>} Mongoose connection и объект базы данных\n */ async function connectToDatabase() {\n    console.log(\"[DB] Инициализация кеша подключения к MongoDB\");\n    // Проверяем наличие строки подключения\n    if (!MONGODB_URI) {\n        console.error(\"[DB] ОШИБКА: MONGODB_URI не установлен. Проверьте переменные окружения\");\n        throw new Error(\"[DB] MONGODB_URI не установлен\");\n    }\n    // Если окружение серверного рендеринга, не подключаемся к базе данных\n    if (isServerSideRendering()) {\n        console.log(\"[DB] Пропускаем подключение к MongoDB во время серверного рендеринга\");\n        return {\n            db: null,\n            connection: null\n        };\n    }\n    // Если соединение уже установлено или в процессе установки, используем его\n    if (cachedConnection) {\n        console.log(\"[DB] Используем существующее подключение к MongoDB\");\n        return {\n            db: cachedConnection.connection.db,\n            connection: cachedConnection\n        };\n    }\n    try {\n        console.log(\"[DB] Устанавливаем новое подключение к MongoDB...\");\n        // Устанавливаем флаг подключения, чтобы избежать параллельных подключений\n        global.isConnecting = true;\n        // Устанавливаем соединение\n        const options = {\n            connectTimeoutMS: 10000,\n            serverSelectionTimeoutMS: 10000\n        };\n        cachedConnection = await mongoose__WEBPACK_IMPORTED_MODULE_0___default().connect(MONGODB_URI, options);\n        console.log(\"[DB] Успешно подключились к MongoDB!\");\n        // Сбрасываем флаг подключения\n        global.isConnecting = false;\n        return {\n            db: cachedConnection.connection.db,\n            connection: cachedConnection\n        };\n    } catch (error) {\n        console.error(\"[DB] ОШИБКА подключения к MongoDB:\", error.message);\n        // Сбрасываем флаг подключения и кеш при ошибке\n        global.isConnecting = false;\n        cachedConnection = null;\n        throw error;\n    }\n}\n/**\n * Обертка для API маршрутов Next.js App Router, которая обеспечивает подключение к базе данных \n * перед выполнением обработчика\n * @param {Function} handler Функция обработчик API запроса\n * @returns {Function} Обернутая функция с подключением к базе данных\n */ function ensureDbConnected(handler) {\n    return async (request, context)=>{\n        try {\n            await connectToDatabase();\n            return handler(request, context);\n        } catch (error) {\n            console.error(\"[DB] Ошибка в обработчике API:\", error.message);\n            return next_server__WEBPACK_IMPORTED_MODULE_2__.NextResponse.json({\n                error: \"Ошибка подключения к базе данных\"\n            }, {\n                status: 500\n            });\n        }\n    };\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((mongoose__WEBPACK_IMPORTED_MODULE_0___default()));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/db.js\n");

/***/ }),

/***/ "(rsc)/./src/models/Referral.js":
/*!********************************!*\
  !*** ./src/models/Referral.js ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var mongoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mongoose */ \"mongoose\");\n/* harmony import */ var mongoose__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(mongoose__WEBPACK_IMPORTED_MODULE_0__);\n\n/**\n * Схема реферала - запись о реферальной связи\n */ const referralSchema = new (mongoose__WEBPACK_IMPORTED_MODULE_0___default().Schema)({\n    // Реферер - пользователь, который пригласил\n    refererId: {\n        type: Number,\n        required: true\n    },\n    // Реферал - приглашенный пользователь\n    referralId: {\n        type: Number,\n        required: true\n    },\n    username: {\n        type: String\n    },\n    firstName: {\n        type: String\n    },\n    lastName: {\n        type: String\n    },\n    photoUrl: {\n        type: String\n    },\n    // Статусы игр (после регистрации)\n    hasPlayedRoomA: {\n        type: Boolean,\n        default: false\n    },\n    hasPlayedRoomB: {\n        type: Boolean,\n        default: false\n    },\n    isValid: {\n        type: Boolean,\n        default: false\n    },\n    // Даты игр\n    roomAPlayedAt: {\n        type: Date\n    },\n    roomBPlayedAt: {\n        type: Date\n    },\n    // Даты\n    createdAt: {\n        type: Date,\n        default: Date.now\n    },\n    validatedAt: {\n        type: Date\n    },\n    // Бонусы\n    bonusGiven: {\n        type: Boolean,\n        default: false\n    },\n    bonusAmount: {\n        type: Number,\n        default: 0\n    }\n}, {\n    timestamps: true,\n    collection: \"referrals\"\n});\n// Перед сохранением проверяем валидность реферала\nreferralSchema.pre(\"save\", function(next) {\n    // Проверяем, что игры были сыграны после создания реферальной связи\n    const now = new Date();\n    // Проверяем игру в комнате A\n    if (this.roomAPlayedAt && this.roomAPlayedAt > this.createdAt) {\n        this.hasPlayedRoomA = true;\n    }\n    // Проверяем игру в комнате B\n    if (this.roomBPlayedAt && this.roomBPlayedAt > this.createdAt) {\n        this.hasPlayedRoomB = true;\n    }\n    // Если обе игры сыграны после регистрации и реферал еще не валиден\n    if (this.hasPlayedRoomA && this.hasPlayedRoomB && !this.isValid) {\n        this.isValid = true;\n        this.validatedAt = now;\n        console.log(`[ReferralModel] Реферал ${this.referralId} стал валидным для реферера ${this.refererId}`, {\n            roomAPlayedAt: this.roomAPlayedAt,\n            roomBPlayedAt: this.roomBPlayedAt,\n            createdAt: this.createdAt,\n            validatedAt: this.validatedAt\n        });\n    }\n    next();\n});\n// Удаляем старый индекс при инициализации модели\nconst dropOldIndex = async ()=>{\n    try {\n        await mongoose__WEBPACK_IMPORTED_MODULE_0___default().connection.collection(\"referrals\").dropIndex(\"referalId_1\");\n        console.log(\"[ReferralModel] ✅ Старый индекс referalId_1 успешно удален\");\n    } catch (error) {\n        // Игнорируем ошибку если индекс не существует\n        console.log(\"[ReferralModel] ℹ️ Старый индекс не найден или уже удален\");\n    }\n};\n// Определяем правильные индексы\nreferralSchema.index({\n    referralId: 1\n}, {\n    unique: true\n});\nreferralSchema.index({\n    refererId: 1,\n    referralId: 1\n}, {\n    unique: true\n});\nreferralSchema.index({\n    refererId: 1,\n    createdAt: -1\n});\nreferralSchema.index({\n    referralId: 1,\n    isValid: 1\n});\n// Методы для проверки и обновления игр\nreferralSchema.methods = {\n    /**\n   * Обновляет статус игры\n   * @param {string} gameType - Тип игры ('A' или 'B')\n   * @param {Date} gameDate - Дата игры\n   */ async updateGameStatus (gameType, gameDate) {\n        if (!gameDate || gameDate <= this.createdAt) {\n            return false;\n        }\n        if (gameType === \"A\" && !this.hasPlayedRoomA) {\n            this.roomAPlayedAt = gameDate;\n            this.markModified(\"roomAPlayedAt\");\n            await this.save();\n            return true;\n        }\n        if (gameType === \"B\" && !this.hasPlayedRoomB) {\n            this.roomBPlayedAt = gameDate;\n            this.markModified(\"roomBPlayedAt\");\n            await this.save();\n            return true;\n        }\n        return false;\n    }\n};\n// Создаем модель\nconst Referral = (mongoose__WEBPACK_IMPORTED_MODULE_0___default().models).Referral || mongoose__WEBPACK_IMPORTED_MODULE_0___default().model(\"Referral\", referralSchema, \"referrals\");\n// Удаляем старый индекс при первой инициализации модели\nif (!(mongoose__WEBPACK_IMPORTED_MODULE_0___default().models).Referral) {\n    dropOldIndex().catch(console.error);\n}\nconsole.log(\"[ReferralModel] Модель Referral инициализирована\");\nconsole.log(\"[ReferralModel] Имя коллекции:\", Referral.collection?.name || \"Неизвестно\");\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Referral);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/models/Referral.js\n");

/***/ }),

/***/ "(rsc)/./src/models/User.js":
/*!****************************!*\
  !*** ./src/models/User.js ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var mongoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mongoose */ \"mongoose\");\n/* harmony import */ var mongoose__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(mongoose__WEBPACK_IMPORTED_MODULE_0__);\n\nconsole.log(\"[UserModel] Инициализация модели пользователя\");\nconst purchaseHistorySchema = new (mongoose__WEBPACK_IMPORTED_MODULE_0___default().Schema)({\n    date: {\n        type: Date,\n        default: Date.now\n    },\n    amount: {\n        type: Number,\n        required: true\n    },\n    tickets: {\n        type: Number,\n        required: true\n    },\n    transactionId: {\n        type: String,\n        required: true\n    }\n});\nconst gameHistorySchema = new (mongoose__WEBPACK_IMPORTED_MODULE_0___default().Schema)({\n    matchId: {\n        type: String,\n        required: true\n    },\n    date: {\n        type: Date,\n        default: Date.now\n    },\n    opponentId: {\n        type: String,\n        required: true\n    },\n    opponentName: {\n        type: String,\n        required: true\n    },\n    result: {\n        type: String,\n        enum: [\n            \"win\",\n            \"lose\"\n        ],\n        required: true\n    },\n    tonotChanceTickets: {\n        type: Number,\n        required: true\n    }\n});\n// Схема для хранения информации о рефералах\nconst referralSchema = new (mongoose__WEBPACK_IMPORTED_MODULE_0___default().Schema)({\n    userId: {\n        type: Number,\n        required: true\n    },\n    username: {\n        type: String\n    },\n    photoUrl: {\n        type: String\n    },\n    hasPlayedRoomA: {\n        type: Boolean,\n        default: false\n    },\n    hasPlayedRoomB: {\n        type: Boolean,\n        default: false\n    },\n    isValid: {\n        type: Boolean,\n        default: false\n    },\n    createdAt: {\n        type: Date,\n        default: Date.now\n    },\n    validatedAt: {\n        type: Date\n    }\n});\nconst userSchema = new (mongoose__WEBPACK_IMPORTED_MODULE_0___default().Schema)({\n    telegramId: {\n        type: Number,\n        required: true\n    },\n    firstName: {\n        type: String\n    },\n    lastName: {\n        type: String\n    },\n    username: {\n        type: String\n    },\n    photoUrl: {\n        type: String\n    },\n    chatId: {\n        type: String\n    },\n    tickets: {\n        type: Number,\n        default: 0\n    },\n    tonotChanceTickets: {\n        type: Number,\n        default: 0\n    },\n    balance: {\n        type: Number,\n        default: 0\n    },\n    tonBalance: {\n        type: Number,\n        default: 0\n    },\n    locale: {\n        type: String,\n        enum: [\n            \"en\",\n            \"ru\"\n        ],\n        default: \"en\"\n    },\n    // Реферальная система\n    referralCode: {\n        type: String\n    },\n    referredBy: [\n        {\n            userId: {\n                type: String,\n                required: true\n            },\n            date: {\n                type: Date,\n                default: Date.now\n            }\n        }\n    ],\n    referrals: [\n        referralSchema\n    ],\n    bonusesReceived: {\n        type: Number,\n        default: 0\n    },\n    totalValidReferrals: {\n        type: Number,\n        default: 0\n    },\n    pendingBonuses: {\n        type: Number,\n        default: 0\n    },\n    channelSubscribed: {\n        type: Boolean,\n        default: false\n    },\n    // История\n    purchaseHistory: [\n        purchaseHistorySchema\n    ],\n    gameHistory: [\n        gameHistorySchema\n    ],\n    createdAt: {\n        type: Date,\n        default: Date.now\n    },\n    updatedAt: {\n        type: Date,\n        default: Date.now\n    }\n}, {\n    timestamps: true,\n    collection: \"users\"\n});\n// Все индексы определяем явно\nuserSchema.index({\n    telegramId: 1\n}, {\n    unique: true\n});\nuserSchema.index({\n    referralCode: 1\n}, {\n    unique: true\n});\nuserSchema.index({\n    referredBy: 1\n});\n// Обновление даты при изменении документа\nuserSchema.pre(\"save\", function(next) {\n    this.updatedAt = new Date();\n    console.log(\"[UserModel] pre-save hook вызван для пользователя с telegramId:\", this.telegramId);\n    next();\n});\n// Методы для работы с рефералами\nuserSchema.methods = {\n    /**\n   * Добавляет нового реферера\n   */ async addReferer (refererId) {\n        // Проверяем, существует ли уже такой реферер\n        const existingReferer = this.referredBy?.find((ref)=>ref.userId === refererId);\n        if (existingReferer) {\n            return false;\n        }\n        // Добавляем нового реферера\n        if (!this.referredBy) {\n            this.referredBy = [];\n        }\n        this.referredBy.push({\n            userId: refererId,\n            date: new Date()\n        });\n        await this.save();\n        return true;\n    },\n    /**\n   * Проверяет, является ли пользователь рефералом для указанного реферера\n   */ isReferralOf (refererId) {\n        return this.referredBy?.some((ref)=>ref.userId === refererId) || false;\n    }\n};\n// Создаем модель только если она еще не существует\nconsole.log(\"[UserModel] Проверка существования модели User...\");\nconst modelExists = (mongoose__WEBPACK_IMPORTED_MODULE_0___default().models).User !== undefined;\nconsole.log(\"[UserModel] Модель User существует:\", modelExists);\n// Явно указываем коллекцию \"users\" и базу данных через опции\nconst User = (mongoose__WEBPACK_IMPORTED_MODULE_0___default().models).User || mongoose__WEBPACK_IMPORTED_MODULE_0___default().model(\"User\", userSchema, \"users\");\nconsole.log(\"[UserModel] Модель User инициализирована\");\nconsole.log(\"[UserModel] Имя коллекции:\", User.collection?.name || \"Неизвестно\");\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (User);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/models/User.js\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Ftelegram-user%2Froute&page=%2Fapi%2Ftelegram-user%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Ftelegram-user%2Froute.ts&appDir=C%3A%5CUsers%5Cconst%5CDesktop%5Ctonotchance-main%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Cconst%5CDesktop%5Ctonotchance-main&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();